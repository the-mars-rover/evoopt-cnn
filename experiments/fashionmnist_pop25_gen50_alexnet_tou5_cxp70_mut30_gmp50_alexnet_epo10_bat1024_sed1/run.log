2023-08-21 20:19:54,906 INFO: Starting experiment with the arguments logged below.
2023-08-21 20:19:54,907 INFO: Namespace(results_path='/mnt/lustre/users/mbornman1/evoopt-cnn/experiments/fashionmnist_pop25_gen50_alexnet_tou5_cxp70_mut30_gmp50_alexnet_epo10_bat1024_sed1', cpu_count=2, seed=1, dataset='fashion_mnist', pop_size=25, ngen=50, model='alexnet', epochs=10, batch_size=1024, tournsize=5, cxpb=0.5, mutpb=0.2, gene_mut_prob=0.5)
2023-08-21 20:19:54,907 INFO: Setting the random number generator seed for this experiment.
2023-08-21 20:19:54,907 INFO: Initializing the multiprocessing pool.
2023-08-21 20:19:54,917 INFO: Running the evolutionary algorithm with the given hyper-parameters. This may take a while. Statistics for every generation will be printed below.
2023-08-21 20:19:54,917 INFO: Setting up DEAP toolbox.
2023-08-21 20:19:54,917 INFO: Registering individual initialization method.
2023-08-21 20:19:54,917 INFO: Registering population initialization method.
2023-08-21 20:19:54,917 INFO: Registering the selection method.
2023-08-21 20:19:54,917 INFO: Registering the evaluation method.
2023-08-21 20:19:54,917 INFO: Registering the genetic operators.
2023-08-21 20:19:54,917 INFO: Setting up the hall of fame and stats we want to keep track of.
2023-08-21 20:19:54,918 INFO: Initializing the initial population.
2023-08-21 20:19:54,925 INFO: Running the evolutionary algorithm.
2023-08-21 20:19:54,925 INFO: Evaluating fitness for the initial generation of individuals.
2023-08-21 20:19:54,925 INFO: Will evaluate fitness for 25 individuals.
2023-08-21 20:19:56,554 DEBUG: Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
2023-08-21 20:19:56,554 DEBUG: Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
2023-08-21 20:19:56,834 DEBUG: Creating converter from 7 to 5
2023-08-21 20:19:56,834 DEBUG: Creating converter from 7 to 5
2023-08-21 20:19:56,834 DEBUG: Creating converter from 5 to 7
2023-08-21 20:19:56,835 DEBUG: Creating converter from 7 to 5
2023-08-21 20:19:56,835 DEBUG: Creating converter from 5 to 7
2023-08-21 20:19:56,835 DEBUG: Creating converter from 5 to 7
2023-08-21 20:19:56,835 DEBUG: Creating converter from 7 to 5
2023-08-21 20:19:56,835 DEBUG: Creating converter from 5 to 7
2023-08-21 20:20:00,093 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.006364000000000001 ,use_ema=False ,ema_momentum=0.8383838383838385 ,rho=0.48484848484848486 ,epsilon=0.00026262633636363634 ,centered=True ,beta_1=0.6262626262626263 ,beta_2=0.030303030303030304 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.5555555555555556 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.9797979797979799 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.0].
2023-08-21 20:20:00,093 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.006364000000000001 ,use_ema=False ,ema_momentum=0.8383838383838385 ,rho=0.48484848484848486 ,epsilon=0.00026262633636363634 ,centered=True ,beta_1=0.6262626262626263 ,beta_2=0.030303030303030304 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.5555555555555556 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.9797979797979799 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.0].
2023-08-21 20:20:00,134 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.11111111111111112, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0047480000000000005 ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.05050505050505051 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.8282828282828284 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.6464646464646465 ,l1_regularization_strength=0.29292929292929293 ,l2_regularization_strength=0.010101010101010102 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.25252525252525254].
2023-08-21 20:20:00,134 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.11111111111111112, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0047480000000000005 ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.05050505050505051 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.8282828282828284 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.6464646464646465 ,l1_regularization_strength=0.29292929292929293 ,l2_regularization_strength=0.010101010101010102 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.25252525252525254].
2023-08-21 20:20:25,648 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.3434343434343435, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8383838383838385 ,rho=0.696969696969697 ,epsilon=1.010110909090909e-05 ,centered=False ,beta_1=0.8787878787878789 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.4545454545454545 ,initial_accumulator_value=0.9292929292929294 ,l1_regularization_strength=0.030303030303030304 ,l2_regularization_strength=0.6767676767676768 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.9797979797979799].
2023-08-21 20:20:25,648 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.3434343434343435, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8383838383838385 ,rho=0.696969696969697 ,epsilon=1.010110909090909e-05 ,centered=False ,beta_1=0.8787878787878789 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.4545454545454545 ,initial_accumulator_value=0.9292929292929294 ,l1_regularization_strength=0.030303030303030304 ,l2_regularization_strength=0.6767676767676768 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.9797979797979799].
2023-08-21 20:20:26,421 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-21 20:20:26,421 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-21 20:20:46,837 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.6262626262626263, momentum=0.4545454545454546 ,nesterov=False ,amsgrad=True ,weight_decay=0.006869000000000001 ,use_ema=False ,ema_momentum=0.7676767676767677 ,rho=0.030303030303030304 ,epsilon=0.0002929293636363636 ,centered=True ,beta_1=0.7070707070707072 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.7676767676767676 ,initial_accumulator_value=0.11111111111111112 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.32323232323232326 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.8686868686868687].
2023-08-21 20:20:46,837 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.6262626262626263, momentum=0.4545454545454546 ,nesterov=False ,amsgrad=True ,weight_decay=0.006869000000000001 ,use_ema=False ,ema_momentum=0.7676767676767677 ,rho=0.030303030303030304 ,epsilon=0.0002929293636363636 ,centered=True ,beta_1=0.7070707070707072 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.7676767676767676 ,initial_accumulator_value=0.11111111111111112 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.32323232323232326 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.8686868686868687].
2023-08-21 20:20:47,102 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.6363636363636365, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.37373737373737376 ,rho=0.020202020202020204 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.23232323232323235 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.37373737373737376 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.9595959595959597 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.9292929292929294].
2023-08-21 20:20:47,102 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.6363636363636365, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.37373737373737376 ,rho=0.020202020202020204 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.23232323232323235 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.37373737373737376 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.9595959595959597 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.9292929292929294].
2023-08-21 20:21:07,970 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.6464646464646465, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.007576000000000001 ,use_ema=False ,ema_momentum=0.7575757575757577 ,rho=0.04040404040404041 ,epsilon=0.0006161616545454546 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.46464646464646464 ,initial_accumulator_value=0.8585858585858587 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.4646464646464647 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.8989898989898991].
2023-08-21 20:21:07,970 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.6464646464646465, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.007576000000000001 ,use_ema=False ,ema_momentum=0.7575757575757577 ,rho=0.04040404040404041 ,epsilon=0.0006161616545454546 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.46464646464646464 ,initial_accumulator_value=0.8585858585858587 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.4646464646464647 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.8989898989898991].
2023-08-21 20:21:11,994 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.10101010101010102, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=False ,weight_decay=0.0031320000000000007 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.23232323232323235 ,epsilon=0.00044444449999999996 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.6767676767676768 ,l2_regularization_strength=0.21212121212121213 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.3434343434343435].
2023-08-21 20:21:11,994 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.10101010101010102, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=False ,weight_decay=0.0031320000000000007 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.23232323232323235 ,epsilon=0.00044444449999999996 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.6767676767676768 ,l2_regularization_strength=0.21212121212121213 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.3434343434343435].
2023-08-21 20:21:33,821 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.5858585858585859, momentum=0.8989898989898991 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.494949494949495 ,rho=0.43434343434343436 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.33333333333333337 ,beta_2=0.13131313131313133 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.9393939393939394 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.26262626262626265 ,l2_shrinkage_regularization_strength=0.7777777777777778 ,beta=0.5555555555555556].
2023-08-21 20:21:33,821 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.5858585858585859, momentum=0.8989898989898991 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.494949494949495 ,rho=0.43434343434343436 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.33333333333333337 ,beta_2=0.13131313131313133 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.9393939393939394 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.26262626262626265 ,l2_shrinkage_regularization_strength=0.7777777777777778 ,beta=0.5555555555555556].
2023-08-21 20:21:34,367 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.37373737373737376, momentum=0.6464646464646465 ,nesterov=True ,amsgrad=False ,weight_decay=0.007879 ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.20202020202020204 ,epsilon=0.00025252532727272723 ,centered=False ,beta_1=0.7272727272727273 ,beta_2=0.17171717171717174 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.27272727272727276 ,l2_regularization_strength=0.3434343434343435 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.12121212121212122].
2023-08-21 20:21:34,367 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.37373737373737376, momentum=0.6464646464646465 ,nesterov=True ,amsgrad=False ,weight_decay=0.007879 ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.20202020202020204 ,epsilon=0.00025252532727272723 ,centered=False ,beta_1=0.7272727272727273 ,beta_2=0.17171717171717174 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.27272727272727276 ,l2_regularization_strength=0.3434343434343435 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.12121212121212122].
2023-08-21 20:21:55,706 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-21 20:21:55,706 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-21 20:21:59,830 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.7070707070707072, momentum=0.4444444444444445 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.17171717171717174 ,rho=0.21212121212121213 ,epsilon=0.0002121212909090909 ,centered=True ,beta_1=0.3434343434343435 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.6464646464646465 ,l2_regularization_strength=0.32323232323232326 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.43434343434343436].
2023-08-21 20:21:59,830 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.7070707070707072, momentum=0.4444444444444445 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.17171717171717174 ,rho=0.21212121212121213 ,epsilon=0.0002121212909090909 ,centered=True ,beta_1=0.3434343434343435 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.6464646464646465 ,l2_regularization_strength=0.32323232323232326 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.43434343434343436].
2023-08-21 20:22:14,874 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.5050505050505051, momentum=0.8686868686868687 ,nesterov=False ,amsgrad=True ,weight_decay=0.009495 ,use_ema=True ,ema_momentum=0.27272727272727276 ,rho=0.06060606060606061 ,epsilon=0.0003939394545454545 ,centered=True ,beta_1=0.09090909090909091 ,beta_2=0.393939393939394 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.9595959595959597 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.5353535353535354 ,l2_shrinkage_regularization_strength=0.7272727272727273 ,beta=0.32323232323232326].
2023-08-21 20:22:14,874 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.5050505050505051, momentum=0.8686868686868687 ,nesterov=False ,amsgrad=True ,weight_decay=0.009495 ,use_ema=True ,ema_momentum=0.27272727272727276 ,rho=0.06060606060606061 ,epsilon=0.0003939394545454545 ,centered=True ,beta_1=0.09090909090909091 ,beta_2=0.393939393939394 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.9595959595959597 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.5353535353535354 ,l2_shrinkage_regularization_strength=0.7272727272727273 ,beta=0.32323232323232326].
2023-08-21 20:22:25,516 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.14141414141414144, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.05050505050505051 ,rho=0.5252525252525253 ,epsilon=9.09091818181818e-05 ,centered=False ,beta_1=0.18181818181818182 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.787878787878788 ,l2_regularization_strength=0.7575757575757577 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.09090909090909091].
2023-08-21 20:22:25,516 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.14141414141414144, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.05050505050505051 ,rho=0.5252525252525253 ,epsilon=9.09091818181818e-05 ,centered=False ,beta_1=0.18181818181818182 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.787878787878788 ,l2_regularization_strength=0.7575757575757577 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.09090909090909091].
2023-08-21 20:22:35,317 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.25252525252525254 ,rho=0.4444444444444445 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.7373737373737375 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.6363636363636365 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.8585858585858587].
2023-08-21 20:22:35,318 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.25252525252525254 ,rho=0.4444444444444445 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.7373737373737375 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.6363636363636365 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.8585858585858587].
2023-08-21 20:22:46,378 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-21 20:22:46,378 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-21 20:22:55,386 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-21 20:22:55,387 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-21 20:23:06,938 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.9393939393939394, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.009697 ,use_ema=False ,ema_momentum=0.6060606060606061 ,rho=0.19191919191919193 ,epsilon=0.00012121220909090907 ,centered=False ,beta_1=0.09090909090909091 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.22222222222222224 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=1.0 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.18181818181818182].
2023-08-21 20:23:06,938 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.9393939393939394, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.009697 ,use_ema=False ,ema_momentum=0.6060606060606061 ,rho=0.19191919191919193 ,epsilon=0.00012121220909090907 ,centered=False ,beta_1=0.09090909090909091 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.22222222222222224 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=1.0 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.18181818181818182].
2023-08-21 20:23:17,244 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.26262626262626265, momentum=0.8383838383838385 ,nesterov=True ,amsgrad=True ,weight_decay=0.00010200000000000001 ,use_ema=False ,ema_momentum=0.5757575757575758 ,rho=0.5050505050505051 ,epsilon=0.00040404046363636356 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.08080808080808081 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.14141414141414144 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.27272727272727276].
2023-08-21 20:23:17,245 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.26262626262626265, momentum=0.8383838383838385 ,nesterov=True ,amsgrad=True ,weight_decay=0.00010200000000000001 ,use_ema=False ,ema_momentum=0.5757575757575758 ,rho=0.5050505050505051 ,epsilon=0.00040404046363636356 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.08080808080808081 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.14141414141414144 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.27272727272727276].
2023-08-21 20:23:27,362 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.393939393939394, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.8686868686868687 ,epsilon=0.0007070707363636364 ,centered=True ,beta_1=0.22222222222222224 ,beta_2=0.38383838383838387 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.686868686868687 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.06060606060606061 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.8585858585858587].
2023-08-21 20:23:27,362 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.393939393939394, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.8686868686868687 ,epsilon=0.0007070707363636364 ,centered=True ,beta_1=0.22222222222222224 ,beta_2=0.38383838383838387 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.686868686868687 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.06060606060606061 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.8585858585858587].
2023-08-21 20:23:38,441 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.8484848484848485, momentum=0.4545454545454546 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4646464646464647 ,rho=0.10101010101010102 ,epsilon=0.00035353541818181815 ,centered=True ,beta_1=0.9696969696969697 ,beta_2=0.5757575757575758 ,learning_rate_power=-0.8888888888888888 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.7373737373737375 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.29292929292929293].
2023-08-21 20:23:38,441 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.8484848484848485, momentum=0.4545454545454546 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4646464646464647 ,rho=0.10101010101010102 ,epsilon=0.00035353541818181815 ,centered=True ,beta_1=0.9696969696969697 ,beta_2=0.5757575757575758 ,learning_rate_power=-0.8888888888888888 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.7373737373737375 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.29292929292929293].
2023-08-21 20:23:47,869 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.32323232323232326, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.007071000000000001 ,use_ema=False ,ema_momentum=0.686868686868687 ,rho=0.5858585858585859 ,epsilon=1.010110909090909e-05 ,centered=False ,beta_1=0.43434343434343436 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.030303030303030304 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.7373737373737375].
2023-08-21 20:23:47,869 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.32323232323232326, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.007071000000000001 ,use_ema=False ,ema_momentum=0.686868686868687 ,rho=0.5858585858585859 ,epsilon=1.010110909090909e-05 ,centered=False ,beta_1=0.43434343434343436 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.030303030303030304 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.7373737373737375].
2023-08-21 20:24:00,209 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.393939393939394, momentum=0.05050505050505051 ,nesterov=True ,amsgrad=False ,weight_decay=0.007475000000000002 ,use_ema=True ,ema_momentum=0.42424242424242425 ,rho=0.12121212121212122 ,epsilon=0.0006969697272727273 ,centered=True ,beta_1=0.31313131313131315 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.9797979797979798 ,initial_accumulator_value=0.31313131313131315 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.09090909090909091 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.7070707070707072].
2023-08-21 20:24:00,209 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.393939393939394, momentum=0.05050505050505051 ,nesterov=True ,amsgrad=False ,weight_decay=0.007475000000000002 ,use_ema=True ,ema_momentum=0.42424242424242425 ,rho=0.12121212121212122 ,epsilon=0.0006969697272727273 ,centered=True ,beta_1=0.31313131313131315 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.9797979797979798 ,initial_accumulator_value=0.31313131313131315 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.09090909090909091 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.7070707070707072].
2023-08-21 20:24:09,277 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.7272727272727273 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.4040404040404041].
2023-08-21 20:24:09,277 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.7272727272727273 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.4040404040404041].
2023-08-21 20:24:27,910 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.8787878787878789, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.006364000000000001 ,use_ema=True ,ema_momentum=0.9191919191919192 ,rho=0.5252525252525253 ,epsilon=0.00043434349090909084 ,centered=False ,beta_1=0.8282828282828284 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.9393939393939394 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.9797979797979799 ,l2_regularization_strength=0.6565656565656566 ,l2_shrinkage_regularization_strength=0.8282828282828284 ,beta=0.4747474747474748].
2023-08-21 20:24:27,911 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.8787878787878789, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.006364000000000001 ,use_ema=True ,ema_momentum=0.9191919191919192 ,rho=0.5252525252525253 ,epsilon=0.00043434349090909084 ,centered=False ,beta_1=0.8282828282828284 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.9393939393939394 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.9797979797979799 ,l2_regularization_strength=0.6565656565656566 ,l2_shrinkage_regularization_strength=0.8282828282828284 ,beta=0.4747474747474748].
2023-08-21 20:24:49,560 INFO: Applying selection operators for generation 1.
2023-08-21 20:24:49,560 INFO: Applying genetic operators for generation 1.
2023-08-21 20:24:49,561 INFO: Evaluating fitness for for generation 1.
2023-08-21 20:24:49,561 INFO: Will evaluate fitness for 11 individuals.
2023-08-21 20:24:50,080 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7171717171717172, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0008585858727272726 ,centered=True ,beta_1=0.0 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-21 20:24:50,080 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7171717171717172, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0008585858727272726 ,centered=True ,beta_1=0.0 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-21 20:24:50,087 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.7272727272727273 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.4040404040404041].
2023-08-21 20:24:50,087 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.7272727272727273 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.4040404040404041].
2023-08-21 20:25:10,139 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-21 20:25:10,140 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-21 20:25:10,711 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.7272727272727273 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.4040404040404041].
2023-08-21 20:25:10,711 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.7272727272727273 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.4040404040404041].
2023-08-21 20:25:29,281 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-21 20:25:29,282 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-21 20:25:31,089 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.7272727272727273 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-21 20:25:31,089 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.7272727272727273 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-21 20:25:48,634 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.4040404040404041].
2023-08-21 20:25:48,634 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.4040404040404041].
2023-08-21 20:25:52,717 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:25:52,717 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:26:06,991 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.595959595959596, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6464646464646465 ,rho=0.6565656565656566 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.7171717171717172].
2023-08-21 20:26:06,991 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.595959595959596, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6464646464646465 ,rho=0.6565656565656566 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.7171717171717172].
2023-08-21 20:26:10,669 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=False ,weight_decay=0.0033340000000000006 ,use_ema=False ,ema_momentum=0.787878787878788 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.5555555555555556 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.8080808080808082 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-21 20:26:10,669 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=False ,weight_decay=0.0033340000000000006 ,use_ema=False ,ema_momentum=0.787878787878788 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.5555555555555556 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.8080808080808082 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-21 20:26:27,598 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-21 20:26:27,599 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-21 20:26:46,704 INFO: Applying selection operators for generation 2.
2023-08-21 20:26:46,704 INFO: Applying genetic operators for generation 2.
2023-08-21 20:26:46,706 INFO: Evaluating fitness for for generation 2.
2023-08-21 20:26:46,706 INFO: Will evaluate fitness for 10 individuals.
2023-08-21 20:26:47,218 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.4444444444444445, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.4141414141414142 ,epsilon=0.0005151515636363636 ,centered=False ,beta_1=0.4646464646464647 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.6767676767676768].
2023-08-21 20:26:47,218 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.4444444444444445, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.4141414141414142 ,epsilon=0.0005151515636363636 ,centered=False ,beta_1=0.4646464646464647 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.6767676767676768].
2023-08-21 20:26:47,254 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.12121212121212122, momentum=0.26262626262626265 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.4040404040404041 ,epsilon=0.0006868687181818181 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.9494949494949496 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.4040404040404041].
2023-08-21 20:26:47,254 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.12121212121212122, momentum=0.26262626262626265 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.4040404040404041 ,epsilon=0.0006868687181818181 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.9494949494949496 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.4040404040404041].
2023-08-21 20:27:07,714 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-21 20:27:07,714 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-21 20:27:08,873 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.48484848484848486, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.43434343434343436 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.7171717171717172 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-21 20:27:08,873 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.48484848484848486, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.43434343434343436 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.7171717171717172 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-21 20:27:28,378 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-21 20:27:28,378 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-21 20:27:29,208 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.7272727272727273 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.4040404040404041].
2023-08-21 20:27:29,209 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.7272727272727273 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.4040404040404041].
2023-08-21 20:27:48,605 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6464646464646465].
2023-08-21 20:27:48,605 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6464646464646465].
2023-08-21 20:27:49,135 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-21 20:27:49,135 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-21 20:28:08,646 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:28:08,646 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:28:29,670 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.787878787878788 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.6262626262626263].
2023-08-21 20:28:29,671 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.787878787878788 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.6262626262626263].
2023-08-21 20:28:48,621 INFO: Applying selection operators for generation 3.
2023-08-21 20:28:48,621 INFO: Applying genetic operators for generation 3.
2023-08-21 20:28:48,622 INFO: Evaluating fitness for for generation 3.
2023-08-21 20:28:48,622 INFO: Will evaluate fitness for 16 individuals.
2023-08-21 20:28:49,140 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:28:49,140 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:28:49,161 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6464646464646465].
2023-08-21 20:28:49,161 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6464646464646465].
2023-08-21 20:29:08,527 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0065660000000000015 ,use_ema=False ,ema_momentum=0.6161616161616162 ,rho=0.494949494949495 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.686868686868687 ,learning_rate_power=-0.36363636363636354 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6464646464646465].
2023-08-21 20:29:08,527 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0065660000000000015 ,use_ema=False ,ema_momentum=0.6161616161616162 ,rho=0.494949494949495 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.686868686868687 ,learning_rate_power=-0.36363636363636354 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6464646464646465].
2023-08-21 20:29:09,100 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.9090909090909092 ,nesterov=False ,amsgrad=True ,weight_decay=0.0035360000000000005 ,use_ema=False ,ema_momentum=0.16161616161616163 ,rho=0.5252525252525253 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.6161616161616162 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.7676767676767677].
2023-08-21 20:29:09,100 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.9090909090909092 ,nesterov=False ,amsgrad=True ,weight_decay=0.0035360000000000005 ,use_ema=False ,ema_momentum=0.16161616161616163 ,rho=0.5252525252525253 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.6161616161616162 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.7676767676767677].
2023-08-21 20:29:29,633 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-21 20:29:29,633 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-21 20:29:30,772 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:29:30,772 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:29:49,257 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.15151515151515152 ,rho=0.17171717171717174 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.7474747474747474 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.6464646464646465].
2023-08-21 20:29:49,257 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.15151515151515152 ,rho=0.17171717171717174 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.7474747474747474 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.6464646464646465].
2023-08-21 20:29:50,329 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-21 20:29:50,330 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-21 20:30:09,925 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-21 20:30:09,926 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-21 20:30:09,928 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:30:09,928 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:30:29,286 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:30:29,287 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:30:29,858 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-21 20:30:29,858 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-21 20:30:48,908 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-21 20:30:48,908 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-21 20:30:49,447 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6464646464646465].
2023-08-21 20:30:49,447 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6464646464646465].
2023-08-21 20:31:08,219 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6464646464646465].
2023-08-21 20:31:08,220 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6464646464646465].
2023-08-21 20:31:08,949 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.98989898989899, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.10101010101010102 ,rho=0.5151515151515152 ,epsilon=0.0009292929363636363 ,centered=True ,beta_1=0.8686868686868687 ,beta_2=0.010101010101010102 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.8282828282828284 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.8686868686868687].
2023-08-21 20:31:08,949 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.98989898989899, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.10101010101010102 ,rho=0.5151515151515152 ,epsilon=0.0009292929363636363 ,centered=True ,beta_1=0.8686868686868687 ,beta_2=0.010101010101010102 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.8282828282828284 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.8686868686868687].
2023-08-21 20:31:31,542 INFO: Applying selection operators for generation 4.
2023-08-21 20:31:31,543 INFO: Applying genetic operators for generation 4.
2023-08-21 20:31:31,544 INFO: Evaluating fitness for for generation 4.
2023-08-21 20:31:31,544 INFO: Will evaluate fitness for 18 individuals.
2023-08-21 20:31:32,073 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:31:32,074 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:31:32,084 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:31:32,084 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:31:51,400 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-21 20:31:51,400 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-21 20:31:51,722 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:31:51,722 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:32:11,114 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-21 20:32:11,114 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-21 20:32:11,267 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:32:11,267 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:32:30,389 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.17171717171717174 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.7474747474747474 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.6767676767676768].
2023-08-21 20:32:30,389 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.17171717171717174 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.7474747474747474 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.6767676767676768].
2023-08-21 20:32:30,807 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:32:30,807 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:32:49,641 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.15151515151515152 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-21 20:32:49,641 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.15151515151515152 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-21 20:32:50,739 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.7272727272727273, momentum=0.48484848484848486 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=0.0001919192727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.5050505050505051 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.6767676767676768].
2023-08-21 20:32:50,739 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.7272727272727273, momentum=0.48484848484848486 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=0.0001919192727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.5050505050505051 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.6767676767676768].
2023-08-21 20:33:08,876 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6464646464646465].
2023-08-21 20:33:08,876 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6464646464646465].
2023-08-21 20:33:12,930 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-21 20:33:12,930 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-21 20:33:28,623 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.686868686868687, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=0.0 ,initial_accumulator_value=0.7272727272727273 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.6666666666666667].
2023-08-21 20:33:28,623 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.686868686868687, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=0.0 ,initial_accumulator_value=0.7272727272727273 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.6666666666666667].
2023-08-21 20:33:32,633 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:33:32,633 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:33:48,795 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:33:48,796 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:33:52,223 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:33:52,223 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:34:08,188 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.3535353535353536, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.6464646464646464 ,initial_accumulator_value=0.19191919191919193 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:34:08,189 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.3535353535353536, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.6464646464646464 ,initial_accumulator_value=0.19191919191919193 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:34:12,224 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.5454545454545455 ,rho=0.13131313131313133 ,epsilon=0.00017171725454545453 ,centered=False ,beta_1=0.25252525252525254 ,beta_2=0.09090909090909091 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.9595959595959597 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.686868686868687].
2023-08-21 20:34:12,225 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.5454545454545455 ,rho=0.13131313131313133 ,epsilon=0.00017171725454545453 ,centered=False ,beta_1=0.25252525252525254 ,beta_2=0.09090909090909091 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.9595959595959597 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.686868686868687].
2023-08-21 20:34:32,723 INFO: Applying selection operators for generation 5.
2023-08-21 20:34:32,723 INFO: Applying genetic operators for generation 5.
2023-08-21 20:34:32,725 INFO: Evaluating fitness for for generation 5.
2023-08-21 20:34:32,725 INFO: Will evaluate fitness for 18 individuals.
2023-08-21 20:34:33,246 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-21 20:34:33,246 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-21 20:34:33,248 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.38383838383838387 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.7777777777777778 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.7373737373737375 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.4747474747474748 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.6464646464646465].
2023-08-21 20:34:33,248 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.38383838383838387 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.7777777777777778 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.7373737373737375 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.4747474747474748 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.6464646464646465].
2023-08-21 20:34:52,552 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-21 20:34:52,552 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-21 20:34:52,717 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:34:52,717 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:35:11,918 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:35:11,918 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:35:12,226 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:35:12,226 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:35:31,162 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:35:31,163 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:35:32,064 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:35:32,064 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:35:50,757 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.18181818181818182, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=8.080817272727271e-05 ,centered=False ,beta_1=0.33333333333333337 ,beta_2=0.787878787878788 ,learning_rate_power=-0.6363636363636364 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.6767676767676768].
2023-08-21 20:35:50,757 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.18181818181818182, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=8.080817272727271e-05 ,centered=False ,beta_1=0.33333333333333337 ,beta_2=0.787878787878788 ,learning_rate_power=-0.6363636363636364 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.6767676767676768].
2023-08-21 20:35:51,540 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7575757575757577, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.005859000000000001 ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.8181818181818182 ,epsilon=0.0006262626636363636 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.29292929292929293 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.22222222222222224 ,l1_regularization_strength=0.6767676767676768 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6262626262626263 ,beta=0.6464646464646465].
2023-08-21 20:35:51,540 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7575757575757577, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.005859000000000001 ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.8181818181818182 ,epsilon=0.0006262626636363636 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.29292929292929293 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.22222222222222224 ,l1_regularization_strength=0.6767676767676768 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6262626262626263 ,beta=0.6464646464646465].
2023-08-21 20:36:11,532 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.12121212121212122 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.696969696969697 ,rho=0.4040404040404041 ,epsilon=0.0003737374363636363 ,centered=False ,beta_1=0.5656565656565657 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.4040404040404041 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.6767676767676768].
2023-08-21 20:36:11,532 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.12121212121212122 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.696969696969697 ,rho=0.4040404040404041 ,epsilon=0.0003737374363636363 ,centered=False ,beta_1=0.5656565656565657 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.4040404040404041 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.6767676767676768].
2023-08-21 20:36:13,368 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-21 20:36:13,368 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-21 20:36:32,521 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:36:32,521 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:36:33,241 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.4545454545454546 ,rho=0.5656565656565657 ,epsilon=0.0006060606454545455 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.010101010101010102 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.010101010101010102].
2023-08-21 20:36:33,241 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.4545454545454546 ,rho=0.5656565656565657 ,epsilon=0.0006060606454545455 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.010101010101010102 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.010101010101010102].
2023-08-21 20:36:51,748 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.797979797979798, momentum=0.7474747474747475 ,nesterov=True ,amsgrad=False ,weight_decay=0.001314 ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.8282828282828284 ,epsilon=0.0008989899090909091 ,centered=False ,beta_1=0.7777777777777778 ,beta_2=0.787878787878788 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8787878787878789 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:36:51,748 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.797979797979798, momentum=0.7474747474747475 ,nesterov=True ,amsgrad=False ,weight_decay=0.001314 ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.8282828282828284 ,epsilon=0.0008989899090909091 ,centered=False ,beta_1=0.7777777777777778 ,beta_2=0.787878787878788 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8787878787878789 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:36:55,447 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:36:55,447 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:37:13,686 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.6464646464646464 ,initial_accumulator_value=0.19191919191919193 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-21 20:37:13,687 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.6464646464646464 ,initial_accumulator_value=0.19191919191919193 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-21 20:37:14,893 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8585858585858587, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8282828282828284 ,rho=0.13131313131313133 ,epsilon=0.0009898989909090908 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.5151515151515151 ,initial_accumulator_value=0.6767676767676768 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:37:14,894 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8585858585858587, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8282828282828284 ,rho=0.13131313131313133 ,epsilon=0.0009898989909090908 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.5151515151515151 ,initial_accumulator_value=0.6767676767676768 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:37:35,894 INFO: Applying selection operators for generation 6.
2023-08-21 20:37:35,894 INFO: Applying genetic operators for generation 6.
2023-08-21 20:37:35,896 INFO: Evaluating fitness for for generation 6.
2023-08-21 20:37:35,896 INFO: Will evaluate fitness for 16 individuals.
2023-08-21 20:37:36,423 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:37:36,423 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:37:36,425 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:37:36,426 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:37:55,688 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:37:55,688 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:37:56,270 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:37:56,271 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:38:14,894 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:38:14,894 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:38:15,726 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:38:15,726 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:38:34,631 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-21 20:38:34,631 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-21 20:38:35,227 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:38:35,227 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:38:53,999 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:38:53,999 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:38:54,589 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.5858585858585859 ,beta_2=0.4040404040404041 ,learning_rate_power=-0.3939393939393939 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.38383838383838387 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.6767676767676768].
2023-08-21 20:38:54,589 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.5858585858585859 ,beta_2=0.4040404040404041 ,learning_rate_power=-0.3939393939393939 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.38383838383838387 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.6767676767676768].
2023-08-21 20:39:13,358 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:39:13,358 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:39:14,421 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.10101010101010102, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=0.006061000000000001 ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.23232323232323235 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.4545454545454546].
2023-08-21 20:39:14,421 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.10101010101010102, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=0.006061000000000001 ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.23232323232323235 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.4545454545454546].
2023-08-21 20:39:33,016 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:39:33,016 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:39:36,432 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-21 20:39:36,432 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-21 20:39:52,309 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:39:52,309 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:39:55,884 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.3434343434343435, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=0.003839000000000001 ,use_ema=False ,ema_momentum=0.98989898989899 ,rho=0.37373737373737376 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6464646464646465 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.29292929292929293 ,l1_regularization_strength=0.7373737373737375 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-21 20:39:55,884 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.3434343434343435, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=0.003839000000000001 ,use_ema=False ,ema_momentum=0.98989898989899 ,rho=0.37373737373737376 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6464646464646465 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.29292929292929293 ,l1_regularization_strength=0.7373737373737375 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-21 20:40:17,656 INFO: Applying selection operators for generation 7.
2023-08-21 20:40:17,657 INFO: Applying genetic operators for generation 7.
2023-08-21 20:40:17,658 INFO: Evaluating fitness for for generation 7.
2023-08-21 20:40:17,658 INFO: Will evaluate fitness for 10 individuals.
2023-08-21 20:40:18,142 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:40:18,143 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:40:18,183 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.20202020202020204, momentum=0.05050505050505051 ,nesterov=False ,amsgrad=False ,weight_decay=0.006263000000000001 ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=0.0002020202818181818 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.21212121212121213 ,l1_regularization_strength=0.23232323232323235 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:40:18,183 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.20202020202020204, momentum=0.05050505050505051 ,nesterov=False ,amsgrad=False ,weight_decay=0.006263000000000001 ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=0.0002020202818181818 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.21212121212121213 ,l1_regularization_strength=0.23232323232323235 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:40:37,387 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:40:37,388 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:40:40,908 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:40:40,909 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:40:57,030 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.38383838383838387 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.7777777777777778 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.7373737373737375 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:40:57,030 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.38383838383838387 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.7777777777777778 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.7373737373737375 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:41:00,437 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:41:00,437 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:41:16,424 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.4747474747474748 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.6464646464646465].
2023-08-21 20:41:16,425 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.4747474747474748 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.6464646464646465].
2023-08-21 20:41:19,900 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:41:19,901 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:41:35,714 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.686868686868687, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.23232323232323226 ,initial_accumulator_value=1.0 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.4040404040404041].
2023-08-21 20:41:35,714 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.686868686868687, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.23232323232323226 ,initial_accumulator_value=1.0 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.4040404040404041].
2023-08-21 20:41:55,434 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:41:55,435 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:42:14,894 INFO: Applying selection operators for generation 8.
2023-08-21 20:42:14,894 INFO: Applying genetic operators for generation 8.
2023-08-21 20:42:14,896 INFO: Evaluating fitness for for generation 8.
2023-08-21 20:42:14,896 INFO: Will evaluate fitness for 13 individuals.
2023-08-21 20:42:15,421 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:42:15,422 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:42:15,433 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.18181818181818182, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=1.0 ,epsilon=0.0003030303727272727 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.31313131313131304 ,initial_accumulator_value=0.18181818181818182 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.030303030303030304].
2023-08-21 20:42:15,433 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.18181818181818182, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=1.0 ,epsilon=0.0003030303727272727 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.31313131313131304 ,initial_accumulator_value=0.18181818181818182 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.030303030303030304].
2023-08-21 20:42:34,825 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:42:34,825 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:42:36,972 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:42:36,973 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:42:53,992 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-21 20:42:53,993 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-21 20:42:56,467 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:42:56,467 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:43:13,748 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6666666666666667, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.5050505050505051].
2023-08-21 20:43:13,748 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6666666666666667, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.5050505050505051].
2023-08-21 20:43:16,458 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.5555555555555556 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=0.0005858586272727272 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.31313131313131315 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.19191919191919193 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.6767676767676768].
2023-08-21 20:43:16,458 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.5555555555555556 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=0.0005858586272727272 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.31313131313131315 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.19191919191919193 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.6767676767676768].
2023-08-21 20:43:33,069 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:43:33,069 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:43:38,120 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:43:38,120 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:43:52,410 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:43:52,410 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:43:57,791 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.8686868686868687 ,nesterov=False ,amsgrad=False ,weight_decay=0.006667000000000001 ,use_ema=False ,ema_momentum=0.08080808080808081 ,rho=0.787878787878788 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.25252525252525254 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.5555555555555556 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.6767676767676768].
2023-08-21 20:43:57,791 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.8686868686868687 ,nesterov=False ,amsgrad=False ,weight_decay=0.006667000000000001 ,use_ema=False ,ema_momentum=0.08080808080808081 ,rho=0.787878787878788 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.25252525252525254 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.5555555555555556 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.6767676767676768].
2023-08-21 20:44:11,615 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.797979797979798, momentum=0.2828282828282829 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.07070707070707072 ,rho=0.22222222222222224 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.8585858585858587 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.9696969696969697].
2023-08-21 20:44:11,615 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.797979797979798, momentum=0.2828282828282829 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.07070707070707072 ,rho=0.22222222222222224 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.8585858585858587 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.9696969696969697].
2023-08-21 20:44:32,748 INFO: Applying selection operators for generation 9.
2023-08-21 20:44:32,748 INFO: Applying genetic operators for generation 9.
2023-08-21 20:44:32,749 INFO: Evaluating fitness for for generation 9.
2023-08-21 20:44:32,749 INFO: Will evaluate fitness for 17 individuals.
2023-08-21 20:44:33,255 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:44:33,256 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:44:33,420 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.31313131313131304 ,initial_accumulator_value=0.18181818181818182 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:44:33,420 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.31313131313131304 ,initial_accumulator_value=0.18181818181818182 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:44:52,523 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:44:52,523 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:44:53,674 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.5353535353535354, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.3434343434343435 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.19191919191919193 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.8686868686868687 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.4747474747474748].
2023-08-21 20:44:53,674 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.5353535353535354, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.3434343434343435 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.19191919191919193 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.8686868686868687 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.4747474747474748].
2023-08-21 20:45:11,788 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:45:11,788 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:45:22,128 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:45:22,129 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:45:31,217 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.98989898989899, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=0.0007080000000000002 ,use_ema=False ,ema_momentum=0.05050505050505051 ,rho=0.13131313131313133 ,epsilon=0.0007878788090909091 ,centered=True ,beta_1=0.05050505050505051 ,beta_2=0.787878787878788 ,learning_rate_power=-0.8888888888888888 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.8080808080808082].
2023-08-21 20:45:31,217 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.98989898989899, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=0.0007080000000000002 ,use_ema=False ,ema_momentum=0.05050505050505051 ,rho=0.13131313131313133 ,epsilon=0.0007878788090909091 ,centered=True ,beta_1=0.05050505050505051 ,beta_2=0.787878787878788 ,learning_rate_power=-0.8888888888888888 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.8080808080808082].
2023-08-21 20:45:41,921 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:45:41,921 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:45:53,338 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:45:53,338 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:46:02,160 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:46:02,161 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:46:12,752 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:46:12,752 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:46:21,992 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:46:21,992 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:46:31,947 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:46:31,947 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:46:41,775 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:46:41,775 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:46:51,729 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:46:51,729 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:47:01,592 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:47:01,592 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:47:11,066 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:47:11,066 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:47:29,937 INFO: Applying selection operators for generation 10.
2023-08-21 20:47:29,937 INFO: Applying genetic operators for generation 10.
2023-08-21 20:47:29,939 INFO: Evaluating fitness for for generation 10.
2023-08-21 20:47:29,939 INFO: Will evaluate fitness for 16 individuals.
2023-08-21 20:47:30,447 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:47:30,447 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:47:30,609 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:47:30,610 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:47:49,622 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:47:49,622 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:47:50,338 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:47:50,338 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:48:09,317 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:48:09,317 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:48:10,077 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:48:10,077 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:48:28,541 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:48:28,541 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:48:30,157 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:48:30,158 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:48:47,722 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:48:47,722 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:48:49,971 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.36363636363636365, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.43434343434343436 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.8484848484848485 ,l1_regularization_strength=0.7474747474747475 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5151515151515152 ,beta=0.7272727272727273].
2023-08-21 20:48:49,972 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.36363636363636365, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.43434343434343436 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.8484848484848485 ,l1_regularization_strength=0.7474747474747475 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5151515151515152 ,beta=0.7272727272727273].
2023-08-21 20:49:06,991 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:49:06,991 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:49:09,761 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:49:09,761 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:49:26,654 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:49:26,654 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:49:29,351 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.9494949494949496, momentum=0.5858585858585859 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.6262626262626263 ,epsilon=0.0003030303727272727 ,centered=False ,beta_1=0.020202020202020204 ,beta_2=0.3434343434343435 ,learning_rate_power=-0.31313131313131304 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.9191919191919192].
2023-08-21 20:49:29,351 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.9494949494949496, momentum=0.5858585858585859 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.6262626262626263 ,epsilon=0.0003030303727272727 ,centered=False ,beta_1=0.020202020202020204 ,beta_2=0.3434343434343435 ,learning_rate_power=-0.31313131313131304 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.9191919191919192].
2023-08-21 20:49:46,045 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.030303030303030304 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=0.0006565656909090909 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7575757575757577 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7373737373737375 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.6767676767676768].
2023-08-21 20:49:46,045 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.030303030303030304 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=0.0006565656909090909 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7575757575757577 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7373737373737375 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.6767676767676768].
2023-08-21 20:49:51,245 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.22222222222222224, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6666666666666667 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.43434343434343425 ,initial_accumulator_value=0.030303030303030304 ,l1_regularization_strength=0.9393939393939394 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.696969696969697].
2023-08-21 20:49:51,245 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.22222222222222224, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6666666666666667 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.43434343434343425 ,initial_accumulator_value=0.030303030303030304 ,l1_regularization_strength=0.9393939393939394 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.696969696969697].
2023-08-21 20:50:10,359 INFO: Applying selection operators for generation 11.
2023-08-21 20:50:10,359 INFO: Applying genetic operators for generation 11.
2023-08-21 20:50:10,360 INFO: Evaluating fitness for for generation 11.
2023-08-21 20:50:10,360 INFO: Will evaluate fitness for 18 individuals.
2023-08-21 20:50:10,863 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:50:10,864 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:50:11,029 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:50:11,029 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:50:30,550 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:50:30,551 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:50:30,758 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:50:30,758 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:50:49,851 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:50:49,851 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:50:50,488 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:50:50,488 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:51:09,061 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:51:09,061 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:51:10,685 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:51:10,685 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:51:28,237 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7777777777777778, momentum=0.9090909090909092 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.9393939393939394 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:51:28,237 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7777777777777778, momentum=0.9090909090909092 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.9393939393939394 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:51:30,448 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:51:30,448 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:51:50,329 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7575757575757577, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8181818181818182 ,rho=0.13131313131313133 ,epsilon=0.00015151523636363636 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.19191919191919193 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.10101010101010102 ,beta=0.12121212121212122].
2023-08-21 20:51:50,329 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7575757575757577, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8181818181818182 ,rho=0.13131313131313133 ,epsilon=0.00015151523636363636 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.19191919191919193 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.10101010101010102 ,beta=0.12121212121212122].
2023-08-21 20:51:51,024 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.8686868686868687 ,l1_regularization_strength=0.5050505050505051 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:51:51,025 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.8686868686868687 ,l1_regularization_strength=0.5050505050505051 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:52:10,261 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:52:10,262 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:52:15,236 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:52:15,236 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:52:30,333 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:52:30,333 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:52:41,388 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:52:41,388 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:52:50,517 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.6767676767676768].
2023-08-21 20:52:50,517 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.6767676767676768].
2023-08-21 20:53:05,441 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:53:05,441 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:53:27,781 INFO: Applying selection operators for generation 12.
2023-08-21 20:53:27,781 INFO: Applying genetic operators for generation 12.
2023-08-21 20:53:27,782 INFO: Evaluating fitness for for generation 12.
2023-08-21 20:53:27,782 INFO: Will evaluate fitness for 12 individuals.
2023-08-21 20:53:28,451 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.5252525252525253 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.9191919191919192 ,beta_2=0.787878787878788 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.8282828282828284].
2023-08-21 20:53:28,451 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.5252525252525253 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.9191919191919192 ,beta_2=0.787878787878788 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.8282828282828284].
2023-08-21 20:53:29,380 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:53:29,380 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:53:53,925 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.38383838383838387 ,nesterov=False ,amsgrad=False ,weight_decay=0.0019200000000000003 ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=0.0002121212909090909 ,centered=False ,beta_1=0.11111111111111112 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.6666666666666667 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.6767676767676768].
2023-08-21 20:53:53,926 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.38383838383838387 ,nesterov=False ,amsgrad=False ,weight_decay=0.0019200000000000003 ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=0.0002121212909090909 ,centered=False ,beta_1=0.11111111111111112 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.6666666666666667 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.6767676767676768].
2023-08-21 20:53:54,368 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:53:54,368 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:54:14,673 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:54:14,673 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:54:26,665 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.9595959595959597, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.006364000000000001 ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=0.0003636364272727272 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.7575757575757577 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.8383838383838385].
2023-08-21 20:54:26,665 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.9595959595959597, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.006364000000000001 ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=0.0003636364272727272 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.7575757575757577 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.8383838383838385].
2023-08-21 20:54:34,896 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:54:34,897 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:54:57,494 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:54:57,494 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:55:05,164 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.04040404040404041 ,epsilon=0.00010101019090909089 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.010101010101010102].
2023-08-21 20:55:05,164 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.04040404040404041 ,epsilon=0.00010101019090909089 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.010101010101010102].
2023-08-21 20:55:18,657 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:55:18,657 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:55:38,306 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.4242424242424242 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.8585858585858587 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.494949494949495].
2023-08-21 20:55:38,306 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.4242424242424242 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.8585858585858587 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.494949494949495].
2023-08-21 20:56:13,760 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:56:13,760 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:56:51,297 INFO: Applying selection operators for generation 13.
2023-08-21 20:56:51,297 INFO: Applying genetic operators for generation 13.
2023-08-21 20:56:51,299 INFO: Evaluating fitness for for generation 13.
2023-08-21 20:56:51,299 INFO: Will evaluate fitness for 15 individuals.
2023-08-21 20:56:52,135 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:56:52,135 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:56:57,420 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.5454545454545455 ,nesterov=False ,amsgrad=True ,weight_decay=0.0006070000000000001 ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.6161616161616162 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.2828282828282829 ,l1_regularization_strength=0.8585858585858587 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.6767676767676768].
2023-08-21 20:56:57,420 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.5454545454545455 ,nesterov=False ,amsgrad=True ,weight_decay=0.0006070000000000001 ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.6161616161616162 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.2828282828282829 ,l1_regularization_strength=0.8585858585858587 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.6767676767676768].
2023-08-21 20:57:13,761 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=0.0003333334 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.6767676767676768].
2023-08-21 20:57:13,761 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=0.0003333334 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.6767676767676768].
2023-08-21 20:57:20,757 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:57:20,757 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:57:44,636 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.9797979797979799 ,nesterov=True ,amsgrad=False ,weight_decay=0.0006070000000000001 ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.6363636363636365 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.8282828282828284 ,beta_2=0.787878787878788 ,learning_rate_power=-0.696969696969697 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.8080808080808082 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.6767676767676768].
2023-08-21 20:57:44,636 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.9797979797979799 ,nesterov=True ,amsgrad=False ,weight_decay=0.0006070000000000001 ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.6363636363636365 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.8282828282828284 ,beta_2=0.787878787878788 ,learning_rate_power=-0.696969696969697 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.8080808080808082 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.6767676767676768].
2023-08-21 20:57:47,294 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:57:47,295 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:58:08,578 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:58:08,578 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:58:17,586 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:58:17,587 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:58:30,705 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:58:30,705 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:58:46,749 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.11111111111111112, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=0.0004050000000000001 ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.25252525252525254 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.98989898989899].
2023-08-21 20:58:46,749 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.11111111111111112, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=0.0004050000000000001 ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.25252525252525254 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.98989898989899].
2023-08-21 20:58:51,808 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:58:51,809 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:59:12,094 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:59:12,095 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:59:12,283 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.6767676767676768, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8585858585858587 ,rho=0.13131313131313133 ,epsilon=0.0009595959636363636 ,centered=False ,beta_1=0.10101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.6363636363636364 ,initial_accumulator_value=0.4545454545454546 ,l1_regularization_strength=0.8080808080808082 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5757575757575758 ,beta=0.6767676767676768].
2023-08-21 20:59:12,284 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.6767676767676768, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8585858585858587 ,rho=0.13131313131313133 ,epsilon=0.0009595959636363636 ,centered=False ,beta_1=0.10101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.6363636363636364 ,initial_accumulator_value=0.4545454545454546 ,l1_regularization_strength=0.8080808080808082 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5757575757575758 ,beta=0.6767676767676768].
2023-08-21 20:59:36,901 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.42424242424242425 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9191919191919192 ,rho=0.7575757575757577 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.9696969696969697 ,l1_regularization_strength=0.3434343434343435 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.14141414141414144].
2023-08-21 20:59:36,902 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.42424242424242425 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9191919191919192 ,rho=0.7575757575757577 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.9696969696969697 ,l1_regularization_strength=0.3434343434343435 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.14141414141414144].
2023-08-21 20:59:37,519 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 20:59:37,519 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:00:03,416 INFO: Applying selection operators for generation 14.
2023-08-21 21:00:03,416 INFO: Applying genetic operators for generation 14.
2023-08-21 21:00:03,418 INFO: Evaluating fitness for for generation 14.
2023-08-21 21:00:03,418 INFO: Will evaluate fitness for 15 individuals.
2023-08-21 21:00:04,642 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7575757575757577, momentum=0.23232323232323235 ,nesterov=False ,amsgrad=False ,weight_decay=0.001819 ,use_ema=False ,ema_momentum=0.37373737373737376 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.8989898989898991 ,beta_2=0.787878787878788 ,learning_rate_power=-0.9191919191919192 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.020202020202020204].
2023-08-21 21:00:04,643 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7575757575757577, momentum=0.23232323232323235 ,nesterov=False ,amsgrad=False ,weight_decay=0.001819 ,use_ema=False ,ema_momentum=0.37373737373737376 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.8989898989898991 ,beta_2=0.787878787878788 ,learning_rate_power=-0.9191919191919192 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.020202020202020204].
2023-08-21 21:00:05,307 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:00:05,307 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:00:26,205 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:00:26,205 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:00:31,619 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.42424242424242425 ,rho=0.13131313131313133 ,epsilon=0.00032323239090909086 ,centered=False ,beta_1=0.7676767676767677 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.9393939393939394 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.38383838383838387 ,beta=0.6767676767676768].
2023-08-21 21:00:31,619 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.42424242424242425 ,rho=0.13131313131313133 ,epsilon=0.00032323239090909086 ,centered=False ,beta_1=0.7676767676767677 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.9393939393939394 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.38383838383838387 ,beta=0.6767676767676768].
2023-08-21 21:00:46,318 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:00:46,318 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:01:02,534 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:01:02,535 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:01:08,018 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:01:08,018 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:01:28,115 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.8080808080808082, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.003738000000000001 ,use_ema=False ,ema_momentum=0.7171717171717172 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.9393939393939394 ,beta_2=0.38383838383838387 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.37373737373737376 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.6767676767676768].
2023-08-21 21:01:28,115 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.8080808080808082, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.003738000000000001 ,use_ema=False ,ema_momentum=0.7171717171717172 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.9393939393939394 ,beta_2=0.38383838383838387 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.37373737373737376 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.6767676767676768].
2023-08-21 21:01:28,752 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:01:28,752 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:01:49,803 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:01:49,804 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:01:54,751 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:01:54,751 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:02:09,297 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.5757575757575758 ,rho=0.5353535353535354 ,epsilon=0.0009393939454545454 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.5252525252525252 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=1.0].
2023-08-21 21:02:09,297 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.5757575757575758 ,rho=0.5353535353535354 ,epsilon=0.0009393939454545454 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.5252525252525252 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=1.0].
2023-08-21 21:02:15,997 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:02:15,997 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:02:32,216 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:02:32,216 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:02:42,364 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:02:42,364 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:03:03,365 INFO: Applying selection operators for generation 15.
2023-08-21 21:03:03,365 INFO: Applying genetic operators for generation 15.
2023-08-21 21:03:03,367 INFO: Evaluating fitness for for generation 15.
2023-08-21 21:03:03,367 INFO: Will evaluate fitness for 15 individuals.
2023-08-21 21:03:03,942 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.5555555555555556, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.4444444444444445 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.4646464646464647 ,beta_2=0.7777777777777778 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.26262626262626265 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.10101010101010102 ,beta=0.37373737373737376].
2023-08-21 21:03:03,942 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.5555555555555556, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.4444444444444445 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.4646464646464647 ,beta_2=0.7777777777777778 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.26262626262626265 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.10101010101010102 ,beta=0.37373737373737376].
2023-08-21 21:03:04,506 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:03:04,506 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:03:26,945 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:03:26,946 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:03:27,232 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:03:27,233 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:03:46,884 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:03:46,885 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:03:51,713 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:03:51,713 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:04:06,822 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:04:06,822 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:04:16,998 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.787878787878788 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.6161616161616162 ,beta_2=0.8484848484848485 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.17171717171717174 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.8686868686868687].
2023-08-21 21:04:16,999 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.787878787878788 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.6161616161616162 ,beta_2=0.8484848484848485 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.17171717171717174 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.8686868686868687].
2023-08-21 21:04:27,620 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=1.0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=3.030312727272727e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.5555555555555556 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8787878787878789 ,beta=0.6767676767676768].
2023-08-21 21:04:27,620 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=1.0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=3.030312727272727e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.5555555555555556 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8787878787878789 ,beta=0.6767676767676768].
2023-08-21 21:04:40,367 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:04:40,367 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:04:51,936 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:04:51,936 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:05:07,506 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.98989898989899, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.18181818181818182 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.6767676767676768].
2023-08-21 21:05:07,506 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.98989898989899, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.18181818181818182 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.6767676767676768].
2023-08-21 21:05:11,483 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0025260000000000005 ,use_ema=False ,ema_momentum=0.12121212121212122 ,rho=0.29292929292929293 ,epsilon=0.0003838384454545454 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.686868686868687 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.12121212121212122 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5151515151515152 ,beta=0.5050505050505051].
2023-08-21 21:05:11,483 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0025260000000000005 ,use_ema=False ,ema_momentum=0.12121212121212122 ,rho=0.29292929292929293 ,epsilon=0.0003838384454545454 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.686868686868687 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.12121212121212122 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5151515151515152 ,beta=0.5050505050505051].
2023-08-21 21:05:50,101 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:05:50,101 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:05:50,517 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:05:50,517 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:06:12,715 INFO: Applying selection operators for generation 16.
2023-08-21 21:06:12,716 INFO: Applying genetic operators for generation 16.
2023-08-21 21:06:12,718 INFO: Evaluating fitness for for generation 16.
2023-08-21 21:06:12,718 INFO: Will evaluate fitness for 18 individuals.
2023-08-21 21:06:13,239 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.7272727272727273, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.009596 ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=0.0008888889 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.686868686868687 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.33333333333333337 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.696969696969697].
2023-08-21 21:06:13,239 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.7272727272727273, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.009596 ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=0.0008888889 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.686868686868687 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.33333333333333337 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.696969696969697].
2023-08-21 21:06:13,472 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8181818181818182, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6060606060606061 ,rho=0.4141414141414142 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.16161616161616163 ,beta_2=0.787878787878788 ,learning_rate_power=-0.11111111111111105 ,initial_accumulator_value=0.7373737373737375 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.8282828282828284].
2023-08-21 21:06:13,472 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8181818181818182, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6060606060606061 ,rho=0.4141414141414142 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.16161616161616163 ,beta_2=0.787878787878788 ,learning_rate_power=-0.11111111111111105 ,initial_accumulator_value=0.7373737373737375 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.8282828282828284].
2023-08-21 21:06:37,389 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.9595959595959597, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.4141414141414142 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.22222222222222224].
2023-08-21 21:06:37,389 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.9595959595959597, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.4141414141414142 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.22222222222222224].
2023-08-21 21:06:39,295 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:06:39,295 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:07:01,942 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:07:01,943 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:07:08,955 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:07:08,955 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:07:22,962 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.08080808080808081, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=0.005354000000000001 ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=0.00010101019090909089 ,centered=False ,beta_1=0.5050505050505051 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.3737373737373737 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.26262626262626265 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.8080808080808082].
2023-08-21 21:07:22,963 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.08080808080808081, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=0.005354000000000001 ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=0.00010101019090909089 ,centered=False ,beta_1=0.5050505050505051 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.3737373737373737 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.26262626262626265 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.8080808080808082].
2023-08-21 21:07:36,171 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=0.004849000000000001 ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.19191919191919193 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.8282828282828284 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.6767676767676768].
2023-08-21 21:07:36,171 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=0.004849000000000001 ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.19191919191919193 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.8282828282828284 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.6767676767676768].
2023-08-21 21:07:48,446 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:07:48,446 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:08:03,492 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:08:03,492 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:08:08,795 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.7272727272727273, momentum=0.5151515151515152 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.37373737373737376 ,rho=0.5555555555555556 ,epsilon=0.0005656566090909091 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.5252525252525252 ,initial_accumulator_value=0.36363636363636365 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:08:08,795 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.7272727272727273, momentum=0.5151515151515152 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.37373737373737376 ,rho=0.5555555555555556 ,epsilon=0.0005656566090909091 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.5252525252525252 ,initial_accumulator_value=0.36363636363636365 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:08:29,040 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:08:29,040 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:08:34,453 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:08:34,454 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:08:55,606 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=0.008283 ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.8282828282828284 ,epsilon=0.0009595959636363636 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.696969696969697 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.6161616161616162 ,l1_regularization_strength=0.13131313131313133 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.8484848484848485].
2023-08-21 21:08:55,606 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=0.008283 ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.8282828282828284 ,epsilon=0.0009595959636363636 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.696969696969697 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.6161616161616162 ,l1_regularization_strength=0.13131313131313133 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.8484848484848485].
2023-08-21 21:08:56,216 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.07070707070707072, momentum=0.8585858585858587 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3434343434343435 ,rho=0.6262626262626263 ,epsilon=0.0005959596363636363 ,centered=False ,beta_1=0.3535353535353536 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.7373737373737375 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6767676767676768].
2023-08-21 21:08:56,216 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.07070707070707072, momentum=0.8585858585858587 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3434343434343435 ,rho=0.6262626262626263 ,epsilon=0.0005959596363636363 ,centered=False ,beta_1=0.3535353535353536 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.7373737373737375 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6767676767676768].
2023-08-21 21:09:21,790 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:09:21,790 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:09:23,446 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8484848484848485, momentum=0.4141414141414142 ,nesterov=False ,amsgrad=True ,weight_decay=0.007273000000000001 ,use_ema=False ,ema_momentum=0.17171717171717174 ,rho=0.6464646464646465 ,epsilon=0.0004949495454545454 ,centered=False ,beta_1=0.787878787878788 ,beta_2=0.7272727272727273 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:09:23,447 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8484848484848485, momentum=0.4141414141414142 ,nesterov=False ,amsgrad=True ,weight_decay=0.007273000000000001 ,use_ema=False ,ema_momentum=0.17171717171717174 ,rho=0.6464646464646465 ,epsilon=0.0004949495454545454 ,centered=False ,beta_1=0.787878787878788 ,beta_2=0.7272727272727273 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:09:52,030 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:09:52,030 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:10:23,181 INFO: Applying selection operators for generation 17.
2023-08-21 21:10:23,182 INFO: Applying genetic operators for generation 17.
2023-08-21 21:10:23,183 INFO: Evaluating fitness for for generation 17.
2023-08-21 21:10:23,183 INFO: Will evaluate fitness for 14 individuals.
2023-08-21 21:10:23,882 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:10:23,882 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:10:30,753 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:10:30,753 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:10:49,249 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:10:49,249 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:11:03,874 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:11:03,874 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:11:13,657 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:11:13,658 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:11:30,564 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:11:30,564 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:11:33,971 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:11:33,971 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:11:53,932 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.020202020202020204, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9292929292929294 ,rho=0.9292929292929294 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.22222222222222224 ,learning_rate_power=-0.04040404040404033 ,initial_accumulator_value=0.4747474747474748 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.6767676767676768].
2023-08-21 21:11:53,933 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.020202020202020204, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9292929292929294 ,rho=0.9292929292929294 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.22222222222222224 ,learning_rate_power=-0.04040404040404033 ,initial_accumulator_value=0.4747474747474748 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.6767676767676768].
2023-08-21 21:11:58,093 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:11:58,093 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:12:20,389 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.7272727272727273, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.15151515151515152 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.5151515151515151 ,initial_accumulator_value=0.31313131313131315 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.6767676767676768].
2023-08-21 21:12:20,389 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.7272727272727273, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.15151515151515152 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.5151515151515151 ,initial_accumulator_value=0.31313131313131315 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.6767676767676768].
2023-08-21 21:12:24,333 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:12:24,334 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:12:44,186 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:12:44,187 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:12:53,926 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8484848484848485, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8181818181818182 ,rho=0.7676767676767677 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.5252525252525252 ,initial_accumulator_value=0.4141414141414142 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.6767676767676768].
2023-08-21 21:12:53,926 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8484848484848485, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8181818181818182 ,rho=0.7676767676767677 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.5252525252525252 ,initial_accumulator_value=0.4141414141414142 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.6767676767676768].
2023-08-21 21:13:04,016 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:13:04,016 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:13:24,768 INFO: Applying selection operators for generation 18.
2023-08-21 21:13:24,768 INFO: Applying genetic operators for generation 18.
2023-08-21 21:13:24,770 INFO: Evaluating fitness for for generation 18.
2023-08-21 21:13:24,770 INFO: Will evaluate fitness for 13 individuals.
2023-08-21 21:13:25,459 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:13:25,459 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:13:26,385 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:13:26,386 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:13:45,901 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6565656565656566, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5656565656565657 ,rho=0.04040404040404041 ,epsilon=0.00010101019090909089 ,centered=False ,beta_1=0.06060606060606061 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.37373737373737376 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.11111111111111112 ,beta=0.6767676767676768].
2023-08-21 21:13:45,902 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6565656565656566, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5656565656565657 ,rho=0.04040404040404041 ,epsilon=0.00010101019090909089 ,centered=False ,beta_1=0.06060606060606061 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.37373737373737376 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.11111111111111112 ,beta=0.6767676767676768].
2023-08-21 21:13:51,446 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=False ,weight_decay=0.006869000000000001 ,use_ema=False ,ema_momentum=0.33333333333333337 ,rho=0.06060606060606061 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7171717171717172 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8787878787878789 ,beta=0.7777777777777778].
2023-08-21 21:13:51,446 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=False ,weight_decay=0.006869000000000001 ,use_ema=False ,ema_momentum=0.33333333333333337 ,rho=0.06060606060606061 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7171717171717172 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8787878787878789 ,beta=0.7777777777777778].
2023-08-21 21:14:10,270 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:14:10,271 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:14:22,931 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.4141414141414142 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9797979797979799 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.8484848484848485 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-21 21:14:22,931 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.4141414141414142 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9797979797979799 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.8484848484848485 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-21 21:14:30,025 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:14:30,026 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:14:50,801 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:14:50,802 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:14:51,215 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.6767676767676768 ,nesterov=False ,amsgrad=True ,weight_decay=0.006263000000000001 ,use_ema=True ,ema_momentum=0.696969696969697 ,rho=0.13131313131313133 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.4040404040404041 ,beta_2=0.3434343434343435 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.6767676767676768].
2023-08-21 21:14:51,215 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.6767676767676768 ,nesterov=False ,amsgrad=True ,weight_decay=0.006263000000000001 ,use_ema=True ,ema_momentum=0.696969696969697 ,rho=0.13131313131313133 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.4040404040404041 ,beta_2=0.3434343434343435 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.6767676767676768].
2023-08-21 21:15:11,341 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:15:11,341 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:15:27,893 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8686868686868687, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=0.0008181818363636363 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.7474747474747475 ,l1_regularization_strength=0.16161616161616163 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.98989898989899].
2023-08-21 21:15:27,894 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8686868686868687, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=0.0008181818363636363 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.7474747474747475 ,l1_regularization_strength=0.16161616161616163 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.98989898989899].
2023-08-21 21:15:33,988 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:15:33,989 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:15:57,126 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:15:57,127 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:16:19,431 INFO: Applying selection operators for generation 19.
2023-08-21 21:16:19,432 INFO: Applying genetic operators for generation 19.
2023-08-21 21:16:19,433 INFO: Evaluating fitness for for generation 19.
2023-08-21 21:16:19,433 INFO: Will evaluate fitness for 17 individuals.
2023-08-21 21:16:20,260 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:16:20,260 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:16:22,636 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:16:22,637 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:16:41,805 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=0.001819 ,use_ema=False ,ema_momentum=0.787878787878788 ,rho=0.13131313131313133 ,epsilon=0.0008181818363636363 ,centered=True ,beta_1=0.48484848484848486 ,beta_2=0.787878787878788 ,learning_rate_power=-0.33333333333333326 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:16:41,805 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=0.001819 ,use_ema=False ,ema_momentum=0.787878787878788 ,rho=0.13131313131313133 ,epsilon=0.0008181818363636363 ,centered=True ,beta_1=0.48484848484848486 ,beta_2=0.787878787878788 ,learning_rate_power=-0.33333333333333326 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:16:47,387 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6161616161616162 ,rho=0.22222222222222224 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.6767676767676768].
2023-08-21 21:16:47,387 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6161616161616162 ,rho=0.22222222222222224 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.6767676767676768].
2023-08-21 21:17:05,625 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:17:05,626 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:17:21,706 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:17:21,707 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:17:30,646 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.48484848484848486 ,rho=0.4545454545454546 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.4545454545454546 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.6767676767676768].
2023-08-21 21:17:30,646 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.48484848484848486 ,rho=0.4545454545454546 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.4545454545454546 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.6767676767676768].
2023-08-21 21:17:51,676 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:17:51,676 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:17:54,377 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:17:54,377 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:18:18,780 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:18:18,780 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:18:18,862 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.7272727272727273, momentum=0.42424242424242425 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.7171717171717172 ,rho=0.13131313131313133 ,epsilon=0.0007575757818181818 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.6767676767676768].
2023-08-21 21:18:18,862 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.7272727272727273, momentum=0.42424242424242425 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.7171717171717172 ,rho=0.13131313131313133 ,epsilon=0.0007575757818181818 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.6767676767676768].
2023-08-21 21:18:40,790 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:18:40,791 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:18:52,173 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.787878787878788, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=0.006162000000000001 ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.22222222222222224 ,epsilon=0.0003636364272727272 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.787878787878788 ,learning_rate_power=-0.36363636363636354 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.393939393939394].
2023-08-21 21:18:52,173 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.787878787878788, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=0.006162000000000001 ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.22222222222222224 ,epsilon=0.0003636364272727272 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.787878787878788 ,learning_rate_power=-0.36363636363636354 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.393939393939394].
2023-08-21 21:19:00,749 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:19:00,749 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:19:29,513 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:19:29,513 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:19:32,564 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:19:32,564 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:19:56,809 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.8989898989898991, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.29292929292929293 ,rho=0.13131313131313133 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9797979797979799 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.8989898989898991].
2023-08-21 21:19:56,809 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.8989898989898991, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.29292929292929293 ,rho=0.13131313131313133 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9797979797979799 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.8989898989898991].
2023-08-21 21:20:20,595 INFO: Applying selection operators for generation 20.
2023-08-21 21:20:20,596 INFO: Applying genetic operators for generation 20.
2023-08-21 21:20:20,597 INFO: Evaluating fitness for for generation 20.
2023-08-21 21:20:20,597 INFO: Will evaluate fitness for 18 individuals.
2023-08-21 21:20:21,152 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:20:21,153 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:20:24,463 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:20:24,463 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:20:41,818 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.7272727272727273, momentum=0.20202020202020204 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.18181818181818182 ,epsilon=0.0003737374363636363 ,centered=False ,beta_1=0.09090909090909091 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:20:41,818 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.7272727272727273, momentum=0.20202020202020204 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.18181818181818182 ,epsilon=0.0003737374363636363 ,centered=False ,beta_1=0.09090909090909091 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:20:47,945 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.26262626262626265, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8282828282828284 ,rho=0.888888888888889 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.4545454545454546 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:20:47,945 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.26262626262626265, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8282828282828284 ,rho=0.888888888888889 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.4545454545454546 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:21:04,762 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:21:04,762 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:21:12,648 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:21:12,649 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:21:25,054 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4040404040404041, momentum=0.33333333333333337 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.08080808080808081 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.6767676767676768 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.7272727272727273 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5757575757575758 ,beta=0.08080808080808081].
2023-08-21 21:21:25,055 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4040404040404041, momentum=0.33333333333333337 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.08080808080808081 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.6767676767676768 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.7272727272727273 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5757575757575758 ,beta=0.08080808080808081].
2023-08-21 21:21:35,297 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:21:35,297 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:21:48,354 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5050505050505051, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.797979797979798 ,l1_regularization_strength=0.4141414141414142 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:21:48,355 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5050505050505051, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.797979797979798 ,l1_regularization_strength=0.4141414141414142 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:21:59,858 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:21:59,858 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:22:09,330 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:22:09,330 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:22:24,006 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:22:24,007 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:22:29,145 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:22:29,146 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:22:48,211 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:22:48,211 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:22:49,690 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:22:49,690 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:23:10,626 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:23:10,627 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:23:11,393 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:23:11,393 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:23:33,211 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.8383838383838385 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7474747474747475 ,rho=0.8686868686868687 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.33333333333333337 ,learning_rate_power=-0.8383838383838383 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.5252525252525253 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.04040404040404041].
2023-08-21 21:23:33,212 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.8383838383838385 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7474747474747475 ,rho=0.8686868686868687 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.33333333333333337 ,learning_rate_power=-0.8383838383838383 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.5252525252525253 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.04040404040404041].
2023-08-21 21:23:58,663 INFO: Applying selection operators for generation 21.
2023-08-21 21:23:58,664 INFO: Applying genetic operators for generation 21.
2023-08-21 21:23:58,665 INFO: Evaluating fitness for for generation 21.
2023-08-21 21:23:58,665 INFO: Will evaluate fitness for 17 individuals.
2023-08-21 21:23:59,244 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:23:59,244 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:24:00,519 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:24:00,520 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:24:19,463 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:24:19,463 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:24:24,077 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8383838383838385, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0020210000000000002 ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.5757575757575758 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.6868686868686869 ,initial_accumulator_value=0.11111111111111112 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.6767676767676768].
2023-08-21 21:24:24,078 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8383838383838385, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0020210000000000002 ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.5757575757575758 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.6868686868686869 ,initial_accumulator_value=0.11111111111111112 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.6767676767676768].
2023-08-21 21:24:38,880 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:24:38,880 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:24:51,309 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:24:51,309 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:24:59,352 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:24:59,352 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:25:18,648 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:25:18,648 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:25:21,027 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:25:21,027 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:25:40,705 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:25:40,705 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:25:46,955 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:25:46,956 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:26:03,056 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:26:03,056 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:26:11,805 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:26:11,805 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:26:23,491 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.5555555555555556 ,rho=0.13131313131313133 ,epsilon=0.00014141422727272727 ,centered=False ,beta_1=0.4545454545454546 ,beta_2=0.98989898989899 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.6767676767676768].
2023-08-21 21:26:23,491 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.5555555555555556 ,rho=0.13131313131313133 ,epsilon=0.00014141422727272727 ,centered=False ,beta_1=0.4545454545454546 ,beta_2=0.98989898989899 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.6767676767676768].
2023-08-21 21:26:38,413 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:26:38,413 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:26:51,136 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:26:51,136 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:27:02,224 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:27:02,224 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:27:23,387 INFO: Applying selection operators for generation 22.
2023-08-21 21:27:23,387 INFO: Applying genetic operators for generation 22.
2023-08-21 21:27:23,389 INFO: Evaluating fitness for for generation 22.
2023-08-21 21:27:23,389 INFO: Will evaluate fitness for 18 individuals.
2023-08-21 21:27:24,023 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:27:24,023 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:27:28,454 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:27:28,454 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:27:44,104 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:27:44,104 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:27:59,671 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:27:59,671 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:28:06,907 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4444444444444445, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.05050505050505051 ,rho=0.7171717171717172 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.6161616161616162 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.6767676767676768].
2023-08-21 21:28:06,907 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4444444444444445, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.05050505050505051 ,rho=0.7171717171717172 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.6161616161616162 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.6767676767676768].
2023-08-21 21:28:27,075 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:28:27,075 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:28:32,054 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.24242424242424243 ,rho=0.13131313131313133 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.48484848484848486 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.8181818181818182 ,l1_regularization_strength=0.4545454545454546 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.98989898989899].
2023-08-21 21:28:32,054 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.24242424242424243 ,rho=0.13131313131313133 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.48484848484848486 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.8181818181818182 ,l1_regularization_strength=0.4545454545454546 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.98989898989899].
2023-08-21 21:28:50,819 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:28:50,820 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:28:56,294 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.13131313131313133 ,rho=0.13131313131313133 ,epsilon=0.0006464646818181818 ,centered=False ,beta_1=0.22222222222222224 ,beta_2=0.787878787878788 ,learning_rate_power=-0.404040404040404 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8787878787878789 ,beta=0.8585858585858587].
2023-08-21 21:28:56,294 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.13131313131313133 ,rho=0.13131313131313133 ,epsilon=0.0006464646818181818 ,centered=False ,beta_1=0.22222222222222224 ,beta_2=0.787878787878788 ,learning_rate_power=-0.404040404040404 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8787878787878789 ,beta=0.8585858585858587].
2023-08-21 21:29:13,939 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:29:13,939 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:29:21,865 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:29:21,865 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:29:43,406 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:29:43,406 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:29:50,238 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:29:50,238 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:30:07,011 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:30:07,011 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:30:10,149 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:30:10,149 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:30:30,501 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7474747474747475 ,rho=0.4141414141414142 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.797979797979798 ,beta_2=0.787878787878788 ,learning_rate_power=-0.2222222222222222 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.7474747474747475].
2023-08-21 21:30:30,501 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7474747474747475 ,rho=0.4141414141414142 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.797979797979798 ,beta_2=0.787878787878788 ,learning_rate_power=-0.2222222222222222 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.7474747474747475].
2023-08-21 21:30:33,984 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:30:33,984 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:31:00,302 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=0.004041 ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.595959595959596 ,epsilon=0.0006060606454545455 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6767676767676768].
2023-08-21 21:31:00,302 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=0.004041 ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.595959595959596 ,epsilon=0.0006060606454545455 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6767676767676768].
2023-08-21 21:31:28,324 INFO: Applying selection operators for generation 23.
2023-08-21 21:31:28,325 INFO: Applying genetic operators for generation 23.
2023-08-21 21:31:28,327 INFO: Evaluating fitness for for generation 23.
2023-08-21 21:31:28,327 INFO: Will evaluate fitness for 16 individuals.
2023-08-21 21:31:30,723 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.797979797979798 ,beta_2=0.787878787878788 ,learning_rate_power=-0.2222222222222222 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.7474747474747475].
2023-08-21 21:31:30,724 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.797979797979798 ,beta_2=0.787878787878788 ,learning_rate_power=-0.2222222222222222 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.7474747474747475].
2023-08-21 21:31:38,965 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.686868686868687, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7171717171717172 ,rho=0.13131313131313133 ,epsilon=0.0007373737636363636 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.7373737373737373 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.6767676767676768].
2023-08-21 21:31:38,965 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.686868686868687, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7171717171717172 ,rho=0.13131313131313133 ,epsilon=0.0007373737636363636 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.7373737373737373 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.6767676767676768].
2023-08-21 21:31:51,241 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.0, momentum=0.2828282828282829 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7474747474747475 ,rho=0.4141414141414142 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.14141414141414144 ,beta_2=0.787878787878788 ,learning_rate_power=-0.8484848484848485 ,initial_accumulator_value=0.7171717171717172 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.4141414141414142].
2023-08-21 21:31:51,242 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.0, momentum=0.2828282828282829 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7474747474747475 ,rho=0.4141414141414142 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.14141414141414144 ,beta_2=0.787878787878788 ,learning_rate_power=-0.8484848484848485 ,initial_accumulator_value=0.7171717171717172 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.4141414141414142].
2023-08-21 21:31:59,853 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.23232323232323235, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.8484848484848485 ,epsilon=0.0007171717454545454 ,centered=False ,beta_1=0.9797979797979799 ,beta_2=0.787878787878788 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.8080808080808082 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.7575757575757577].
2023-08-21 21:31:59,854 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.23232323232323235, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.8484848484848485 ,epsilon=0.0007171717454545454 ,centered=False ,beta_1=0.9797979797979799 ,beta_2=0.787878787878788 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.8080808080808082 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.7575757575757577].
2023-08-21 21:32:15,044 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.7272727272727273, momentum=0.9494949494949496 ,nesterov=False ,amsgrad=False ,weight_decay=0.002829000000000001 ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=0.0006464646818181818 ,centered=False ,beta_1=0.8181818181818182 ,beta_2=0.787878787878788 ,learning_rate_power=-0.9292929292929293 ,initial_accumulator_value=0.4545454545454546 ,l1_regularization_strength=0.6464646464646465 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.6767676767676768].
2023-08-21 21:32:15,045 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.7272727272727273, momentum=0.9494949494949496 ,nesterov=False ,amsgrad=False ,weight_decay=0.002829000000000001 ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=0.0006464646818181818 ,centered=False ,beta_1=0.8181818181818182 ,beta_2=0.787878787878788 ,learning_rate_power=-0.9292929292929293 ,initial_accumulator_value=0.4545454545454546 ,l1_regularization_strength=0.6464646464646465 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.6767676767676768].
2023-08-21 21:32:29,483 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:32:29,484 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:32:37,402 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:32:37,402 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:32:54,015 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:32:54,016 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:32:57,545 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:32:57,545 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:33:14,757 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.29292929292929293 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.9393939393939394 ,beta_2=0.9292929292929294 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:33:14,758 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.29292929292929293 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.9393939393939394 ,beta_2=0.9292929292929294 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:33:18,519 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.787878787878788, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8080808080808082 ,rho=0.4444444444444445 ,epsilon=0.0008787878909090909 ,centered=False ,beta_1=0.30303030303030304 ,beta_2=0.393939393939394 ,learning_rate_power=-0.13131313131313127 ,initial_accumulator_value=0.5858585858585859 ,l1_regularization_strength=0.43434343434343436 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:33:18,520 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.787878787878788, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8080808080808082 ,rho=0.4444444444444445 ,epsilon=0.0008787878909090909 ,centered=False ,beta_1=0.30303030303030304 ,beta_2=0.393939393939394 ,learning_rate_power=-0.13131313131313127 ,initial_accumulator_value=0.5858585858585859 ,l1_regularization_strength=0.43434343434343436 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:33:39,549 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.7676767676767677, momentum=0.4040404040404041 ,nesterov=False ,amsgrad=False ,weight_decay=0.0015160000000000002 ,use_ema=False ,ema_momentum=0.7676767676767677 ,rho=0.13131313131313133 ,epsilon=6.060615454545454e-05 ,centered=False ,beta_1=0.5555555555555556 ,beta_2=0.48484848484848486 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.30303030303030304 ,l1_regularization_strength=0.4545454545454546 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6666666666666667 ,beta=0.98989898989899].
2023-08-21 21:33:39,549 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.7676767676767677, momentum=0.4040404040404041 ,nesterov=False ,amsgrad=False ,weight_decay=0.0015160000000000002 ,use_ema=False ,ema_momentum=0.7676767676767677 ,rho=0.13131313131313133 ,epsilon=6.060615454545454e-05 ,centered=False ,beta_1=0.5555555555555556 ,beta_2=0.48484848484848486 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.30303030303030304 ,l1_regularization_strength=0.4545454545454546 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6666666666666667 ,beta=0.98989898989899].
2023-08-21 21:33:43,392 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=0.0033340000000000006 ,use_ema=False ,ema_momentum=0.07070707070707072 ,rho=0.5252525252525253 ,epsilon=0.00015151523636363636 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.4646464646464647 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.98989898989899 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:33:43,393 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=0.0033340000000000006 ,use_ema=False ,ema_momentum=0.07070707070707072 ,rho=0.5252525252525253 ,epsilon=0.00015151523636363636 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.4646464646464647 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.98989898989899 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:34:09,282 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:34:09,283 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:34:09,792 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:34:09,792 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:34:35,626 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.6565656565656566, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.7474747474747475 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.9696969696969697 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.17171717171717174].
2023-08-21 21:34:35,627 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.6565656565656566, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.7474747474747475 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.9696969696969697 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.17171717171717174].
2023-08-21 21:35:11,175 INFO: Applying selection operators for generation 24.
2023-08-21 21:35:11,176 INFO: Applying genetic operators for generation 24.
2023-08-21 21:35:11,178 INFO: Evaluating fitness for for generation 24.
2023-08-21 21:35:11,178 INFO: Will evaluate fitness for 18 individuals.
2023-08-21 21:35:11,997 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6666666666666667, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=0.0035360000000000005 ,use_ema=True ,ema_momentum=0.31313131313131315 ,rho=0.4747474747474748 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.9191919191919192 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.32323232323232326].
2023-08-21 21:35:11,997 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6666666666666667, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=0.0035360000000000005 ,use_ema=True ,ema_momentum=0.31313131313131315 ,rho=0.4747474747474748 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.9191919191919192 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.32323232323232326].
2023-08-21 21:35:13,595 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7474747474747475 ,rho=0.4141414141414142 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.797979797979798 ,beta_2=0.787878787878788 ,learning_rate_power=-0.2222222222222222 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.7474747474747475].
2023-08-21 21:35:13,595 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7474747474747475 ,rho=0.4141414141414142 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.797979797979798 ,beta_2=0.787878787878788 ,learning_rate_power=-0.2222222222222222 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.7474747474747475].
2023-08-21 21:35:41,266 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:35:41,266 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:35:50,160 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.797979797979798 ,beta_2=0.787878787878788 ,learning_rate_power=-0.2222222222222222 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.7474747474747475].
2023-08-21 21:35:50,160 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.797979797979798 ,beta_2=0.787878787878788 ,learning_rate_power=-0.2222222222222222 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.7474747474747475].
2023-08-21 21:36:02,656 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.7272727272727273, momentum=0.5555555555555556 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.26262626262626265 ,epsilon=0.0007676767909090908 ,centered=False ,beta_1=0.8383838383838385 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.5656565656565657 ,l1_regularization_strength=0.4545454545454546 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.6767676767676768].
2023-08-21 21:36:02,656 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.7272727272727273, momentum=0.5555555555555556 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.26262626262626265 ,epsilon=0.0007676767909090908 ,centered=False ,beta_1=0.8383838383838385 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.5656565656565657 ,l1_regularization_strength=0.4545454545454546 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.6767676767676768].
2023-08-21 21:36:12,827 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:36:12,827 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:36:30,536 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:36:30,536 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:36:45,018 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.5252525252525253 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.98989898989899 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.6767676767676768].
2023-08-21 21:36:45,019 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.5252525252525253 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.98989898989899 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.6767676767676768].
2023-08-21 21:36:52,895 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:36:52,895 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:37:13,897 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:37:13,898 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:37:14,997 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.98989898989899, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.21212121212121213 ,rho=0.37373737373737376 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.8989898989898991 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.5151515151515151 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.686868686868687].
2023-08-21 21:37:14,998 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.98989898989899, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.21212121212121213 ,rho=0.37373737373737376 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.8989898989898991 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.5151515151515151 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.686868686868687].
2023-08-21 21:37:36,298 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:37:36,298 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:37:39,295 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:37:39,295 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:37:59,913 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:37:59,913 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:38:10,103 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:38:10,104 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:38:21,707 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:38:21,707 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:38:40,427 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9696969696969697 ,rho=0.05050505050505051 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.42424242424242425 ,learning_rate_power=-0.2525252525252525 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5757575757575758 ,beta=0.6767676767676768].
2023-08-21 21:38:40,427 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9696969696969697 ,rho=0.05050505050505051 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.42424242424242425 ,learning_rate_power=-0.2525252525252525 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5757575757575758 ,beta=0.6767676767676768].
2023-08-21 21:39:04,208 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:39:04,208 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:39:32,559 INFO: Applying selection operators for generation 25.
2023-08-21 21:39:32,559 INFO: Applying genetic operators for generation 25.
2023-08-21 21:39:32,561 INFO: Evaluating fitness for for generation 25.
2023-08-21 21:39:32,561 INFO: Will evaluate fitness for 16 individuals.
2023-08-21 21:39:35,007 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.12121212121212122, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.13131313131313133 ,epsilon=0.0007979798181818182 ,centered=False ,beta_1=0.4545454545454546 ,beta_2=1.0 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.6767676767676768].
2023-08-21 21:39:35,007 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.12121212121212122, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.13131313131313133 ,epsilon=0.0007979798181818182 ,centered=False ,beta_1=0.4545454545454546 ,beta_2=1.0 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.6767676767676768].
2023-08-21 21:39:38,347 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:39:38,347 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:40:01,611 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:40:01,611 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:40:03,842 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.797979797979798, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=0.004041 ,use_ema=True ,ema_momentum=0.36363636363636365 ,rho=0.16161616161616163 ,epsilon=0.0005555556 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.20202020202020204 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.22222222222222224 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.6767676767676768].
2023-08-21 21:40:03,842 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.797979797979798, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=0.004041 ,use_ema=True ,ema_momentum=0.36363636363636365 ,rho=0.16161616161616163 ,epsilon=0.0005555556 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.20202020202020204 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.22222222222222224 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.6767676767676768].
2023-08-21 21:40:23,674 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:40:23,675 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:40:36,594 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:40:36,594 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:40:45,959 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.030303030303030304 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.06060606060606061 ,beta_2=0.38383838383838387 ,learning_rate_power=-0.010101010101010055 ,initial_accumulator_value=0.7373737373737375 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.6767676767676768].
2023-08-21 21:40:45,959 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.030303030303030304 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.06060606060606061 ,beta_2=0.38383838383838387 ,learning_rate_power=-0.010101010101010055 ,initial_accumulator_value=0.7373737373737375 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.6767676767676768].
2023-08-21 21:41:02,728 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:41:02,728 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:41:13,998 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:41:13,998 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:41:30,009 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:41:30,010 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:41:35,869 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:41:35,870 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:41:55,187 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.7373737373737375, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=8.080817272727271e-05 ,centered=False ,beta_1=0.9696969696969697 ,beta_2=0.787878787878788 ,learning_rate_power=-0.6464646464646464 ,initial_accumulator_value=0.6060606060606061 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.14141414141414144].
2023-08-21 21:41:55,188 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.7373737373737375, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=8.080817272727271e-05 ,centered=False ,beta_1=0.9696969696969697 ,beta_2=0.787878787878788 ,learning_rate_power=-0.6464646464646464 ,initial_accumulator_value=0.6060606060606061 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.14141414141414144].
2023-08-21 21:41:57,645 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:41:57,645 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:42:20,850 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.5757575757575758 ,rho=0.13131313131313133 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.04040404040404041 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.6767676767676768].
2023-08-21 21:42:20,851 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.5757575757575758 ,rho=0.13131313131313133 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.04040404040404041 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.6767676767676768].
2023-08-21 21:42:21,317 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:42:21,317 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:42:45,674 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.43434343434343436, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.8484848484848485 ,epsilon=3.030312727272727e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.37373737373737376 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9797979797979799 ,beta=0.12121212121212122].
2023-08-21 21:42:45,675 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.43434343434343436, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.8484848484848485 ,epsilon=3.030312727272727e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.37373737373737376 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9797979797979799 ,beta=0.12121212121212122].
2023-08-21 21:43:09,889 INFO: Applying selection operators for generation 26.
2023-08-21 21:43:09,890 INFO: Applying genetic operators for generation 26.
2023-08-21 21:43:09,892 INFO: Evaluating fitness for for generation 26.
2023-08-21 21:43:09,892 INFO: Will evaluate fitness for 15 individuals.
2023-08-21 21:43:11,786 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:43:11,787 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:43:13,907 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.3434343434343435 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.020202020202020204 ,rho=0.13131313131313133 ,epsilon=7.070716363636363e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.11111111111111112 ,beta=0.8080808080808082].
2023-08-21 21:43:13,907 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.3434343434343435 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.020202020202020204 ,rho=0.13131313131313133 ,epsilon=7.070716363636363e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.11111111111111112 ,beta=0.8080808080808082].
2023-08-21 21:43:33,534 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:43:33,534 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:43:49,308 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:43:49,308 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:43:57,625 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.888888888888889, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9595959595959597 ,rho=0.13131313131313133 ,epsilon=0.0009393939454545454 ,centered=False ,beta_1=0.30303030303030304 ,beta_2=0.787878787878788 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.5858585858585859].
2023-08-21 21:43:57,625 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.888888888888889, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9595959595959597 ,rho=0.13131313131313133 ,epsilon=0.0009393939454545454 ,centered=False ,beta_1=0.30303030303030304 ,beta_2=0.787878787878788 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.5858585858585859].
2023-08-21 21:44:11,949 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:44:11,949 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:44:27,737 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:44:27,738 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:44:37,055 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:44:37,055 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:44:50,839 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:44:50,840 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:45:03,874 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:45:03,874 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:45:14,750 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.020202020202020204, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.6767676767676768 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.27272727272727276 ,l1_regularization_strength=0.26262626262626265 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:45:14,751 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.020202020202020204, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.6767676767676768 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.27272727272727276 ,l1_regularization_strength=0.26262626262626265 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:45:28,151 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:45:28,151 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:45:38,173 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.6363636363636365, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0056570000000000014 ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=0.0008787878909090909 ,centered=False ,beta_1=0.8282828282828284 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.27272727272727276 ,l1_regularization_strength=0.696969696969697 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.7272727272727273].
2023-08-21 21:45:38,174 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.6363636363636365, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0056570000000000014 ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=0.0008787878909090909 ,centered=False ,beta_1=0.8282828282828284 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.27272727272727276 ,l1_regularization_strength=0.696969696969697 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.7272727272727273].
2023-08-21 21:45:54,863 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.888888888888889, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8585858585858587 ,rho=0.13131313131313133 ,epsilon=0.00024242431818181817 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.18181818181818182 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.7070707070707072].
2023-08-21 21:45:54,863 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.888888888888889, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8585858585858587 ,rho=0.13131313131313133 ,epsilon=0.00024242431818181817 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.18181818181818182 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.7070707070707072].
2023-08-21 21:46:05,072 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.7070707070707072 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=0.0003838384454545454 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.20202020202020204 ,learning_rate_power=-0.36363636363636354 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.6767676767676768].
2023-08-21 21:46:05,072 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.7070707070707072 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=0.0003838384454545454 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.20202020202020204 ,learning_rate_power=-0.36363636363636354 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.6767676767676768].
2023-08-21 21:46:30,747 INFO: Applying selection operators for generation 27.
2023-08-21 21:46:30,748 INFO: Applying genetic operators for generation 27.
2023-08-21 21:46:30,750 INFO: Evaluating fitness for for generation 27.
2023-08-21 21:46:30,750 INFO: Will evaluate fitness for 17 individuals.
2023-08-21 21:46:32,165 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5353535353535354, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6464646464646465 ,rho=0.4444444444444445 ,epsilon=0.0008787878909090909 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.9595959595959597 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.6767676767676768].
2023-08-21 21:46:32,165 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5353535353535354, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6464646464646465 ,rho=0.4444444444444445 ,epsilon=0.0008787878909090909 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.9595959595959597 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.6767676767676768].
2023-08-21 21:46:32,881 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.595959595959596, momentum=0.0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.24242424242424243 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.7474747474747475 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.6262626262626263].
2023-08-21 21:46:32,882 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.595959595959596, momentum=0.0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.24242424242424243 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.7474747474747475 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.6262626262626263].
2023-08-21 21:47:01,517 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:47:01,517 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:47:02,940 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.797979797979798 ,beta_2=0.787878787878788 ,learning_rate_power=-0.2222222222222222 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:47:02,940 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.797979797979798 ,beta_2=0.787878787878788 ,learning_rate_power=-0.2222222222222222 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:47:25,557 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8686868686868687, momentum=0.7474747474747475 ,nesterov=False ,amsgrad=True ,weight_decay=0.0027280000000000004 ,use_ema=False ,ema_momentum=0.22222222222222224 ,rho=0.4747474747474748 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.696969696969697 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.6767676767676768].
2023-08-21 21:47:25,558 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8686868686868687, momentum=0.7474747474747475 ,nesterov=False ,amsgrad=True ,weight_decay=0.0027280000000000004 ,use_ema=False ,ema_momentum=0.22222222222222224 ,rho=0.4747474747474748 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.696969696969697 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.6767676767676768].
2023-08-21 21:47:30,389 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7474747474747475 ,rho=0.4141414141414142 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.7474747474747475].
2023-08-21 21:47:30,390 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7474747474747475 ,rho=0.4141414141414142 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.7474747474747475].
2023-08-21 21:47:47,455 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.3535353535353536, momentum=0.25252525252525254 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.04040404040404041 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.14141414141414144 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.6464646464646464 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.6767676767676768].
2023-08-21 21:47:47,455 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.3535353535353536, momentum=0.25252525252525254 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.04040404040404041 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.14141414141414144 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.6464646464646464 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.6767676767676768].
2023-08-21 21:47:51,348 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5050505050505051 ,rho=0.13131313131313133 ,epsilon=0.0002020202818181818 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.6767676767676768].
2023-08-21 21:47:51,348 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5050505050505051 ,rho=0.13131313131313133 ,epsilon=0.0002020202818181818 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.6767676767676768].
2023-08-21 21:48:10,663 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7474747474747475 ,rho=0.4141414141414142 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.797979797979798 ,beta_2=0.787878787878788 ,learning_rate_power=-0.2222222222222222 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.7474747474747475].
2023-08-21 21:48:10,663 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7474747474747475 ,rho=0.4141414141414142 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.797979797979798 ,beta_2=0.787878787878788 ,learning_rate_power=-0.2222222222222222 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.7474747474747475].
2023-08-21 21:48:11,958 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9696969696969697 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.7272727272727273 ,beta_2=0.9494949494949496 ,learning_rate_power=-0.7373737373737373 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.05050505050505051].
2023-08-21 21:48:11,959 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9696969696969697 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.7272727272727273 ,beta_2=0.9494949494949496 ,learning_rate_power=-0.7373737373737373 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.05050505050505051].
2023-08-21 21:48:31,018 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.008384 ,use_ema=True ,ema_momentum=0.6767676767676768 ,rho=0.4141414141414142 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.5050505050505051 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.8585858585858587].
2023-08-21 21:48:31,018 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.008384 ,use_ema=True ,ema_momentum=0.6767676767676768 ,rho=0.4141414141414142 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.5050505050505051 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.8585858585858587].
2023-08-21 21:48:32,392 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.393939393939394, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=4.040413636363636e-05 ,centered=True ,beta_1=0.5858585858585859 ,beta_2=0.010101010101010102 ,learning_rate_power=-0.5151515151515151 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:48:32,392 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.393939393939394, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=4.040413636363636e-05 ,centered=True ,beta_1=0.5858585858585859 ,beta_2=0.010101010101010102 ,learning_rate_power=-0.5151515151515151 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:48:51,689 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7474747474747475 ,rho=0.4141414141414142 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.797979797979798 ,beta_2=0.787878787878788 ,learning_rate_power=-0.2222222222222222 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.7474747474747475].
2023-08-21 21:48:51,690 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7474747474747475 ,rho=0.4141414141414142 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.797979797979798 ,beta_2=0.787878787878788 ,learning_rate_power=-0.2222222222222222 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.7474747474747475].
2023-08-21 21:48:55,617 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:48:55,617 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:49:16,602 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.22222222222222224, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.4141414141414142 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.797979797979798 ,beta_2=0.787878787878788 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.16161616161616163 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.7474747474747475].
2023-08-21 21:49:16,603 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.22222222222222224, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.4141414141414142 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.797979797979798 ,beta_2=0.787878787878788 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.16161616161616163 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.7474747474747475].
2023-08-21 21:49:18,629 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.888888888888889, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8585858585858587 ,rho=0.13131313131313133 ,epsilon=0.00024242431818181817 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.18181818181818182 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.7070707070707072].
2023-08-21 21:49:18,629 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.888888888888889, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8585858585858587 ,rho=0.13131313131313133 ,epsilon=0.00024242431818181817 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.18181818181818182 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.7070707070707072].
2023-08-21 21:49:45,659 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0004050000000000001 ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.9797979797979799 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.30303030303030304 ,beta=0.6767676767676768].
2023-08-21 21:49:45,659 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0004050000000000001 ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.9797979797979799 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.30303030303030304 ,beta=0.6767676767676768].
2023-08-21 21:50:10,859 INFO: Applying selection operators for generation 28.
2023-08-21 21:50:10,860 INFO: Applying genetic operators for generation 28.
2023-08-21 21:50:10,861 INFO: Evaluating fitness for for generation 28.
2023-08-21 21:50:10,861 INFO: Will evaluate fitness for 12 individuals.
2023-08-21 21:50:11,502 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:50:11,502 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:50:18,550 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.595959595959596 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.5757575757575758 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.3535353535353536 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.4646464646464647].
2023-08-21 21:50:18,551 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.595959595959596 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.5757575757575758 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.3535353535353536 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.4646464646464647].
2023-08-21 21:50:32,510 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:50:32,510 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:50:51,414 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7272727272727273 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7474747474747475 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.6767676767676768].
2023-08-21 21:50:51,415 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7272727272727273 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7474747474747475 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.6767676767676768].
2023-08-21 21:50:53,065 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:50:53,065 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:51:14,323 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:51:14,323 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:51:21,560 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:51:21,561 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:51:34,810 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:51:34,811 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:51:48,741 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:51:48,742 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:51:54,961 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.19191919191919193 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.6767676767676768].
2023-08-21 21:51:54,961 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.19191919191919193 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.6767676767676768].
2023-08-21 21:52:12,007 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:52:12,008 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:52:43,616 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:52:43,616 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:53:17,607 INFO: Applying selection operators for generation 29.
2023-08-21 21:53:17,608 INFO: Applying genetic operators for generation 29.
2023-08-21 21:53:17,610 INFO: Evaluating fitness for for generation 29.
2023-08-21 21:53:17,610 INFO: Will evaluate fitness for 17 individuals.
2023-08-21 21:53:18,988 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.8080808080808082 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.7777777777777778 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.4646464646464647].
2023-08-21 21:53:18,988 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.8080808080808082 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.7777777777777778 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.4646464646464647].
2023-08-21 21:53:21,417 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:53:21,418 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:53:45,282 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=0.00018181826363636362 ,centered=False ,beta_1=1.0 ,beta_2=0.787878787878788 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.6363636363636365].
2023-08-21 21:53:45,282 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=0.00018181826363636362 ,centered=False ,beta_1=1.0 ,beta_2=0.787878787878788 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.6363636363636365].
2023-08-21 21:53:47,546 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:53:47,547 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:54:18,306 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:54:18,307 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:54:18,412 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.7272727272727273, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.393939393939394].
2023-08-21 21:54:18,412 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.7272727272727273, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.393939393939394].
2023-08-21 21:54:48,315 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:54:48,315 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:54:48,925 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.4646464646464647 ,rho=0.686868686868687 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.9797979797979799 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.6767676767676768].
2023-08-21 21:54:48,926 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.4646464646464647 ,rho=0.686868686868687 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.9797979797979799 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.6767676767676768].
2023-08-21 21:55:33,652 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:55:33,652 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:55:35,564 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:55:35,565 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:55:56,302 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:55:56,303 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:55:58,104 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:55:58,104 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:56:16,144 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5353535353535354, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.010101010101010102 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.43434343434343436].
2023-08-21 21:56:16,144 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5353535353535354, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.010101010101010102 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.43434343434343436].
2023-08-21 21:56:23,607 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.23232323232323235, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=0.009192 ,use_ema=True ,ema_momentum=0.14141414141414144 ,rho=0.13131313131313133 ,epsilon=0.0002929293636363636 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.030303030303030304 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.9696969696969697 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-21 21:56:23,607 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.23232323232323235, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=0.009192 ,use_ema=True ,ema_momentum=0.14141414141414144 ,rho=0.13131313131313133 ,epsilon=0.0002929293636363636 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.030303030303030304 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.9696969696969697 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-21 21:56:39,996 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:56:39,996 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:57:04,744 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.4040404040404041, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.17171717171717174 ,rho=0.37373737373737376 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.06060606060606061 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6262626262626263 ,beta=0.08080808080808081].
2023-08-21 21:57:04,745 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.4040404040404041, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.17171717171717174 ,rho=0.37373737373737376 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.06060606060606061 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6262626262626263 ,beta=0.08080808080808081].
2023-08-21 21:57:10,417 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:57:10,417 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:57:29,950 INFO: Applying selection operators for generation 30.
2023-08-21 21:57:29,950 INFO: Applying genetic operators for generation 30.
2023-08-21 21:57:29,952 INFO: Evaluating fitness for for generation 30.
2023-08-21 21:57:29,952 INFO: Will evaluate fitness for 15 individuals.
2023-08-21 21:57:30,583 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.6363636363636365, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.25252525252525254 ,epsilon=0.0005555556 ,centered=False ,beta_1=0.8989898989898991 ,beta_2=0.6060606060606061 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:57:30,584 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.6363636363636365, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.25252525252525254 ,epsilon=0.0005555556 ,centered=False ,beta_1=0.8989898989898991 ,beta_2=0.6060606060606061 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:57:30,923 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:57:30,924 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:57:52,836 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.06060606060606061 ,rho=0.8484848484848485 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.24242424242424243 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.8484848484848485 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:57:52,836 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.06060606060606061 ,rho=0.8484848484848485 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.24242424242424243 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.8484848484848485 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:57:54,377 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.8686868686868687 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.98989898989899 ,learning_rate_power=-0.7474747474747474 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.6767676767676768].
2023-08-21 21:57:54,377 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.8686868686868687 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.98989898989899 ,learning_rate_power=-0.7474747474747474 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.6767676767676768].
2023-08-21 21:58:16,889 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:58:16,890 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:58:17,449 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.14141414141414144 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.010101010101010102 ,beta=0.10101010101010102].
2023-08-21 21:58:17,449 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.14141414141414144 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.010101010101010102 ,beta=0.10101010101010102].
2023-08-21 21:58:36,808 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.7373737373737375 ,nesterov=False ,amsgrad=False ,weight_decay=0.0047480000000000005 ,use_ema=False ,ema_momentum=0.7474747474747475 ,rho=0.13131313131313133 ,epsilon=0.0007171717454545454 ,centered=True ,beta_1=0.20202020202020204 ,beta_2=0.4646464646464647 ,learning_rate_power=-0.6363636363636364 ,initial_accumulator_value=0.8181818181818182 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.6767676767676768].
2023-08-21 21:58:36,808 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.7373737373737375 ,nesterov=False ,amsgrad=False ,weight_decay=0.0047480000000000005 ,use_ema=False ,ema_momentum=0.7474747474747475 ,rho=0.13131313131313133 ,epsilon=0.0007171717454545454 ,centered=True ,beta_1=0.20202020202020204 ,beta_2=0.4646464646464647 ,learning_rate_power=-0.6363636363636364 ,initial_accumulator_value=0.8181818181818182 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.6767676767676768].
2023-08-21 21:58:43,737 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.13131313131313133 ,epsilon=0.0003737374363636363 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.9292929292929294 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.0].
2023-08-21 21:58:43,738 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.13131313131313133 ,epsilon=0.0003737374363636363 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.9292929292929294 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.0].
2023-08-21 21:59:01,515 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=True ,weight_decay=0.0067680000000000014 ,use_ema=False ,ema_momentum=0.5353535353535354 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.4545454545454546 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7373737373737375 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.6767676767676768].
2023-08-21 21:59:01,515 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=True ,weight_decay=0.0067680000000000014 ,use_ema=False ,ema_momentum=0.5353535353535354 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.4545454545454546 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7373737373737375 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.6767676767676768].
2023-08-21 21:59:11,370 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:59:11,371 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:59:22,939 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:59:22,939 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:59:33,521 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:59:33,521 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:59:43,914 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:59:43,914 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:59:56,577 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 21:59:56,577 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:00:05,076 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:00:05,077 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:00:24,784 INFO: Applying selection operators for generation 31.
2023-08-21 22:00:24,785 INFO: Applying genetic operators for generation 31.
2023-08-21 22:00:24,786 INFO: Evaluating fitness for for generation 31.
2023-08-21 22:00:24,786 INFO: Will evaluate fitness for 10 individuals.
2023-08-21 22:00:28,099 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.8787878787878789, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8686868686868687 ,rho=0.8686868686868687 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.22222222222222224 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.6767676767676768].
2023-08-21 22:00:28,099 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.8787878787878789, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8686868686868687 ,rho=0.8686868686868687 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.22222222222222224 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.6767676767676768].
2023-08-21 22:00:28,153 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.6161616161616162 ,beta_2=0.787878787878788 ,learning_rate_power=-0.5353535353535352 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.09090909090909091].
2023-08-21 22:00:28,154 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.6161616161616162 ,beta_2=0.787878787878788 ,learning_rate_power=-0.5353535353535352 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.09090909090909091].
2023-08-21 22:00:50,748 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.17171717171717174, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=0.0047480000000000005 ,use_ema=True ,ema_momentum=0.0 ,rho=0.23232323232323235 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.38383838383838387 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:00:50,749 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.17171717171717174, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=0.0047480000000000005 ,use_ema=True ,ema_momentum=0.0 ,rho=0.23232323232323235 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.38383838383838387 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:00:58,190 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:00:58,190 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:01:16,734 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:01:16,735 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:01:25,532 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:01:25,532 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:01:37,451 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:01:37,451 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:01:56,827 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.4444444444444445, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=0.0067680000000000014 ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.8383838383838385 ,beta_2=0.7272727272727273 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:01:56,827 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.4444444444444445, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=0.0067680000000000014 ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.8383838383838385 ,beta_2=0.7272727272727273 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:01:59,878 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5858585858585859, momentum=0.9696969696969697 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.24242424242424243 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.29292929292929293 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.6767676767676768].
2023-08-21 22:01:59,879 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5858585858585859, momentum=0.9696969696969697 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.24242424242424243 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.29292929292929293 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.6767676767676768].
2023-08-21 22:02:26,337 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.48484848484848486 ,rho=0.010101010101010102 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.6767676767676768].
2023-08-21 22:02:26,337 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.48484848484848486 ,rho=0.010101010101010102 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.6767676767676768].
2023-08-21 22:02:46,633 INFO: Applying selection operators for generation 32.
2023-08-21 22:02:46,633 INFO: Applying genetic operators for generation 32.
2023-08-21 22:02:46,635 INFO: Evaluating fitness for for generation 32.
2023-08-21 22:02:46,635 INFO: Will evaluate fitness for 16 individuals.
2023-08-21 22:02:49,479 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:02:49,479 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:02:51,666 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.4040404040404041 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.4545454545454546].
2023-08-21 22:02:51,666 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.4040404040404041 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.4545454545454546].
2023-08-21 22:03:09,963 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5757575757575758, momentum=0.8282828282828284 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.494949494949495 ,beta_2=0.48484848484848486 ,learning_rate_power=-0.1717171717171716 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.21212121212121213].
2023-08-21 22:03:09,963 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5757575757575758, momentum=0.8282828282828284 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.494949494949495 ,beta_2=0.48484848484848486 ,learning_rate_power=-0.1717171717171716 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.21212121212121213].
2023-08-21 22:03:22,275 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.595959595959596, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.5252525252525252 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.7272727272727273].
2023-08-21 22:03:22,275 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.595959595959596, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.5252525252525252 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.7272727272727273].
2023-08-21 22:03:34,798 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.15151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.5353535353535354 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.27272727272727276 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.12121212121212122].
2023-08-21 22:03:34,798 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.15151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.5353535353535354 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.27272727272727276 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.12121212121212122].
2023-08-21 22:03:58,765 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:03:58,765 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:04:08,823 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:04:08,823 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:04:26,421 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.07070707070707072 ,rho=0.07070707070707072 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.797979797979798 ,beta_2=0.33333333333333337 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.9393939393939394 ,l1_regularization_strength=0.21212121212121213 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.4141414141414142].
2023-08-21 22:04:26,421 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.07070707070707072 ,rho=0.07070707070707072 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.797979797979798 ,beta_2=0.33333333333333337 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.9393939393939394 ,l1_regularization_strength=0.21212121212121213 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.4141414141414142].
2023-08-21 22:04:30,506 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.787878787878788, momentum=0.27272727272727276 ,nesterov=True ,amsgrad=False ,weight_decay=0.0034350000000000006 ,use_ema=False ,ema_momentum=0.8585858585858587 ,rho=0.31313131313131315 ,epsilon=0.00035353541818181815 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8585858585858587 ,beta=0.6767676767676768].
2023-08-21 22:04:30,507 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.787878787878788, momentum=0.27272727272727276 ,nesterov=True ,amsgrad=False ,weight_decay=0.0034350000000000006 ,use_ema=False ,ema_momentum=0.8585858585858587 ,rho=0.31313131313131315 ,epsilon=0.00035353541818181815 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8585858585858587 ,beta=0.6767676767676768].
2023-08-21 22:04:54,589 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:04:54,590 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:04:56,545 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:04:56,545 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:05:16,686 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:05:16,686 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:05:26,937 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:05:26,937 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:05:41,519 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:05:41,520 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:05:54,505 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:05:54,505 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:06:26,622 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.43434343434343436 ,rho=0.4747474747474748 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.4646464646464647 ,beta_2=0.787878787878788 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.06060606060606061 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.6767676767676768].
2023-08-21 22:06:26,622 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.43434343434343436 ,rho=0.4747474747474748 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.4646464646464647 ,beta_2=0.787878787878788 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.06060606060606061 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.6767676767676768].
2023-08-21 22:06:53,122 INFO: Applying selection operators for generation 33.
2023-08-21 22:06:53,122 INFO: Applying genetic operators for generation 33.
2023-08-21 22:06:53,124 INFO: Evaluating fitness for for generation 33.
2023-08-21 22:06:53,124 INFO: Will evaluate fitness for 15 individuals.
2023-08-21 22:06:55,355 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:06:55,356 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:06:55,443 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:06:55,444 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:07:16,690 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:07:16,691 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:07:27,629 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.8484848484848485 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.98989898989899 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.4444444444444445 ,l1_regularization_strength=0.27272727272727276 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.8484848484848485].
2023-08-21 22:07:27,629 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.8484848484848485 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.98989898989899 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.4444444444444445 ,l1_regularization_strength=0.27272727272727276 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.8484848484848485].
2023-08-21 22:07:38,413 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.4545454545454546, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=0.0004050000000000001 ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.06060606060606061 ,epsilon=7.070716363636363e-05 ,centered=False ,beta_1=0.5555555555555556 ,beta_2=0.787878787878788 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.04040404040404041].
2023-08-21 22:07:38,413 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.4545454545454546, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=0.0004050000000000001 ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.06060606060606061 ,epsilon=7.070716363636363e-05 ,centered=False ,beta_1=0.5555555555555556 ,beta_2=0.787878787878788 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.04040404040404041].
2023-08-21 22:07:50,178 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:07:50,178 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:08:18,037 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:08:18,037 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:08:18,209 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:08:18,209 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:08:43,567 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:08:43,567 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:09:00,497 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:09:00,497 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:09:04,785 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.888888888888889 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.9090909090909092 ,epsilon=1e-10 ,centered=False ,beta_1=0.9797979797979799 ,beta_2=0.787878787878788 ,learning_rate_power=-0.010101010101010055 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.6767676767676768].
2023-08-21 22:09:04,785 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.888888888888889 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.9090909090909092 ,epsilon=1e-10 ,centered=False ,beta_1=0.9797979797979799 ,beta_2=0.787878787878788 ,learning_rate_power=-0.010101010101010055 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.6767676767676768].
2023-08-21 22:09:23,989 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:09:23,989 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:09:33,352 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:09:33,353 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:09:48,134 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:09:48,134 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:09:54,643 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.393939393939394, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.5151515151515151 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.5252525252525253 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.6767676767676768].
2023-08-21 22:09:54,644 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.393939393939394, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.5151515151515151 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.5252525252525253 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.6767676767676768].
2023-08-21 22:10:15,433 INFO: Applying selection operators for generation 34.
2023-08-21 22:10:15,434 INFO: Applying genetic operators for generation 34.
2023-08-21 22:10:15,436 INFO: Evaluating fitness for for generation 34.
2023-08-21 22:10:15,436 INFO: Will evaluate fitness for 18 individuals.
2023-08-21 22:10:19,993 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:10:19,994 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:10:20,023 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:10:20,023 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:10:42,344 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.8383838383838385, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8181818181818182 ,rho=0.6060606060606061 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.13131313131313133 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.6767676767676768].
2023-08-21 22:10:42,344 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.8383838383838385, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8181818181818182 ,rho=0.6060606060606061 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.13131313131313133 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.6767676767676768].
2023-08-21 22:10:47,016 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:10:47,017 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:11:06,664 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:11:06,664 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:11:10,138 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=0.0006464646818181818 ,centered=True ,beta_1=0.42424242424242425 ,beta_2=0.09090909090909091 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.8686868686868687 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.4747474747474748].
2023-08-21 22:11:10,139 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=0.0006464646818181818 ,centered=True ,beta_1=0.42424242424242425 ,beta_2=0.09090909090909091 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.8686868686868687 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.4747474747474748].
2023-08-21 22:11:28,292 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:11:28,292 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:11:45,423 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:11:45,423 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:11:50,280 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:11:50,280 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:12:13,116 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:12:13,117 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:12:13,640 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:12:13,640 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:12:37,826 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:12:37,827 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:12:39,687 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.07070707070707072 ,epsilon=0.0009595959636363636 ,centered=False ,beta_1=0.2828282828282829 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.38383838383838387 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.18181818181818182].
2023-08-21 22:12:39,687 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.07070707070707072 ,epsilon=0.0009595959636363636 ,centered=False ,beta_1=0.2828282828282829 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.38383838383838387 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.18181818181818182].
2023-08-21 22:12:57,966 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:12:57,967 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:13:04,497 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.42424242424242425 ,rho=0.4646464646464647 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.7474747474747475 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.43434343434343436].
2023-08-21 22:13:04,497 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.42424242424242425 ,rho=0.4646464646464647 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.7474747474747475 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.43434343434343436].
2023-08-21 22:13:18,673 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:13:18,674 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:13:38,412 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0025260000000000005 ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.38383838383838387 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.8585858585858587 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.0].
2023-08-21 22:13:38,413 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0025260000000000005 ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.38383838383838387 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.8585858585858587 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.0].
2023-08-21 22:14:13,653 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.25252525252525254 ,rho=0.13131313131313133 ,epsilon=0.0005252525727272728 ,centered=False ,beta_1=0.6363636363636365 ,beta_2=0.787878787878788 ,learning_rate_power=-0.7474747474747474 ,initial_accumulator_value=0.8080808080808082 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.27272727272727276].
2023-08-21 22:14:13,654 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.25252525252525254 ,rho=0.13131313131313133 ,epsilon=0.0005252525727272728 ,centered=False ,beta_1=0.6363636363636365 ,beta_2=0.787878787878788 ,learning_rate_power=-0.7474747474747474 ,initial_accumulator_value=0.8080808080808082 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.27272727272727276].
2023-08-21 22:14:39,890 INFO: Applying selection operators for generation 35.
2023-08-21 22:14:39,890 INFO: Applying genetic operators for generation 35.
2023-08-21 22:14:39,892 INFO: Evaluating fitness for for generation 35.
2023-08-21 22:14:39,892 INFO: Will evaluate fitness for 14 individuals.
2023-08-21 22:14:40,773 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:14:40,773 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:14:41,694 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.7272727272727273, momentum=0.686868686868687 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.19191919191919193 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.5252525252525253 ,learning_rate_power=-0.050505050505050386 ,initial_accumulator_value=0.6565656565656566 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:14:41,694 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.7272727272727273, momentum=0.686868686868687 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.19191919191919193 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.5252525252525253 ,learning_rate_power=-0.050505050505050386 ,initial_accumulator_value=0.6565656565656566 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:15:02,664 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7676767676767677, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.5252525252525253 ,rho=0.13131313131313133 ,epsilon=0.0009898989909090908 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.7777777777777778 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.6767676767676768].
2023-08-21 22:15:02,665 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7676767676767677, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.5252525252525253 ,rho=0.13131313131313133 ,epsilon=0.0009898989909090908 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.7777777777777778 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.6767676767676768].
2023-08-21 22:15:12,036 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:15:12,036 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:15:29,989 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4747474747474748, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=0.007980000000000001 ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.48484848484848486 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.08080808080808081 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.6767676767676768].
2023-08-21 22:15:29,990 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4747474747474748, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=0.007980000000000001 ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.48484848484848486 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.08080808080808081 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.6767676767676768].
2023-08-21 22:15:41,829 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:15:41,829 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:15:53,881 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:15:53,881 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:16:13,890 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:16:13,891 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:16:18,338 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:16:18,338 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:16:47,787 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:16:47,788 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:16:53,062 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:16:53,062 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:17:08,141 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:17:08,141 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:17:20,272 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.0, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0007080000000000002 ,use_ema=False ,ema_momentum=0.25252525252525254 ,rho=0.2828282828282829 ,epsilon=3.030312727272727e-05 ,centered=False ,beta_1=0.393939393939394 ,beta_2=0.888888888888889 ,learning_rate_power=-0.5151515151515151 ,initial_accumulator_value=0.98989898989899 ,l1_regularization_strength=0.26262626262626265 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.27272727272727276].
2023-08-21 22:17:20,273 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.0, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0007080000000000002 ,use_ema=False ,ema_momentum=0.25252525252525254 ,rho=0.2828282828282829 ,epsilon=3.030312727272727e-05 ,centered=False ,beta_1=0.393939393939394 ,beta_2=0.888888888888889 ,learning_rate_power=-0.5151515151515151 ,initial_accumulator_value=0.98989898989899 ,l1_regularization_strength=0.26262626262626265 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.27272727272727276].
2023-08-21 22:17:28,521 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:17:28,522 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:17:48,754 INFO: Applying selection operators for generation 36.
2023-08-21 22:17:48,754 INFO: Applying genetic operators for generation 36.
2023-08-21 22:17:48,756 INFO: Evaluating fitness for for generation 36.
2023-08-21 22:17:48,756 INFO: Will evaluate fitness for 14 individuals.
2023-08-21 22:17:50,018 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:17:50,018 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:17:50,266 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.787878787878788, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=0.004142000000000001 ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.6464646464646465 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.4040404040404041 ,learning_rate_power=-0.23232323232323226 ,initial_accumulator_value=0.9494949494949496 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.7575757575757577].
2023-08-21 22:17:50,266 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.787878787878788, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=0.004142000000000001 ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.6464646464646465 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.4040404040404041 ,learning_rate_power=-0.23232323232323226 ,initial_accumulator_value=0.9494949494949496 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.7575757575757577].
2023-08-21 22:18:12,519 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:18:12,520 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:18:18,694 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.6767676767676768, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.5252525252525253 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.27272727272727276 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.6767676767676768].
2023-08-21 22:18:18,694 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.6767676767676768, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.5252525252525253 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.27272727272727276 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.6767676767676768].
2023-08-21 22:18:32,499 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:18:32,500 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:18:52,924 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:18:52,925 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:19:00,775 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.5454545454545455, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.696969696969697 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.888888888888889 ,beta_2=0.787878787878788 ,learning_rate_power=-0.31313131313131304 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.05050505050505051].
2023-08-21 22:19:00,776 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.5454545454545455, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.696969696969697 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.888888888888889 ,beta_2=0.787878787878788 ,learning_rate_power=-0.31313131313131304 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.05050505050505051].
2023-08-21 22:19:15,556 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6666666666666667, momentum=0.11111111111111112 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.020202020202020204 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.12121212121212122 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.3535353535353536].
2023-08-21 22:19:15,556 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6666666666666667, momentum=0.11111111111111112 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.020202020202020204 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.12121212121212122 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.3535353535353536].
2023-08-21 22:19:28,625 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.24242424242424243, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.6464646464646465 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.8585858585858586 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.393939393939394].
2023-08-21 22:19:28,625 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.24242424242424243, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.6464646464646465 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.8585858585858586 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.393939393939394].
2023-08-21 22:19:43,625 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:19:43,626 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:19:51,984 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.06060606060606061, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.4545454545454545 ,initial_accumulator_value=0.030303030303030304 ,l1_regularization_strength=0.9595959595959597 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8585858585858587 ,beta=0.6767676767676768].
2023-08-21 22:19:51,984 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.06060606060606061, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.4545454545454545 ,initial_accumulator_value=0.030303030303030304 ,l1_regularization_strength=0.9595959595959597 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8585858585858587 ,beta=0.6767676767676768].
2023-08-21 22:20:05,415 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7070707070707072, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.6767676767676768 ,beta_2=0.787878787878788 ,learning_rate_power=-0.02020202020202011 ,initial_accumulator_value=0.8686868686868687 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:20:05,416 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7070707070707072, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.6767676767676768 ,beta_2=0.787878787878788 ,learning_rate_power=-0.02020202020202011 ,initial_accumulator_value=0.8686868686868687 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:20:19,365 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.7272727272727273, momentum=0.4141414141414142 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.6262626262626263 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.9494949494949496 ,beta_2=0.38383838383838387 ,learning_rate_power=-0.8181818181818181 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.2828282828282829].
2023-08-21 22:20:19,365 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.7272727272727273, momentum=0.4141414141414142 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.6262626262626263 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.9494949494949496 ,beta_2=0.38383838383838387 ,learning_rate_power=-0.8181818181818181 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.2828282828282829].
2023-08-21 22:20:27,045 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:20:27,045 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:20:50,101 INFO: Applying selection operators for generation 37.
2023-08-21 22:20:50,101 INFO: Applying genetic operators for generation 37.
2023-08-21 22:20:50,103 INFO: Evaluating fitness for for generation 37.
2023-08-21 22:20:50,103 INFO: Will evaluate fitness for 18 individuals.
2023-08-21 22:20:51,736 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:20:51,737 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:20:51,789 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7777777777777778, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.5151515151515152 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.9292929292929294 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6767676767676768].
2023-08-21 22:20:51,789 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7777777777777778, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.5151515151515152 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.9292929292929294 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6767676767676768].
2023-08-21 22:21:12,747 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3434343434343435 ,rho=0.13131313131313133 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.09090909090909091 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.17171717171717174].
2023-08-21 22:21:12,747 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3434343434343435 ,rho=0.13131313131313133 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.09090909090909091 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.17171717171717174].
2023-08-21 22:21:14,659 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9494949494949496, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=0.007374000000000001 ,use_ema=False ,ema_momentum=0.4141414141414142 ,rho=0.25252525252525254 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.9494949494949496 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.48484848484848486].
2023-08-21 22:21:14,660 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9494949494949496, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=0.007374000000000001 ,use_ema=False ,ema_momentum=0.4141414141414142 ,rho=0.25252525252525254 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.9494949494949496 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.48484848484848486].
2023-08-21 22:21:37,264 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:21:37,265 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:21:43,001 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:21:43,001 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:22:06,076 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:22:06,076 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:22:09,098 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:22:09,099 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:22:30,895 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:22:30,896 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:22:32,493 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:22:32,493 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:22:52,501 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.4141414141414142 ,beta_2=0.8282828282828284 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.05050505050505051].
2023-08-21 22:22:52,501 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.4141414141414142 ,beta_2=0.8282828282828284 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.05050505050505051].
2023-08-21 22:22:53,221 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:22:53,221 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:23:12,736 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:23:12,736 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:23:13,353 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:23:13,354 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:23:34,356 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:23:34,357 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:23:36,676 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.888888888888889, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.7373737373737375 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.494949494949495 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.3434343434343435].
2023-08-21 22:23:36,676 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.888888888888889, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.7373737373737375 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.494949494949495 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.3434343434343435].
2023-08-21 22:23:55,751 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.007071000000000001 ,use_ema=True ,ema_momentum=0.595959595959596 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.787878787878788 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.5757575757575758 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.7272727272727273].
2023-08-21 22:23:55,751 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.007071000000000001 ,use_ema=True ,ema_momentum=0.595959595959596 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.787878787878788 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.5757575757575758 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.7272727272727273].
2023-08-21 22:24:18,389 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:24:18,389 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:24:39,273 INFO: Applying selection operators for generation 38.
2023-08-21 22:24:39,273 INFO: Applying genetic operators for generation 38.
2023-08-21 22:24:39,275 INFO: Evaluating fitness for for generation 38.
2023-08-21 22:24:39,275 INFO: Will evaluate fitness for 12 individuals.
2023-08-21 22:24:40,790 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.12121212121212122, momentum=0.37373737373737376 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.4646464646464647 ,rho=0.5454545454545455 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.8080808080808081 ,initial_accumulator_value=0.9090909090909092 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.9797979797979799].
2023-08-21 22:24:40,790 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.12121212121212122, momentum=0.37373737373737376 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.4646464646464647 ,rho=0.5454545454545455 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.8080808080808081 ,initial_accumulator_value=0.9090909090909092 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.9797979797979799].
2023-08-21 22:24:40,877 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.6060606060606061 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.19191919191919193 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.8787878787878788 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.6767676767676768].
2023-08-21 22:24:40,877 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.6060606060606061 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.19191919191919193 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.8787878787878788 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.6767676767676768].
2023-08-21 22:25:00,671 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=0.009798000000000001 ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.8484848484848485 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.14141414141414144 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.595959595959596 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.08080808080808081].
2023-08-21 22:25:00,672 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=0.009798000000000001 ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.8484848484848485 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.14141414141414144 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.595959595959596 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.08080808080808081].
2023-08-21 22:25:13,155 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8989898989898991, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8585858585858587 ,rho=0.4444444444444445 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.30303030303030304].
2023-08-21 22:25:13,155 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8989898989898991, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8585858585858587 ,rho=0.4444444444444445 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.30303030303030304].
2023-08-21 22:25:32,318 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.07070707070707072, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.007071000000000001 ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.32323232323232326 ,epsilon=3.030312727272727e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.4040404040404041 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.6666666666666667 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.8686868686868687].
2023-08-21 22:25:32,319 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.07070707070707072, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.007071000000000001 ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.32323232323232326 ,epsilon=3.030312727272727e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.4040404040404041 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.6666666666666667 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.8686868686868687].
2023-08-21 22:25:44,051 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.8282828282828284 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.05050505050505051].
2023-08-21 22:25:44,052 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.8282828282828284 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.05050505050505051].
2023-08-21 22:26:06,213 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.494949494949495, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.7272727272727273 ,rho=0.4646464646464647 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.787878787878788 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.98989898989899 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6262626262626263 ,beta=0.6767676767676768].
2023-08-21 22:26:06,213 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.494949494949495, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.7272727272727273 ,rho=0.4646464646464647 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.787878787878788 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.98989898989899 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6262626262626263 ,beta=0.6767676767676768].
2023-08-21 22:26:09,695 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:26:09,696 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:26:33,692 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:26:33,693 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:26:36,743 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:26:36,743 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:26:56,634 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:26:56,634 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:26:57,720 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.25252525252525254 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.4646464646464647 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.5353535353535354 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7575757575757577 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.6767676767676768].
2023-08-21 22:26:57,721 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.25252525252525254 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.4646464646464647 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.5353535353535354 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7575757575757577 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.6767676767676768].
2023-08-21 22:27:20,565 INFO: Applying selection operators for generation 39.
2023-08-21 22:27:20,566 INFO: Applying genetic operators for generation 39.
2023-08-21 22:27:20,568 INFO: Evaluating fitness for for generation 39.
2023-08-21 22:27:20,568 INFO: Will evaluate fitness for 12 individuals.
2023-08-21 22:27:21,433 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.09090909090909091, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.9292929292929294 ,learning_rate_power=-0.09090909090909083 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.5050505050505051 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:27:21,433 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.09090909090909091, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.9292929292929294 ,learning_rate_power=-0.09090909090909083 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.5050505050505051 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:27:21,448 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:27:21,449 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:27:41,278 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:27:41,278 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:27:42,620 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:27:42,621 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:28:05,024 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.24242424242424243, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=0.0004747475272727272 ,centered=False ,beta_1=0.5555555555555556 ,beta_2=0.14141414141414144 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.9494949494949496].
2023-08-21 22:28:05,024 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.24242424242424243, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=0.0004747475272727272 ,centered=False ,beta_1=0.5555555555555556 ,beta_2=0.14141414141414144 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.9494949494949496].
2023-08-21 22:28:06,604 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6565656565656566 ,rho=0.13131313131313133 ,epsilon=0.0009494949545454545 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:28:06,604 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6565656565656566 ,rho=0.13131313131313133 ,epsilon=0.0009494949545454545 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:28:33,941 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.07070707070707072 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:28:33,941 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.07070707070707072 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:28:34,332 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.25252525252525254, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.38383838383838387 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.33333333333333326 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.4040404040404041 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.010101010101010102].
2023-08-21 22:28:34,332 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.25252525252525254, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.38383838383838387 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.33333333333333326 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.4040404040404041 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.010101010101010102].
2023-08-21 22:28:59,691 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:28:59,691 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:29:04,404 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:29:04,405 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:29:21,068 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:29:21,068 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:29:25,711 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9696969696969697, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.27272727272727276 ,rho=0.13131313131313133 ,epsilon=0.0005959596363636363 ,centered=False ,beta_1=0.3434343434343435 ,beta_2=0.787878787878788 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.98989898989899 ,l1_regularization_strength=0.5050505050505051 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.98989898989899].
2023-08-21 22:29:25,711 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9696969696969697, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.27272727272727276 ,rho=0.13131313131313133 ,epsilon=0.0005959596363636363 ,centered=False ,beta_1=0.3434343434343435 ,beta_2=0.787878787878788 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.98989898989899 ,l1_regularization_strength=0.5050505050505051 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.98989898989899].
2023-08-21 22:29:53,431 INFO: Applying selection operators for generation 40.
2023-08-21 22:29:53,431 INFO: Applying genetic operators for generation 40.
2023-08-21 22:29:53,433 INFO: Evaluating fitness for for generation 40.
2023-08-21 22:29:53,433 INFO: Will evaluate fitness for 12 individuals.
2023-08-21 22:29:54,249 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:29:54,249 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:29:54,860 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.24242424242424243, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.5555555555555556 ,beta_2=0.14141414141414144 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.9494949494949496].
2023-08-21 22:29:54,860 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.24242424242424243, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.5555555555555556 ,beta_2=0.14141414141414144 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.9494949494949496].
2023-08-21 22:30:15,095 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:30:15,095 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:30:16,938 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=0.0004747475272727272 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:30:16,938 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=0.0004747475272727272 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:30:35,578 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:30:35,579 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:30:45,584 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:30:45,585 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:30:57,725 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:30:57,726 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:31:12,294 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=0.0016170000000000002 ,use_ema=False ,ema_momentum=0.7777777777777778 ,rho=0.13131313131313133 ,epsilon=0.0006565656909090909 ,centered=True ,beta_1=0.4646464646464647 ,beta_2=0.5656565656565657 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.6565656565656566 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.13131313131313133].
2023-08-21 22:31:12,294 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=0.0016170000000000002 ,use_ema=False ,ema_momentum=0.7777777777777778 ,rho=0.13131313131313133 ,epsilon=0.0006565656909090909 ,centered=True ,beta_1=0.4646464646464647 ,beta_2=0.5656565656565657 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.6565656565656566 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.13131313131313133].
2023-08-21 22:31:20,811 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.27272727272727276 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.8282828282828284 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.09090909090909091].
2023-08-21 22:31:20,811 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.27272727272727276 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.8282828282828284 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.09090909090909091].
2023-08-21 22:31:44,644 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:31:44,644 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:31:44,961 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=0.0007474747727272727 ,centered=False ,beta_1=0.04040404040404041 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.9494949494949496 ,l1_regularization_strength=0.36363636363636365 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:31:44,962 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=0.0007474747727272727 ,centered=False ,beta_1=0.04040404040404041 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.9494949494949496 ,l1_regularization_strength=0.36363636363636365 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:32:12,806 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:32:12,806 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:32:35,992 INFO: Applying selection operators for generation 41.
2023-08-21 22:32:35,992 INFO: Applying genetic operators for generation 41.
2023-08-21 22:32:35,993 INFO: Evaluating fitness for for generation 41.
2023-08-21 22:32:35,993 INFO: Will evaluate fitness for 12 individuals.
2023-08-21 22:32:37,010 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:32:37,010 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:32:38,066 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.4646464646464647, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.010101010101010102 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.7676767676767677 ,beta_2=0.787878787878788 ,learning_rate_power=-0.06060606060606055 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=0.6666666666666667].
2023-08-21 22:32:38,067 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.4646464646464647, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.010101010101010102 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.7676767676767677 ,beta_2=0.787878787878788 ,learning_rate_power=-0.06060606060606055 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=0.6666666666666667].
2023-08-21 22:32:57,302 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:32:57,302 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:33:17,803 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:33:17,803 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:33:24,986 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:33:24,986 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:33:39,563 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:33:39,563 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:33:50,140 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:33:50,141 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:34:07,141 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:34:07,142 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:34:10,626 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.595959595959596 ,nesterov=False ,amsgrad=False ,weight_decay=0.008182 ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.5252525252525253 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:34:10,627 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.595959595959596 ,nesterov=False ,amsgrad=False ,weight_decay=0.008182 ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.5252525252525253 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:34:27,089 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:34:27,089 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:34:31,811 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:34:31,811 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:35:02,069 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:35:02,069 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:35:26,491 INFO: Applying selection operators for generation 42.
2023-08-21 22:35:26,491 INFO: Applying genetic operators for generation 42.
2023-08-21 22:35:26,493 INFO: Evaluating fitness for for generation 42.
2023-08-21 22:35:26,493 INFO: Will evaluate fitness for 15 individuals.
2023-08-21 22:35:28,560 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:35:28,560 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:35:28,890 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.686868686868687, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=1e-10 ,centered=False ,beta_1=0.3535353535353536 ,beta_2=0.787878787878788 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.696969696969697 ,l1_regularization_strength=0.4141414141414142 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.6767676767676768].
2023-08-21 22:35:28,890 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.686868686868687, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=1e-10 ,centered=False ,beta_1=0.3535353535353536 ,beta_2=0.787878787878788 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.696969696969697 ,l1_regularization_strength=0.4141414141414142 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.6767676767676768].
2023-08-21 22:35:52,052 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.7272727272727273, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.7777777777777778 ,rho=0.7373737373737375 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.8282828282828284 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.6767676767676768].
2023-08-21 22:35:52,052 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.7272727272727273, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.7777777777777778 ,rho=0.7373737373737375 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.8282828282828284 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.6767676767676768].
2023-08-21 22:36:11,759 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:36:11,760 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:36:39,758 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:36:39,758 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:36:42,407 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:36:42,407 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:37:11,036 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:37:11,036 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:37:15,035 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.98989898989899, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.5050505050505051 ,epsilon=0.0006868687181818181 ,centered=False ,beta_1=0.9393939393939394 ,beta_2=0.787878787878788 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.9494949494949496 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.9595959595959597].
2023-08-21 22:37:15,035 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.98989898989899, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.5050505050505051 ,epsilon=0.0006868687181818181 ,centered=False ,beta_1=0.9393939393939394 ,beta_2=0.787878787878788 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.9494949494949496 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.9595959595959597].
2023-08-21 22:37:33,038 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:37:33,038 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:37:45,316 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:37:45,317 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:37:53,991 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:37:53,992 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:38:09,610 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0067680000000000014 ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.9393939393939394 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.010101010101010055 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.16161616161616163 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.6767676767676768].
2023-08-21 22:38:09,611 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0067680000000000014 ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.9393939393939394 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.010101010101010055 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.16161616161616163 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.6767676767676768].
2023-08-21 22:38:15,912 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:38:15,912 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:38:38,661 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:38:38,662 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:38:46,782 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.7272727272727273, momentum=0.06060606060606061 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=0.0006363636727272727 ,centered=False ,beta_1=0.04040404040404041 ,beta_2=0.787878787878788 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.37373737373737376 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.5151515151515152].
2023-08-21 22:38:46,783 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.7272727272727273, momentum=0.06060606060606061 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=0.0006363636727272727 ,centered=False ,beta_1=0.04040404040404041 ,beta_2=0.787878787878788 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.37373737373737376 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.5151515151515152].
2023-08-21 22:39:12,250 INFO: Applying selection operators for generation 43.
2023-08-21 22:39:12,251 INFO: Applying genetic operators for generation 43.
2023-08-21 22:39:12,252 INFO: Evaluating fitness for for generation 43.
2023-08-21 22:39:12,252 INFO: Will evaluate fitness for 13 individuals.
2023-08-21 22:39:13,443 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6464646464646465, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.404040404040404 ,initial_accumulator_value=0.696969696969697 ,l1_regularization_strength=0.23232323232323235 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.7575757575757577].
2023-08-21 22:39:13,443 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6464646464646465, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.404040404040404 ,initial_accumulator_value=0.696969696969697 ,l1_regularization_strength=0.23232323232323235 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.7575757575757577].
2023-08-21 22:39:13,492 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:39:13,493 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:39:33,394 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4444444444444445, momentum=0.5050505050505051 ,nesterov=False ,amsgrad=False ,weight_decay=0.0029300000000000007 ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.29292929292929293 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.8989898989898991 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.37373737373737376].
2023-08-21 22:39:33,394 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4444444444444445, momentum=0.5050505050505051 ,nesterov=False ,amsgrad=False ,weight_decay=0.0029300000000000007 ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.29292929292929293 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.8989898989898991 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.37373737373737376].
2023-08-21 22:39:33,547 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:39:33,547 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:40:14,405 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:40:14,405 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:40:17,674 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5656565656565657, momentum=0.8989898989898991 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=0.0007575757818181818 ,centered=True ,beta_1=0.33333333333333337 ,beta_2=0.7777777777777778 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.15151515151515152 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.6767676767676768].
2023-08-21 22:40:17,674 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5656565656565657, momentum=0.8989898989898991 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=0.0007575757818181818 ,centered=True ,beta_1=0.33333333333333337 ,beta_2=0.7777777777777778 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.15151515151515152 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.6767676767676768].
2023-08-21 22:40:38,178 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:40:38,178 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:40:46,817 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=0.008687 ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.4141414141414142 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.4040404040404041 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.09090909090909091].
2023-08-21 22:40:46,817 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=0.008687 ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.4141414141414142 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.4040404040404041 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.09090909090909091].
2023-08-21 22:41:00,002 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:41:00,002 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:41:07,603 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:41:07,603 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:41:24,139 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:41:24,140 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:41:27,490 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:41:27,490 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:41:48,099 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.15151515151515152 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.6767676767676768].
2023-08-21 22:41:48,099 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.15151515151515152 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.6767676767676768].
2023-08-21 22:42:09,145 INFO: Applying selection operators for generation 44.
2023-08-21 22:42:09,145 INFO: Applying genetic operators for generation 44.
2023-08-21 22:42:09,147 INFO: Evaluating fitness for for generation 44.
2023-08-21 22:42:09,147 INFO: Will evaluate fitness for 10 individuals.
2023-08-21 22:42:09,957 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.7676767676767677 ,nesterov=True ,amsgrad=False ,weight_decay=0.005859000000000001 ,use_ema=True ,ema_momentum=0.7676767676767677 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.9292929292929294 ,beta_2=0.787878787878788 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.5656565656565657 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.8585858585858587].
2023-08-21 22:42:09,958 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.7676767676767677 ,nesterov=True ,amsgrad=False ,weight_decay=0.005859000000000001 ,use_ema=True ,ema_momentum=0.7676767676767677 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.9292929292929294 ,beta_2=0.787878787878788 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.5656565656565657 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.8585858585858587].
2023-08-21 22:42:10,601 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:42:10,601 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:42:32,497 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:42:32,497 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:42:40,070 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.9797979797979799 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.15151515151515152 ,beta=0.6767676767676768].
2023-08-21 22:42:40,070 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.9797979797979799 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.15151515151515152 ,beta=0.6767676767676768].
2023-08-21 22:42:58,841 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:42:58,842 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:43:11,469 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.36363636363636365 ,epsilon=0.00035353541818181815 ,centered=False ,beta_1=0.7676767676767677 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.9090909090909092 ,l1_regularization_strength=0.8080808080808082 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.6767676767676768].
2023-08-21 22:43:11,470 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.36363636363636365 ,epsilon=0.00035353541818181815 ,centered=False ,beta_1=0.7676767676767677 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.9090909090909092 ,l1_regularization_strength=0.8080808080808082 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.6767676767676768].
2023-08-21 22:43:18,516 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:43:18,516 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:43:42,891 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.5050505050505051, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.8282828282828283 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.14141414141414144 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.6767676767676768].
2023-08-21 22:43:42,891 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.5050505050505051, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.8282828282828283 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.14141414141414144 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.6767676767676768].
2023-08-21 22:43:46,578 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6767676767676768 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.37373737373737376 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.8686868686868687 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.8383838383838385].
2023-08-21 22:43:46,578 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6767676767676768 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.37373737373737376 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.8686868686868687 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.8383838383838385].
2023-08-21 22:44:11,855 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8787878787878789, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.7676767676767677 ,rho=0.29292929292929293 ,epsilon=0.0009191919272727272 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.6767676767676768].
2023-08-21 22:44:11,855 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8787878787878789, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.7676767676767677 ,rho=0.29292929292929293 ,epsilon=0.0009191919272727272 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.6767676767676768].
2023-08-21 22:44:36,514 INFO: Applying selection operators for generation 45.
2023-08-21 22:44:36,514 INFO: Applying genetic operators for generation 45.
2023-08-21 22:44:36,515 INFO: Evaluating fitness for for generation 45.
2023-08-21 22:44:36,515 INFO: Will evaluate fitness for 17 individuals.
2023-08-21 22:44:37,433 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:44:37,433 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:44:38,005 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0056570000000000014 ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.25252525252525254 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.6363636363636365 ,beta_2=0.787878787878788 ,learning_rate_power=-0.3232323232323232 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.030303030303030304 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.14141414141414144].
2023-08-21 22:44:38,005 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0056570000000000014 ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.25252525252525254 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.6363636363636365 ,beta_2=0.787878787878788 ,learning_rate_power=-0.3232323232323232 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.030303030303030304 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.14141414141414144].
2023-08-21 22:45:04,849 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:45:04,849 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:45:11,378 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=0.0002222223 ,centered=True ,beta_1=0.15151515151515152 ,beta_2=0.787878787878788 ,learning_rate_power=-0.6868686868686869 ,initial_accumulator_value=0.22222222222222224 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.6767676767676768].
2023-08-21 22:45:11,378 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=0.0002222223 ,centered=True ,beta_1=0.15151515151515152 ,beta_2=0.787878787878788 ,learning_rate_power=-0.6868686868686869 ,initial_accumulator_value=0.22222222222222224 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.6767676767676768].
2023-08-21 22:45:27,730 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.787878787878788 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.9696969696969697 ,epsilon=0.00014141422727272727 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.595959595959596 ,learning_rate_power=-0.050505050505050386 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:45:27,730 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.787878787878788 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.9696969696969697 ,epsilon=0.00014141422727272727 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.595959595959596 ,learning_rate_power=-0.050505050505050386 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:45:43,741 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:45:43,741 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:45:57,860 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:45:57,860 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:46:03,735 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:46:03,735 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:46:24,899 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:46:24,899 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:46:26,328 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:46:26,329 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:46:50,861 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:46:50,862 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:46:51,386 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:46:51,386 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:47:11,873 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:47:11,874 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:47:19,187 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.19191919191919193, momentum=0.8181818181818182 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.31313131313131315 ,rho=0.5252525252525253 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.9292929292929294 ,beta_2=0.23232323232323235 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.4040404040404041 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.6767676767676768].
2023-08-21 22:47:19,187 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.19191919191919193, momentum=0.8181818181818182 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.31313131313131315 ,rho=0.5252525252525253 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.9292929292929294 ,beta_2=0.23232323232323235 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.4040404040404041 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.6767676767676768].
2023-08-21 22:47:41,656 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:47:41,657 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:47:42,112 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=0.00035353541818181815 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.38383838383838387 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.4444444444444445].
2023-08-21 22:47:42,112 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=0.00035353541818181815 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.38383838383838387 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.4444444444444445].
2023-08-21 22:48:05,705 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:48:05,705 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:48:27,087 INFO: Applying selection operators for generation 46.
2023-08-21 22:48:27,087 INFO: Applying genetic operators for generation 46.
2023-08-21 22:48:27,089 INFO: Evaluating fitness for for generation 46.
2023-08-21 22:48:27,089 INFO: Will evaluate fitness for 18 individuals.
2023-08-21 22:48:29,485 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:48:29,485 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:48:30,800 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:48:30,800 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:48:51,315 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:48:51,315 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:48:54,081 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:48:54,081 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:49:19,893 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:49:19,894 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:49:26,632 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:49:26,632 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:49:40,303 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7474747474747475, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.98989898989899 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.24242424242424243].
2023-08-21 22:49:40,303 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7474747474747475, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.98989898989899 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.24242424242424243].
2023-08-21 22:49:49,799 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:49:49,799 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:50:02,341 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:50:02,341 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:50:16,996 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:50:16,996 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:50:22,805 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:50:22,805 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:50:58,497 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=0.0008090000000000001 ,use_ema=False ,ema_momentum=0.24242424242424243 ,rho=0.42424242424242425 ,epsilon=0.00023232330909090908 ,centered=False ,beta_1=0.8989898989898991 ,beta_2=0.14141414141414144 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.18181818181818182].
2023-08-21 22:50:58,498 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=0.0008090000000000001 ,use_ema=False ,ema_momentum=0.24242424242424243 ,rho=0.42424242424242425 ,epsilon=0.00023232330909090908 ,centered=False ,beta_1=0.8989898989898991 ,beta_2=0.14141414141414144 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.18181818181818182].
2023-08-21 22:51:01,242 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:51:01,242 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:51:20,735 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:51:20,735 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:51:27,475 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:51:27,476 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:51:40,103 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.23232323232323235, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.003940000000000001 ,use_ema=False ,ema_momentum=0.21212121212121213 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.6767676767676768].
2023-08-21 22:51:40,104 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.23232323232323235, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.003940000000000001 ,use_ema=False ,ema_momentum=0.21212121212121213 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.6767676767676768].
2023-08-21 22:51:58,317 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:51:58,317 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:52:20,672 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:52:20,673 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:52:45,153 INFO: Applying selection operators for generation 47.
2023-08-21 22:52:45,153 INFO: Applying genetic operators for generation 47.
2023-08-21 22:52:45,154 INFO: Evaluating fitness for for generation 47.
2023-08-21 22:52:45,154 INFO: Will evaluate fitness for 9 individuals.
2023-08-21 22:52:46,153 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.37373737373737376, momentum=0.9090909090909092 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=0.0006868687181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.37373737373737376 ,learning_rate_power=-0.5353535353535352 ,initial_accumulator_value=0.4040404040404041 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.6262626262626263].
2023-08-21 22:52:46,153 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.37373737373737376, momentum=0.9090909090909092 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=0.0006868687181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.37373737373737376 ,learning_rate_power=-0.5353535353535352 ,initial_accumulator_value=0.4040404040404041 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.6262626262626263].
2023-08-21 22:52:46,635 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:52:46,635 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:53:12,269 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.5757575757575758, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.26262626262626265 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.6767676767676768 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6565656565656566].
2023-08-21 22:53:12,270 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.5757575757575758, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.26262626262626265 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.6767676767676768 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6565656565656566].
2023-08-21 22:53:18,887 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:53:18,887 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:53:33,875 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.0, momentum=0.8484848484848485 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.16161616161616163 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.3535353535353536 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.10101010101010102 ,beta=0.6767676767676768].
2023-08-21 22:53:33,876 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.0, momentum=0.8484848484848485 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.16161616161616163 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.3535353535353536 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.10101010101010102 ,beta=0.6767676767676768].
2023-08-21 22:53:39,766 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.0, momentum=0.5353535353535354 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.7676767676767677 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.797979797979798].
2023-08-21 22:53:39,766 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.0, momentum=0.5353535353535354 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.7676767676767677 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.797979797979798].
2023-08-21 22:54:01,045 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.98989898989899 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.24242424242424243].
2023-08-21 22:54:01,046 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.98989898989899 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.24242424242424243].
2023-08-21 22:54:09,696 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:54:09,696 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:54:23,223 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7474747474747475, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.98989898989899 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.24242424242424243].
2023-08-21 22:54:23,224 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7474747474747475, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.98989898989899 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.24242424242424243].
2023-08-21 22:54:43,614 INFO: Applying selection operators for generation 48.
2023-08-21 22:54:43,614 INFO: Applying genetic operators for generation 48.
2023-08-21 22:54:43,615 INFO: Evaluating fitness for for generation 48.
2023-08-21 22:54:43,615 INFO: Will evaluate fitness for 13 individuals.
2023-08-21 22:54:44,558 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:54:44,558 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:54:47,591 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:54:47,592 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:55:06,308 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:55:06,309 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:55:17,542 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:55:17,542 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:55:30,307 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.4141414141414142, momentum=0.13131313131313133 ,nesterov=False ,amsgrad=False ,weight_decay=0.005253000000000001 ,use_ema=False ,ema_momentum=0.24242424242424243 ,rho=0.393939393939394 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.12121212121212122 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.6767676767676768].
2023-08-21 22:55:30,307 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.4141414141414142, momentum=0.13131313131313133 ,nesterov=False ,amsgrad=False ,weight_decay=0.005253000000000001 ,use_ema=False ,ema_momentum=0.24242424242424243 ,rho=0.393939393939394 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.12121212121212122 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.6767676767676768].
2023-08-21 22:55:39,769 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:55:39,769 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:55:59,397 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:55:59,398 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:56:01,749 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.5656565656565657 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.48484848484848486 ,learning_rate_power=-0.7676767676767676 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.8181818181818182].
2023-08-21 22:56:01,749 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.5656565656565657 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.48484848484848486 ,learning_rate_power=-0.7676767676767676 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.8181818181818182].
2023-08-21 22:56:19,945 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:56:19,945 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:56:40,500 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.393939393939394, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.4646464646464647 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.11111111111111112 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.08080808080808081].
2023-08-21 22:56:40,501 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.393939393939394, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.4646464646464647 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.11111111111111112 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.08080808080808081].
2023-08-21 22:56:41,185 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.05050505050505051, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.10101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.36363636363636365].
2023-08-21 22:56:41,186 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.05050505050505051, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.10101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.36363636363636365].
2023-08-21 22:57:00,290 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.030303030303030304, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.13131313131313133 ,epsilon=0.00017171725454545453 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.787878787878788 ,learning_rate_power=-0.31313131313131304 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.15151515151515152 ,beta=0.24242424242424243].
2023-08-21 22:57:00,291 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.030303030303030304, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.13131313131313133 ,epsilon=0.00017171725454545453 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.787878787878788 ,learning_rate_power=-0.31313131313131304 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.15151515151515152 ,beta=0.24242424242424243].
2023-08-21 22:57:07,137 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:57:07,137 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:57:26,124 INFO: Applying selection operators for generation 49.
2023-08-21 22:57:26,124 INFO: Applying genetic operators for generation 49.
2023-08-21 22:57:26,126 INFO: Evaluating fitness for for generation 49.
2023-08-21 22:57:26,126 INFO: Will evaluate fitness for 16 individuals.
2023-08-21 22:57:27,143 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.7474747474747475, momentum=0.23232323232323235 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.5757575757575758 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9191919191919192 ,beta_2=0.787878787878788 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.4747474747474748 ,l1_regularization_strength=0.37373737373737376 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.24242424242424243].
2023-08-21 22:57:27,143 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.7474747474747475, momentum=0.23232323232323235 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.5757575757575758 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9191919191919192 ,beta_2=0.787878787878788 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.4747474747474748 ,l1_regularization_strength=0.37373737373737376 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.24242424242424243].
2023-08-21 22:57:27,162 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7474747474747475, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.98989898989899 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.24242424242424243].
2023-08-21 22:57:27,163 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7474747474747475, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.98989898989899 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.24242424242424243].
2023-08-21 22:57:47,529 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7474747474747475, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.98989898989899 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.24242424242424243].
2023-08-21 22:57:47,530 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7474747474747475, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.98989898989899 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.24242424242424243].
2023-08-21 22:57:52,045 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:57:52,045 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:58:08,762 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:58:08,762 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 22:58:12,106 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7474747474747475, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.98989898989899 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.24242424242424243].
2023-08-21 22:58:12,106 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7474747474747475, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.98989898989899 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.24242424242424243].
2023-08-21 22:58:28,755 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7474747474747475, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.98989898989899 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.24242424242424243].
2023-08-21 22:58:28,755 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7474747474747475, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.98989898989899 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.24242424242424243].
2023-08-21 22:58:37,262 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7474747474747475, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.98989898989899 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.24242424242424243].
2023-08-21 22:58:37,262 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7474747474747475, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.98989898989899 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.24242424242424243].
2023-08-21 22:58:49,525 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7474747474747475, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.98989898989899 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.24242424242424243].
2023-08-21 22:58:49,526 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7474747474747475, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.98989898989899 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.24242424242424243].
2023-08-21 22:58:59,466 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7474747474747475, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.98989898989899 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.24242424242424243].
2023-08-21 22:58:59,466 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7474747474747475, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.98989898989899 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.24242424242424243].
2023-08-21 22:59:11,069 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.8181818181818182, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=0.005354000000000001 ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.6060606060606061 ,epsilon=0.0002828283545454545 ,centered=True ,beta_1=0.08080808080808081 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.24242424242424243].
2023-08-21 22:59:11,069 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.8181818181818182, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=0.005354000000000001 ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.6060606060606061 ,epsilon=0.0002828283545454545 ,centered=True ,beta_1=0.08080808080808081 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.24242424242424243].
2023-08-21 22:59:23,542 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.7575757575757577, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=1.0 ,beta_2=0.787878787878788 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.6161616161616162].
2023-08-21 22:59:23,542 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.7575757575757577, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=1.0 ,beta_2=0.787878787878788 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.6161616161616162].
2023-08-21 23:00:03,836 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7474747474747475, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8686868686868687 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.98989898989899 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.24242424242424243].
2023-08-21 23:00:03,836 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7474747474747475, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8686868686868687 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.98989898989899 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.24242424242424243].
2023-08-21 23:00:06,809 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.7474747474747475, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=0.009798000000000001 ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.797979797979798 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.393939393939394 ,beta_2=0.98989898989899 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.5151515151515152].
2023-08-21 23:00:06,810 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.7474747474747475, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=0.009798000000000001 ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.797979797979798 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.393939393939394 ,beta_2=0.98989898989899 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.5151515151515152].
2023-08-21 23:00:25,759 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 23:00:25,760 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 23:00:28,114 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6666666666666667, momentum=0.393939393939394 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.2828282828282829 ,rho=0.10101010101010102 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.6565656565656566 ,beta_2=0.9393939393939394 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.7171717171717172 ,l1_regularization_strength=0.26262626262626265 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.5555555555555556].
2023-08-21 23:00:28,114 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6666666666666667, momentum=0.393939393939394 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.2828282828282829 ,rho=0.10101010101010102 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.6565656565656566 ,beta_2=0.9393939393939394 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.7171717171717172 ,l1_regularization_strength=0.26262626262626265 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.5555555555555556].
2023-08-21 23:00:58,266 INFO: Applying selection operators for generation 50.
2023-08-21 23:00:58,266 INFO: Applying genetic operators for generation 50.
2023-08-21 23:00:58,268 INFO: Evaluating fitness for for generation 50.
2023-08-21 23:00:58,268 INFO: Will evaluate fitness for 18 individuals.
2023-08-21 23:00:58,921 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7474747474747475, momentum=0.14141414141414144 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.32323232323232326 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.4747474747474748 ,beta_2=0.33333333333333337 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.27272727272727276 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.29292929292929293].
2023-08-21 23:00:58,921 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7474747474747475, momentum=0.14141414141414144 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.32323232323232326 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.4747474747474748 ,beta_2=0.33333333333333337 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.27272727272727276 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.29292929292929293].
2023-08-21 23:00:58,963 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7474747474747475, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.98989898989899 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.24242424242424243].
2023-08-21 23:00:58,963 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7474747474747475, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.98989898989899 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.24242424242424243].
2023-08-21 23:01:19,199 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.7272727272727273, momentum=0.4747474747474748 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.10101010101010102 ,epsilon=3.030312727272727e-05 ,centered=False ,beta_1=0.4545454545454546 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.9797979797979799 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.6767676767676768].
2023-08-21 23:01:19,200 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.7272727272727273, momentum=0.4747474747474748 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.10101010101010102 ,epsilon=3.030312727272727e-05 ,centered=False ,beta_1=0.4545454545454546 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.9797979797979799 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.6767676767676768].
2023-08-21 23:01:19,321 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4141414141414142, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.009798000000000001 ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.4646464646464647 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.8181818181818182 ,l1_regularization_strength=0.98989898989899 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.10101010101010102 ,beta=0.29292929292929293].
2023-08-21 23:01:19,321 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4141414141414142, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.009798000000000001 ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.4646464646464647 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.8181818181818182 ,l1_regularization_strength=0.98989898989899 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.10101010101010102 ,beta=0.29292929292929293].
2023-08-21 23:01:39,889 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7474747474747475, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.98989898989899 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.24242424242424243].
2023-08-21 23:01:39,889 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7474747474747475, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.98989898989899 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.24242424242424243].
2023-08-21 23:01:42,982 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7474747474747475, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.98989898989899 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.24242424242424243].
2023-08-21 23:01:42,982 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7474747474747475, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.98989898989899 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.24242424242424243].
2023-08-21 23:01:59,516 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7474747474747475, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.5050505050505051 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.6666666666666667 ,beta_2=0.9595959595959597 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.696969696969697 ,l1_regularization_strength=0.595959595959596 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.24242424242424243].
2023-08-21 23:01:59,516 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7474747474747475, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.5050505050505051 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.6666666666666667 ,beta_2=0.9595959595959597 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.696969696969697 ,l1_regularization_strength=0.595959595959596 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.24242424242424243].
2023-08-21 23:02:02,357 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7474747474747475, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.98989898989899 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.24242424242424243].
2023-08-21 23:02:02,357 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7474747474747475, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.98989898989899 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.24242424242424243].
2023-08-21 23:02:23,488 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7474747474747475, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.98989898989899 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.24242424242424243].
2023-08-21 23:02:23,489 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7474747474747475, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.98989898989899 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.24242424242424243].
2023-08-21 23:02:26,532 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.4444444444444445, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.13131313131313133 ,epsilon=0.000676767709090909 ,centered=True ,beta_1=0.19191919191919193 ,beta_2=0.6060606060606061 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.48484848484848486 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.24242424242424243].
2023-08-21 23:02:26,532 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.4444444444444445, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.13131313131313133 ,epsilon=0.000676767709090909 ,centered=True ,beta_1=0.19191919191919193 ,beta_2=0.6060606060606061 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.48484848484848486 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.24242424242424243].
2023-08-21 23:02:44,753 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7474747474747475, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.98989898989899 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.24242424242424243].
2023-08-21 23:02:44,753 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7474747474747475, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.98989898989899 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.24242424242424243].
2023-08-21 23:02:45,413 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 23:02:45,413 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6767676767676768].
2023-08-21 23:03:04,789 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7474747474747475, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.98989898989899 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.24242424242424243].
2023-08-21 23:03:04,789 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7474747474747475, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.98989898989899 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.24242424242424243].
2023-08-21 23:03:05,157 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.32323232323232326, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8686868686868687 ,rho=0.6262626262626263 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.5656565656565657 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7474747474747475 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.24242424242424243].
2023-08-21 23:03:05,157 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.32323232323232326, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8686868686868687 ,rho=0.6262626262626263 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.5656565656565657 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7474747474747475 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.24242424242424243].
2023-08-21 23:03:24,700 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7474747474747475, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.98989898989899 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.24242424242424243].
2023-08-21 23:03:24,700 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7474747474747475, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.98989898989899 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.24242424242424243].
2023-08-21 23:03:30,292 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6666666666666667, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6464646464646465 ,rho=0.5151515151515152 ,epsilon=0.0003737374363636363 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.20202020202020204 ,l1_regularization_strength=0.7575757575757577 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.24242424242424243].
2023-08-21 23:03:30,292 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6666666666666667, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6464646464646465 ,rho=0.5151515151515152 ,epsilon=0.0003737374363636363 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.20202020202020204 ,l1_regularization_strength=0.7575757575757577 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.24242424242424243].
2023-08-21 23:03:44,596 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.05050505050505051, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.003738000000000001 ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.13131313131313133 ,epsilon=0.0005252525727272728 ,centered=False ,beta_1=0.7676767676767677 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.98989898989899 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.29292929292929293].
2023-08-21 23:03:44,596 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.05050505050505051, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.003738000000000001 ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.13131313131313133 ,epsilon=0.0005252525727272728 ,centered=False ,beta_1=0.7676767676767677 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.98989898989899 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.29292929292929293].
2023-08-21 23:03:55,981 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7474747474747475, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.98989898989899 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.24242424242424243].
2023-08-21 23:03:55,981 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7474747474747475, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.98989898989899 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.24242424242424243].
2023-08-21 23:04:16,308 INFO: Saving the results to the folder specified in the arguments.
2023-08-21 23:04:16,311 INFO: Closing the multiprocessing pool.
2023-08-21 23:04:16,311 INFO: Experiment finished.

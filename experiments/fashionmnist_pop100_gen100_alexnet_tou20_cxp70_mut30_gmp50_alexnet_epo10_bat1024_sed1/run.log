2023-08-22 05:54:00,537 INFO: Starting experiment with the arguments logged below.
2023-08-22 05:54:00,538 INFO: Namespace(results_path='/mnt/lustre/users/mbornman1/evoopt-cnn/experiments/fashionmnist_pop100_gen100_alexnet_tou20_cxp70_mut30_gmp50_alexnet_epo10_bat1024_sed1', cpu_count=4, seed=1, dataset='fashion_mnist', pop_size=100, ngen=100, model='alexnet', epochs=10, batch_size=1024, tournsize=20, cxpb=0.5, mutpb=0.2, gene_mut_prob=0.5)
2023-08-22 05:54:00,538 INFO: Setting the random number generator seed for this experiment.
2023-08-22 05:54:00,538 INFO: Initializing the multiprocessing pool.
2023-08-22 05:54:00,550 INFO: Running the evolutionary algorithm with the given hyper-parameters. This may take a while. Statistics for every generation will be printed below.
2023-08-22 05:54:00,550 INFO: Setting up DEAP toolbox.
2023-08-22 05:54:00,550 INFO: Registering individual initialization method.
2023-08-22 05:54:00,550 INFO: Registering population initialization method.
2023-08-22 05:54:00,550 INFO: Registering the selection method.
2023-08-22 05:54:00,550 INFO: Registering the evaluation method.
2023-08-22 05:54:00,550 INFO: Registering the genetic operators.
2023-08-22 05:54:00,550 INFO: Setting up the hall of fame and stats we want to keep track of.
2023-08-22 05:54:00,550 INFO: Initializing the initial population.
2023-08-22 05:54:00,577 INFO: Running the evolutionary algorithm.
2023-08-22 05:54:00,577 INFO: Evaluating fitness for the initial generation of individuals.
2023-08-22 05:54:00,577 INFO: Will evaluate fitness for 100 individuals.
2023-08-22 05:54:02,190 DEBUG: Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
2023-08-22 05:54:02,190 DEBUG: Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
2023-08-22 05:54:02,190 DEBUG: Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
2023-08-22 05:54:02,190 DEBUG: Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
2023-08-22 05:54:02,471 DEBUG: Creating converter from 7 to 5
2023-08-22 05:54:02,471 DEBUG: Creating converter from 7 to 5
2023-08-22 05:54:02,471 DEBUG: Creating converter from 7 to 5
2023-08-22 05:54:02,471 DEBUG: Creating converter from 7 to 5
2023-08-22 05:54:02,471 DEBUG: Creating converter from 5 to 7
2023-08-22 05:54:02,471 DEBUG: Creating converter from 5 to 7
2023-08-22 05:54:02,471 DEBUG: Creating converter from 5 to 7
2023-08-22 05:54:02,471 DEBUG: Creating converter from 5 to 7
2023-08-22 05:54:02,471 DEBUG: Creating converter from 7 to 5
2023-08-22 05:54:02,471 DEBUG: Creating converter from 7 to 5
2023-08-22 05:54:02,471 DEBUG: Creating converter from 7 to 5
2023-08-22 05:54:02,471 DEBUG: Creating converter from 7 to 5
2023-08-22 05:54:02,471 DEBUG: Creating converter from 5 to 7
2023-08-22 05:54:02,471 DEBUG: Creating converter from 5 to 7
2023-08-22 05:54:02,471 DEBUG: Creating converter from 5 to 7
2023-08-22 05:54:02,471 DEBUG: Creating converter from 5 to 7
2023-08-22 05:54:08,734 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.393939393939394, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.8686868686868687 ,epsilon=0.0007070707363636364 ,centered=True ,beta_1=0.22222222222222224 ,beta_2=0.38383838383838387 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.686868686868687 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.06060606060606061 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.8585858585858587].
2023-08-22 05:54:08,734 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.393939393939394, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.8686868686868687 ,epsilon=0.0007070707363636364 ,centered=True ,beta_1=0.22222222222222224 ,beta_2=0.38383838383838387 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.686868686868687 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.06060606060606061 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.8585858585858587].
2023-08-22 05:54:08,826 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.10101010101010102, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=False ,weight_decay=0.0031320000000000007 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.23232323232323235 ,epsilon=0.00044444449999999996 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.6767676767676768 ,l2_regularization_strength=0.21212121212121213 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.3434343434343435].
2023-08-22 05:54:08,826 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.10101010101010102, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=False ,weight_decay=0.0031320000000000007 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.23232323232323235 ,epsilon=0.00044444449999999996 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.6767676767676768 ,l2_regularization_strength=0.21212121212121213 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.3434343434343435].
2023-08-22 05:54:08,833 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.006364000000000001 ,use_ema=False ,ema_momentum=0.8383838383838385 ,rho=0.48484848484848486 ,epsilon=0.00026262633636363634 ,centered=True ,beta_1=0.6262626262626263 ,beta_2=0.030303030303030304 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.5555555555555556 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.9797979797979799 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.0].
2023-08-22 05:54:08,833 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.006364000000000001 ,use_ema=False ,ema_momentum=0.8383838383838385 ,rho=0.48484848484848486 ,epsilon=0.00026262633636363634 ,centered=True ,beta_1=0.6262626262626263 ,beta_2=0.030303030303030304 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.5555555555555556 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.9797979797979799 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.0].
2023-08-22 05:54:08,848 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.14141414141414144, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.05050505050505051 ,rho=0.5252525252525253 ,epsilon=9.09091818181818e-05 ,centered=False ,beta_1=0.18181818181818182 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.787878787878788 ,l2_regularization_strength=0.7575757575757577 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.09090909090909091].
2023-08-22 05:54:08,848 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.14141414141414144, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.05050505050505051 ,rho=0.5252525252525253 ,epsilon=9.09091818181818e-05 ,centered=False ,beta_1=0.18181818181818182 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.787878787878788 ,l2_regularization_strength=0.7575757575757577 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.09090909090909091].
2023-08-22 05:54:34,465 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.3434343434343435, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8383838383838385 ,rho=0.696969696969697 ,epsilon=1.010110909090909e-05 ,centered=False ,beta_1=0.8787878787878789 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.4545454545454545 ,initial_accumulator_value=0.9292929292929294 ,l1_regularization_strength=0.030303030303030304 ,l2_regularization_strength=0.6767676767676768 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.9797979797979799].
2023-08-22 05:54:34,465 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.3434343434343435, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8383838383838385 ,rho=0.696969696969697 ,epsilon=1.010110909090909e-05 ,centered=False ,beta_1=0.8787878787878789 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.4545454545454545 ,initial_accumulator_value=0.9292929292929294 ,l1_regularization_strength=0.030303030303030304 ,l2_regularization_strength=0.6767676767676768 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.9797979797979799].
2023-08-22 05:54:34,515 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.32323232323232326, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.007071000000000001 ,use_ema=False ,ema_momentum=0.686868686868687 ,rho=0.5858585858585859 ,epsilon=1.010110909090909e-05 ,centered=False ,beta_1=0.43434343434343436 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.030303030303030304 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.7373737373737375].
2023-08-22 05:54:34,515 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.32323232323232326, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.007071000000000001 ,use_ema=False ,ema_momentum=0.686868686868687 ,rho=0.5858585858585859 ,epsilon=1.010110909090909e-05 ,centered=False ,beta_1=0.43434343434343436 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.030303030303030304 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.7373737373737375].
2023-08-22 05:54:34,591 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-22 05:54:34,591 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-22 05:54:35,209 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.5858585858585859, momentum=0.8989898989898991 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.494949494949495 ,rho=0.43434343434343436 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.33333333333333337 ,beta_2=0.13131313131313133 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.9393939393939394 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.26262626262626265 ,l2_shrinkage_regularization_strength=0.7777777777777778 ,beta=0.5555555555555556].
2023-08-22 05:54:35,209 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.5858585858585859, momentum=0.8989898989898991 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.494949494949495 ,rho=0.43434343434343436 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.33333333333333337 ,beta_2=0.13131313131313133 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.9393939393939394 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.26262626262626265 ,l2_shrinkage_regularization_strength=0.7777777777777778 ,beta=0.5555555555555556].
2023-08-22 05:54:55,221 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 05:54:55,221 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 05:54:55,585 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.7272727272727273 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.4040404040404041].
2023-08-22 05:54:55,585 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.7272727272727273 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.4040404040404041].
2023-08-22 05:54:56,139 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.6363636363636365, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.37373737373737376 ,rho=0.020202020202020204 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.23232323232323235 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.37373737373737376 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.9595959595959597 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.9292929292929294].
2023-08-22 05:54:56,139 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.6363636363636365, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.37373737373737376 ,rho=0.020202020202020204 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.23232323232323235 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.37373737373737376 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.9595959595959597 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.9292929292929294].
2023-08-22 05:54:56,809 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-22 05:54:56,810 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-22 05:55:14,995 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.8787878787878789, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.006364000000000001 ,use_ema=True ,ema_momentum=0.9191919191919192 ,rho=0.5252525252525253 ,epsilon=0.00043434349090909084 ,centered=False ,beta_1=0.8282828282828284 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.9393939393939394 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.9797979797979799 ,l2_regularization_strength=0.6565656565656566 ,l2_shrinkage_regularization_strength=0.8282828282828284 ,beta=0.4747474747474748].
2023-08-22 05:55:14,995 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.8787878787878789, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.006364000000000001 ,use_ema=True ,ema_momentum=0.9191919191919192 ,rho=0.5252525252525253 ,epsilon=0.00043434349090909084 ,centered=False ,beta_1=0.8282828282828284 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.9393939393939394 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.9797979797979799 ,l2_regularization_strength=0.6565656565656566 ,l2_shrinkage_regularization_strength=0.8282828282828284 ,beta=0.4747474747474748].
2023-08-22 05:55:16,107 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.5050505050505051, momentum=0.8686868686868687 ,nesterov=False ,amsgrad=True ,weight_decay=0.009495 ,use_ema=True ,ema_momentum=0.27272727272727276 ,rho=0.06060606060606061 ,epsilon=0.0003939394545454545 ,centered=True ,beta_1=0.09090909090909091 ,beta_2=0.393939393939394 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.9595959595959597 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.5353535353535354 ,l2_shrinkage_regularization_strength=0.7272727272727273 ,beta=0.32323232323232326].
2023-08-22 05:55:16,107 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.5050505050505051, momentum=0.8686868686868687 ,nesterov=False ,amsgrad=True ,weight_decay=0.009495 ,use_ema=True ,ema_momentum=0.27272727272727276 ,rho=0.06060606060606061 ,epsilon=0.0003939394545454545 ,centered=True ,beta_1=0.09090909090909091 ,beta_2=0.393939393939394 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.9595959595959597 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.5353535353535354 ,l2_shrinkage_regularization_strength=0.7272727272727273 ,beta=0.32323232323232326].
2023-08-22 05:55:16,689 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.26262626262626265, momentum=0.8383838383838385 ,nesterov=True ,amsgrad=True ,weight_decay=0.00010200000000000001 ,use_ema=False ,ema_momentum=0.5757575757575758 ,rho=0.5050505050505051 ,epsilon=0.00040404046363636356 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.08080808080808081 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.14141414141414144 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.27272727272727276].
2023-08-22 05:55:16,689 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.26262626262626265, momentum=0.8383838383838385 ,nesterov=True ,amsgrad=True ,weight_decay=0.00010200000000000001 ,use_ema=False ,ema_momentum=0.5757575757575758 ,rho=0.5050505050505051 ,epsilon=0.00040404046363636356 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.08080808080808081 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.14141414141414144 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.27272727272727276].
2023-08-22 05:55:18,120 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.6464646464646465, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.007576000000000001 ,use_ema=False ,ema_momentum=0.7575757575757577 ,rho=0.04040404040404041 ,epsilon=0.0006161616545454546 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.46464646464646464 ,initial_accumulator_value=0.8585858585858587 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.4646464646464647 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.8989898989898991].
2023-08-22 05:55:18,120 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.6464646464646465, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.007576000000000001 ,use_ema=False ,ema_momentum=0.7575757575757577 ,rho=0.04040404040404041 ,epsilon=0.0006161616545454546 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.46464646464646464 ,initial_accumulator_value=0.8585858585858587 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.4646464646464647 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.8989898989898991].
2023-08-22 05:55:36,090 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.25252525252525254 ,rho=0.4444444444444445 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.7373737373737375 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.6363636363636365 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.8585858585858587].
2023-08-22 05:55:36,090 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.25252525252525254 ,rho=0.4444444444444445 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.7373737373737375 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.6363636363636365 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.8585858585858587].
2023-08-22 05:55:37,348 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.6565656565656566, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.008889000000000001 ,use_ema=False ,ema_momentum=0.21212121212121213 ,rho=0.8989898989898991 ,epsilon=0.0008989899090909091 ,centered=False ,beta_1=0.7676767676767677 ,beta_2=0.10101010101010102 ,learning_rate_power=-0.8484848484848485 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.7373737373737375 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.22222222222222224].
2023-08-22 05:55:37,349 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.6565656565656566, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.008889000000000001 ,use_ema=False ,ema_momentum=0.21212121212121213 ,rho=0.8989898989898991 ,epsilon=0.0008989899090909091 ,centered=False ,beta_1=0.7676767676767677 ,beta_2=0.10101010101010102 ,learning_rate_power=-0.8484848484848485 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.7373737373737375 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.22222222222222224].
2023-08-22 05:55:37,651 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.8484848484848485, momentum=0.4545454545454546 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4646464646464647 ,rho=0.10101010101010102 ,epsilon=0.00035353541818181815 ,centered=True ,beta_1=0.9696969696969697 ,beta_2=0.5757575757575758 ,learning_rate_power=-0.8888888888888888 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.7373737373737375 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.29292929292929293].
2023-08-22 05:55:37,652 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.8484848484848485, momentum=0.4545454545454546 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4646464646464647 ,rho=0.10101010101010102 ,epsilon=0.00035353541818181815 ,centered=True ,beta_1=0.9696969696969697 ,beta_2=0.5757575757575758 ,learning_rate_power=-0.8888888888888888 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.7373737373737375 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.29292929292929293].
2023-08-22 05:55:44,240 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.11111111111111112, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0047480000000000005 ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.05050505050505051 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.8282828282828284 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.6464646464646465 ,l1_regularization_strength=0.29292929292929293 ,l2_regularization_strength=0.010101010101010102 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.25252525252525254].
2023-08-22 05:55:44,241 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.11111111111111112, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0047480000000000005 ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.05050505050505051 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.8282828282828284 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.6464646464646465 ,l1_regularization_strength=0.29292929292929293 ,l2_regularization_strength=0.010101010101010102 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.25252525252525254].
2023-08-22 05:55:56,350 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.37373737373737376, momentum=0.6464646464646465 ,nesterov=True ,amsgrad=False ,weight_decay=0.007879 ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.20202020202020204 ,epsilon=0.00025252532727272723 ,centered=False ,beta_1=0.7272727272727273 ,beta_2=0.17171717171717174 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.27272727272727276 ,l2_regularization_strength=0.3434343434343435 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.12121212121212122].
2023-08-22 05:55:56,350 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.37373737373737376, momentum=0.6464646464646465 ,nesterov=True ,amsgrad=False ,weight_decay=0.007879 ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.20202020202020204 ,epsilon=0.00025252532727272723 ,centered=False ,beta_1=0.7272727272727273 ,beta_2=0.17171717171717174 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.27272727272727276 ,l2_regularization_strength=0.3434343434343435 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.12121212121212122].
2023-08-22 05:55:57,770 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.32323232323232326, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.008788 ,use_ema=False ,ema_momentum=0.494949494949495 ,rho=0.6565656565656566 ,epsilon=0.0002121212909090909 ,centered=True ,beta_1=0.6767676767676768 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.8080808080808082 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.3434343434343435 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.10101010101010102].
2023-08-22 05:55:57,770 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.32323232323232326, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.008788 ,use_ema=False ,ema_momentum=0.494949494949495 ,rho=0.6565656565656566 ,epsilon=0.0002121212909090909 ,centered=True ,beta_1=0.6767676767676768 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.8080808080808082 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.3434343434343435 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.10101010101010102].
2023-08-22 05:55:59,179 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.393939393939394, momentum=0.05050505050505051 ,nesterov=True ,amsgrad=False ,weight_decay=0.007475000000000002 ,use_ema=True ,ema_momentum=0.42424242424242425 ,rho=0.12121212121212122 ,epsilon=0.0006969697272727273 ,centered=True ,beta_1=0.31313131313131315 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.9797979797979798 ,initial_accumulator_value=0.31313131313131315 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.09090909090909091 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.7070707070707072].
2023-08-22 05:55:59,179 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.393939393939394, momentum=0.05050505050505051 ,nesterov=True ,amsgrad=False ,weight_decay=0.007475000000000002 ,use_ema=True ,ema_momentum=0.42424242424242425 ,rho=0.12121212121212122 ,epsilon=0.0006969697272727273 ,centered=True ,beta_1=0.31313131313131315 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.9797979797979798 ,initial_accumulator_value=0.31313131313131315 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.09090909090909091 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.7070707070707072].
2023-08-22 05:56:06,387 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 05:56:06,387 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 05:56:18,426 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=1.0, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.004849000000000001 ,use_ema=False ,ema_momentum=0.21212121212121213 ,rho=0.4141414141414142 ,epsilon=0.0005656566090909091 ,centered=True ,beta_1=0.797979797979798 ,beta_2=0.6262626262626263 ,learning_rate_power=-0.7272727272727273 ,initial_accumulator_value=0.15151515151515152 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.7676767676767677 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.5252525252525253].
2023-08-22 05:56:18,426 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=1.0, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.004849000000000001 ,use_ema=False ,ema_momentum=0.21212121212121213 ,rho=0.4141414141414142 ,epsilon=0.0005656566090909091 ,centered=True ,beta_1=0.797979797979798 ,beta_2=0.6262626262626263 ,learning_rate_power=-0.7272727272727273 ,initial_accumulator_value=0.15151515151515152 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.7676767676767677 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.5252525252525253].
2023-08-22 05:56:22,829 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.7070707070707072, momentum=0.4444444444444445 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.17171717171717174 ,rho=0.21212121212121213 ,epsilon=0.0002121212909090909 ,centered=True ,beta_1=0.3434343434343435 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.6464646464646465 ,l2_regularization_strength=0.32323232323232326 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.43434343434343436].
2023-08-22 05:56:22,830 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.7070707070707072, momentum=0.4444444444444445 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.17171717171717174 ,rho=0.21212121212121213 ,epsilon=0.0002121212909090909 ,centered=True ,beta_1=0.3434343434343435 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.6464646464646465 ,l2_regularization_strength=0.32323232323232326 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.43434343434343436].
2023-08-22 05:56:26,434 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.9393939393939394, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.009697 ,use_ema=False ,ema_momentum=0.6060606060606061 ,rho=0.19191919191919193 ,epsilon=0.00012121220909090907 ,centered=False ,beta_1=0.09090909090909091 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.22222222222222224 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=1.0 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.18181818181818182].
2023-08-22 05:56:26,434 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.9393939393939394, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.009697 ,use_ema=False ,ema_momentum=0.6060606060606061 ,rho=0.19191919191919193 ,epsilon=0.00012121220909090907 ,centered=False ,beta_1=0.09090909090909091 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.22222222222222224 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=1.0 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.18181818181818182].
2023-08-22 05:56:27,407 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.6262626262626263, momentum=0.4545454545454546 ,nesterov=False ,amsgrad=True ,weight_decay=0.006869000000000001 ,use_ema=False ,ema_momentum=0.7676767676767677 ,rho=0.030303030303030304 ,epsilon=0.0002929293636363636 ,centered=True ,beta_1=0.7070707070707072 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.7676767676767676 ,initial_accumulator_value=0.11111111111111112 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.32323232323232326 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.8686868686868687].
2023-08-22 05:56:27,407 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.6262626262626263, momentum=0.4545454545454546 ,nesterov=False ,amsgrad=True ,weight_decay=0.006869000000000001 ,use_ema=False ,ema_momentum=0.7676767676767677 ,rho=0.030303030303030304 ,epsilon=0.0002929293636363636 ,centered=True ,beta_1=0.7070707070707072 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.7676767676767676 ,initial_accumulator_value=0.11111111111111112 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.32323232323232326 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.8686868686868687].
2023-08-22 05:56:39,003 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.8484848484848485, momentum=0.37373737373737376 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6767676767676768 ,rho=0.5656565656565657 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.2222222222222222 ,initial_accumulator_value=0.31313131313131315 ,l1_regularization_strength=0.33333333333333337 ,l2_regularization_strength=0.26262626262626265 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.36363636363636365].
2023-08-22 05:56:39,004 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.8484848484848485, momentum=0.37373737373737376 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6767676767676768 ,rho=0.5656565656565657 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.2222222222222222 ,initial_accumulator_value=0.31313131313131315 ,l1_regularization_strength=0.33333333333333337 ,l2_regularization_strength=0.26262626262626265 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.36363636363636365].
2023-08-22 05:56:47,081 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.888888888888889, momentum=0.11111111111111112 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.42424242424242425 ,rho=0.3434343434343435 ,epsilon=8.080817272727271e-05 ,centered=True ,beta_1=0.8989898989898991 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.4747474747474748 ,l1_regularization_strength=0.595959595959596 ,l2_regularization_strength=0.6565656565656566 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.9494949494949496].
2023-08-22 05:56:47,081 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.888888888888889, momentum=0.11111111111111112 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.42424242424242425 ,rho=0.3434343434343435 ,epsilon=8.080817272727271e-05 ,centered=True ,beta_1=0.8989898989898991 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.4747474747474748 ,l1_regularization_strength=0.595959595959596 ,l2_regularization_strength=0.6565656565656566 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.9494949494949496].
2023-08-22 05:56:49,555 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.6767676767676768, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.030303030303030304 ,rho=0.6363636363636365 ,epsilon=0.0008181818363636363 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.42424242424242425].
2023-08-22 05:56:49,555 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.6767676767676768, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.030303030303030304 ,rho=0.6363636363636365 ,epsilon=0.0008181818363636363 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.42424242424242425].
2023-08-22 05:56:53,951 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.10101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0067680000000000014 ,use_ema=False ,ema_momentum=0.31313131313131315 ,rho=0.8989898989898991 ,epsilon=0.0007373737636363636 ,centered=False ,beta_1=0.4646464646464647 ,beta_2=0.8282828282828284 ,learning_rate_power=-0.5252525252525252 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.595959595959596 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.43434343434343436].
2023-08-22 05:56:53,951 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.10101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0067680000000000014 ,use_ema=False ,ema_momentum=0.31313131313131315 ,rho=0.8989898989898991 ,epsilon=0.0007373737636363636 ,centered=False ,beta_1=0.4646464646464647 ,beta_2=0.8282828282828284 ,learning_rate_power=-0.5252525252525252 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.595959595959596 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.43434343434343436].
2023-08-22 05:57:01,450 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.696969696969697, momentum=0.25252525252525254 ,nesterov=False ,amsgrad=False ,weight_decay=0.008788 ,use_ema=True ,ema_momentum=0.696969696969697 ,rho=0.4545454545454546 ,epsilon=0.0006262626636363636 ,centered=False ,beta_1=0.15151515151515152 ,beta_2=0.98989898989899 ,learning_rate_power=-0.7373737373737373 ,initial_accumulator_value=0.7373737373737375 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.26262626262626265 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.13131313131313133].
2023-08-22 05:57:01,450 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.696969696969697, momentum=0.25252525252525254 ,nesterov=False ,amsgrad=False ,weight_decay=0.008788 ,use_ema=True ,ema_momentum=0.696969696969697 ,rho=0.4545454545454546 ,epsilon=0.0006262626636363636 ,centered=False ,beta_1=0.15151515151515152 ,beta_2=0.98989898989899 ,learning_rate_power=-0.7373737373737373 ,initial_accumulator_value=0.7373737373737375 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.26262626262626265 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.13131313131313133].
2023-08-22 05:57:07,897 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.21212121212121213, momentum=0.38383838383838387 ,nesterov=False ,amsgrad=True ,weight_decay=0.005051000000000001 ,use_ema=True ,ema_momentum=0.6161616161616162 ,rho=0.33333333333333337 ,epsilon=0.0007878788090909091 ,centered=False ,beta_1=0.9191919191919192 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.31313131313131315 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.030303030303030304].
2023-08-22 05:57:07,897 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.21212121212121213, momentum=0.38383838383838387 ,nesterov=False ,amsgrad=True ,weight_decay=0.005051000000000001 ,use_ema=True ,ema_momentum=0.6161616161616162 ,rho=0.33333333333333337 ,epsilon=0.0007878788090909091 ,centered=False ,beta_1=0.9191919191919192 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.31313131313131315 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.030303030303030304].
2023-08-22 05:57:09,646 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.33333333333333337, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.5454545454545455 ,rho=0.7777777777777778 ,epsilon=0.0008989899090909091 ,centered=True ,beta_1=0.4545454545454546 ,beta_2=0.7070707070707072 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.686868686868687 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.5454545454545455].
2023-08-22 05:57:09,647 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.33333333333333337, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.5454545454545455 ,rho=0.7777777777777778 ,epsilon=0.0008989899090909091 ,centered=True ,beta_1=0.4545454545454546 ,beta_2=0.7070707070707072 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.686868686868687 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.5454545454545455].
2023-08-22 05:57:20,621 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.030303030303030304, momentum=0.18181818181818182 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.797979797979798 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.13131313131313133 ,l2_regularization_strength=0.26262626262626265 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.08080808080808081].
2023-08-22 05:57:20,621 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.030303030303030304, momentum=0.18181818181818182 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.797979797979798 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.13131313131313133 ,l2_regularization_strength=0.26262626262626265 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.08080808080808081].
2023-08-22 05:57:23,168 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.15151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0009100000000000001 ,use_ema=False ,ema_momentum=0.5555555555555556 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.9797979797979799 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.5757575757575758].
2023-08-22 05:57:23,168 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.15151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0009100000000000001 ,use_ema=False ,ema_momentum=0.5555555555555556 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.9797979797979799 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.5757575757575758].
2023-08-22 05:57:28,624 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.4040404040404041, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.7474747474747475 ,rho=0.9393939393939394 ,epsilon=0.00018181826363636362 ,centered=False ,beta_1=0.5858585858585859 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.17171717171717174 ,l1_regularization_strength=1.0 ,l2_regularization_strength=0.17171717171717174 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.5656565656565657].
2023-08-22 05:57:28,625 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.4040404040404041, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.7474747474747475 ,rho=0.9393939393939394 ,epsilon=0.00018181826363636362 ,centered=False ,beta_1=0.5858585858585859 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.17171717171717174 ,l1_regularization_strength=1.0 ,l2_regularization_strength=0.17171717171717174 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.5656565656565657].
2023-08-22 05:57:31,598 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.9191919191919192, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.26262626262626265 ,rho=0.5454545454545455 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.8181818181818182 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.3434343434343434 ,initial_accumulator_value=0.6060606060606061 ,l1_regularization_strength=0.6464646464646465 ,l2_regularization_strength=0.4747474747474748 ,l2_shrinkage_regularization_strength=0.12121212121212122 ,beta=0.4040404040404041].
2023-08-22 05:57:31,599 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.9191919191919192, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.26262626262626265 ,rho=0.5454545454545455 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.8181818181818182 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.3434343434343434 ,initial_accumulator_value=0.6060606060606061 ,l1_regularization_strength=0.6464646464646465 ,l2_regularization_strength=0.4747474747474748 ,l2_shrinkage_regularization_strength=0.12121212121212122 ,beta=0.4040404040404041].
2023-08-22 05:57:41,106 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.09090909090909091, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.007576000000000001 ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.36363636363636365 ,epsilon=0.0002828283545454545 ,centered=True ,beta_1=0.7676767676767677 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.696969696969697 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.8686868686868687 ,l2_shrinkage_regularization_strength=0.4646464646464647 ,beta=0.696969696969697].
2023-08-22 05:57:41,107 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.09090909090909091, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.007576000000000001 ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.36363636363636365 ,epsilon=0.0002828283545454545 ,centered=True ,beta_1=0.7676767676767677 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.696969696969697 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.8686868686868687 ,l2_shrinkage_regularization_strength=0.4646464646464647 ,beta=0.696969696969697].
2023-08-22 05:57:42,812 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.393939393939394, momentum=0.696969696969697 ,nesterov=False ,amsgrad=False ,weight_decay=0.0014150000000000002 ,use_ema=False ,ema_momentum=0.26262626262626265 ,rho=0.7171717171717172 ,epsilon=1e-10 ,centered=False ,beta_1=0.8181818181818182 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.9494949494949496 ,l1_regularization_strength=0.9393939393939394 ,l2_regularization_strength=0.6565656565656566 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.595959595959596].
2023-08-22 05:57:42,812 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.393939393939394, momentum=0.696969696969697 ,nesterov=False ,amsgrad=False ,weight_decay=0.0014150000000000002 ,use_ema=False ,ema_momentum=0.26262626262626265 ,rho=0.7171717171717172 ,epsilon=1e-10 ,centered=False ,beta_1=0.8181818181818182 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.9494949494949496 ,l1_regularization_strength=0.9393939393939394 ,l2_regularization_strength=0.6565656565656566 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.595959595959596].
2023-08-22 05:57:53,352 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.005051000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.4141414141414142 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.04040404040404041 ,l2_regularization_strength=0.494949494949495 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.9393939393939394].
2023-08-22 05:57:53,352 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.005051000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.4141414141414142 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.04040404040404041 ,l2_regularization_strength=0.494949494949495 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.9393939393939394].
2023-08-22 05:57:54,555 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.393939393939394, momentum=0.9696969696969697 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.08080808080808081 ,rho=0.13131313131313133 ,epsilon=0.0002929293636363636 ,centered=False ,beta_1=0.4141414141414142 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.8787878787878788 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.07070707070707072 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.020202020202020204].
2023-08-22 05:57:54,555 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.393939393939394, momentum=0.9696969696969697 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.08080808080808081 ,rho=0.13131313131313133 ,epsilon=0.0002929293636363636 ,centered=False ,beta_1=0.4141414141414142 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.8787878787878788 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.07070707070707072 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.020202020202020204].
2023-08-22 05:58:02,684 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6161616161616162, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6565656565656566 ,rho=0.6262626262626263 ,epsilon=9.09091818181818e-05 ,centered=False ,beta_1=0.787878787878788 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.2525252525252525 ,initial_accumulator_value=0.7474747474747475 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.05050505050505051 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.5858585858585859].
2023-08-22 05:58:02,684 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6161616161616162, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6565656565656566 ,rho=0.6262626262626263 ,epsilon=9.09091818181818e-05 ,centered=False ,beta_1=0.787878787878788 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.2525252525252525 ,initial_accumulator_value=0.7474747474747475 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.05050505050505051 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.5858585858585859].
2023-08-22 05:58:04,039 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.9595959595959597, momentum=0.9191919191919192 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6767676767676768 ,rho=0.0 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.5454545454545455 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.7474747474747475 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.8989898989898991].
2023-08-22 05:58:04,039 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.9595959595959597, momentum=0.9191919191919192 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6767676767676768 ,rho=0.0 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.5454545454545455 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.7474747474747475 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.8989898989898991].
2023-08-22 05:58:12,860 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.4040404040404041, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0014150000000000002 ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.31313131313131315 ,epsilon=0.0006464646818181818 ,centered=True ,beta_1=0.42424242424242425 ,beta_2=0.43434343434343436 ,learning_rate_power=-0.3434343434343434 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.7474747474747475 ,l2_regularization_strength=0.6161616161616162 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.16161616161616163].
2023-08-22 05:58:12,860 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.4040404040404041, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0014150000000000002 ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.31313131313131315 ,epsilon=0.0006464646818181818 ,centered=True ,beta_1=0.42424242424242425 ,beta_2=0.43434343434343436 ,learning_rate_power=-0.3434343434343434 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.7474747474747475 ,l2_regularization_strength=0.6161616161616162 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.16161616161616163].
2023-08-22 05:58:15,679 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8787878787878789, momentum=0.04040404040404041 ,nesterov=False ,amsgrad=False ,weight_decay=0.008485000000000001 ,use_ema=True ,ema_momentum=0.787878787878788 ,rho=0.888888888888889 ,epsilon=0.0002222223 ,centered=True ,beta_1=0.2828282828282829 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.48484848484848486 ,l2_shrinkage_regularization_strength=0.9696969696969697 ,beta=0.21212121212121213].
2023-08-22 05:58:15,680 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8787878787878789, momentum=0.04040404040404041 ,nesterov=False ,amsgrad=False ,weight_decay=0.008485000000000001 ,use_ema=True ,ema_momentum=0.787878787878788 ,rho=0.888888888888889 ,epsilon=0.0002222223 ,centered=True ,beta_1=0.2828282828282829 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.48484848484848486 ,l2_shrinkage_regularization_strength=0.9696969696969697 ,beta=0.21212121212121213].
2023-08-22 05:58:24,164 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.24242424242424243, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0065660000000000015 ,use_ema=False ,ema_momentum=0.6767676767676768 ,rho=0.5252525252525253 ,epsilon=0.0006969697272727273 ,centered=False ,beta_1=0.7777777777777778 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.2525252525252525 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.38383838383838387 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.6464646464646465].
2023-08-22 05:58:24,164 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.24242424242424243, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0065660000000000015 ,use_ema=False ,ema_momentum=0.6767676767676768 ,rho=0.5252525252525253 ,epsilon=0.0006969697272727273 ,centered=False ,beta_1=0.7777777777777778 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.2525252525252525 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.38383838383838387 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.6464646464646465].
2023-08-22 05:58:30,474 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.6363636363636365, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3434343434343435 ,rho=0.22222222222222224 ,epsilon=0.0009898989909090908 ,centered=True ,beta_1=1.0 ,beta_2=0.7777777777777778 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.4444444444444445 ,l1_regularization_strength=0.33333333333333337 ,l2_regularization_strength=0.9090909090909092 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.8787878787878789].
2023-08-22 05:58:30,474 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.6363636363636365, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3434343434343435 ,rho=0.22222222222222224 ,epsilon=0.0009898989909090908 ,centered=True ,beta_1=1.0 ,beta_2=0.7777777777777778 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.4444444444444445 ,l1_regularization_strength=0.33333333333333337 ,l2_regularization_strength=0.9090909090909092 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.8787878787878789].
2023-08-22 05:58:36,200 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.6767676767676768, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0025260000000000005 ,use_ema=False ,ema_momentum=0.6666666666666667 ,rho=0.4141414141414142 ,epsilon=0.00012121220909090907 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.26262626262626254 ,initial_accumulator_value=0.08080808080808081 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.38383838383838387 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.686868686868687].
2023-08-22 05:58:36,201 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.6767676767676768, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0025260000000000005 ,use_ema=False ,ema_momentum=0.6666666666666667 ,rho=0.4141414141414142 ,epsilon=0.00012121220909090907 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.26262626262626254 ,initial_accumulator_value=0.08080808080808081 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.38383838383838387 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.686868686868687].
2023-08-22 05:58:37,891 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.36363636363636365 ,nesterov=False ,amsgrad=True ,weight_decay=0.005758000000000001 ,use_ema=False ,ema_momentum=0.6363636363636365 ,rho=0.7575757575757577 ,epsilon=0.00014141422727272727 ,centered=True ,beta_1=0.10101010101010102 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.6161616161616162 ,l2_regularization_strength=0.4040404040404041 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.7474747474747475].
2023-08-22 05:58:37,891 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.36363636363636365 ,nesterov=False ,amsgrad=True ,weight_decay=0.005758000000000001 ,use_ema=False ,ema_momentum=0.6363636363636365 ,rho=0.7575757575757577 ,epsilon=0.00014141422727272727 ,centered=True ,beta_1=0.10101010101010102 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.6161616161616162 ,l2_regularization_strength=0.4040404040404041 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.7474747474747475].
2023-08-22 05:58:44,102 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.7575757575757577, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.5353535353535354 ,rho=0.5151515151515152 ,epsilon=0.0003636364272727272 ,centered=True ,beta_1=0.11111111111111112 ,beta_2=0.11111111111111112 ,learning_rate_power=-1.0 ,initial_accumulator_value=0.494949494949495 ,l1_regularization_strength=0.3434343434343435 ,l2_regularization_strength=0.595959595959596 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.4747474747474748].
2023-08-22 05:58:44,102 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.7575757575757577, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.5353535353535354 ,rho=0.5151515151515152 ,epsilon=0.0003636364272727272 ,centered=True ,beta_1=0.11111111111111112 ,beta_2=0.11111111111111112 ,learning_rate_power=-1.0 ,initial_accumulator_value=0.494949494949495 ,l1_regularization_strength=0.3434343434343435 ,l2_regularization_strength=0.595959595959596 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.4747474747474748].
2023-08-22 05:58:51,387 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.19191919191919193, momentum=0.595959595959596 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6565656565656566 ,rho=0.12121212121212122 ,epsilon=0.0009595959636363636 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.4545454545454546 ,learning_rate_power=-0.9191919191919192 ,initial_accumulator_value=0.8484848484848485 ,l1_regularization_strength=0.5656565656565657 ,l2_regularization_strength=0.020202020202020204 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.6464646464646465].
2023-08-22 05:58:51,388 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.19191919191919193, momentum=0.595959595959596 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6565656565656566 ,rho=0.12121212121212122 ,epsilon=0.0009595959636363636 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.4545454545454546 ,learning_rate_power=-0.9191919191919192 ,initial_accumulator_value=0.8484848484848485 ,l1_regularization_strength=0.5656565656565657 ,l2_regularization_strength=0.020202020202020204 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.6464646464646465].
2023-08-22 05:58:57,993 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.5353535353535354, momentum=0.38383838383838387 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.19191919191919193 ,rho=0.4040404040404041 ,epsilon=0.0009393939454545454 ,centered=False ,beta_1=0.4141414141414142 ,beta_2=0.7373737373737375 ,learning_rate_power=-0.9191919191919192 ,initial_accumulator_value=0.5757575757575758 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.6161616161616162 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.4646464646464647].
2023-08-22 05:58:57,993 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.5353535353535354, momentum=0.38383838383838387 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.19191919191919193 ,rho=0.4040404040404041 ,epsilon=0.0009393939454545454 ,centered=False ,beta_1=0.4141414141414142 ,beta_2=0.7373737373737375 ,learning_rate_power=-0.9191919191919192 ,initial_accumulator_value=0.5757575757575758 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.6161616161616162 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.4646464646464647].
2023-08-22 05:58:59,446 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.25252525252525254, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.00010200000000000001 ,use_ema=True ,ema_momentum=0.8585858585858587 ,rho=0.696969696969697 ,epsilon=7.070716363636363e-05 ,centered=False ,beta_1=0.32323232323232326 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.595959595959596 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.38383838383838387 ,l2_shrinkage_regularization_strength=0.010101010101010102 ,beta=0.04040404040404041].
2023-08-22 05:58:59,447 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.25252525252525254, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.00010200000000000001 ,use_ema=True ,ema_momentum=0.8585858585858587 ,rho=0.696969696969697 ,epsilon=7.070716363636363e-05 ,centered=False ,beta_1=0.32323232323232326 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.595959595959596 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.38383838383838387 ,l2_shrinkage_regularization_strength=0.010101010101010102 ,beta=0.04040404040404041].
2023-08-22 05:59:04,360 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.98989898989899, momentum=0.43434343434343436 ,nesterov=False ,amsgrad=True ,weight_decay=0.006162000000000001 ,use_ema=True ,ema_momentum=0.5353535353535354 ,rho=0.18181818181818182 ,epsilon=2.020211818181818e-05 ,centered=True ,beta_1=0.33333333333333337 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.8383838383838383 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.36363636363636365 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.6565656565656566].
2023-08-22 05:59:04,360 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.98989898989899, momentum=0.43434343434343436 ,nesterov=False ,amsgrad=True ,weight_decay=0.006162000000000001 ,use_ema=True ,ema_momentum=0.5353535353535354 ,rho=0.18181818181818182 ,epsilon=2.020211818181818e-05 ,centered=True ,beta_1=0.33333333333333337 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.8383838383838383 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.36363636363636365 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.6565656565656566].
2023-08-22 05:59:13,268 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.9494949494949496, momentum=0.5353535353535354 ,nesterov=False ,amsgrad=False ,weight_decay=0.01 ,use_ema=True ,ema_momentum=0.9191919191919192 ,rho=0.6262626262626263 ,epsilon=0.0005151515636363636 ,centered=False ,beta_1=0.11111111111111112 ,beta_2=0.08080808080808081 ,learning_rate_power=-0.8383838383838383 ,initial_accumulator_value=0.26262626262626265 ,l1_regularization_strength=0.19191919191919193 ,l2_regularization_strength=0.29292929292929293 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.030303030303030304].
2023-08-22 05:59:13,268 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.9494949494949496, momentum=0.5353535353535354 ,nesterov=False ,amsgrad=False ,weight_decay=0.01 ,use_ema=True ,ema_momentum=0.9191919191919192 ,rho=0.6262626262626263 ,epsilon=0.0005151515636363636 ,centered=False ,beta_1=0.11111111111111112 ,beta_2=0.08080808080808081 ,learning_rate_power=-0.8383838383838383 ,initial_accumulator_value=0.26262626262626265 ,l1_regularization_strength=0.19191919191919193 ,l2_regularization_strength=0.29292929292929293 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.030303030303030304].
2023-08-22 05:59:20,100 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.5454545454545455 ,rho=0.4141414141414142 ,epsilon=1e-10 ,centered=True ,beta_1=0.393939393939394 ,beta_2=0.787878787878788 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.9595959595959597 ,l2_regularization_strength=0.2828282828282829 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.8787878787878789].
2023-08-22 05:59:20,101 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.5454545454545455 ,rho=0.4141414141414142 ,epsilon=1e-10 ,centered=True ,beta_1=0.393939393939394 ,beta_2=0.787878787878788 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.9595959595959597 ,l2_regularization_strength=0.2828282828282829 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.8787878787878789].
2023-08-22 05:59:22,947 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=1.0, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.7070707070707072 ,rho=0.3434343434343435 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.6060606060606061 ,beta_2=0.8989898989898991 ,learning_rate_power=-0.6868686868686869 ,initial_accumulator_value=0.797979797979798 ,l1_regularization_strength=0.30303030303030304 ,l2_regularization_strength=0.13131313131313133 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.4545454545454546].
2023-08-22 05:59:22,948 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=1.0, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.7070707070707072 ,rho=0.3434343434343435 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.6060606060606061 ,beta_2=0.8989898989898991 ,learning_rate_power=-0.6868686868686869 ,initial_accumulator_value=0.797979797979798 ,l1_regularization_strength=0.30303030303030304 ,l2_regularization_strength=0.13131313131313133 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.4545454545454546].
2023-08-22 05:59:27,173 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=1.0, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.05050505050505051 ,rho=0.6666666666666667 ,epsilon=0.0003030303727272727 ,centered=True ,beta_1=0.020202020202020204 ,beta_2=0.393939393939394 ,learning_rate_power=-0.404040404040404 ,initial_accumulator_value=0.3535353535353536 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5353535353535354 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.7676767676767677].
2023-08-22 05:59:27,174 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=1.0, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.05050505050505051 ,rho=0.6666666666666667 ,epsilon=0.0003030303727272727 ,centered=True ,beta_1=0.020202020202020204 ,beta_2=0.393939393939394 ,learning_rate_power=-0.404040404040404 ,initial_accumulator_value=0.3535353535353536 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5353535353535354 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.7676767676767677].
2023-08-22 05:59:37,020 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.32323232323232326, momentum=0.19191919191919193 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.11111111111111112 ,rho=0.5454545454545455 ,epsilon=0.0007878788090909091 ,centered=True ,beta_1=0.7070707070707072 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.31313131313131304 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.4444444444444445 ,l2_regularization_strength=0.06060606060606061 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.13131313131313133].
2023-08-22 05:59:37,021 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.32323232323232326, momentum=0.19191919191919193 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.11111111111111112 ,rho=0.5454545454545455 ,epsilon=0.0007878788090909091 ,centered=True ,beta_1=0.7070707070707072 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.31313131313131304 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.4444444444444445 ,l2_regularization_strength=0.06060606060606061 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.13131313131313133].
2023-08-22 05:59:42,190 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.3434343434343435, momentum=0.7676767676767677 ,nesterov=True ,amsgrad=True ,weight_decay=0.004243000000000001 ,use_ema=True ,ema_momentum=0.14141414141414144 ,rho=0.32323232323232326 ,epsilon=0.0009898989909090908 ,centered=True ,beta_1=0.8787878787878789 ,beta_2=0.7373737373737375 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.4444444444444445 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.11111111111111112 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.13131313131313133].
2023-08-22 05:59:42,190 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.3434343434343435, momentum=0.7676767676767677 ,nesterov=True ,amsgrad=True ,weight_decay=0.004243000000000001 ,use_ema=True ,ema_momentum=0.14141414141414144 ,rho=0.32323232323232326 ,epsilon=0.0009898989909090908 ,centered=True ,beta_1=0.8787878787878789 ,beta_2=0.7373737373737375 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.4444444444444445 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.11111111111111112 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.13131313131313133].
2023-08-22 05:59:44,067 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.14141414141414144, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.009394000000000001 ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.8080808080808082 ,epsilon=0.0009898989909090908 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.5555555555555556 ,learning_rate_power=-0.46464646464646464 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.4545454545454546 ,l2_regularization_strength=0.37373737373737376 ,l2_shrinkage_regularization_strength=0.9696969696969697 ,beta=0.43434343434343436].
2023-08-22 05:59:44,067 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.14141414141414144, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.009394000000000001 ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.8080808080808082 ,epsilon=0.0009898989909090908 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.5555555555555556 ,learning_rate_power=-0.46464646464646464 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.4545454545454546 ,l2_regularization_strength=0.37373737373737376 ,l2_shrinkage_regularization_strength=0.9696969696969697 ,beta=0.43434343434343436].
2023-08-22 05:59:53,720 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.7171717171717172, momentum=0.9090909090909092 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8989898989898991 ,rho=0.494949494949495 ,epsilon=0.00025252532727272723 ,centered=False ,beta_1=0.3535353535353536 ,beta_2=0.4646464646464647 ,learning_rate_power=-0.8080808080808081 ,initial_accumulator_value=0.33333333333333337 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.3535353535353536 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=1.0].
2023-08-22 05:59:53,721 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.7171717171717172, momentum=0.9090909090909092 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8989898989898991 ,rho=0.494949494949495 ,epsilon=0.00025252532727272723 ,centered=False ,beta_1=0.3535353535353536 ,beta_2=0.4646464646464647 ,learning_rate_power=-0.8080808080808081 ,initial_accumulator_value=0.33333333333333337 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.3535353535353536 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=1.0].
2023-08-22 05:59:59,148 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.8585858585858587, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0022230000000000006 ,use_ema=True ,ema_momentum=0.27272727272727276 ,rho=0.8686868686868687 ,epsilon=0.0008282828454545454 ,centered=True ,beta_1=0.494949494949495 ,beta_2=0.15151515151515152 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.5757575757575758 ,l1_regularization_strength=0.37373737373737376 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.6363636363636365].
2023-08-22 05:59:59,149 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.8585858585858587, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0022230000000000006 ,use_ema=True ,ema_momentum=0.27272727272727276 ,rho=0.8686868686868687 ,epsilon=0.0008282828454545454 ,centered=True ,beta_1=0.494949494949495 ,beta_2=0.15151515151515152 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.5757575757575758 ,l1_regularization_strength=0.37373737373737376 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.6363636363636365].
2023-08-22 06:00:04,332 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.4040404040404041, momentum=0.31313131313131315 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5151515151515152 ,rho=0.4747474747474748 ,epsilon=0.0009292929363636363 ,centered=True ,beta_1=0.12121212121212122 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.3535353535353536 ,l1_regularization_strength=0.010101010101010102 ,l2_regularization_strength=0.6565656565656566 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.14141414141414144].
2023-08-22 06:00:04,332 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.4040404040404041, momentum=0.31313131313131315 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5151515151515152 ,rho=0.4747474747474748 ,epsilon=0.0009292929363636363 ,centered=True ,beta_1=0.12121212121212122 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.3535353535353536 ,l1_regularization_strength=0.010101010101010102 ,l2_regularization_strength=0.6565656565656566 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.14141414141414144].
2023-08-22 06:00:04,779 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.8989898989898991, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.696969696969697 ,rho=0.8282828282828284 ,epsilon=0.0008080808272727272 ,centered=False ,beta_1=0.43434343434343436 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.09090909090909083 ,initial_accumulator_value=0.15151515151515152 ,l1_regularization_strength=0.7474747474747475 ,l2_regularization_strength=0.020202020202020204 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.26262626262626265].
2023-08-22 06:00:04,780 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.8989898989898991, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.696969696969697 ,rho=0.8282828282828284 ,epsilon=0.0008080808272727272 ,centered=False ,beta_1=0.43434343434343436 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.09090909090909083 ,initial_accumulator_value=0.15151515151515152 ,l1_regularization_strength=0.7474747474747475 ,l2_regularization_strength=0.020202020202020204 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.26262626262626265].
2023-08-22 06:00:14,351 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.9393939393939394, momentum=0.4646464646464647 ,nesterov=True ,amsgrad=False ,weight_decay=0.0032330000000000006 ,use_ema=False ,ema_momentum=0.494949494949495 ,rho=0.3535353535353536 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.19191919191919193 ,learning_rate_power=-0.8383838383838383 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.2828282828282829 ,l2_regularization_strength=0.25252525252525254 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.7474747474747475].
2023-08-22 06:00:14,352 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.9393939393939394, momentum=0.4646464646464647 ,nesterov=True ,amsgrad=False ,weight_decay=0.0032330000000000006 ,use_ema=False ,ema_momentum=0.494949494949495 ,rho=0.3535353535353536 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.19191919191919193 ,learning_rate_power=-0.8383838383838383 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.2828282828282829 ,l2_regularization_strength=0.25252525252525254 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.7474747474747475].
2023-08-22 06:00:26,962 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.8080808080808082, momentum=0.22222222222222224 ,nesterov=True ,amsgrad=True ,weight_decay=0.0031320000000000007 ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.31313131313131315 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.6060606060606061 ,learning_rate_power=-0.5252525252525252 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.9292929292929294].
2023-08-22 06:00:26,962 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.8080808080808082, momentum=0.22222222222222224 ,nesterov=True ,amsgrad=True ,weight_decay=0.0031320000000000007 ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.31313131313131315 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.6060606060606061 ,learning_rate_power=-0.5252525252525252 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.9292929292929294].
2023-08-22 06:00:27,412 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.8282828282828284, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0011120000000000001 ,use_ema=False ,ema_momentum=0.686868686868687 ,rho=0.5050505050505051 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.8080808080808082 ,beta_2=0.38383838383838387 ,learning_rate_power=-0.2929292929292928 ,initial_accumulator_value=0.17171717171717174 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7676767676767677 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.14141414141414144].
2023-08-22 06:00:27,412 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.8282828282828284, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0011120000000000001 ,use_ema=False ,ema_momentum=0.686868686868687 ,rho=0.5050505050505051 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.8080808080808082 ,beta_2=0.38383838383838387 ,learning_rate_power=-0.2929292929292928 ,initial_accumulator_value=0.17171717171717174 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7676767676767677 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.14141414141414144].
2023-08-22 06:00:27,473 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.14141414141414144, momentum=0.7777777777777778 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6666666666666667 ,rho=0.32323232323232326 ,epsilon=0.0005353535818181818 ,centered=False ,beta_1=0.6363636363636365 ,beta_2=0.8181818181818182 ,learning_rate_power=-0.303030303030303 ,initial_accumulator_value=0.27272727272727276 ,l1_regularization_strength=0.9797979797979799 ,l2_regularization_strength=0.797979797979798 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.6262626262626263].
2023-08-22 06:00:27,473 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.14141414141414144, momentum=0.7777777777777778 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6666666666666667 ,rho=0.32323232323232326 ,epsilon=0.0005353535818181818 ,centered=False ,beta_1=0.6363636363636365 ,beta_2=0.8181818181818182 ,learning_rate_power=-0.303030303030303 ,initial_accumulator_value=0.27272727272727276 ,l1_regularization_strength=0.9797979797979799 ,l2_regularization_strength=0.797979797979798 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.6262626262626263].
2023-08-22 06:00:36,206 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8080808080808082 ,rho=0.09090909090909091 ,epsilon=0.0001919192727272727 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.9595959595959597 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.7575757575757577].
2023-08-22 06:00:36,207 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8080808080808082 ,rho=0.09090909090909091 ,epsilon=0.0001919192727272727 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.9595959595959597 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.7575757575757577].
2023-08-22 06:00:48,815 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.27272727272727276 ,nesterov=False ,amsgrad=True ,weight_decay=0.0032330000000000006 ,use_ema=False ,ema_momentum=0.6060606060606061 ,rho=0.16161616161616163 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.9191919191919192 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.696969696969697 ,l2_regularization_strength=0.4646464646464647 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.7171717171717172].
2023-08-22 06:00:48,816 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.27272727272727276 ,nesterov=False ,amsgrad=True ,weight_decay=0.0032330000000000006 ,use_ema=False ,ema_momentum=0.6060606060606061 ,rho=0.16161616161616163 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.9191919191919192 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.696969696969697 ,l2_regularization_strength=0.4646464646464647 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.7171717171717172].
2023-08-22 06:00:53,815 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.48484848484848486 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:00:53,816 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.48484848484848486 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:00:54,761 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.010101010101010102, momentum=0.9696969696969697 ,nesterov=False ,amsgrad=True ,weight_decay=0.006970000000000001 ,use_ema=False ,ema_momentum=0.9797979797979799 ,rho=0.12121212121212122 ,epsilon=0.0002929293636363636 ,centered=False ,beta_1=0.3434343434343435 ,beta_2=0.9090909090909092 ,learning_rate_power=-0.6868686868686869 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.16161616161616163 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.24242424242424243].
2023-08-22 06:00:54,761 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.010101010101010102, momentum=0.9696969696969697 ,nesterov=False ,amsgrad=True ,weight_decay=0.006970000000000001 ,use_ema=False ,ema_momentum=0.9797979797979799 ,rho=0.12121212121212122 ,epsilon=0.0002929293636363636 ,centered=False ,beta_1=0.3434343434343435 ,beta_2=0.9090909090909092 ,learning_rate_power=-0.6868686868686869 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.16161616161616163 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.24242424242424243].
2023-08-22 06:00:58,245 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.8686868686868687, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0017180000000000001 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.9292929292929294 ,epsilon=0.0005050505545454545 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.22222222222222224 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.18181818181818182 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.6262626262626263].
2023-08-22 06:00:58,245 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.8686868686868687, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0017180000000000001 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.9292929292929294 ,epsilon=0.0005050505545454545 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.22222222222222224 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.18181818181818182 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.6262626262626263].
2023-08-22 06:01:09,803 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.797979797979798, momentum=0.393939393939394 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6161616161616162 ,rho=0.98989898989899 ,epsilon=0.0004242424818181818 ,centered=False ,beta_1=0.37373737373737376 ,beta_2=0.20202020202020204 ,learning_rate_power=-0.8080808080808081 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.5656565656565657 ,l2_regularization_strength=0.5151515151515152 ,l2_shrinkage_regularization_strength=0.15151515151515152 ,beta=0.7676767676767677].
2023-08-22 06:01:09,803 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.797979797979798, momentum=0.393939393939394 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6161616161616162 ,rho=0.98989898989899 ,epsilon=0.0004242424818181818 ,centered=False ,beta_1=0.37373737373737376 ,beta_2=0.20202020202020204 ,learning_rate_power=-0.8080808080808081 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.5656565656565657 ,l2_regularization_strength=0.5151515151515152 ,l2_shrinkage_regularization_strength=0.15151515151515152 ,beta=0.7676767676767677].
2023-08-22 06:01:15,622 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.19191919191919193, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.005960000000000001 ,use_ema=True ,ema_momentum=0.686868686868687 ,rho=0.8989898989898991 ,epsilon=0.0005050505545454545 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.31313131313131315 ,learning_rate_power=-0.4545454545454545 ,initial_accumulator_value=0.20202020202020204 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.8484848484848485].
2023-08-22 06:01:15,622 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.19191919191919193, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.005960000000000001 ,use_ema=True ,ema_momentum=0.686868686868687 ,rho=0.8989898989898991 ,epsilon=0.0005050505545454545 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.31313131313131315 ,learning_rate_power=-0.4545454545454545 ,initial_accumulator_value=0.20202020202020204 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.8484848484848485].
2023-08-22 06:01:16,114 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.7171717171717172, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0034350000000000006 ,use_ema=False ,ema_momentum=0.8989898989898991 ,rho=0.393939393939394 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.27272727272727276 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.5252525252525252 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.6060606060606061 ,l2_regularization_strength=0.30303030303030304 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.22222222222222224].
2023-08-22 06:01:16,114 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.7171717171717172, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0034350000000000006 ,use_ema=False ,ema_momentum=0.8989898989898991 ,rho=0.393939393939394 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.27272727272727276 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.5252525252525252 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.6060606060606061 ,l2_regularization_strength=0.30303030303030304 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.22222222222222224].
2023-08-22 06:01:20,057 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.11111111111111112, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=0.00020300000000000003 ,use_ema=True ,ema_momentum=0.787878787878788 ,rho=0.4747474747474748 ,epsilon=0.0009696969727272727 ,centered=False ,beta_1=0.32323232323232326 ,beta_2=0.797979797979798 ,learning_rate_power=-0.9292929292929293 ,initial_accumulator_value=0.06060606060606061 ,l1_regularization_strength=0.4040404040404041 ,l2_regularization_strength=0.20202020202020204 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.8080808080808082].
2023-08-22 06:01:20,057 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.11111111111111112, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=0.00020300000000000003 ,use_ema=True ,ema_momentum=0.787878787878788 ,rho=0.4747474747474748 ,epsilon=0.0009696969727272727 ,centered=False ,beta_1=0.32323232323232326 ,beta_2=0.797979797979798 ,learning_rate_power=-0.9292929292929293 ,initial_accumulator_value=0.06060606060606061 ,l1_regularization_strength=0.4040404040404041 ,l2_regularization_strength=0.20202020202020204 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.8080808080808082].
2023-08-22 06:01:30,321 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.3434343434343435, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.030303030303030304 ,rho=1.0 ,epsilon=0.0005555556 ,centered=False ,beta_1=0.3535353535353536 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.595959595959596 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.12121212121212122].
2023-08-22 06:01:30,321 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.3434343434343435, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.030303030303030304 ,rho=1.0 ,epsilon=0.0005555556 ,centered=False ,beta_1=0.3535353535353536 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.595959595959596 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.12121212121212122].
2023-08-22 06:01:39,274 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.09090909090909091, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.30303030303030304 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.8989898989898991 ,beta_2=0.6464646464646465 ,learning_rate_power=-0.11111111111111105 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.686868686868687 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.31313131313131315].
2023-08-22 06:01:39,274 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.09090909090909091, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.30303030303030304 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.8989898989898991 ,beta_2=0.6464646464646465 ,learning_rate_power=-0.11111111111111105 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.686868686868687 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.31313131313131315].
2023-08-22 06:01:43,829 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.14141414141414144, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6666666666666667 ,epsilon=0.00017171725454545453 ,centered=False ,beta_1=0.9292929292929294 ,beta_2=0.0 ,learning_rate_power=-0.08080808080808077 ,initial_accumulator_value=0.15151515151515152 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.9797979797979799 ,l2_shrinkage_regularization_strength=0.7272727272727273 ,beta=0.48484848484848486].
2023-08-22 06:01:43,830 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.14141414141414144, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6666666666666667 ,epsilon=0.00017171725454545453 ,centered=False ,beta_1=0.9292929292929294 ,beta_2=0.0 ,learning_rate_power=-0.08080808080808077 ,initial_accumulator_value=0.15151515151515152 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.9797979797979799 ,l2_shrinkage_regularization_strength=0.7272727272727273 ,beta=0.48484848484848486].
2023-08-22 06:01:43,853 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.9494949494949496, momentum=0.7474747474747475 ,nesterov=True ,amsgrad=True ,weight_decay=0.006465000000000001 ,use_ema=True ,ema_momentum=0.8282828282828284 ,rho=0.9797979797979799 ,epsilon=0.0002727273454545454 ,centered=False ,beta_1=0.797979797979798 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.16161616161616163 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.8989898989898991].
2023-08-22 06:01:43,853 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.9494949494949496, momentum=0.7474747474747475 ,nesterov=True ,amsgrad=True ,weight_decay=0.006465000000000001 ,use_ema=True ,ema_momentum=0.8282828282828284 ,rho=0.9797979797979799 ,epsilon=0.0002727273454545454 ,centered=False ,beta_1=0.797979797979798 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.16161616161616163 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.8989898989898991].
2023-08-22 06:01:50,965 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.696969696969697, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5252525252525253 ,rho=0.3535353535353536 ,epsilon=0.0009898989909090908 ,centered=False ,beta_1=0.5151515151515152 ,beta_2=0.3434343434343435 ,learning_rate_power=-0.36363636363636354 ,initial_accumulator_value=0.12121212121212122 ,l1_regularization_strength=0.8585858585858587 ,l2_regularization_strength=0.16161616161616163 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.7171717171717172].
2023-08-22 06:01:50,966 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.696969696969697, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5252525252525253 ,rho=0.3535353535353536 ,epsilon=0.0009898989909090908 ,centered=False ,beta_1=0.5151515151515152 ,beta_2=0.3434343434343435 ,learning_rate_power=-0.36363636363636354 ,initial_accumulator_value=0.12121212121212122 ,l1_regularization_strength=0.8585858585858587 ,l2_regularization_strength=0.16161616161616163 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.7171717171717172].
2023-08-22 06:02:01,092 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.16161616161616163, momentum=0.36363636363636365 ,nesterov=True ,amsgrad=True ,weight_decay=0.001213 ,use_ema=False ,ema_momentum=0.06060606060606061 ,rho=0.9494949494949496 ,epsilon=0.0006565656909090909 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.696969696969697 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.4040404040404041 ,l2_regularization_strength=0.43434343434343436 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.6666666666666667].
2023-08-22 06:02:01,093 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.16161616161616163, momentum=0.36363636363636365 ,nesterov=True ,amsgrad=True ,weight_decay=0.001213 ,use_ema=False ,ema_momentum=0.06060606060606061 ,rho=0.9494949494949496 ,epsilon=0.0006565656909090909 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.696969696969697 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.4040404040404041 ,l2_regularization_strength=0.43434343434343436 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.6666666666666667].
2023-08-22 06:02:04,625 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.010101010101010102, momentum=0.4141414141414142 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.15151515151515152 ,rho=0.8585858585858587 ,epsilon=0.0008282828454545454 ,centered=True ,beta_1=0.16161616161616163 ,beta_2=1.0 ,learning_rate_power=-0.11111111111111105 ,initial_accumulator_value=0.37373737373737376 ,l1_regularization_strength=0.5252525252525253 ,l2_regularization_strength=0.7777777777777778 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.29292929292929293].
2023-08-22 06:02:04,625 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.010101010101010102, momentum=0.4141414141414142 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.15151515151515152 ,rho=0.8585858585858587 ,epsilon=0.0008282828454545454 ,centered=True ,beta_1=0.16161616161616163 ,beta_2=1.0 ,learning_rate_power=-0.11111111111111105 ,initial_accumulator_value=0.37373737373737376 ,l1_regularization_strength=0.5252525252525253 ,l2_regularization_strength=0.7777777777777778 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.29292929292929293].
2023-08-22 06:02:12,948 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.5858585858585859, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.005051000000000001 ,use_ema=True ,ema_momentum=0.12121212121212122 ,rho=0.09090909090909091 ,epsilon=0.0008686868818181818 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.5656565656565657 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.22222222222222224 ,l1_regularization_strength=0.7676767676767677 ,l2_regularization_strength=0.6464646464646465 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.6565656565656566].
2023-08-22 06:02:12,948 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.5858585858585859, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.005051000000000001 ,use_ema=True ,ema_momentum=0.12121212121212122 ,rho=0.09090909090909091 ,epsilon=0.0008686868818181818 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.5656565656565657 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.22222222222222224 ,l1_regularization_strength=0.7676767676767677 ,l2_regularization_strength=0.6464646464646465 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.6565656565656566].
2023-08-22 06:02:22,286 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.04040404040404041, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=True ,weight_decay=0.004041 ,use_ema=True ,ema_momentum=0.7171717171717172 ,rho=0.05050505050505051 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.23232323232323235 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.7575757575757577 ,l2_regularization_strength=0.16161616161616163 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.6464646464646465].
2023-08-22 06:02:22,286 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.04040404040404041, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=True ,weight_decay=0.004041 ,use_ema=True ,ema_momentum=0.7171717171717172 ,rho=0.05050505050505051 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.23232323232323235 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.7575757575757577 ,l2_regularization_strength=0.16161616161616163 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.6464646464646465].
2023-08-22 06:02:31,354 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.8282828282828284, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.003738000000000001 ,use_ema=False ,ema_momentum=0.6767676767676768 ,rho=0.595959595959596 ,epsilon=9.09091818181818e-05 ,centered=True ,beta_1=0.5252525252525253 ,beta_2=0.29292929292929293 ,learning_rate_power=-0.2222222222222222 ,initial_accumulator_value=0.05050505050505051 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.30303030303030304 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.2828282828282829].
2023-08-22 06:02:31,354 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.8282828282828284, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.003738000000000001 ,use_ema=False ,ema_momentum=0.6767676767676768 ,rho=0.595959595959596 ,epsilon=9.09091818181818e-05 ,centered=True ,beta_1=0.5252525252525253 ,beta_2=0.29292929292929293 ,learning_rate_power=-0.2222222222222222 ,initial_accumulator_value=0.05050505050505051 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.30303030303030304 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.2828282828282829].
2023-08-22 06:02:31,861 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.6666666666666667, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.06060606060606061 ,rho=0.5858585858585859 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.18181818181818182 ,beta_2=0.36363636363636365 ,learning_rate_power=-0.3939393939393939 ,initial_accumulator_value=0.05050505050505051 ,l1_regularization_strength=0.7474747474747475 ,l2_regularization_strength=0.6464646464646465 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.7272727272727273].
2023-08-22 06:02:31,862 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.6666666666666667, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.06060606060606061 ,rho=0.5858585858585859 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.18181818181818182 ,beta_2=0.36363636363636365 ,learning_rate_power=-0.3939393939393939 ,initial_accumulator_value=0.05050505050505051 ,l1_regularization_strength=0.7474747474747475 ,l2_regularization_strength=0.6464646464646465 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.7272727272727273].
2023-08-22 06:02:44,214 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.9292929292929294, momentum=0.3434343434343435 ,nesterov=True ,amsgrad=True ,weight_decay=0.004647000000000001 ,use_ema=False ,ema_momentum=0.787878787878788 ,rho=0.9292929292929294 ,epsilon=0.000454545509090909 ,centered=True ,beta_1=0.8181818181818182 ,beta_2=0.010101010101010102 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.04040404040404041 ,l2_regularization_strength=0.21212121212121213 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.7070707070707072].
2023-08-22 06:02:44,214 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.9292929292929294, momentum=0.3434343434343435 ,nesterov=True ,amsgrad=True ,weight_decay=0.004647000000000001 ,use_ema=False ,ema_momentum=0.787878787878788 ,rho=0.9292929292929294 ,epsilon=0.000454545509090909 ,centered=True ,beta_1=0.8181818181818182 ,beta_2=0.010101010101010102 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.04040404040404041 ,l2_regularization_strength=0.21212121212121213 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.7070707070707072].
2023-08-22 06:02:58,975 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.11111111111111112, momentum=0.5151515151515152 ,nesterov=False ,amsgrad=False ,weight_decay=0.0045460000000000006 ,use_ema=True ,ema_momentum=0.7070707070707072 ,rho=0.6161616161616162 ,epsilon=2.020211818181818e-05 ,centered=False ,beta_1=0.38383838383838387 ,beta_2=0.7575757575757577 ,learning_rate_power=-0.04040404040404033 ,initial_accumulator_value=0.4040404040404041 ,l1_regularization_strength=0.19191919191919193 ,l2_regularization_strength=0.7676767676767677 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.7171717171717172].
2023-08-22 06:02:58,975 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.11111111111111112, momentum=0.5151515151515152 ,nesterov=False ,amsgrad=False ,weight_decay=0.0045460000000000006 ,use_ema=True ,ema_momentum=0.7070707070707072 ,rho=0.6161616161616162 ,epsilon=2.020211818181818e-05 ,centered=False ,beta_1=0.38383838383838387 ,beta_2=0.7575757575757577 ,learning_rate_power=-0.04040404040404033 ,initial_accumulator_value=0.4040404040404041 ,l1_regularization_strength=0.19191919191919193 ,l2_regularization_strength=0.7676767676767677 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.7171717171717172].
2023-08-22 06:03:05,763 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5656565656565657 ,rho=0.36363636363636365 ,epsilon=0.00031313138181818175 ,centered=False ,beta_1=0.6464646464646465 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.09090909090909091 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.7676767676767677].
2023-08-22 06:03:05,763 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5656565656565657 ,rho=0.36363636363636365 ,epsilon=0.00031313138181818175 ,centered=False ,beta_1=0.6464646464646465 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.09090909090909091 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.7676767676767677].
2023-08-22 06:03:25,560 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.24242424242424243, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.13131313131313133 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.24242424242424243].
2023-08-22 06:03:25,561 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.24242424242424243, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.13131313131313133 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.24242424242424243].
2023-08-22 06:03:26,727 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.08080808080808081, momentum=0.7777777777777778 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.04040404040404041 ,rho=0.7373737373737375 ,epsilon=0.000676767709090909 ,centered=True ,beta_1=0.12121212121212122 ,beta_2=0.42424242424242425 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.4747474747474748 ,l1_regularization_strength=0.9696969696969697 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.8181818181818182].
2023-08-22 06:03:26,727 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.08080808080808081, momentum=0.7777777777777778 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.04040404040404041 ,rho=0.7373737373737375 ,epsilon=0.000676767709090909 ,centered=True ,beta_1=0.12121212121212122 ,beta_2=0.42424242424242425 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.4747474747474748 ,l1_regularization_strength=0.9696969696969697 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.8181818181818182].
2023-08-22 06:03:45,747 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.7777777777777778, momentum=0.7272727272727273 ,nesterov=False ,amsgrad=False ,weight_decay=0.0021220000000000006 ,use_ema=False ,ema_momentum=0.7272727272727273 ,rho=0.9797979797979799 ,epsilon=0.0005050505545454545 ,centered=False ,beta_1=0.32323232323232326 ,beta_2=0.393939393939394 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.9696969696969697 ,l2_regularization_strength=0.05050505050505051 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.5858585858585859].
2023-08-22 06:03:45,747 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.7777777777777778, momentum=0.7272727272727273 ,nesterov=False ,amsgrad=False ,weight_decay=0.0021220000000000006 ,use_ema=False ,ema_momentum=0.7272727272727273 ,rho=0.9797979797979799 ,epsilon=0.0005050505545454545 ,centered=False ,beta_1=0.32323232323232326 ,beta_2=0.393939393939394 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.9696969696969697 ,l2_regularization_strength=0.05050505050505051 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.5858585858585859].
2023-08-22 06:03:49,645 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.7474747474747475, momentum=0.09090909090909091 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4141414141414142 ,rho=0.4646464646464647 ,epsilon=0.0002727273454545454 ,centered=True ,beta_1=0.7474747474747475 ,beta_2=0.18181818181818182 ,learning_rate_power=-0.24242424242424232 ,initial_accumulator_value=0.13131313131313133 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.4040404040404041 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.5353535353535354].
2023-08-22 06:03:49,645 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.7474747474747475, momentum=0.09090909090909091 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4141414141414142 ,rho=0.4646464646464647 ,epsilon=0.0002727273454545454 ,centered=True ,beta_1=0.7474747474747475 ,beta_2=0.18181818181818182 ,learning_rate_power=-0.24242424242424232 ,initial_accumulator_value=0.13131313131313133 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.4040404040404041 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.5353535353535354].
2023-08-22 06:04:07,419 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.29292929292929293, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.5555555555555556 ,rho=0.06060606060606061 ,epsilon=0.0008282828454545454 ,centered=True ,beta_1=0.4545454545454546 ,beta_2=0.010101010101010102 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.9696969696969697 ,l1_regularization_strength=0.696969696969697 ,l2_regularization_strength=0.9494949494949496 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.393939393939394].
2023-08-22 06:04:07,419 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.29292929292929293, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.5555555555555556 ,rho=0.06060606060606061 ,epsilon=0.0008282828454545454 ,centered=True ,beta_1=0.4545454545454546 ,beta_2=0.010101010101010102 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.9696969696969697 ,l1_regularization_strength=0.696969696969697 ,l2_regularization_strength=0.9494949494949496 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.393939393939394].
2023-08-22 06:04:11,109 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.43434343434343436, momentum=0.33333333333333337 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9696969696969697 ,rho=0.5050505050505051 ,epsilon=0.0007070707363636364 ,centered=False ,beta_1=0.7373737373737375 ,beta_2=0.797979797979798 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.21212121212121213 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.5252525252525253].
2023-08-22 06:04:11,109 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.43434343434343436, momentum=0.33333333333333337 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9696969696969697 ,rho=0.5050505050505051 ,epsilon=0.0007070707363636364 ,centered=False ,beta_1=0.7373737373737375 ,beta_2=0.797979797979798 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.21212121212121213 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.5252525252525253].
2023-08-22 06:04:31,406 INFO: Applying selection operators for generation 1.
2023-08-22 06:04:31,408 INFO: Applying genetic operators for generation 1.
2023-08-22 06:04:31,414 INFO: Evaluating fitness for for generation 1.
2023-08-22 06:04:31,414 INFO: Will evaluate fitness for 58 individuals.
2023-08-22 06:04:31,960 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.24242424242424243, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.13131313131313133 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.24242424242424243].
2023-08-22 06:04:31,961 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.24242424242424243, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.13131313131313133 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.24242424242424243].
2023-08-22 06:04:31,962 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.32323232323232326, momentum=0.8787878787878789 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.13131313131313133 ,epsilon=0.0001313132181818182 ,centered=True ,beta_1=0.29292929292929293 ,beta_2=0.888888888888889 ,learning_rate_power=-0.5252525252525252 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.42424242424242425].
2023-08-22 06:04:31,962 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.32323232323232326, momentum=0.8787878787878789 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.13131313131313133 ,epsilon=0.0001313132181818182 ,centered=True ,beta_1=0.29292929292929293 ,beta_2=0.888888888888889 ,learning_rate_power=-0.5252525252525252 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.42424242424242425].
2023-08-22 06:04:31,963 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.6767676767676768].
2023-08-22 06:04:31,964 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.6767676767676768].
2023-08-22 06:04:31,967 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.24242424242424243, momentum=0.8787878787878789 ,nesterov=True ,amsgrad=True ,weight_decay=0.004041 ,use_ema=True ,ema_momentum=0.7171717171717172 ,rho=0.05050505050505051 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.23232323232323235 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.7575757575757577 ,l2_regularization_strength=0.16161616161616163 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.24242424242424243].
2023-08-22 06:04:31,967 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.24242424242424243, momentum=0.8787878787878789 ,nesterov=True ,amsgrad=True ,weight_decay=0.004041 ,use_ema=True ,ema_momentum=0.7171717171717172 ,rho=0.05050505050505051 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.23232323232323235 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.7575757575757577 ,l2_regularization_strength=0.16161616161616163 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.24242424242424243].
2023-08-22 06:04:51,476 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.7272727272727273 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.4040404040404041].
2023-08-22 06:04:51,476 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.7272727272727273 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.4040404040404041].
2023-08-22 06:04:53,117 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:04:53,118 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:04:53,189 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.24242424242424243, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.13131313131313133 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.24242424242424243].
2023-08-22 06:04:53,190 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.24242424242424243, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.13131313131313133 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.24242424242424243].
2023-08-22 06:04:54,244 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.04040404040404041, momentum=0.5555555555555556 ,nesterov=True ,amsgrad=True ,weight_decay=0.007374000000000001 ,use_ema=False ,ema_momentum=0.33333333333333337 ,rho=0.05050505050505051 ,epsilon=0.0001919192727272727 ,centered=False ,beta_1=0.23232323232323235 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.16161616161616163 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.6666666666666667].
2023-08-22 06:04:54,244 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.04040404040404041, momentum=0.5555555555555556 ,nesterov=True ,amsgrad=True ,weight_decay=0.007374000000000001 ,use_ema=False ,ema_momentum=0.33333333333333337 ,rho=0.05050505050505051 ,epsilon=0.0001919192727272727 ,centered=False ,beta_1=0.23232323232323235 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.16161616161616163 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.6666666666666667].
2023-08-22 06:05:11,410 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.797979797979798, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=True ,ema_momentum=0.19191919191919193 ,rho=0.7272727272727273 ,epsilon=0.0006060606454545455 ,centered=True ,beta_1=0.12121212121212122 ,beta_2=0.8282828282828284 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.4040404040404041].
2023-08-22 06:05:11,410 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.797979797979798, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=True ,ema_momentum=0.19191919191919193 ,rho=0.7272727272727273 ,epsilon=0.0006060606454545455 ,centered=True ,beta_1=0.12121212121212122 ,beta_2=0.8282828282828284 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.4040404040404041].
2023-08-22 06:05:12,333 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.04040404040404041, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=True ,weight_decay=0.004041 ,use_ema=True ,ema_momentum=0.7171717171717172 ,rho=0.05050505050505051 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.23232323232323235 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.7575757575757577 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.42424242424242425].
2023-08-22 06:05:12,334 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.04040404040404041, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=True ,weight_decay=0.004041 ,use_ema=True ,ema_momentum=0.7171717171717172 ,rho=0.05050505050505051 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.23232323232323235 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.7575757575757577 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.42424242424242425].
2023-08-22 06:05:15,002 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.7272727272727273 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.4040404040404041].
2023-08-22 06:05:15,003 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.7272727272727273 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.4040404040404041].
2023-08-22 06:05:15,259 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.10101010101010102 ,rho=0.020202020202020204 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.4545454545454545 ,initial_accumulator_value=0.21212121212121213 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.6464646464646465].
2023-08-22 06:05:15,259 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.10101010101010102 ,rho=0.020202020202020204 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.4545454545454545 ,initial_accumulator_value=0.21212121212121213 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.6464646464646465].
2023-08-22 06:05:30,976 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.04040404040404041, momentum=0.5656565656565657 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.13131313131313133 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.6464646464646465].
2023-08-22 06:05:30,976 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.04040404040404041, momentum=0.5656565656565657 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.13131313131313133 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.6464646464646465].
2023-08-22 06:05:33,896 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.7272727272727273 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.4040404040404041].
2023-08-22 06:05:33,897 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.7272727272727273 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.4040404040404041].
2023-08-22 06:05:34,384 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.6767676767676768, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.030303030303030304 ,rho=0.6363636363636365 ,epsilon=0.0008181818363636363 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.16161616161616163 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.6464646464646465].
2023-08-22 06:05:34,385 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.6767676767676768, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.030303030303030304 ,rho=0.6363636363636365 ,epsilon=0.0008181818363636363 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.16161616161616163 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.6464646464646465].
2023-08-22 06:05:36,758 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.04040404040404041, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=True ,weight_decay=0.004041 ,use_ema=True ,ema_momentum=0.7171717171717172 ,rho=0.05050505050505051 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-22 06:05:36,758 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.04040404040404041, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=True ,weight_decay=0.004041 ,use_ema=True ,ema_momentum=0.7171717171717172 ,rho=0.05050505050505051 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-22 06:05:49,981 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.23232323232323235 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.7575757575757577 ,l2_regularization_strength=0.16161616161616163 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.6464646464646465].
2023-08-22 06:05:49,981 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.23232323232323235 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.7575757575757577 ,l2_regularization_strength=0.16161616161616163 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.6464646464646465].
2023-08-22 06:05:52,266 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.04040404040404041, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=True ,weight_decay=0.004041 ,use_ema=True ,ema_momentum=0.7171717171717172 ,rho=0.05050505050505051 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.4040404040404041].
2023-08-22 06:05:52,266 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.04040404040404041, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=True ,weight_decay=0.004041 ,use_ema=True ,ema_momentum=0.7171717171717172 ,rho=0.05050505050505051 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.4040404040404041].
2023-08-22 06:05:53,045 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.3434343434343435, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.030303030303030304 ,rho=0.6262626262626263 ,epsilon=9.09091818181818e-05 ,centered=False ,beta_1=0.3535353535353536 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.595959595959596 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.12121212121212122].
2023-08-22 06:05:53,045 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.3434343434343435, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.030303030303030304 ,rho=0.6262626262626263 ,epsilon=9.09091818181818e-05 ,centered=False ,beta_1=0.3535353535353536 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.595959595959596 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.12121212121212122].
2023-08-22 06:05:59,400 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.24242424242424243, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.30303030303030304 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.8989898989898991 ,beta_2=0.6464646464646465 ,learning_rate_power=-0.11111111111111105 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.24242424242424243].
2023-08-22 06:05:59,401 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.24242424242424243, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.30303030303030304 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.8989898989898991 ,beta_2=0.6464646464646465 ,learning_rate_power=-0.11111111111111105 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.24242424242424243].
2023-08-22 06:06:10,607 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.24242424242424243, momentum=0.8787878787878789 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.7272727272727273 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.4040404040404041].
2023-08-22 06:06:10,607 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.24242424242424243, momentum=0.8787878787878789 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.7272727272727273 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.4040404040404041].
2023-08-22 06:06:14,031 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8383838383838385, momentum=0.30303030303030304 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.33333333333333337 ,rho=0.30303030303030304 ,epsilon=0.00032323239090909086 ,centered=True ,beta_1=0.8989898989898991 ,beta_2=0.38383838383838387 ,learning_rate_power=-0.11111111111111105 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.686868686868687 ,l2_shrinkage_regularization_strength=0.010101010101010102 ,beta=0.31313131313131315].
2023-08-22 06:06:14,031 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8383838383838385, momentum=0.30303030303030304 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.33333333333333337 ,rho=0.30303030303030304 ,epsilon=0.00032323239090909086 ,centered=True ,beta_1=0.8989898989898991 ,beta_2=0.38383838383838387 ,learning_rate_power=-0.11111111111111105 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.686868686868687 ,l2_shrinkage_regularization_strength=0.010101010101010102 ,beta=0.31313131313131315].
2023-08-22 06:06:14,245 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.4242424242424242 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8585858585858587 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.494949494949495].
2023-08-22 06:06:14,245 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.4242424242424242 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8585858585858587 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.494949494949495].
2023-08-22 06:06:21,456 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.07070707070707072, momentum=0.09090909090909091 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.5555555555555556 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.4646464646464647 ,beta_2=0.6464646464646465 ,learning_rate_power=-0.11111111111111105 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.686868686868687 ,l2_shrinkage_regularization_strength=0.12121212121212122 ,beta=0.9393939393939394].
2023-08-22 06:06:21,456 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.07070707070707072, momentum=0.09090909090909091 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.5555555555555556 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.4646464646464647 ,beta_2=0.6464646464646465 ,learning_rate_power=-0.11111111111111105 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.686868686868687 ,l2_shrinkage_regularization_strength=0.12121212121212122 ,beta=0.9393939393939394].
2023-08-22 06:06:30,634 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.07070707070707072, momentum=0.888888888888889 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.13131313131313133 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.24242424242424243].
2023-08-22 06:06:30,634 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.07070707070707072, momentum=0.888888888888889 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.13131313131313133 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.24242424242424243].
2023-08-22 06:06:36,493 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.09090909090909091, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.30303030303030304 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.8989898989898991 ,beta_2=0.6464646464646465 ,learning_rate_power=-0.11111111111111105 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.686868686868687 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.31313131313131315].
2023-08-22 06:06:36,493 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.09090909090909091, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.30303030303030304 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.8989898989898991 ,beta_2=0.6464646464646465 ,learning_rate_power=-0.11111111111111105 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.686868686868687 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.31313131313131315].
2023-08-22 06:06:41,587 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9292929292929294, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8383838383838385 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.33333333333333337 ,beta_2=0.98989898989899 ,learning_rate_power=-0.8080808080808081 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.4040404040404041].
2023-08-22 06:06:41,587 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9292929292929294, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8383838383838385 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.33333333333333337 ,beta_2=0.98989898989899 ,learning_rate_power=-0.8080808080808081 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.4040404040404041].
2023-08-22 06:06:43,692 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=0.0029300000000000007 ,use_ema=True ,ema_momentum=0.12121212121212122 ,rho=0.9595959595959597 ,epsilon=0.0005656566090909091 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.6464646464646465 ,l1_regularization_strength=0.31313131313131315 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.4747474747474748].
2023-08-22 06:06:43,692 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=0.0029300000000000007 ,use_ema=True ,ema_momentum=0.12121212121212122 ,rho=0.9595959595959597 ,epsilon=0.0005656566090909091 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.6464646464646465 ,l1_regularization_strength=0.31313131313131315 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.4747474747474748].
2023-08-22 06:06:49,974 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.7272727272727273 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.23232323232323235 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.7575757575757577 ,l2_regularization_strength=0.16161616161616163 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.6464646464646465].
2023-08-22 06:06:49,975 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.7272727272727273 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.23232323232323235 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.7575757575757577 ,l2_regularization_strength=0.16161616161616163 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.6464646464646465].
2023-08-22 06:06:58,547 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6161616161616162, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6565656565656566 ,rho=1.0 ,epsilon=0.0005555556 ,centered=False ,beta_1=0.787878787878788 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.2525252525252525 ,initial_accumulator_value=0.7474747474747475 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.05050505050505051 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.5858585858585859].
2023-08-22 06:06:58,548 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6161616161616162, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6565656565656566 ,rho=1.0 ,epsilon=0.0005555556 ,centered=False ,beta_1=0.787878787878788 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.2525252525252525 ,initial_accumulator_value=0.7474747474747475 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.05050505050505051 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.5858585858585859].
2023-08-22 06:07:03,799 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.09090909090909091, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.13131313131313133 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.686868686868687 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.31313131313131315].
2023-08-22 06:07:03,800 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.09090909090909091, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.13131313131313133 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.686868686868687 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.31313131313131315].
2023-08-22 06:07:06,383 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.9191919191919192, momentum=0.5353535353535354 ,nesterov=False ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.7272727272727273 ,epsilon=0.0007777778 ,centered=False ,beta_1=0.09090909090909091 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.04040404040404041 ,l2_regularization_strength=0.494949494949495 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.9393939393939394].
2023-08-22 06:07:06,383 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.9191919191919192, momentum=0.5353535353535354 ,nesterov=False ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.7272727272727273 ,epsilon=0.0007777778 ,centered=False ,beta_1=0.09090909090909091 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.04040404040404041 ,l2_regularization_strength=0.494949494949495 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.9393939393939394].
2023-08-22 06:07:08,385 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=0.005051000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.4141414141414142 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.4040404040404041].
2023-08-22 06:07:08,385 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=0.005051000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.4141414141414142 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.4040404040404041].
2023-08-22 06:07:19,874 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.14141414141414144, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.009394000000000001 ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.30303030303030304 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.8989898989898991 ,beta_2=0.6464646464646465 ,learning_rate_power=-0.11111111111111105 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.686868686868687 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.31313131313131315].
2023-08-22 06:07:19,874 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.14141414141414144, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.009394000000000001 ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.30303030303030304 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.8989898989898991 ,beta_2=0.6464646464646465 ,learning_rate_power=-0.11111111111111105 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.686868686868687 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.31313131313131315].
2023-08-22 06:07:25,796 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.8989898989898991 ,beta_2=0.6464646464646465 ,learning_rate_power=-0.11111111111111105 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-22 06:07:25,797 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.8989898989898991 ,beta_2=0.6464646464646465 ,learning_rate_power=-0.11111111111111105 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-22 06:07:27,482 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.005051000000000001 ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.4141414141414142 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.04040404040404041 ,l2_regularization_strength=0.494949494949495 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.9393939393939394].
2023-08-22 06:07:27,482 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.005051000000000001 ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.4141414141414142 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.04040404040404041 ,l2_regularization_strength=0.494949494949495 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.9393939393939394].
2023-08-22 06:07:28,069 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=False ,ema_momentum=0.5454545454545455 ,rho=0.30303030303030304 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.4040404040404041].
2023-08-22 06:07:28,069 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=False ,ema_momentum=0.5454545454545455 ,rho=0.30303030303030304 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.4040404040404041].
2023-08-22 06:07:40,010 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.09090909090909091, momentum=0.29292929292929293 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.38383838383838387 ,rho=0.8080808080808082 ,epsilon=0.0009797979818181818 ,centered=False ,beta_1=0.13131313131313133 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.46464646464646464 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.4545454545454546 ,l2_regularization_strength=0.37373737373737376 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.5454545454545455].
2023-08-22 06:07:40,011 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.09090909090909091, momentum=0.29292929292929293 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.38383838383838387 ,rho=0.8080808080808082 ,epsilon=0.0009797979818181818 ,centered=False ,beta_1=0.13131313131313133 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.46464646464646464 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.4545454545454546 ,l2_regularization_strength=0.37373737373737376 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.5454545454545455].
2023-08-22 06:07:45,817 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.09090909090909091, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.30303030303030304 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.686868686868687 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.31313131313131315].
2023-08-22 06:07:45,817 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.09090909090909091, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.30303030303030304 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.686868686868687 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.31313131313131315].
2023-08-22 06:07:48,407 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.6767676767676768, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8585858585858587 ,rho=0.7272727272727273 ,epsilon=0.0009595959636363636 ,centered=False ,beta_1=0.10101010101010102 ,beta_2=0.6464646464646465 ,learning_rate_power=-0.6363636363636364 ,initial_accumulator_value=0.4545454545454546 ,l1_regularization_strength=0.8080808080808082 ,l2_regularization_strength=0.686868686868687 ,l2_shrinkage_regularization_strength=0.5757575757575758 ,beta=0.31313131313131315].
2023-08-22 06:07:48,408 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.6767676767676768, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8585858585858587 ,rho=0.7272727272727273 ,epsilon=0.0009595959636363636 ,centered=False ,beta_1=0.10101010101010102 ,beta_2=0.6464646464646465 ,learning_rate_power=-0.6363636363636364 ,initial_accumulator_value=0.4545454545454546 ,l1_regularization_strength=0.8080808080808082 ,l2_regularization_strength=0.686868686868687 ,l2_shrinkage_regularization_strength=0.5757575757575758 ,beta=0.31313131313131315].
2023-08-22 06:07:48,558 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:07:48,559 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:08:02,414 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.04040404040404041, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.004041 ,use_ema=True ,ema_momentum=0.8989898989898991 ,rho=0.18181818181818182 ,epsilon=0.0006464646818181818 ,centered=True ,beta_1=0.23232323232323235 ,beta_2=0.494949494949495 ,learning_rate_power=-0.11111111111111105 ,initial_accumulator_value=0.04040404040404041 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.16161616161616163 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.25252525252525254].
2023-08-22 06:08:02,414 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.04040404040404041, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.004041 ,use_ema=True ,ema_momentum=0.8989898989898991 ,rho=0.18181818181818182 ,epsilon=0.0006464646818181818 ,centered=True ,beta_1=0.23232323232323235 ,beta_2=0.494949494949495 ,learning_rate_power=-0.11111111111111105 ,initial_accumulator_value=0.04040404040404041 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.16161616161616163 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.25252525252525254].
2023-08-22 06:08:08,060 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.09090909090909091, momentum=0.18181818181818182 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.797979797979798 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.8989898989898991 ,beta_2=0.6464646464646465 ,learning_rate_power=-0.11111111111111105 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.686868686868687 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.31313131313131315].
2023-08-22 06:08:08,061 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.09090909090909091, momentum=0.18181818181818182 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.797979797979798 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.8989898989898991 ,beta_2=0.6464646464646465 ,learning_rate_power=-0.11111111111111105 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.686868686868687 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.31313131313131315].
2023-08-22 06:08:10,535 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.24242424242424243, momentum=0.42424242424242425 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9191919191919192 ,rho=0.7575757575757577 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.9696969696969697 ,l1_regularization_strength=0.3434343434343435 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.14141414141414144].
2023-08-22 06:08:10,536 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.24242424242424243, momentum=0.42424242424242425 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9191919191919192 ,rho=0.7575757575757577 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.9696969696969697 ,l1_regularization_strength=0.3434343434343435 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.14141414141414144].
2023-08-22 06:08:10,623 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.005556000000000001 ,use_ema=False ,ema_momentum=0.030303030303030304 ,rho=0.6363636363636365 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.06060606060606061 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.8484848484848485 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.6161616161616162].
2023-08-22 06:08:10,623 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.005556000000000001 ,use_ema=False ,ema_momentum=0.030303030303030304 ,rho=0.6363636363636365 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.06060606060606061 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.8484848484848485 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.6161616161616162].
2023-08-22 06:08:24,220 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.09090909090909091, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.30303030303030304 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.8989898989898991 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.7575757575757577 ,l2_regularization_strength=0.686868686868687 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.31313131313131315].
2023-08-22 06:08:24,220 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.09090909090909091, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.30303030303030304 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.8989898989898991 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.7575757575757577 ,l2_regularization_strength=0.686868686868687 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.31313131313131315].
2023-08-22 06:08:28,941 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.15151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0009100000000000001 ,use_ema=False ,ema_momentum=0.5555555555555556 ,rho=0.6464646464646465 ,epsilon=0.00044444449999999996 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.5757575757575758].
2023-08-22 06:08:28,941 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.15151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0009100000000000001 ,use_ema=False ,ema_momentum=0.5555555555555556 ,rho=0.6464646464646465 ,epsilon=0.00044444449999999996 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.5757575757575758].
2023-08-22 06:08:29,743 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.030303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.30303030303030304 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.13131313131313133 ,l2_regularization_strength=0.26262626262626265 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.08080808080808081].
2023-08-22 06:08:29,743 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.030303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.30303030303030304 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.13131313131313133 ,l2_regularization_strength=0.26262626262626265 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.08080808080808081].
2023-08-22 06:08:31,510 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.10101010101010102, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=False ,weight_decay=0.0031320000000000007 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.23232323232323235 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.9797979797979799 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.6767676767676768 ,l2_regularization_strength=0.21212121212121213 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.3434343434343435].
2023-08-22 06:08:31,510 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.10101010101010102, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=False ,weight_decay=0.0031320000000000007 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.23232323232323235 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.9797979797979799 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.6767676767676768 ,l2_regularization_strength=0.21212121212121213 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.3434343434343435].
2023-08-22 06:08:44,548 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.07070707070707072, momentum=0.888888888888889 ,nesterov=False ,amsgrad=True ,weight_decay=0.007172000000000001 ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.4545454545454546 ,epsilon=0.0008484848636363636 ,centered=True ,beta_1=0.23232323232323235 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.5050505050505051].
2023-08-22 06:08:44,548 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.07070707070707072, momentum=0.888888888888889 ,nesterov=False ,amsgrad=True ,weight_decay=0.007172000000000001 ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.4545454545454546 ,epsilon=0.0008484848636363636 ,centered=True ,beta_1=0.23232323232323235 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.5050505050505051].
2023-08-22 06:08:47,460 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.16161616161616163 ,rho=0.787878787878788 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=1.0 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6767676767676768].
2023-08-22 06:08:47,460 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.16161616161616163 ,rho=0.787878787878788 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=1.0 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6767676767676768].
2023-08-22 06:08:50,507 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.09090909090909091, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.30303030303030304 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.8989898989898991 ,beta_2=0.6464646464646465 ,learning_rate_power=-0.11111111111111105 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.686868686868687 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.31313131313131315].
2023-08-22 06:08:50,507 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.09090909090909091, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.30303030303030304 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.8989898989898991 ,beta_2=0.6464646464646465 ,learning_rate_power=-0.11111111111111105 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.686868686868687 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.31313131313131315].
2023-08-22 06:09:06,998 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.797979797979798 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.7575757575757577].
2023-08-22 06:09:06,998 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.797979797979798 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.7575757575757577].
2023-08-22 06:09:09,711 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.09090909090909091, momentum=0.5050505050505051 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3434343434343435 ,rho=0.29292929292929293 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.8989898989898991 ,beta_2=0.595959595959596 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.686868686868687 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.31313131313131315].
2023-08-22 06:09:09,712 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.09090909090909091, momentum=0.5050505050505051 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3434343434343435 ,rho=0.29292929292929293 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.8989898989898991 ,beta_2=0.595959595959596 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.686868686868687 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.31313131313131315].
2023-08-22 06:09:11,335 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0.08080808080808081 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8080808080808082 ,rho=0.30303030303030304 ,epsilon=0.0006565656909090909 ,centered=True ,beta_1=0.19191919191919193 ,beta_2=0.9595959595959597 ,learning_rate_power=-0.9696969696969697 ,initial_accumulator_value=0.3434343434343435 ,l1_regularization_strength=0.42424242424242425 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.7575757575757577].
2023-08-22 06:09:11,335 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0.08080808080808081 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8080808080808082 ,rho=0.30303030303030304 ,epsilon=0.0006565656909090909 ,centered=True ,beta_1=0.19191919191919193 ,beta_2=0.9595959595959597 ,learning_rate_power=-0.9696969696969697 ,initial_accumulator_value=0.3434343434343435 ,l1_regularization_strength=0.42424242424242425 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.7575757575757577].
2023-08-22 06:09:28,376 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.15151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.8181818181818182 ,epsilon=0.0001919192727272727 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.9595959595959597 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.595959595959596 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.26262626262626265 ,l2_shrinkage_regularization_strength=0.4646464646464647 ,beta=0.08080808080808081].
2023-08-22 06:09:28,376 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.15151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.8181818181818182 ,epsilon=0.0001919192727272727 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.9595959595959597 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.595959595959596 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.26262626262626265 ,l2_shrinkage_regularization_strength=0.4646464646464647 ,beta=0.08080808080808081].
2023-08-22 06:09:31,118 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.24242424242424243, momentum=0.8787878787878789 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.7272727272727273 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.24242424242424243].
2023-08-22 06:09:31,119 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.24242424242424243, momentum=0.8787878787878789 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.7272727272727273 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.24242424242424243].
2023-08-22 06:09:49,772 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.09090909090909091, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.30303030303030304 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.8989898989898991 ,beta_2=0.6464646464646465 ,learning_rate_power=-0.11111111111111105 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.686868686868687 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.31313131313131315].
2023-08-22 06:09:49,773 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.09090909090909091, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.30303030303030304 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.8989898989898991 ,beta_2=0.6464646464646465 ,learning_rate_power=-0.11111111111111105 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.686868686868687 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.31313131313131315].
2023-08-22 06:10:09,577 INFO: Applying selection operators for generation 2.
2023-08-22 06:10:09,578 INFO: Applying genetic operators for generation 2.
2023-08-22 06:10:09,583 INFO: Evaluating fitness for for generation 2.
2023-08-22 06:10:09,583 INFO: Will evaluate fitness for 66 individuals.
2023-08-22 06:10:10,142 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.24242424242424243, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.13131313131313133 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.24242424242424243].
2023-08-22 06:10:10,143 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.24242424242424243, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.13131313131313133 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.24242424242424243].
2023-08-22 06:10:10,150 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.24242424242424243, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=True ,weight_decay=0.0036370000000000005 ,use_ema=True ,ema_momentum=0.8585858585858587 ,rho=0.6363636363636365 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.8080808080808082 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.24242424242424243].
2023-08-22 06:10:10,150 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.24242424242424243, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=True ,weight_decay=0.0036370000000000005 ,use_ema=True ,ema_momentum=0.8585858585858587 ,rho=0.6363636363636365 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.8080808080808082 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.24242424242424243].
2023-08-22 06:10:10,165 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.8989898989898991, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.29292929292929293 ,rho=0.13131313131313133 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9797979797979799 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.8989898989898991].
2023-08-22 06:10:10,165 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.8989898989898991, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.29292929292929293 ,rho=0.13131313131313133 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9797979797979799 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.8989898989898991].
2023-08-22 06:10:10,180 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.13131313131313133 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.7575757575757577].
2023-08-22 06:10:10,180 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.13131313131313133 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.7575757575757577].
2023-08-22 06:10:29,848 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.24242424242424243, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.13131313131313133 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:10:29,849 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.24242424242424243, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.13131313131313133 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:10:31,058 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:10:31,058 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:10:31,151 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.24242424242424243, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.13131313131313133 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.24242424242424243].
2023-08-22 06:10:31,152 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.24242424242424243, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.13131313131313133 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.24242424242424243].
2023-08-22 06:10:32,010 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.24242424242424243, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.797979797979798 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.24242424242424243].
2023-08-22 06:10:32,010 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.24242424242424243, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.797979797979798 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.24242424242424243].
2023-08-22 06:10:50,299 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.24242424242424243, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.13131313131313133 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:10:50,299 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.24242424242424243, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.13131313131313133 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:10:51,987 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.24242424242424243].
2023-08-22 06:10:51,988 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.24242424242424243].
2023-08-22 06:10:53,186 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.13131313131313133 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:10:53,186 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.13131313131313133 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:10:53,658 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:10:53,658 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:11:09,357 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.24242424242424243].
2023-08-22 06:11:09,357 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.24242424242424243].
2023-08-22 06:11:13,036 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.24242424242424243, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.9090909090909092 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.24242424242424243].
2023-08-22 06:11:13,037 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.24242424242424243, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.9090909090909092 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.24242424242424243].
2023-08-22 06:11:13,532 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.24242424242424243, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.30303030303030304 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.8989898989898991 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.24242424242424243].
2023-08-22 06:11:13,532 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.24242424242424243, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.30303030303030304 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.8989898989898991 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.24242424242424243].
2023-08-22 06:11:14,209 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.24242424242424243, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.797979797979798 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.24242424242424243].
2023-08-22 06:11:14,209 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.24242424242424243, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.797979797979798 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.24242424242424243].
2023-08-22 06:11:32,234 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.24242424242424243, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.24242424242424243].
2023-08-22 06:11:32,234 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.24242424242424243, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.24242424242424243].
2023-08-22 06:11:33,301 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.24242424242424243, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.13131313131313133 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.6464646464646465 ,learning_rate_power=-0.11111111111111105 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.24242424242424243].
2023-08-22 06:11:33,302 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.24242424242424243, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.13131313131313133 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.6464646464646465 ,learning_rate_power=-0.11111111111111105 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.24242424242424243].
2023-08-22 06:11:33,429 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.13131313131313133 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.7575757575757577].
2023-08-22 06:11:33,430 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.13131313131313133 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.7575757575757577].
2023-08-22 06:11:35,239 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6161616161616162 ,rho=0.6767676767676768 ,epsilon=0.0003939394545454545 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.9393939393939394 ,initial_accumulator_value=0.30303030303030304 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.04040404040404041].
2023-08-22 06:11:35,239 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6161616161616162 ,rho=0.6767676767676768 ,epsilon=0.0003939394545454545 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.9393939393939394 ,initial_accumulator_value=0.30303030303030304 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.04040404040404041].
2023-08-22 06:11:52,269 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.020202020202020204 ,rho=0.13131313131313133 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:11:52,269 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.020202020202020204 ,rho=0.13131313131313133 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:11:53,278 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.797979797979798 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.7575757575757577].
2023-08-22 06:11:53,278 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.797979797979798 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.7575757575757577].
2023-08-22 06:11:53,804 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.24242424242424243, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.13131313131313133 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.24242424242424243].
2023-08-22 06:11:53,805 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.24242424242424243, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.13131313131313133 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.24242424242424243].
2023-08-22 06:11:57,885 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:11:57,885 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:12:12,993 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.24242424242424243, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.7272727272727273 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.24242424242424243].
2023-08-22 06:12:12,994 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.24242424242424243, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.7272727272727273 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.24242424242424243].
2023-08-22 06:12:13,097 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.797979797979798 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.7575757575757577].
2023-08-22 06:12:13,097 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.797979797979798 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.7575757575757577].
2023-08-22 06:12:13,107 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.797979797979798 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.7575757575757577].
2023-08-22 06:12:13,108 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.797979797979798 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.7575757575757577].
2023-08-22 06:12:20,442 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.26262626262626265, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8282828282828284 ,rho=0.888888888888889 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.4545454545454546 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.24242424242424243].
2023-08-22 06:12:20,442 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.26262626262626265, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8282828282828284 ,rho=0.888888888888889 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.4545454545454546 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.24242424242424243].
2023-08-22 06:12:32,393 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.888888888888889 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.13131313131313133 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.4040404040404041].
2023-08-22 06:12:32,393 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.888888888888889 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.13131313131313133 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.4040404040404041].
2023-08-22 06:12:33,487 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.07070707070707072, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.7272727272727273 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.09090909090909091 ,beta_2=0.4646464646464647 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.20202020202020204 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.4747474747474748].
2023-08-22 06:12:33,487 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.07070707070707072, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.7272727272727273 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.09090909090909091 ,beta_2=0.4646464646464647 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.20202020202020204 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.4747474747474748].
2023-08-22 06:12:35,005 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6161616161616162, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=False ,ema_momentum=0.6565656565656566 ,rho=1.0 ,epsilon=0.0005555556 ,centered=False ,beta_1=0.787878787878788 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.2525252525252525 ,initial_accumulator_value=0.7474747474747475 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.05050505050505051 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.5858585858585859].
2023-08-22 06:12:35,005 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6161616161616162, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=False ,ema_momentum=0.6565656565656566 ,rho=1.0 ,epsilon=0.0005555556 ,centered=False ,beta_1=0.787878787878788 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.2525252525252525 ,initial_accumulator_value=0.7474747474747475 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.05050505050505051 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.5858585858585859].
2023-08-22 06:12:41,083 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.4040404040404041, momentum=0.33333333333333337 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.020202020202020204 ,rho=0.08080808080808081 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.6767676767676768 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.7272727272727273 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5757575757575758 ,beta=0.08080808080808081].
2023-08-22 06:12:41,083 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.4040404040404041, momentum=0.33333333333333337 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.020202020202020204 ,rho=0.08080808080808081 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.6767676767676768 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.7272727272727273 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5757575757575758 ,beta=0.08080808080808081].
2023-08-22 06:12:50,506 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.24242424242424243, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.797979797979798 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.24242424242424243].
2023-08-22 06:12:50,507 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.24242424242424243, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.797979797979798 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.24242424242424243].
2023-08-22 06:12:53,120 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.24242424242424243, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.13131313131313133 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.4040404040404041].
2023-08-22 06:12:53,120 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.24242424242424243, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.13131313131313133 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.4040404040404041].
2023-08-22 06:12:57,380 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5050505050505051 ,rho=0.7272727272727273 ,epsilon=0.00018181826363636362 ,centered=False ,beta_1=0.787878787878788 ,beta_2=0.09090909090909091 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.4040404040404041].
2023-08-22 06:12:57,380 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5050505050505051 ,rho=0.7272727272727273 ,epsilon=0.00018181826363636362 ,centered=False ,beta_1=0.787878787878788 ,beta_2=0.09090909090909091 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.4040404040404041].
2023-08-22 06:13:00,986 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.5050505050505051, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.13131313131313133 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.797979797979798 ,l1_regularization_strength=0.4141414141414142 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.24242424242424243].
2023-08-22 06:13:00,987 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.5050505050505051, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.13131313131313133 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.797979797979798 ,l1_regularization_strength=0.4141414141414142 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.24242424242424243].
2023-08-22 06:13:11,704 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.696969696969697, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6161616161616162 ,rho=0.13131313131313133 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.7373737373737375 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.7575757575757577].
2023-08-22 06:13:11,704 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.696969696969697, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6161616161616162 ,rho=0.13131313131313133 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.7373737373737375 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.7575757575757577].
2023-08-22 06:13:13,227 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.696969696969697, momentum=0.0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0076770000000000015 ,use_ema=False ,ema_momentum=0.6363636363636365 ,rho=0.797979797979798 ,epsilon=7.070716363636363e-05 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.18181818181818182 ,learning_rate_power=-0.8181818181818181 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.98989898989899 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.4646464646464647 ,beta=0.7575757575757577].
2023-08-22 06:13:13,227 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.696969696969697, momentum=0.0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0076770000000000015 ,use_ema=False ,ema_momentum=0.6363636363636365 ,rho=0.797979797979798 ,epsilon=7.070716363636363e-05 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.18181818181818182 ,learning_rate_power=-0.8181818181818181 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.98989898989899 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.4646464646464647 ,beta=0.7575757575757577].
2023-08-22 06:13:20,093 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.797979797979798 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.7575757575757577].
2023-08-22 06:13:20,093 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.797979797979798 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.7575757575757577].
2023-08-22 06:13:20,158 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:13:20,158 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:13:33,923 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.24242424242424243, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.13131313131313133 ,epsilon=0.0008484848636363636 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.24242424242424243].
2023-08-22 06:13:33,924 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.24242424242424243, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.13131313131313133 ,epsilon=0.0008484848636363636 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.24242424242424243].
2023-08-22 06:13:34,966 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6161616161616162, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6565656565656566 ,rho=1.0 ,epsilon=0.0005555556 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.5858585858585859].
2023-08-22 06:13:34,966 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6161616161616162, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6565656565656566 ,rho=1.0 ,epsilon=0.0005555556 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.5858585858585859].
2023-08-22 06:13:42,115 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.8989898989898991, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9797979797979799 ,rho=0.6060606060606061 ,epsilon=0.0006565656909090909 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.19191919191919193 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.696969696969697].
2023-08-22 06:13:42,115 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.8989898989898991, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9797979797979799 ,rho=0.6060606060606061 ,epsilon=0.0006565656909090909 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.19191919191919193 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.696969696969697].
2023-08-22 06:13:42,906 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6161616161616162, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.7272727272727273 ,epsilon=0.0005151515636363636 ,centered=False ,beta_1=0.787878787878788 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.2525252525252525 ,initial_accumulator_value=0.7474747474747475 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.05050505050505051 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.5858585858585859].
2023-08-22 06:13:42,906 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6161616161616162, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.7272727272727273 ,epsilon=0.0005151515636363636 ,centered=False ,beta_1=0.787878787878788 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.2525252525252525 ,initial_accumulator_value=0.7474747474747475 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.05050505050505051 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.5858585858585859].
2023-08-22 06:13:53,116 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.696969696969697, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.797979797979798 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.24242424242424243].
2023-08-22 06:13:53,116 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.696969696969697, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.797979797979798 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.24242424242424243].
2023-08-22 06:13:55,289 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.24242424242424243, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.13131313131313133 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.787878787878788 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.2525252525252525 ,initial_accumulator_value=0.7474747474747475 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.05050505050505051 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.24242424242424243].
2023-08-22 06:13:55,290 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.24242424242424243, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.13131313131313133 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.787878787878788 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.2525252525252525 ,initial_accumulator_value=0.7474747474747475 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.05050505050505051 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.24242424242424243].
2023-08-22 06:14:03,348 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.24242424242424243, momentum=0.8787878787878789 ,nesterov=True ,amsgrad=False ,weight_decay=0.008687 ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.13131313131313133 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.5050505050505051 ,beta_2=0.010101010101010102 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.24242424242424243].
2023-08-22 06:14:03,348 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.24242424242424243, momentum=0.8787878787878789 ,nesterov=True ,amsgrad=False ,weight_decay=0.008687 ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.13131313131313133 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.5050505050505051 ,beta_2=0.010101010101010102 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.24242424242424243].
2023-08-22 06:14:05,466 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=False ,ema_momentum=0.6565656565656566 ,rho=1.0 ,epsilon=0.0005555556 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.4040404040404041].
2023-08-22 06:14:05,466 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=False ,ema_momentum=0.6565656565656566 ,rho=1.0 ,epsilon=0.0005555556 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.4040404040404041].
2023-08-22 06:14:12,312 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.24242424242424243, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.13131313131313133 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.7575757575757577].
2023-08-22 06:14:12,312 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.24242424242424243, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.13131313131313133 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.7575757575757577].
2023-08-22 06:14:14,440 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.24242424242424243, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.13131313131313133 ,epsilon=0.0008484848636363636 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.24242424242424243].
2023-08-22 06:14:14,440 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.24242424242424243, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.13131313131313133 ,epsilon=0.0008484848636363636 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.24242424242424243].
2023-08-22 06:14:24,121 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=0.005051000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.4141414141414142 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.4040404040404041].
2023-08-22 06:14:24,121 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=0.005051000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.4141414141414142 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.4040404040404041].
2023-08-22 06:14:32,131 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.797979797979798 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.4040404040404041].
2023-08-22 06:14:32,131 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.797979797979798 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.4040404040404041].
2023-08-22 06:14:32,609 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.3535353535353536, momentum=0.05050505050505051 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.13131313131313133 ,epsilon=0.0008484848636363636 ,centered=True ,beta_1=0.18181818181818182 ,beta_2=0.20202020202020204 ,learning_rate_power=-0.16161616161616155 ,initial_accumulator_value=0.37373737373737376 ,l1_regularization_strength=0.6767676767676768 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.24242424242424243].
2023-08-22 06:14:32,609 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.3535353535353536, momentum=0.05050505050505051 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.13131313131313133 ,epsilon=0.0008484848636363636 ,centered=True ,beta_1=0.18181818181818182 ,beta_2=0.20202020202020204 ,learning_rate_power=-0.16161616161616155 ,initial_accumulator_value=0.37373737373737376 ,l1_regularization_strength=0.6767676767676768 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.24242424242424243].
2023-08-22 06:14:33,651 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.8383838383838385 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7474747474747475 ,rho=0.8686868686868687 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.33333333333333337 ,learning_rate_power=-0.8383838383838383 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.5252525252525253 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.04040404040404041].
2023-08-22 06:14:33,651 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.8383838383838385 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7474747474747475 ,rho=0.8686868686868687 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.33333333333333337 ,learning_rate_power=-0.8383838383838383 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.5252525252525253 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.04040404040404041].
2023-08-22 06:14:43,516 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:14:43,516 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:14:51,755 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.7272727272727273 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.7575757575757577].
2023-08-22 06:14:51,755 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.7272727272727273 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.7575757575757577].
2023-08-22 06:14:51,896 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.24242424242424243, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=False ,weight_decay=0.0017180000000000001 ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.7272727272727273 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.24242424242424243].
2023-08-22 06:14:51,896 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.24242424242424243, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=False ,weight_decay=0.0017180000000000001 ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.7272727272727273 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.24242424242424243].
2023-08-22 06:14:56,118 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.24242424242424243, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.25252525252525254 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.20202020202020204 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.6363636363636365].
2023-08-22 06:14:56,118 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.24242424242424243, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.25252525252525254 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.20202020202020204 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.6363636363636365].
2023-08-22 06:15:04,072 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.24242424242424243, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.13131313131313133 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.24242424242424243].
2023-08-22 06:15:04,072 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.24242424242424243, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.13131313131313133 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.24242424242424243].
2023-08-22 06:15:13,417 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.13131313131313133 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.4040404040404041].
2023-08-22 06:15:13,417 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.13131313131313133 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.4040404040404041].
2023-08-22 06:15:14,120 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.4040404040404041].
2023-08-22 06:15:14,120 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.4040404040404041].
2023-08-22 06:15:15,628 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.797979797979798 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.7575757575757577].
2023-08-22 06:15:15,628 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.797979797979798 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.7575757575757577].
2023-08-22 06:15:34,424 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.7373737373737375, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.494949494949495 ,epsilon=0.0007171717454545454 ,centered=False ,beta_1=0.494949494949495 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.24242424242424243].
2023-08-22 06:15:34,424 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.7373737373737375, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.494949494949495 ,epsilon=0.0007171717454545454 ,centered=False ,beta_1=0.494949494949495 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.24242424242424243].
2023-08-22 06:15:55,857 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.7272727272727273 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.7575757575757577].
2023-08-22 06:15:55,857 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.7272727272727273 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.7575757575757577].
2023-08-22 06:16:15,541 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.797979797979798 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.4040404040404041].
2023-08-22 06:16:15,541 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.797979797979798 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.4040404040404041].
2023-08-22 06:16:33,303 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.797979797979798 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.7575757575757577].
2023-08-22 06:16:33,304 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.797979797979798 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.7575757575757577].
2023-08-22 06:16:53,974 INFO: Applying selection operators for generation 3.
2023-08-22 06:16:53,976 INFO: Applying genetic operators for generation 3.
2023-08-22 06:16:53,982 INFO: Evaluating fitness for for generation 3.
2023-08-22 06:16:53,982 INFO: Will evaluate fitness for 48 individuals.
2023-08-22 06:16:54,558 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.37373737373737376, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=False ,weight_decay=0.009697 ,use_ema=True ,ema_momentum=0.020202020202020204 ,rho=0.13131313131313133 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.38383838383838387 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.24242424242424243].
2023-08-22 06:16:54,558 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.37373737373737376, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=False ,weight_decay=0.009697 ,use_ema=True ,ema_momentum=0.020202020202020204 ,rho=0.13131313131313133 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.38383838383838387 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.24242424242424243].
2023-08-22 06:16:54,567 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.26262626262626265, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.797979797979798 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.4545454545454546 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.24242424242424243].
2023-08-22 06:16:54,567 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.26262626262626265, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.797979797979798 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.4545454545454546 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.24242424242424243].
2023-08-22 06:16:54,573 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.8989898989898991, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.18181818181818182 ,rho=0.797979797979798 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.7070707070707072 ,beta_2=0.22222222222222224 ,learning_rate_power=-0.7777777777777778 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.7575757575757577].
2023-08-22 06:16:54,573 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.8989898989898991, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.18181818181818182 ,rho=0.797979797979798 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.7070707070707072 ,beta_2=0.22222222222222224 ,learning_rate_power=-0.7777777777777778 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.7575757575757577].
2023-08-22 06:16:54,581 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=0.001213 ,use_ema=True ,ema_momentum=0.4545454545454546 ,rho=0.9595959595959597 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.8181818181818182 ,beta_2=0.42424242424242425 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.787878787878788 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.8787878787878789].
2023-08-22 06:16:54,581 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=0.001213 ,use_ema=True ,ema_momentum=0.4545454545454546 ,rho=0.9595959595959597 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.8181818181818182 ,beta_2=0.42424242424242425 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.787878787878788 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.8787878787878789].
2023-08-22 06:17:14,773 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.797979797979798 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:17:14,773 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.797979797979798 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:17:15,152 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.9696969696969697, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6767676767676768 ,rho=0.797979797979798 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5050505050505051 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.8787878787878789].
2023-08-22 06:17:15,152 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.9696969696969697, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6767676767676768 ,rho=0.797979797979798 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5050505050505051 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.8787878787878789].
2023-08-22 06:17:16,693 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:17:16,693 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:17:24,819 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.7575757575757577].
2023-08-22 06:17:24,820 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.7575757575757577].
2023-08-22 06:17:33,538 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.26262626262626265, momentum=0.30303030303030304 ,nesterov=True ,amsgrad=True ,weight_decay=0.008182 ,use_ema=False ,ema_momentum=0.7777777777777778 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8282828282828284 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.27272727272727276 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.4040404040404041].
2023-08-22 06:17:33,538 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.26262626262626265, momentum=0.30303030303030304 ,nesterov=True ,amsgrad=True ,weight_decay=0.008182 ,use_ema=False ,ema_momentum=0.7777777777777778 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8282828282828284 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.27272727272727276 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.4040404040404041].
2023-08-22 06:17:34,550 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.7575757575757577].
2023-08-22 06:17:34,550 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.7575757575757577].
2023-08-22 06:17:39,366 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:17:39,366 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:17:44,753 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8282828282828284 ,rho=0.888888888888889 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.7575757575757577].
2023-08-22 06:17:44,753 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8282828282828284 ,rho=0.888888888888889 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.7575757575757577].
2023-08-22 06:17:54,065 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.7575757575757577].
2023-08-22 06:17:54,065 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.7575757575757577].
2023-08-22 06:17:57,678 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:17:57,679 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:17:59,818 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5353535353535354 ,rho=0.13131313131313133 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.18181818181818182 ,beta_2=0.696969696969697 ,learning_rate_power=-0.696969696969697 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.24242424242424243].
2023-08-22 06:17:59,819 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5353535353535354 ,rho=0.13131313131313133 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.18181818181818182 ,beta_2=0.696969696969697 ,learning_rate_power=-0.696969696969697 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.24242424242424243].
2023-08-22 06:18:07,360 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4141414141414142, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.008687 ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.5555555555555556 ,epsilon=0.0009797979818181818 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9797979797979799 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.4747474747474748].
2023-08-22 06:18:07,360 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4141414141414142, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.008687 ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.5555555555555556 ,epsilon=0.0009797979818181818 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9797979797979799 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.4747474747474748].
2023-08-22 06:18:14,603 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:18:14,604 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:18:18,190 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.797979797979798 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.7575757575757577].
2023-08-22 06:18:18,191 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.797979797979798 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.7575757575757577].
2023-08-22 06:18:20,038 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.797979797979798 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.7575757575757577].
2023-08-22 06:18:20,039 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.797979797979798 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.7575757575757577].
2023-08-22 06:18:30,188 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.797979797979798 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.7575757575757577].
2023-08-22 06:18:30,189 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.797979797979798 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.7575757575757577].
2023-08-22 06:18:37,721 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5252525252525253 ,rho=0.030303030303030304 ,epsilon=0.0008080808272727272 ,centered=False ,beta_1=0.5656565656565657 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.6464646464646464 ,initial_accumulator_value=0.08080808080808081 ,l1_regularization_strength=0.8989898989898991 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.4040404040404041].
2023-08-22 06:18:37,722 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5252525252525253 ,rho=0.030303030303030304 ,epsilon=0.0008080808272727272 ,centered=False ,beta_1=0.5656565656565657 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.6464646464646464 ,initial_accumulator_value=0.08080808080808081 ,l1_regularization_strength=0.8989898989898991 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.4040404040404041].
2023-08-22 06:18:38,733 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:18:38,734 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:18:39,865 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.6262626262626263, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.19191919191919193 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.3434343434343435 ,beta_2=0.6464646464646465 ,learning_rate_power=-0.5555555555555556 ,initial_accumulator_value=0.8787878787878789 ,l1_regularization_strength=0.5252525252525253 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.7575757575757577].
2023-08-22 06:18:39,865 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.6262626262626263, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.19191919191919193 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.3434343434343435 ,beta_2=0.6464646464646465 ,learning_rate_power=-0.5555555555555556 ,initial_accumulator_value=0.8787878787878789 ,l1_regularization_strength=0.5252525252525253 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.7575757575757577].
2023-08-22 06:18:52,464 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.24242424242424243, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.25252525252525254 ,epsilon=0.0008181818363636363 ,centered=True ,beta_1=0.9090909090909092 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.9797979797979799 ,beta=0.3535353535353536].
2023-08-22 06:18:52,464 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.24242424242424243, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.25252525252525254 ,epsilon=0.0008181818363636363 ,centered=True ,beta_1=0.9090909090909092 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.9797979797979799 ,beta=0.3535353535353536].
2023-08-22 06:18:56,584 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.696969696969697, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.797979797979798 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.8787878787878789 ,beta_2=0.7070707070707072 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.20202020202020204 ,l1_regularization_strength=0.9595959595959597 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.7575757575757577].
2023-08-22 06:18:56,584 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.696969696969697, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.797979797979798 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.8787878787878789 ,beta_2=0.7070707070707072 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.20202020202020204 ,l1_regularization_strength=0.9595959595959597 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.7575757575757577].
2023-08-22 06:18:58,857 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:18:58,857 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:18:59,028 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.04040404040404041 ,rho=0.6161616161616162 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.26262626262626265].
2023-08-22 06:18:59,028 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.04040404040404041 ,rho=0.6161616161616162 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.26262626262626265].
2023-08-22 06:19:14,979 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0004050000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.9797979797979799 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.30303030303030304 ,beta=0.4040404040404041].
2023-08-22 06:19:14,979 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0004050000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.9797979797979799 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.30303030303030304 ,beta=0.4040404040404041].
2023-08-22 06:19:18,291 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.797979797979798 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.7575757575757577].
2023-08-22 06:19:18,292 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.797979797979798 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.7575757575757577].
2023-08-22 06:19:19,009 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9191919191919192, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.008081 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.4444444444444445 ,epsilon=0.00032323239090909086 ,centered=False ,beta_1=0.3535353535353536 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.04040404040404041 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.010101010101010102 ,beta=0.48484848484848486].
2023-08-22 06:19:19,010 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9191919191919192, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.008081 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.4444444444444445 ,epsilon=0.00032323239090909086 ,centered=False ,beta_1=0.3535353535353536 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.04040404040404041 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.010101010101010102 ,beta=0.48484848484848486].
2023-08-22 06:19:19,125 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.27272727272727276, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.5050505050505051 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.595959595959596 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.6060606060606061 ,l1_regularization_strength=0.7474747474747475 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.5858585858585859].
2023-08-22 06:19:19,125 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.27272727272727276, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.5050505050505051 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.595959595959596 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.6060606060606061 ,l1_regularization_strength=0.7474747474747475 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.5858585858585859].
2023-08-22 06:19:38,306 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.22222222222222224, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.16161616161616163 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:19:38,307 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.22222222222222224, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.16161616161616163 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:19:38,800 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:19:38,800 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:19:41,580 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.7575757575757577].
2023-08-22 06:19:41,580 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.7575757575757577].
2023-08-22 06:19:42,481 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.26262626262626265, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8282828282828284 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.4545454545454546 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.24242424242424243].
2023-08-22 06:19:42,481 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.26262626262626265, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8282828282828284 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.4545454545454546 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.24242424242424243].
2023-08-22 06:19:59,583 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.797979797979798 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.7575757575757577].
2023-08-22 06:19:59,583 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.797979797979798 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.7575757575757577].
2023-08-22 06:20:00,519 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:20:00,519 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:20:02,116 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0.6060606060606061 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.797979797979798 ,epsilon=0.0008787878909090909 ,centered=False ,beta_1=0.494949494949495 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.494949494949495].
2023-08-22 06:20:02,117 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0.6060606060606061 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.797979797979798 ,epsilon=0.0008787878909090909 ,centered=False ,beta_1=0.494949494949495 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.494949494949495].
2023-08-22 06:20:08,138 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.797979797979798 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.7575757575757577].
2023-08-22 06:20:08,139 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.797979797979798 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.7575757575757577].
2023-08-22 06:20:19,544 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0024250000000000005 ,use_ema=False ,ema_momentum=0.8989898989898991 ,rho=0.4444444444444445 ,epsilon=0.0007070707363636364 ,centered=True ,beta_1=0.5252525252525253 ,beta_2=0.24242424242424243 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.6565656565656566].
2023-08-22 06:20:19,544 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0024250000000000005 ,use_ema=False ,ema_momentum=0.8989898989898991 ,rho=0.4444444444444445 ,epsilon=0.0007070707363636364 ,centered=True ,beta_1=0.5252525252525253 ,beta_2=0.24242424242424243 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.6565656565656566].
2023-08-22 06:20:21,497 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.797979797979798 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.7575757575757577].
2023-08-22 06:20:21,497 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.797979797979798 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.7575757575757577].
2023-08-22 06:20:23,886 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:20:23,887 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:20:28,472 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.26262626262626265, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.797979797979798 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.24242424242424243].
2023-08-22 06:20:28,473 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.26262626262626265, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.797979797979798 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.24242424242424243].
2023-08-22 06:20:41,381 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.7575757575757577].
2023-08-22 06:20:41,381 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.7575757575757577].
2023-08-22 06:20:41,958 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.24242424242424243].
2023-08-22 06:20:41,959 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.24242424242424243].
2023-08-22 06:20:44,196 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.797979797979798 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.7575757575757577].
2023-08-22 06:20:44,197 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.797979797979798 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.7575757575757577].
2023-08-22 06:20:49,011 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8282828282828284 ,rho=0.888888888888889 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.4545454545454546 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.7575757575757577].
2023-08-22 06:20:49,012 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8282828282828284 ,rho=0.888888888888889 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.4545454545454546 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.7575757575757577].
2023-08-22 06:21:08,886 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7070707070707072, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0009100000000000001 ,use_ema=False ,ema_momentum=0.6161616161616162 ,rho=0.4545454545454546 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.36363636363636365 ,learning_rate_power=-0.4242424242424242 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.7575757575757577].
2023-08-22 06:21:08,887 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7070707070707072, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0009100000000000001 ,use_ema=False ,ema_momentum=0.6161616161616162 ,rho=0.4545454545454546 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.36363636363636365 ,learning_rate_power=-0.4242424242424242 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.7575757575757577].
2023-08-22 06:21:30,217 INFO: Applying selection operators for generation 4.
2023-08-22 06:21:30,219 INFO: Applying genetic operators for generation 4.
2023-08-22 06:21:30,225 INFO: Evaluating fitness for for generation 4.
2023-08-22 06:21:30,225 INFO: Will evaluate fitness for 64 individuals.
2023-08-22 06:21:30,780 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:21:30,781 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:21:30,781 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4444444444444445, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.98989898989899 ,rho=0.6767676767676768 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.4646464646464647].
2023-08-22 06:21:30,781 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4444444444444445, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.98989898989899 ,rho=0.6767676767676768 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.4646464646464647].
2023-08-22 06:21:30,804 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:21:30,805 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:21:30,827 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:21:30,827 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:21:51,213 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:21:51,213 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:21:51,767 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:21:51,767 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:21:51,782 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9494949494949496, momentum=0.7676767676767677 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4444444444444445 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.696969696969697 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.9797979797979799 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.4040404040404041].
2023-08-22 06:21:51,782 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9494949494949496, momentum=0.7676767676767677 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4444444444444445 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.696969696969697 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.9797979797979799 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.4040404040404041].
2023-08-22 06:21:53,436 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:21:53,436 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:22:11,554 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9090909090909092 ,epsilon=1e-10 ,centered=False ,beta_1=0.9797979797979799 ,beta_2=0.696969696969697 ,learning_rate_power=-0.010101010101010055 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.4040404040404041].
2023-08-22 06:22:11,554 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9090909090909092 ,epsilon=1e-10 ,centered=False ,beta_1=0.9797979797979799 ,beta_2=0.696969696969697 ,learning_rate_power=-0.010101010101010055 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.4040404040404041].
2023-08-22 06:22:12,302 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:22:12,302 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:22:14,583 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.393939393939394, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.5151515151515151 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.5252525252525253 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.4040404040404041].
2023-08-22 06:22:14,583 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.393939393939394, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.5151515151515151 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.5252525252525253 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.4040404040404041].
2023-08-22 06:22:16,153 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:22:16,154 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:22:32,741 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.13131313131313133, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.787878787878788 ,rho=0.12121212121212122 ,epsilon=0.0002929293636363636 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.595959595959596].
2023-08-22 06:22:32,741 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.13131313131313133, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.787878787878788 ,rho=0.12121212121212122 ,epsilon=0.0002929293636363636 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.595959595959596].
2023-08-22 06:22:34,386 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:22:34,386 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:22:34,772 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:22:34,773 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:22:37,129 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.06060606060606061, momentum=0.07070707070707072 ,nesterov=True ,amsgrad=True ,weight_decay=0.0036370000000000005 ,use_ema=True ,ema_momentum=0.494949494949495 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.04040404040404041 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.5252525252525253 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.8585858585858587 ,beta=0.4040404040404041].
2023-08-22 06:22:37,129 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.06060606060606061, momentum=0.07070707070707072 ,nesterov=True ,amsgrad=True ,weight_decay=0.0036370000000000005 ,use_ema=True ,ema_momentum=0.494949494949495 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.04040404040404041 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.5252525252525253 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.8585858585858587 ,beta=0.4040404040404041].
2023-08-22 06:22:55,350 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:22:55,351 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:22:55,415 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:22:55,416 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:22:55,450 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.8282828282828284, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.6767676767676768 ,epsilon=0.0008383838545454545 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.4040404040404041].
2023-08-22 06:22:55,450 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.8282828282828284, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.6767676767676768 ,epsilon=0.0008383838545454545 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.4040404040404041].
2023-08-22 06:22:58,048 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:22:58,049 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:23:15,881 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:23:15,881 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:23:18,360 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:23:18,360 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:23:18,424 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:23:18,424 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:23:24,696 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.595959595959596].
2023-08-22 06:23:24,697 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.595959595959596].
2023-08-22 06:23:37,240 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7070707070707072, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7272727272727273 ,rho=0.32323232323232326 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.32323232323232326 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.25252525252525254 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.4040404040404041].
2023-08-22 06:23:37,240 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7070707070707072, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7272727272727273 ,rho=0.32323232323232326 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.32323232323232326 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.25252525252525254 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.4040404040404041].
2023-08-22 06:23:38,816 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.24242424242424243, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.08080808080808081 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.5555555555555556 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.8080808080808081 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.5151515151515152].
2023-08-22 06:23:38,817 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.24242424242424243, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.08080808080808081 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.5555555555555556 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.8080808080808081 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.5151515151515152].
2023-08-22 06:23:39,233 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.09090909090909091, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.14141414141414144 ,rho=0.25252525252525254 ,epsilon=0.0001919192727272727 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.5353535353535354].
2023-08-22 06:23:39,234 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.09090909090909091, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.14141414141414144 ,rho=0.25252525252525254 ,epsilon=0.0001919192727272727 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.5353535353535354].
2023-08-22 06:23:45,177 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.797979797979798 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.7575757575757577].
2023-08-22 06:23:45,177 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.797979797979798 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.7575757575757577].
2023-08-22 06:24:00,150 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:24:00,150 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:24:01,800 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.20202020202020204, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.7474747474747475 ,epsilon=0.0009696969727272727 ,centered=True ,beta_1=0.09090909090909091 ,beta_2=0.7272727272727273 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.5858585858585859].
2023-08-22 06:24:01,800 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.20202020202020204, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.7474747474747475 ,epsilon=0.0009696969727272727 ,centered=True ,beta_1=0.09090909090909091 ,beta_2=0.7272727272727273 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.5858585858585859].
2023-08-22 06:24:01,811 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=0.01 ,use_ema=False ,ema_momentum=0.20202020202020204 ,rho=0.5252525252525253 ,epsilon=0.0006565656909090909 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.8585858585858587].
2023-08-22 06:24:01,811 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=0.01 ,use_ema=False ,ema_momentum=0.20202020202020204 ,rho=0.5252525252525253 ,epsilon=0.0006565656909090909 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.8585858585858587].
2023-08-22 06:24:05,821 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:24:05,821 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:24:20,760 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.2828282828282829, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=0.003839000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.18181818181818182 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.10101010101010102 ,beta_2=0.8484848484848485 ,learning_rate_power=-0.7777777777777778 ,initial_accumulator_value=0.25252525252525254 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.42424242424242425].
2023-08-22 06:24:20,761 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.2828282828282829, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=0.003839000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.18181818181818182 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.10101010101010102 ,beta_2=0.8484848484848485 ,learning_rate_power=-0.7777777777777778 ,initial_accumulator_value=0.25252525252525254 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.42424242424242425].
2023-08-22 06:24:24,591 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:24:24,591 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:24:26,562 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.888888888888889 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.6060606060606061 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.3434343434343435 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:24:26,562 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.888888888888889 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.6060606060606061 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.3434343434343435 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:24:31,814 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:24:31,814 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:24:44,916 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:24:44,916 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:24:45,516 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:24:45,516 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:24:49,705 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:24:49,706 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:24:52,317 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:24:52,317 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:25:05,518 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:25:05,518 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:25:05,858 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:25:05,858 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:25:10,334 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:25:10,334 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:25:12,796 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.98989898989899, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.25252525252525254 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.7171717171717172 ,beta_2=0.696969696969697 ,learning_rate_power=-0.36363636363636354 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.11111111111111112].
2023-08-22 06:25:12,796 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.98989898989899, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.25252525252525254 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.7171717171717172 ,beta_2=0.696969696969697 ,learning_rate_power=-0.36363636363636354 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.11111111111111112].
2023-08-22 06:25:26,064 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:25:26,064 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:25:26,210 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:25:26,211 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:25:31,443 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:25:31,443 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:25:32,892 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.008081 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=1.0 ,beta_2=0.10101010101010102 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.9393939393939394 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:25:32,892 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.008081 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=1.0 ,beta_2=0.10101010101010102 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.9393939393939394 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:25:46,449 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:25:46,450 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:25:47,176 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:25:47,176 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:25:51,916 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:25:51,916 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:25:53,966 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4444444444444445, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.12121212121212122 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.4747474747474748 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.20202020202020204 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.9696969696969697 ,beta=0.4040404040404041].
2023-08-22 06:25:53,966 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4444444444444445, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.12121212121212122 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.4747474747474748 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.20202020202020204 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.9696969696969697 ,beta=0.4040404040404041].
2023-08-22 06:26:07,509 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:26:07,509 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:26:07,550 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:26:07,550 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:26:12,356 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8181818181818182, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5050505050505051 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.22222222222222224 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.98989898989899 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.4040404040404041].
2023-08-22 06:26:12,357 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8181818181818182, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5050505050505051 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.22222222222222224 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.98989898989899 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.4040404040404041].
2023-08-22 06:26:16,844 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.08080808080808081, momentum=0.6363636363636365 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.42424242424242425 ,rho=0.6666666666666667 ,epsilon=0.0005858586272727272 ,centered=True ,beta_1=0.21212121212121213 ,beta_2=0.7171717171717172 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.5050505050505051].
2023-08-22 06:26:16,844 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.08080808080808081, momentum=0.6363636363636365 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.42424242424242425 ,rho=0.6666666666666667 ,epsilon=0.0005858586272727272 ,centered=True ,beta_1=0.21212121212121213 ,beta_2=0.7171717171717172 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.5050505050505051].
2023-08-22 06:26:27,928 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.393939393939394, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.38383838383838387 ,rho=0.6161616161616162 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.4040404040404041].
2023-08-22 06:26:27,928 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.393939393939394, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.38383838383838387 ,rho=0.6161616161616162 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.4040404040404041].
2023-08-22 06:26:27,987 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:26:27,987 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:26:36,128 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.686868686868687 ,rho=0.6767676767676768 ,epsilon=0.0009898989909090908 ,centered=True ,beta_1=0.4747474747474748 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.4040404040404041].
2023-08-22 06:26:36,128 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.686868686868687 ,rho=0.6767676767676768 ,epsilon=0.0009898989909090908 ,centered=True ,beta_1=0.4747474747474748 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.4040404040404041].
2023-08-22 06:26:47,242 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.595959595959596].
2023-08-22 06:26:47,242 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.595959595959596].
2023-08-22 06:26:48,444 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.17171717171717174, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0030310000000000007 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.10101010101010102 ,epsilon=0.0002727273454545454 ,centered=False ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.4040404040404041].
2023-08-22 06:26:48,444 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.17171717171717174, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0030310000000000007 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.10101010101010102 ,epsilon=0.0002727273454545454 ,centered=False ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.4040404040404041].
2023-08-22 06:26:50,664 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:26:50,665 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:27:00,061 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:27:00,062 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:27:07,675 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.888888888888889 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.686868686868687 ,rho=0.9090909090909092 ,epsilon=0.0005050505545454545 ,centered=True ,beta_1=0.14141414141414144 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6868686868686869 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.4444444444444445].
2023-08-22 06:27:07,675 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.888888888888889 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.686868686868687 ,rho=0.9090909090909092 ,epsilon=0.0005050505545454545 ,centered=True ,beta_1=0.14141414141414144 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6868686868686869 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.4444444444444445].
2023-08-22 06:27:30,133 INFO: Applying selection operators for generation 5.
2023-08-22 06:27:30,135 INFO: Applying genetic operators for generation 5.
2023-08-22 06:27:30,140 INFO: Evaluating fitness for for generation 5.
2023-08-22 06:27:30,140 INFO: Will evaluate fitness for 57 individuals.
2023-08-22 06:27:30,712 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.12121212121212122, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.6060606060606061 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.8282828282828284].
2023-08-22 06:27:30,712 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.12121212121212122, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.6060606060606061 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.8282828282828284].
2023-08-22 06:27:30,722 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:27:30,722 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:27:30,728 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:27:30,728 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:27:30,750 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.5555555555555556, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.8282828282828284 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.595959595959596].
2023-08-22 06:27:30,750 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.5555555555555556, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.8282828282828284 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.595959595959596].
2023-08-22 06:27:51,365 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.36363636363636365, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.00044444449999999996 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.09090909090909091 ,learning_rate_power=-0.4242424242424242 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.2828282828282829 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.29292929292929293].
2023-08-22 06:27:51,365 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.36363636363636365, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.00044444449999999996 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.09090909090909091 ,learning_rate_power=-0.4242424242424242 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.2828282828282829 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.29292929292929293].
2023-08-22 06:27:51,420 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:27:51,420 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:27:51,908 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:27:51,909 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:28:00,707 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:28:00,707 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:28:11,682 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0.5858585858585859 ,nesterov=True ,amsgrad=True ,weight_decay=0.0009100000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.0 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.8686868686868687 ,l1_regularization_strength=0.9696969696969697 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.31313131313131315].
2023-08-22 06:28:11,683 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0.5858585858585859 ,nesterov=True ,amsgrad=True ,weight_decay=0.0009100000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.0 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.8686868686868687 ,l1_regularization_strength=0.9696969696969697 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.31313131313131315].
2023-08-22 06:28:12,496 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:28:12,497 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:28:14,412 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:28:14,412 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:28:21,105 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4040404040404041, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.04040404040404041 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.04040404040404041].
2023-08-22 06:28:21,105 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4040404040404041, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.04040404040404041 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.04040404040404041].
2023-08-22 06:28:32,858 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:28:32,859 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:28:33,203 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:28:33,204 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:28:35,664 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.4141414141414142 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.4040404040404041].
2023-08-22 06:28:35,665 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.4141414141414142 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.4040404040404041].
2023-08-22 06:28:44,548 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:28:44,548 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:28:53,217 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.20202020202020204, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.7676767676767677 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.6464646464646465 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.6666666666666667 ,l1_regularization_strength=0.6060606060606061 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=1.0].
2023-08-22 06:28:53,217 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.20202020202020204, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.7676767676767677 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.6464646464646465 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.6666666666666667 ,l1_regularization_strength=0.6060606060606061 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=1.0].
2023-08-22 06:28:54,043 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:28:54,043 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:28:59,585 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:28:59,585 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:29:04,933 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8383838383838385, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.6767676767676768 ,epsilon=0.00032323239090909086 ,centered=True ,beta_1=0.686868686868687 ,beta_2=0.08080808080808081 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.494949494949495].
2023-08-22 06:29:04,933 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8383838383838385, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.6767676767676768 ,epsilon=0.00032323239090909086 ,centered=True ,beta_1=0.686868686868687 ,beta_2=0.08080808080808081 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.494949494949495].
2023-08-22 06:29:14,380 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:29:14,380 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:29:16,694 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:29:16,694 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:29:20,185 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:29:20,186 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:29:27,094 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3434343434343435 ,rho=0.888888888888889 ,epsilon=0.0007070707363636364 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.3939393939393939 ,initial_accumulator_value=0.6464646464646465 ,l1_regularization_strength=0.686868686868687 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.595959595959596].
2023-08-22 06:29:27,094 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3434343434343435 ,rho=0.888888888888889 ,epsilon=0.0007070707363636364 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.3939393939393939 ,initial_accumulator_value=0.6464646464646465 ,l1_regularization_strength=0.686868686868687 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.595959595959596].
2023-08-22 06:29:34,731 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:29:34,731 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:29:37,164 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.595959595959596 ,nesterov=True ,amsgrad=False ,weight_decay=0.008182 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.5252525252525253 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:29:37,164 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.595959595959596 ,nesterov=True ,amsgrad=False ,weight_decay=0.008182 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.5252525252525253 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:29:41,453 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:29:41,453 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:29:52,006 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.010101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=0.0025260000000000005 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.696969696969697 ,learning_rate_power=-0.3535353535353535 ,initial_accumulator_value=0.5555555555555556 ,l1_regularization_strength=1.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.4040404040404041].
2023-08-22 06:29:52,006 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.010101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=0.0025260000000000005 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.696969696969697 ,learning_rate_power=-0.3535353535353535 ,initial_accumulator_value=0.5555555555555556 ,l1_regularization_strength=1.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.4040404040404041].
2023-08-22 06:29:55,760 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:29:55,760 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:29:58,411 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:29:58,411 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:30:02,304 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0.6262626262626263 ,nesterov=True ,amsgrad=True ,weight_decay=0.004041 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9595959595959597 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.6666666666666667 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:30:02,305 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0.6262626262626263 ,nesterov=True ,amsgrad=True ,weight_decay=0.004041 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9595959595959597 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.6666666666666667 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:30:13,112 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.38383838383838387, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8282828282828284 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.17171717171717174 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.43434343434343436 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.595959595959596].
2023-08-22 06:30:13,112 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.38383838383838387, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8282828282828284 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.17171717171717174 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.43434343434343436 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.595959595959596].
2023-08-22 06:30:16,157 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:30:16,157 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 06:30:19,385 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=1.0, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0005151515636363636 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.98989898989899 ,learning_rate_power=-0.04040404040404033 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.23232323232323235 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.10101010101010102 ,beta=0.16161616161616163].
2023-08-22 06:30:19,386 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=1.0, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0005151515636363636 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.98989898989899 ,learning_rate_power=-0.04040404040404033 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.23232323232323235 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.10101010101010102 ,beta=0.16161616161616163].
2023-08-22 06:30:25,954 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:30:25,954 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:30:32,811 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.8080808080808082 ,nesterov=True ,amsgrad=True ,weight_decay=0.006364000000000001 ,use_ema=False ,ema_momentum=0.888888888888889 ,rho=0.9090909090909092 ,epsilon=0.0008282828454545454 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.9696969696969697 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.5353535353535354].
2023-08-22 06:30:32,811 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.8080808080808082 ,nesterov=True ,amsgrad=True ,weight_decay=0.006364000000000001 ,use_ema=False ,ema_momentum=0.888888888888889 ,rho=0.9090909090909092 ,epsilon=0.0008282828454545454 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.9696969696969697 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.5353535353535354].
2023-08-22 06:30:36,577 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.6767676767676768 ,epsilon=0.0003636364272727272 ,centered=False ,beta_1=0.32323232323232326 ,beta_2=0.31313131313131315 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.595959595959596].
2023-08-22 06:30:36,577 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.6767676767676768 ,epsilon=0.0003636364272727272 ,centered=False ,beta_1=0.32323232323232326 ,beta_2=0.31313131313131315 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.595959595959596].
2023-08-22 06:30:38,594 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:30:38,594 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:30:46,514 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.98989898989899 ,rho=0.9090909090909092 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.29292929292929293 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.02020202020202011 ,initial_accumulator_value=0.18181818181818182 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.06060606060606061].
2023-08-22 06:30:46,515 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.98989898989899 ,rho=0.9090909090909092 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.29292929292929293 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.02020202020202011 ,initial_accumulator_value=0.18181818181818182 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.06060606060606061].
2023-08-22 06:30:56,129 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:30:56,129 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:30:59,044 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:30:59,044 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:30:59,955 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.4040404040404041].
2023-08-22 06:30:59,956 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.4040404040404041].
2023-08-22 06:31:10,242 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:31:10,242 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:31:16,674 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:31:16,675 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:31:19,322 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:31:19,322 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:31:20,264 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:31:20,265 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:31:30,876 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:31:30,876 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:31:37,094 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:31:37,094 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:31:40,287 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:31:40,287 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:31:40,529 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0027280000000000004 ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.595959595959596].
2023-08-22 06:31:40,529 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0027280000000000004 ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.595959595959596].
2023-08-22 06:31:51,430 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:31:51,430 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:32:00,694 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.8282828282828284 ,nesterov=True ,amsgrad=False ,weight_decay=0.008586 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.020202020202020204 ,epsilon=0.0001919192727272727 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.16161616161616163 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:32:00,694 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.8282828282828284 ,nesterov=True ,amsgrad=False ,weight_decay=0.008586 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.020202020202020204 ,epsilon=0.0001919192727272727 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.16161616161616163 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:32:03,170 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:32:03,170 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:32:23,899 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:32:23,899 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:32:24,201 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:32:24,202 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:32:44,183 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:32:44,183 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:32:45,048 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.15151515151515152 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.9696969696969697 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.08080808080808081].
2023-08-22 06:32:45,048 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.15151515151515152 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.9696969696969697 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.08080808080808081].
2023-08-22 06:33:03,779 INFO: Applying selection operators for generation 6.
2023-08-22 06:33:03,780 INFO: Applying genetic operators for generation 6.
2023-08-22 06:33:03,786 INFO: Evaluating fitness for for generation 6.
2023-08-22 06:33:03,786 INFO: Will evaluate fitness for 59 individuals.
2023-08-22 06:33:04,347 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.001314 ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.00025252532727272723 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.12121212121212122 ,beta=0.787878787878788].
2023-08-22 06:33:04,348 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.001314 ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.00025252532727272723 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.12121212121212122 ,beta=0.787878787878788].
2023-08-22 06:33:04,387 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:33:04,387 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:33:04,396 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:33:04,396 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:33:04,412 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:33:04,412 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:33:24,926 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:33:24,926 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:33:25,252 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:33:25,253 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:33:26,272 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:33:26,272 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:33:26,979 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:33:26,979 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:33:45,414 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5757575757575758, momentum=0.0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.6363636363636365 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.27272727272727276 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.595959595959596].
2023-08-22 06:33:45,415 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5757575757575758, momentum=0.0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.6363636363636365 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.27272727272727276 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.595959595959596].
2023-08-22 06:33:45,580 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.36363636363636365 ,rho=0.9090909090909092 ,epsilon=0.0009595959636363636 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.17171717171717174].
2023-08-22 06:33:45,580 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.36363636363636365 ,rho=0.9090909090909092 ,epsilon=0.0009595959636363636 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.17171717171717174].
2023-08-22 06:33:46,554 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.27272727272727276, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.003738000000000001 ,use_ema=False ,ema_momentum=0.4444444444444445 ,rho=0.23232323232323235 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.5353535353535354 ,learning_rate_power=-0.6363636363636364 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6262626262626263 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.595959595959596].
2023-08-22 06:33:46,554 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.27272727272727276, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.003738000000000001 ,use_ema=False ,ema_momentum=0.4444444444444445 ,rho=0.23232323232323235 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.5353535353535354 ,learning_rate_power=-0.6363636363636364 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6262626262626263 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.595959595959596].
2023-08-22 06:33:47,258 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:33:47,258 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:34:08,170 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.15151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.007374000000000001 ,use_ema=False ,ema_momentum=0.393939393939394 ,rho=0.26262626262626265 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.6262626262626263 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.26262626262626254 ,initial_accumulator_value=0.19191919191919193 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.7171717171717172].
2023-08-22 06:34:08,170 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.15151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.007374000000000001 ,use_ema=False ,ema_momentum=0.393939393939394 ,rho=0.26262626262626265 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.6262626262626263 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.26262626262626254 ,initial_accumulator_value=0.19191919191919193 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.7171717171717172].
2023-08-22 06:34:08,376 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.29292929292929293, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.33333333333333337 ,epsilon=0.0005050505545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6060606060606061 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:34:08,377 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.29292929292929293, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.33333333333333337 ,epsilon=0.0005050505545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6060606060606061 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:34:08,497 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:34:08,498 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:34:09,306 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.36363636363636365, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.002829000000000001 ,use_ema=True ,ema_momentum=0.08080808080808081 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.7171717171717172 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.5454545454545455].
2023-08-22 06:34:09,306 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.36363636363636365, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.002829000000000001 ,use_ema=True ,ema_momentum=0.08080808080808081 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.7171717171717172 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.5454545454545455].
2023-08-22 06:34:29,441 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.787878787878788, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.8787878787878789 ,epsilon=0.001 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4444444444444445 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.595959595959596].
2023-08-22 06:34:29,441 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.787878787878788, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.8787878787878789 ,epsilon=0.001 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4444444444444445 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.595959595959596].
2023-08-22 06:34:30,996 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:34:30,997 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:34:31,350 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:34:31,350 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:34:32,436 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.9393939393939394, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0024250000000000005 ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.33333333333333337 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.6262626262626263 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.10101010101010088 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.595959595959596].
2023-08-22 06:34:32,437 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.9393939393939394, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0024250000000000005 ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.33333333333333337 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.6262626262626263 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.10101010101010088 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.595959595959596].
2023-08-22 06:34:51,617 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:34:51,617 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:34:51,939 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:34:51,939 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:34:52,623 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.009798000000000001 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.797979797979798 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.393939393939394 ,beta_2=0.98989898989899 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.5151515151515152].
2023-08-22 06:34:52,624 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.009798000000000001 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.797979797979798 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.393939393939394 ,beta_2=0.98989898989899 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.5151515151515152].
2023-08-22 06:34:55,255 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:34:55,255 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:35:12,247 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0006363636727272727 ,centered=False ,beta_1=0.42424242424242425 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.696969696969697 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.595959595959596].
2023-08-22 06:35:12,247 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0006363636727272727 ,centered=False ,beta_1=0.42424242424242425 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.696969696969697 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.595959595959596].
2023-08-22 06:35:12,372 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:35:12,372 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:35:15,369 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6666666666666667, momentum=0.393939393939394 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.2828282828282829 ,rho=0.10101010101010102 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.6565656565656566 ,beta_2=0.9393939393939394 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.7171717171717172 ,l1_regularization_strength=0.26262626262626265 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.5555555555555556].
2023-08-22 06:35:15,369 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6666666666666667, momentum=0.393939393939394 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.2828282828282829 ,rho=0.10101010101010102 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.6565656565656566 ,beta_2=0.9393939393939394 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.7171717171717172 ,l1_regularization_strength=0.26262626262626265 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.5555555555555556].
2023-08-22 06:35:15,710 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:35:15,710 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:35:33,449 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:35:33,450 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:35:35,918 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:35:35,919 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:35:36,246 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:35:36,247 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:35:38,348 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:35:38,348 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:35:53,999 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.0, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8787878787878789 ,rho=0.30303030303030304 ,epsilon=9.09091818181818e-05 ,centered=True ,beta_1=0.4545454545454546 ,beta_2=0.8181818181818182 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.6767676767676768 ,l1_regularization_strength=0.6060606060606061 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.595959595959596].
2023-08-22 06:35:54,000 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.0, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8787878787878789 ,rho=0.30303030303030304 ,epsilon=9.09091818181818e-05 ,centered=True ,beta_1=0.4545454545454546 ,beta_2=0.8181818181818182 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.6767676767676768 ,l1_regularization_strength=0.6060606060606061 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.595959595959596].
2023-08-22 06:35:56,777 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.6060606060606061, momentum=0.6262626262626263 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.595959595959596].
2023-08-22 06:35:56,777 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.6060606060606061, momentum=0.6262626262626263 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.595959595959596].
2023-08-22 06:35:57,267 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:35:57,268 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:35:59,305 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.32323232323232326, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.6262626262626263 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.5656565656565657 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.7474747474747475 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.595959595959596].
2023-08-22 06:35:59,305 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.32323232323232326, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.6262626262626263 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.5656565656565657 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.7474747474747475 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.595959595959596].
2023-08-22 06:36:17,216 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.14141414141414144, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.4747474747474748 ,rho=0.33333333333333337 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.27272727272727276 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.4545454545454545 ,initial_accumulator_value=0.29292929292929293 ,l1_regularization_strength=0.9393939393939394 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.595959595959596].
2023-08-22 06:36:17,216 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.14141414141414144, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.4747474747474748 ,rho=0.33333333333333337 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.27272727272727276 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.4545454545454545 ,initial_accumulator_value=0.29292929292929293 ,l1_regularization_strength=0.9393939393939394 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.595959595959596].
2023-08-22 06:36:17,604 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.006667000000000001 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.696969696969697 ,epsilon=0.0005959596363636363 ,centered=True ,beta_1=0.48484848484848486 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.4444444444444445 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.595959595959596].
2023-08-22 06:36:17,604 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.006667000000000001 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.696969696969697 ,epsilon=0.0005959596363636363 ,centered=True ,beta_1=0.48484848484848486 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.4444444444444445 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.595959595959596].
2023-08-22 06:36:17,649 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:36:17,649 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:36:21,833 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6666666666666667, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6464646464646465 ,rho=0.5151515151515152 ,epsilon=0.0003737374363636363 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.20202020202020204 ,l1_regularization_strength=0.7575757575757577 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.595959595959596].
2023-08-22 06:36:21,833 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6666666666666667, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6464646464646465 ,rho=0.5151515151515152 ,epsilon=0.0003737374363636363 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.20202020202020204 ,l1_regularization_strength=0.7575757575757577 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.595959595959596].
2023-08-22 06:36:38,002 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:36:38,002 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:36:41,962 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6262626262626263, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0067680000000000014 ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.27272727272727276 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.33333333333333337 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.595959595959596].
2023-08-22 06:36:41,963 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6262626262626263, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0067680000000000014 ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.27272727272727276 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.33333333333333337 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.595959595959596].
2023-08-22 06:36:44,875 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:36:44,875 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:36:48,531 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.686868686868687 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.00046464651818181813 ,centered=True ,beta_1=0.8181818181818182 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.29292929292929293 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.595959595959596].
2023-08-22 06:36:48,531 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.686868686868687 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.00046464651818181813 ,centered=True ,beta_1=0.8181818181818182 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.29292929292929293 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.595959595959596].
2023-08-22 06:36:58,355 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.9696969696969697, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6666666666666667 ,rho=0.9090909090909092 ,epsilon=0.0005252525727272728 ,centered=False ,beta_1=0.7676767676767677 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.29292929292929293].
2023-08-22 06:36:58,356 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.9696969696969697, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6666666666666667 ,rho=0.9090909090909092 ,epsilon=0.0005252525727272728 ,centered=False ,beta_1=0.7676767676767677 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.29292929292929293].
2023-08-22 06:37:03,406 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:37:03,407 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:37:05,757 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:37:05,758 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:37:12,039 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:37:12,039 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:37:24,117 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:37:24,117 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:37:26,300 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:37:26,300 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:37:29,090 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:37:29,090 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:37:44,639 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:37:44,639 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:37:46,719 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:37:46,719 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:37:49,338 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:37:49,338 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:38:05,680 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:38:05,681 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:38:06,861 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:38:06,861 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:38:09,468 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8585858585858587, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.686868686868687 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.595959595959596 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.595959595959596].
2023-08-22 06:38:09,469 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8585858585858587, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.686868686868687 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.595959595959596 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.595959595959596].
2023-08-22 06:38:26,127 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.8181818181818182, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.16161616161616163 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.6666666666666667 ,beta_2=0.12121212121212122 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.36363636363636365 ,l1_regularization_strength=0.8080808080808082 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.595959595959596].
2023-08-22 06:38:26,128 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.8181818181818182, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.16161616161616163 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.6666666666666667 ,beta_2=0.12121212121212122 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.36363636363636365 ,l1_regularization_strength=0.8080808080808082 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.595959595959596].
2023-08-22 06:38:27,615 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:38:27,615 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:38:47,574 INFO: Applying selection operators for generation 7.
2023-08-22 06:38:47,575 INFO: Applying genetic operators for generation 7.
2023-08-22 06:38:47,581 INFO: Evaluating fitness for for generation 7.
2023-08-22 06:38:47,581 INFO: Will evaluate fitness for 64 individuals.
2023-08-22 06:38:48,137 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:38:48,137 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:38:48,146 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.8585858585858587 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.5353535353535352 ,initial_accumulator_value=0.696969696969697 ,l1_regularization_strength=0.27272727272727276 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.8080808080808082].
2023-08-22 06:38:48,146 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.8585858585858587 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.5353535353535352 ,initial_accumulator_value=0.696969696969697 ,l1_regularization_strength=0.27272727272727276 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.8080808080808082].
2023-08-22 06:38:48,168 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.6464646464646465, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.37373737373737376 ,rho=0.5151515151515152 ,epsilon=0.00041414147272727267 ,centered=True ,beta_1=0.25252525252525254 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.4545454545454546].
2023-08-22 06:38:48,168 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.6464646464646465, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.37373737373737376 ,rho=0.5151515151515152 ,epsilon=0.00041414147272727267 ,centered=True ,beta_1=0.25252525252525254 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.4545454545454546].
2023-08-22 06:38:48,174 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:38:48,174 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:39:07,538 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:39:07,539 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:39:07,552 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.5555555555555556, momentum=0.29292929292929293 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.6262626262626263 ,epsilon=0.0003636364272727272 ,centered=True ,beta_1=0.6565656565656566 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.595959595959596].
2023-08-22 06:39:07,552 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.5555555555555556, momentum=0.29292929292929293 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.6262626262626263 ,epsilon=0.0003636364272727272 ,centered=True ,beta_1=0.6565656565656566 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.595959595959596].
2023-08-22 06:39:08,518 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:39:08,519 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:39:09,423 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:39:09,424 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:39:28,293 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:39:28,294 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:39:28,948 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:39:28,949 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:39:30,043 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6161616161616162, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6262626262626263 ,rho=0.686868686868687 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.797979797979798 ,beta_2=0.30303030303030304 ,learning_rate_power=-0.3737373737373737 ,initial_accumulator_value=0.9393939393939394 ,l1_regularization_strength=0.48484848484848486 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.8282828282828284].
2023-08-22 06:39:30,043 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6161616161616162, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6262626262626263 ,rho=0.686868686868687 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.797979797979798 ,beta_2=0.30303030303030304 ,learning_rate_power=-0.3737373737373737 ,initial_accumulator_value=0.9393939393939394 ,l1_regularization_strength=0.48484848484848486 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.8282828282828284].
2023-08-22 06:39:38,427 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.8787878787878789, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5757575757575758 ,rho=0.15151515151515152 ,epsilon=0.00046464651818181813 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.15151515151515152 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.7373737373737375 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.13131313131313133].
2023-08-22 06:39:38,427 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.8787878787878789, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5757575757575758 ,rho=0.15151515151515152 ,epsilon=0.00046464651818181813 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.15151515151515152 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.7373737373737375 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.13131313131313133].
2023-08-22 06:39:48,881 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5656565656565657, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.8080808080808082 ,epsilon=0.0007474747727272727 ,centered=False ,beta_1=0.5353535353535354 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.050505050505050386 ,initial_accumulator_value=0.29292929292929293 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.4141414141414142].
2023-08-22 06:39:48,881 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5656565656565657, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.8080808080808082 ,epsilon=0.0007474747727272727 ,centered=False ,beta_1=0.5353535353535354 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.050505050505050386 ,initial_accumulator_value=0.29292929292929293 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.4141414141414142].
2023-08-22 06:39:50,003 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.3434343434343435, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9191919191919192 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.5252525252525253 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.08080808080808081].
2023-08-22 06:39:50,003 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.3434343434343435, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9191919191919192 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.5252525252525253 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.08080808080808081].
2023-08-22 06:39:53,433 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:39:53,434 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:40:01,502 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:40:01,502 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:40:12,784 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:40:12,784 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:40:13,036 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.23232323232323235 ,rho=0.9090909090909092 ,epsilon=0.00044444449999999996 ,centered=False ,beta_1=0.3535353535353536 ,beta_2=0.5353535353535354 ,learning_rate_power=-0.8383838383838383 ,initial_accumulator_value=1.0 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.8282828282828284].
2023-08-22 06:40:13,036 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.23232323232323235 ,rho=0.9090909090909092 ,epsilon=0.00044444449999999996 ,centered=False ,beta_1=0.3535353535353536 ,beta_2=0.5353535353535354 ,learning_rate_power=-0.8383838383838383 ,initial_accumulator_value=1.0 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.8282828282828284].
2023-08-22 06:40:14,137 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.595959595959596 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6363636363636365 ,rho=0.8484848484848485 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.9696969696969697 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.4141414141414142 ,l1_regularization_strength=0.4747474747474748 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.595959595959596].
2023-08-22 06:40:14,137 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.595959595959596 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6363636363636365 ,rho=0.8484848484848485 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.9696969696969697 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.4141414141414142 ,l1_regularization_strength=0.4747474747474748 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.595959595959596].
2023-08-22 06:40:21,950 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:40:21,950 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:40:33,330 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.000676767709090909 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.8080808080808082 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.9393939393939394].
2023-08-22 06:40:33,330 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.000676767709090909 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.8080808080808082 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.9393939393939394].
2023-08-22 06:40:35,957 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:40:35,957 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:40:38,207 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:40:38,207 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:40:42,700 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.2727272727272727 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.595959595959596].
2023-08-22 06:40:42,701 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.2727272727272727 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.595959595959596].
2023-08-22 06:40:56,588 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:40:56,588 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:40:57,312 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:40:57,312 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:40:58,821 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:40:58,821 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:41:07,035 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:41:07,036 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:41:17,188 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:41:17,188 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:41:18,001 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:41:18,001 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:41:19,326 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:41:19,326 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:41:27,407 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:41:27,407 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:41:38,512 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:41:38,512 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:41:38,536 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:41:38,537 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:41:40,594 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:41:40,594 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:41:47,824 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:41:47,825 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:41:59,039 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:41:59,039 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:41:59,161 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:41:59,161 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:42:01,270 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:42:01,270 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:42:08,829 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:42:08,829 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:42:19,763 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:42:19,763 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:42:20,216 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:42:20,216 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:42:21,952 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.020202020202020204 ,learning_rate_power=-0.3232323232323232 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.3535353535353536].
2023-08-22 06:42:21,953 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.020202020202020204 ,learning_rate_power=-0.3232323232323232 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.3535353535353536].
2023-08-22 06:42:29,206 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:42:29,206 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:42:40,893 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:42:40,893 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:42:41,063 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:42:41,063 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:42:42,399 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:42:42,399 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:42:49,572 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.8484848484848485, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.004950000000000001 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.38383838383838387 ,epsilon=8.080817272727271e-05 ,centered=True ,beta_1=0.98989898989899 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.04040404040404033 ,initial_accumulator_value=0.030303030303030304 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.9696969696969697].
2023-08-22 06:42:49,572 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.8484848484848485, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.004950000000000001 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.38383838383838387 ,epsilon=8.080817272727271e-05 ,centered=True ,beta_1=0.98989898989899 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.04040404040404033 ,initial_accumulator_value=0.030303030303030304 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.9696969696969697].
2023-08-22 06:43:01,534 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:43:01,534 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:43:01,786 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0016170000000000002 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.33333333333333337 ,learning_rate_power=-0.8282828282828283 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.595959595959596].
2023-08-22 06:43:01,787 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0016170000000000002 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.33333333333333337 ,learning_rate_power=-0.8282828282828283 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.595959595959596].
2023-08-22 06:43:03,720 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:43:03,721 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:43:13,531 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.9090909090909092, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0056570000000000014 ,use_ema=True ,ema_momentum=0.17171717171717174 ,rho=0.06060606060606061 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.18181818181818182 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.22222222222222224].
2023-08-22 06:43:13,531 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.9090909090909092, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0056570000000000014 ,use_ema=True ,ema_momentum=0.17171717171717174 ,rho=0.06060606060606061 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.18181818181818182 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.22222222222222224].
2023-08-22 06:43:22,635 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6464646464646465 ,rho=0.9090909090909092 ,epsilon=7.070716363636363e-05 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.595959595959596].
2023-08-22 06:43:22,636 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6464646464646465 ,rho=0.9090909090909092 ,epsilon=7.070716363636363e-05 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.595959595959596].
2023-08-22 06:43:22,822 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:43:22,822 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:43:24,425 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.004243000000000001 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.888888888888889 ,epsilon=0.0008686868818181818 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.12121212121212122 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.27272727272727276 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:43:24,425 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.004243000000000001 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.888888888888889 ,epsilon=0.0008686868818181818 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.12121212121212122 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.27272727272727276 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:43:34,294 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:43:34,294 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:43:44,019 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:43:44,019 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:43:45,373 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:43:45,374 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:43:48,604 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:43:48,604 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:43:54,583 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.393939393939394, momentum=0.43434343434343436 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=8.080817272727271e-05 ,centered=False ,beta_1=0.14141414141414144 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.23232323232323226 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.48484848484848486 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.595959595959596].
2023-08-22 06:43:54,583 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.393939393939394, momentum=0.43434343434343436 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=8.080817272727271e-05 ,centered=False ,beta_1=0.14141414141414144 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.23232323232323226 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.48484848484848486 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.595959595959596].
2023-08-22 06:44:04,639 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.31313131313131315, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8989898989898991 ,rho=0.11111111111111112 ,epsilon=0.0008383838545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.8888888888888888 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.04040404040404041].
2023-08-22 06:44:04,639 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.31313131313131315, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8989898989898991 ,rho=0.11111111111111112 ,epsilon=0.0008383838545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.8888888888888888 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.04040404040404041].
2023-08-22 06:44:05,713 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.888888888888889, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.006465000000000001 ,use_ema=True ,ema_momentum=0.23232323232323235 ,rho=0.888888888888889 ,epsilon=0.0003333334 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.9696969696969697 ,beta=0.595959595959596].
2023-08-22 06:44:05,713 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.888888888888889, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.006465000000000001 ,use_ema=True ,ema_momentum=0.23232323232323235 ,rho=0.888888888888889 ,epsilon=0.0003333334 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.9696969696969697 ,beta=0.595959595959596].
2023-08-22 06:44:10,055 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:44:10,055 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:44:17,950 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.32323232323232326, momentum=0.4141414141414142 ,nesterov=True ,amsgrad=True ,weight_decay=0.000506 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.23232323232323235 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.9393939393939394 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.29292929292929293].
2023-08-22 06:44:17,950 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.32323232323232326, momentum=0.4141414141414142 ,nesterov=True ,amsgrad=True ,weight_decay=0.000506 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.23232323232323235 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.9393939393939394 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.29292929292929293].
2023-08-22 06:44:38,778 INFO: Applying selection operators for generation 8.
2023-08-22 06:44:38,780 INFO: Applying genetic operators for generation 8.
2023-08-22 06:44:38,784 INFO: Evaluating fitness for for generation 8.
2023-08-22 06:44:38,784 INFO: Will evaluate fitness for 55 individuals.
2023-08-22 06:44:39,347 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:44:39,347 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:44:39,363 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:44:39,364 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:44:39,368 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:44:39,368 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:44:39,371 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:44:39,371 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:44:59,530 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:44:59,530 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:44:59,638 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:44:59,638 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:44:59,640 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:44:59,640 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:44:59,697 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:44:59,697 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:45:19,816 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4040404040404041 ,rho=0.11111111111111112 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.4141414141414142 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.5555555555555556 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=1.0].
2023-08-22 06:45:19,817 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4040404040404041 ,rho=0.11111111111111112 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.4141414141414142 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.5555555555555556 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=1.0].
2023-08-22 06:45:19,950 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:45:19,950 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:45:20,110 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:45:20,110 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:45:20,599 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:45:20,599 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:45:39,019 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.5454545454545455 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.38383838383838387 ,epsilon=0.0005656566090909091 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.686868686868687].
2023-08-22 06:45:39,020 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.5454545454545455 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.38383838383838387 ,epsilon=0.0005656566090909091 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.686868686868687].
2023-08-22 06:45:40,242 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:45:40,243 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:45:41,083 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.5252525252525253 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.5555555555555556 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.20202020202020204 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.595959595959596].
2023-08-22 06:45:41,083 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.5252525252525253 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.5555555555555556 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.20202020202020204 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.595959595959596].
2023-08-22 06:45:41,227 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:45:41,228 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:46:01,312 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8383838383838385, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.005354000000000001 ,use_ema=True ,ema_momentum=0.12121212121212122 ,rho=0.10101010101010102 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5252525252525253 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.595959595959596].
2023-08-22 06:46:01,312 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8383838383838385, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.005354000000000001 ,use_ema=True ,ema_momentum=0.12121212121212122 ,rho=0.10101010101010102 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5252525252525253 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.595959595959596].
2023-08-22 06:46:01,766 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:46:01,766 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:46:02,287 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.3535353535353536, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.08080808080808081 ,epsilon=0.0007575757818181818 ,centered=True ,beta_1=0.9090909090909092 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.5353535353535354].
2023-08-22 06:46:02,288 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.3535353535353536, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.08080808080808081 ,epsilon=0.0007575757818181818 ,centered=True ,beta_1=0.9090909090909092 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.5353535353535354].
2023-08-22 06:46:04,656 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:46:04,657 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:46:22,402 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:46:22,402 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:46:25,222 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8383838383838385 ,rho=0.37373737373737376 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.46464646464646464 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=0.595959595959596].
2023-08-22 06:46:25,222 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8383838383838385 ,rho=0.37373737373737376 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.46464646464646464 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=0.595959595959596].
2023-08-22 06:46:25,737 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.009394000000000001 ,use_ema=True ,ema_momentum=0.9292929292929294 ,rho=0.20202020202020204 ,epsilon=0.0004242424818181818 ,centered=True ,beta_1=0.6060606060606061 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.3737373737373737 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.595959595959596].
2023-08-22 06:46:25,738 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.009394000000000001 ,use_ema=True ,ema_momentum=0.9292929292929294 ,rho=0.20202020202020204 ,epsilon=0.0004242424818181818 ,centered=True ,beta_1=0.6060606060606061 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.3737373737373737 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.595959595959596].
2023-08-22 06:46:25,769 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.007980000000000001 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.010101010101010102].
2023-08-22 06:46:25,769 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.007980000000000001 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.010101010101010102].
2023-08-22 06:46:43,520 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:46:43,520 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:46:49,670 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:46:49,670 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:46:49,846 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:46:49,847 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:46:56,379 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:46:56,379 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:47:04,142 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:47:04,142 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:47:10,481 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:47:10,482 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:47:10,653 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:47:10,653 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:47:17,791 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:47:17,791 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:47:24,849 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.595959595959596 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.24242424242424243 ,learning_rate_power=-0.5353535353535352 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.010101010101010102 ,beta=0.595959595959596].
2023-08-22 06:47:24,849 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.595959595959596 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.24242424242424243 ,learning_rate_power=-0.5353535353535352 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.010101010101010102 ,beta=0.595959595959596].
2023-08-22 06:47:31,179 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.7777777777777778, momentum=0.43434343434343436 ,nesterov=True ,amsgrad=True ,weight_decay=0.0034350000000000006 ,use_ema=True ,ema_momentum=0.6666666666666667 ,rho=0.06060606060606061 ,epsilon=0.00011111119999999999 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.12121212121212122].
2023-08-22 06:47:31,179 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.7777777777777778, momentum=0.43434343434343436 ,nesterov=True ,amsgrad=True ,weight_decay=0.0034350000000000006 ,use_ema=True ,ema_momentum=0.6666666666666667 ,rho=0.06060606060606061 ,epsilon=0.00011111119999999999 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.12121212121212122].
2023-08-22 06:47:31,802 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5353535353535354 ,rho=0.5858585858585859 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.5555555555555556 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.5858585858585859 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:47:31,802 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5353535353535354 ,rho=0.5858585858585859 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.5555555555555556 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.5858585858585859 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:47:38,499 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:47:38,500 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:47:47,309 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:47:47,310 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:47:54,970 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:47:54,970 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:47:55,761 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7373737373737375 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.595959595959596].
2023-08-22 06:47:55,761 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7373737373737375 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.595959595959596].
2023-08-22 06:47:59,168 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:47:59,168 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:48:08,548 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:48:08,549 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:48:15,841 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:48:15,841 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:48:19,054 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:48:19,054 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:48:20,456 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:48:20,456 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:48:29,149 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:48:29,149 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:48:36,112 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:48:36,112 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:48:39,762 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.787878787878788, momentum=0.24242424242424243 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.7272727272727273 ,initial_accumulator_value=0.2828282828282829 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.595959595959596].
2023-08-22 06:48:39,762 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.787878787878788, momentum=0.24242424242424243 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.7272727272727273 ,initial_accumulator_value=0.2828282828282829 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.595959595959596].
2023-08-22 06:48:41,038 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:48:41,038 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:48:49,648 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:48:49,649 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:48:56,350 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0015160000000000002 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.020202020202020204].
2023-08-22 06:48:56,350 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0015160000000000002 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.020202020202020204].
2023-08-22 06:49:10,660 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:49:10,660 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:49:17,850 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.8080808080808082 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.08080808080808081].
2023-08-22 06:49:17,850 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.8080808080808082 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.08080808080808081].
2023-08-22 06:49:31,171 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:49:31,171 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:49:38,134 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:49:38,134 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:49:51,728 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:49:51,728 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:50:11,400 INFO: Applying selection operators for generation 9.
2023-08-22 06:50:11,401 INFO: Applying genetic operators for generation 9.
2023-08-22 06:50:11,407 INFO: Evaluating fitness for for generation 9.
2023-08-22 06:50:11,407 INFO: Will evaluate fitness for 62 individuals.
2023-08-22 06:50:11,960 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.31313131313131315, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.26262626262626265 ,rho=0.9090909090909092 ,epsilon=0.0005757576181818182 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.23232323232323235 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.9090909090909092 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.36363636363636365].
2023-08-22 06:50:11,960 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.31313131313131315, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.26262626262626265 ,rho=0.9090909090909092 ,epsilon=0.0005757576181818182 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.23232323232323235 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.9090909090909092 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.36363636363636365].
2023-08-22 06:50:11,965 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:50:11,965 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:50:12,111 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:50:12,112 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:50:12,122 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6363636363636365, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.24242424242424243 ,epsilon=0.0003636364272727272 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.9595959595959597].
2023-08-22 06:50:12,122 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6363636363636365, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.24242424242424243 ,epsilon=0.0003636364272727272 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.9595959595959597].
2023-08-22 06:50:32,129 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:50:32,129 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:50:32,680 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:50:32,680 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:50:35,678 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:50:35,678 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:50:35,834 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.07070707070707072, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.48484848484848486 ,rho=0.9090909090909092 ,epsilon=0.00043434349090909084 ,centered=True ,beta_1=0.22222222222222224 ,beta_2=0.22222222222222224 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:50:35,835 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.07070707070707072, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.48484848484848486 ,rho=0.9090909090909092 ,epsilon=0.00043434349090909084 ,centered=True ,beta_1=0.22222222222222224 ,beta_2=0.22222222222222224 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:50:52,822 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:50:52,823 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:50:53,768 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:50:53,769 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:50:56,305 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.6767676767676768, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8686868686868687 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.4040404040404041 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.27272727272727276].
2023-08-22 06:50:56,305 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.6767676767676768, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8686868686868687 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.4040404040404041 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.27272727272727276].
2023-08-22 06:50:59,511 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6767676767676768 ,rho=0.17171717171717174 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.36363636363636365 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9393939393939394 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.36363636363636365].
2023-08-22 06:50:59,512 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6767676767676768 ,rho=0.17171717171717174 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.36363636363636365 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9393939393939394 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.36363636363636365].
2023-08-22 06:51:13,119 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.21212121212121213, momentum=0.24242424242424243 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.30303030303030304 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.494949494949495 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.595959595959596].
2023-08-22 06:51:13,120 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.21212121212121213, momentum=0.24242424242424243 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.30303030303030304 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.494949494949495 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.595959595959596].
2023-08-22 06:51:14,435 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:51:14,436 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:51:19,364 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:51:19,364 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:51:23,252 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:51:23,253 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:51:34,723 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.21212121212121213, momentum=0.5454545454545455 ,nesterov=True ,amsgrad=False ,weight_decay=0.007778000000000001 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.05050505050505051 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.8282828282828284 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6666666666666667 ,beta=0.04040404040404041].
2023-08-22 06:51:34,724 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.21212121212121213, momentum=0.5454545454545455 ,nesterov=True ,amsgrad=False ,weight_decay=0.007778000000000001 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.05050505050505051 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.8282828282828284 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6666666666666667 ,beta=0.04040404040404041].
2023-08-22 06:51:35,152 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:51:35,153 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:51:40,613 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9393939393939394, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.595959595959596 ,epsilon=0.0006868687181818181 ,centered=False ,beta_1=0.888888888888889 ,beta_2=0.7575757575757577 ,learning_rate_power=-0.3232323232323232 ,initial_accumulator_value=0.7373737373737375 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.8585858585858587 ,beta=0.595959595959596].
2023-08-22 06:51:40,613 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9393939393939394, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.595959595959596 ,epsilon=0.0006868687181818181 ,centered=False ,beta_1=0.888888888888889 ,beta_2=0.7575757575757577 ,learning_rate_power=-0.3232323232323232 ,initial_accumulator_value=0.7373737373737375 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.8585858585858587 ,beta=0.595959595959596].
2023-08-22 06:51:44,156 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7373737373737375 ,rho=0.9090909090909092 ,epsilon=0.0006464646818181818 ,centered=True ,beta_1=0.07070707070707072 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.8585858585858586 ,initial_accumulator_value=0.5656565656565657 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.4646464646464647 ,beta=0.595959595959596].
2023-08-22 06:51:44,156 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7373737373737375 ,rho=0.9090909090909092 ,epsilon=0.0006464646818181818 ,centered=True ,beta_1=0.07070707070707072 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.8585858585858586 ,initial_accumulator_value=0.5656565656565657 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.4646464646464647 ,beta=0.595959595959596].
2023-08-22 06:51:56,324 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:51:56,324 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:52:04,534 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:52:04,534 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:52:07,837 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.22222222222222224 ,rho=0.7373737373737375 ,epsilon=0.0002121212909090909 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.494949494949495 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.595959595959596].
2023-08-22 06:52:07,838 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.22222222222222224 ,rho=0.7373737373737375 ,epsilon=0.0002121212909090909 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.494949494949495 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.595959595959596].
2023-08-22 06:52:08,120 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.5050505050505051, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7171717171717172 ,rho=0.888888888888889 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.6262626262626263 ,beta_2=0.36363636363636365 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.4040404040404041 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.12121212121212122].
2023-08-22 06:52:08,120 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.5050505050505051, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7171717171717172 ,rho=0.888888888888889 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.6262626262626263 ,beta_2=0.36363636363636365 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.4040404040404041 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.12121212121212122].
2023-08-22 06:52:16,949 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:52:16,949 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:52:25,083 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7474747474747475, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.5151515151515152 ,beta_2=0.32323232323232326 ,learning_rate_power=-0.26262626262626254 ,initial_accumulator_value=0.686868686868687 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.595959595959596].
2023-08-22 06:52:25,083 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7474747474747475, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.5151515151515152 ,beta_2=0.32323232323232326 ,learning_rate_power=-0.26262626262626254 ,initial_accumulator_value=0.686868686868687 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.595959595959596].
2023-08-22 06:52:31,143 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:52:31,143 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:52:32,734 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.9393939393939394, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4646464646464647 ,rho=0.9090909090909092 ,epsilon=0.0009393939454545454 ,centered=True ,beta_1=0.020202020202020204 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.12121212121212122 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.595959595959596].
2023-08-22 06:52:32,734 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.9393939393939394, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4646464646464647 ,rho=0.9090909090909092 ,epsilon=0.0009393939454545454 ,centered=True ,beta_1=0.020202020202020204 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.12121212121212122 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.595959595959596].
2023-08-22 06:52:37,539 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:52:37,540 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:52:45,553 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:52:45,553 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:52:51,443 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:52:51,443 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:52:57,718 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:52:57,719 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:52:58,067 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.11111111111111112, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.12121212121212122 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.04040404040404041 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.595959595959596].
2023-08-22 06:52:58,067 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.11111111111111112, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.12121212121212122 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.04040404040404041 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.595959595959596].
2023-08-22 06:53:06,929 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6363636363636365, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.33333333333333337 ,rho=0.4444444444444445 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.595959595959596].
2023-08-22 06:53:06,930 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6363636363636365, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.33333333333333337 ,rho=0.4444444444444445 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.595959595959596].
2023-08-22 06:53:12,471 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:53:12,471 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:53:18,555 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.14141414141414144, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0033340000000000006 ,use_ema=True ,ema_momentum=0.13131313131313133 ,rho=0.33333333333333337 ,epsilon=0.0007373737636363636 ,centered=False ,beta_1=0.8989898989898991 ,beta_2=0.0 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.595959595959596 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.5252525252525253].
2023-08-22 06:53:18,555 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.14141414141414144, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0033340000000000006 ,use_ema=True ,ema_momentum=0.13131313131313133 ,rho=0.33333333333333337 ,epsilon=0.0007373737636363636 ,centered=False ,beta_1=0.8989898989898991 ,beta_2=0.0 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.595959595959596 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.5252525252525253].
2023-08-22 06:53:19,325 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.31313131313131315, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.31313131313131304 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.4545454545454546].
2023-08-22 06:53:19,325 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.31313131313131315, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.31313131313131304 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.4545454545454546].
2023-08-22 06:53:30,463 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:53:30,463 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:53:32,772 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5858585858585859 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.393939393939394 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.08080808080808081 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.7373737373737375].
2023-08-22 06:53:32,772 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5858585858585859 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.393939393939394 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.08080808080808081 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.7373737373737375].
2023-08-22 06:53:39,306 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9090909090909092, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.3535353535353536 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.30303030303030304 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.12121212121212122 ,beta=0.595959595959596].
2023-08-22 06:53:39,306 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9090909090909092, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.3535353535353536 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.30303030303030304 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.12121212121212122 ,beta=0.595959595959596].
2023-08-22 06:53:43,033 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:53:43,033 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:53:51,042 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:53:51,042 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:53:53,008 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:53:53,009 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:53:59,739 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:53:59,740 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:54:04,318 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:54:04,318 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:54:12,224 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:54:12,225 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:54:13,230 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7171717171717172, momentum=0.04040404040404041 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6565656565656566 ,rho=0.9090909090909092 ,epsilon=8.080817272727271e-05 ,centered=True ,beta_1=0.31313131313131315 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.2929292929292928 ,initial_accumulator_value=0.08080808080808081 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.3535353535353536].
2023-08-22 06:54:13,230 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7171717171717172, momentum=0.04040404040404041 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6565656565656566 ,rho=0.9090909090909092 ,epsilon=8.080817272727271e-05 ,centered=True ,beta_1=0.31313131313131315 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.2929292929292928 ,initial_accumulator_value=0.08080808080808081 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.3535353535353536].
2023-08-22 06:54:20,630 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.00010200000000000001 ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.7070707070707072 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.595959595959596].
2023-08-22 06:54:20,631 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.00010200000000000001 ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.7070707070707072 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.595959595959596].
2023-08-22 06:54:24,874 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.008283 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.18181818181818182 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.15151515151515152 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.9393939393939394 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.595959595959596].
2023-08-22 06:54:24,874 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.008283 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.18181818181818182 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.15151515151515152 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.9393939393939394 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.595959595959596].
2023-08-22 06:54:32,819 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:54:32,819 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:54:34,069 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:54:34,069 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:54:40,985 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:54:40,985 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:54:49,284 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6666666666666667, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.37373737373737376 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.8989898989898991 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.13131313131313133 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.595959595959596].
2023-08-22 06:54:49,284 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6666666666666667, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.37373737373737376 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.8989898989898991 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.13131313131313133 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.595959595959596].
2023-08-22 06:54:53,335 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.32323232323232326, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.19191919191919193 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.595959595959596].
2023-08-22 06:54:53,336 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.32323232323232326, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.19191919191919193 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.595959595959596].
2023-08-22 06:54:54,481 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.05050505050505051, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.4141414141414142 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.9393939393939394 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.17171717171717174].
2023-08-22 06:54:54,481 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.05050505050505051, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.4141414141414142 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.9393939393939394 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.17171717171717174].
2023-08-22 06:55:02,211 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:55:02,212 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:55:13,641 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:55:13,641 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:55:14,778 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:55:14,778 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:55:16,315 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.393939393939394, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.888888888888889 ,epsilon=0.0006464646818181818 ,centered=True ,beta_1=0.7676767676767677 ,beta_2=0.9090909090909092 ,learning_rate_power=-0.3434343434343434 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.696969696969697].
2023-08-22 06:55:16,315 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.393939393939394, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.888888888888889 ,epsilon=0.0006464646818181818 ,centered=True ,beta_1=0.7676767676767677 ,beta_2=0.9090909090909092 ,learning_rate_power=-0.3434343434343434 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.696969696969697].
2023-08-22 06:55:22,330 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:55:22,330 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:55:35,063 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:55:35,063 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:55:40,989 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:55:40,989 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:56:00,966 INFO: Applying selection operators for generation 10.
2023-08-22 06:56:00,967 INFO: Applying genetic operators for generation 10.
2023-08-22 06:56:00,974 INFO: Evaluating fitness for for generation 10.
2023-08-22 06:56:00,974 INFO: Will evaluate fitness for 58 individuals.
2023-08-22 06:56:01,545 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:56:01,546 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:56:01,557 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:56:01,558 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:56:01,563 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.686868686868687, momentum=0.27272727272727276 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.17171717171717174 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.686868686868687 ,learning_rate_power=-0.43434343434343425 ,initial_accumulator_value=0.7272727272727273 ,l1_regularization_strength=0.26262626262626265 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.595959595959596].
2023-08-22 06:56:01,563 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.686868686868687, momentum=0.27272727272727276 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.17171717171717174 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.686868686868687 ,learning_rate_power=-0.43434343434343425 ,initial_accumulator_value=0.7272727272727273 ,l1_regularization_strength=0.26262626262626265 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.595959595959596].
2023-08-22 06:56:01,604 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:56:01,605 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:56:21,652 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:56:21,652 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:56:21,799 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.48484848484848486 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.9292929292929294 ,beta_2=0.23232323232323235 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.595959595959596].
2023-08-22 06:56:21,800 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.48484848484848486 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.9292929292929294 ,beta_2=0.23232323232323235 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.595959595959596].
2023-08-22 06:56:21,916 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.009798000000000001 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.00011111119999999999 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.5656565656565657 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.030303030303030304 ,beta=0.595959595959596].
2023-08-22 06:56:21,916 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.009798000000000001 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.00011111119999999999 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.5656565656565657 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.030303030303030304 ,beta=0.595959595959596].
2023-08-22 06:56:33,769 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7575757575757577, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.48484848484848486 ,rho=0.686868686868687 ,epsilon=0.0004747475272727272 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.5353535353535354 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.6464646464646465].
2023-08-22 06:56:33,769 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7575757575757577, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.48484848484848486 ,rho=0.686868686868687 ,epsilon=0.0004747475272727272 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.5353535353535354 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.6464646464646465].
2023-08-22 06:56:41,954 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.22222222222222224, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.38383838383838387 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.43434343434343436 ,beta_2=0.9595959595959597 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.31313131313131315 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.30303030303030304 ,beta=0.05050505050505051].
2023-08-22 06:56:41,954 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.22222222222222224, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.38383838383838387 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.43434343434343436 ,beta_2=0.9595959595959597 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.31313131313131315 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.30303030303030304 ,beta=0.05050505050505051].
2023-08-22 06:56:42,044 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.27272727272727276, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.494949494949495 ,epsilon=0.0005858586272727272 ,centered=True ,beta_1=0.08080808080808081 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.9292929292929294 ,l1_regularization_strength=0.4545454545454546 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.595959595959596].
2023-08-22 06:56:42,044 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.27272727272727276, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.494949494949495 ,epsilon=0.0005858586272727272 ,centered=True ,beta_1=0.08080808080808081 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.9292929292929294 ,l1_regularization_strength=0.4545454545454546 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.595959595959596].
2023-08-22 06:56:46,996 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:56:46,996 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:56:58,152 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:56:58,152 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:57:05,962 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:57:05,963 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:57:06,427 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.48484848484848486 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:57:06,427 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.48484848484848486 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:57:07,583 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.9191919191919192 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0004848485363636363 ,centered=True ,beta_1=0.3434343434343435 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.4747474747474748].
2023-08-22 06:57:07,583 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.9191919191919192 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0004848485363636363 ,centered=True ,beta_1=0.3434343434343435 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.4747474747474748].
2023-08-22 06:57:18,649 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.13131313131313133, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6464646464646465 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:57:18,650 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.13131313131313133, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6464646464646465 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:57:26,283 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:57:26,283 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:57:26,779 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:57:26,779 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:57:30,803 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:57:30,804 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:57:39,122 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5353535353535354, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0030310000000000007 ,use_ema=True ,ema_momentum=0.5050505050505051 ,rho=0.9090909090909092 ,epsilon=0.0003333334 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.30303030303030304 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.20202020202020204].
2023-08-22 06:57:39,123 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5353535353535354, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0030310000000000007 ,use_ema=True ,ema_momentum=0.5050505050505051 ,rho=0.9090909090909092 ,epsilon=0.0003333334 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.30303030303030304 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.20202020202020204].
2023-08-22 06:57:46,673 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.32323232323232326 ,nesterov=True ,amsgrad=True ,weight_decay=0.001011 ,use_ema=True ,ema_momentum=0.30303030303030304 ,rho=0.9292929292929294 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.050505050505050386 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.12121212121212122].
2023-08-22 06:57:46,673 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.32323232323232326 ,nesterov=True ,amsgrad=True ,weight_decay=0.001011 ,use_ema=True ,ema_momentum=0.30303030303030304 ,rho=0.9292929292929294 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.050505050505050386 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.12121212121212122].
2023-08-22 06:57:46,991 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7777777777777778, momentum=0.33333333333333337 ,nesterov=False ,amsgrad=False ,weight_decay=0.008182 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.5454545454545455 ,epsilon=0.0006868687181818181 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.393939393939394 ,learning_rate_power=-0.404040404040404 ,initial_accumulator_value=0.18181818181818182 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.8686868686868687].
2023-08-22 06:57:46,991 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7777777777777778, momentum=0.33333333333333337 ,nesterov=False ,amsgrad=False ,weight_decay=0.008182 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.5454545454545455 ,epsilon=0.0006868687181818181 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.393939393939394 ,learning_rate_power=-0.404040404040404 ,initial_accumulator_value=0.18181818181818182 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.8686868686868687].
2023-08-22 06:57:51,294 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.42424242424242425, momentum=0.7070707070707072 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.42424242424242425 ,rho=0.30303030303030304 ,epsilon=0.0008585858727272726 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.494949494949495 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.33333333333333337].
2023-08-22 06:57:51,294 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.42424242424242425, momentum=0.7070707070707072 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.42424242424242425 ,rho=0.30303030303030304 ,epsilon=0.0008585858727272726 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.494949494949495 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.33333333333333337].
2023-08-22 06:58:04,356 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:58:04,356 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:58:10,071 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:58:10,072 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:58:12,044 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.13131313131313133 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.494949494949495 ,beta_2=0.9292929292929294 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.9393939393939394 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=0.595959595959596].
2023-08-22 06:58:12,044 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.13131313131313133 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.494949494949495 ,beta_2=0.9292929292929294 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.9393939393939394 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=0.595959595959596].
2023-08-22 06:58:16,041 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:58:16,041 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:58:24,899 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:58:24,900 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:58:30,512 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:58:30,512 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:58:32,532 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.21212121212121213 ,nesterov=True ,amsgrad=False ,weight_decay=0.0004050000000000001 ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.4141414141414142 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.27272727272727276 ,beta_2=0.7171717171717172 ,learning_rate_power=-0.7373737373737373 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.4444444444444445].
2023-08-22 06:58:32,532 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.21212121212121213 ,nesterov=True ,amsgrad=False ,weight_decay=0.0004050000000000001 ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.4141414141414142 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.27272727272727276 ,beta_2=0.7171717171717172 ,learning_rate_power=-0.7373737373737373 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.4444444444444445].
2023-08-22 06:58:36,723 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:58:36,724 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:58:45,331 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:58:45,331 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:58:50,867 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:58:50,868 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:58:56,084 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:58:56,085 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:58:57,280 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.4646464646464647, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5353535353535354 ,rho=0.8282828282828284 ,epsilon=0.0002121212909090909 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.5757575757575758 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.787878787878788 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:58:57,280 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.4646464646464647, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5353535353535354 ,rho=0.8282828282828284 ,epsilon=0.0002121212909090909 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.5757575757575758 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.787878787878788 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:59:05,763 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:59:05,763 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:59:11,160 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:59:11,160 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:59:16,416 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.21212121212121213, momentum=0.7272727272727273 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.06060606060606061 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.20202020202020204 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.9797979797979799 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.696969696969697].
2023-08-22 06:59:16,416 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.21212121212121213, momentum=0.7272727272727273 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.06060606060606061 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.20202020202020204 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.9797979797979799 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.696969696969697].
2023-08-22 06:59:23,448 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.21212121212121213, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=0.008687 ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.6464646464646465 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.4040404040404041 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.37373737373737376 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6666666666666667 ,beta=0.595959595959596].
2023-08-22 06:59:23,448 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.21212121212121213, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=0.008687 ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.6464646464646465 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.4040404040404041 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.37373737373737376 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6666666666666667 ,beta=0.595959595959596].
2023-08-22 06:59:26,889 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.09090909090909091, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.31313131313131315 ,epsilon=0.0009898989909090908 ,centered=True ,beta_1=0.16161616161616163 ,beta_2=0.9292929292929294 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:59:26,889 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.09090909090909091, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.31313131313131315 ,epsilon=0.0009898989909090908 ,centered=True ,beta_1=0.16161616161616163 ,beta_2=0.9292929292929294 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:59:31,942 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6464646464646465, momentum=0.4545454545454546 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6161616161616162 ,rho=0.9090909090909092 ,epsilon=0.00018181826363636362 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.595959595959596].
2023-08-22 06:59:31,942 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6464646464646465, momentum=0.4545454545454546 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6161616161616162 ,rho=0.9090909090909092 ,epsilon=0.00018181826363636362 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.595959595959596].
2023-08-22 06:59:46,811 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.10101010101010102 ,rho=0.4747474747474748 ,epsilon=0.0004242424818181818 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.9393939393939394 ,learning_rate_power=-0.8686868686868687 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.9797979797979799].
2023-08-22 06:59:46,812 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.10101010101010102 ,rho=0.4747474747474748 ,epsilon=0.0004242424818181818 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.9393939393939394 ,learning_rate_power=-0.8686868686868687 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.9797979797979799].
2023-08-22 06:59:49,694 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.98989898989899, momentum=0.4545454545454546 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.5252525252525253 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.29292929292929293 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.8787878787878789 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.3535353535353536].
2023-08-22 06:59:49,694 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.98989898989899, momentum=0.4545454545454546 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.5252525252525253 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.29292929292929293 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.8787878787878789 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.3535353535353536].
2023-08-22 06:59:50,835 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:59:50,836 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:59:55,776 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 06:59:55,776 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:00:05,153 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:00:05,153 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:00:09,451 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9090909090909092, momentum=0.08080808080808081 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6262626262626263 ,rho=0.9090909090909092 ,epsilon=3.030312727272727e-05 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.30303030303030304].
2023-08-22 07:00:09,451 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9090909090909092, momentum=0.08080808080808081 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6262626262626263 ,rho=0.9090909090909092 ,epsilon=3.030312727272727e-05 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.30303030303030304].
2023-08-22 07:00:11,277 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:00:11,278 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:00:16,137 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:00:16,137 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:00:25,862 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:00:25,863 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:00:32,560 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.4545454545454546, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.797979797979798 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.8282828282828284 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9494949494949496 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:00:32,560 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.4545454545454546, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.797979797979798 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.8282828282828284 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9494949494949496 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:00:36,434 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:00:36,435 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:00:47,037 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:00:47,037 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:00:56,129 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.7272727272727273 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.020202020202020204 ,rho=0.9090909090909092 ,epsilon=0.0002929293636363636 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.37373737373737376 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.8989898989898991 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.8484848484848485].
2023-08-22 07:00:56,130 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.7272727272727273 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.020202020202020204 ,rho=0.9090909090909092 ,epsilon=0.0002929293636363636 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.37373737373737376 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.8989898989898991 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.8484848484848485].
2023-08-22 07:00:57,242 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:00:57,242 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:01:07,676 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.19191919191919193, momentum=0.8686868686868687 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7575757575757577 ,rho=0.9090909090909092 ,epsilon=0.00031313138181818175 ,centered=True ,beta_1=0.24242424242424243 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.9191919191919192 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.595959595959596].
2023-08-22 07:01:07,677 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.19191919191919193, momentum=0.8686868686868687 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7575757575757577 ,rho=0.9090909090909092 ,epsilon=0.00031313138181818175 ,centered=True ,beta_1=0.24242424242424243 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.9191919191919192 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.595959595959596].
2023-08-22 07:01:17,633 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.21212121212121213, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.0029300000000000007 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.24242424242424243 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.36363636363636365 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.2222222222222222 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.595959595959596].
2023-08-22 07:01:17,633 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.21212121212121213, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.0029300000000000007 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.24242424242424243 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.36363636363636365 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.2222222222222222 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.595959595959596].
2023-08-22 07:01:31,509 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:01:31,509 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:01:52,002 INFO: Applying selection operators for generation 11.
2023-08-22 07:01:52,003 INFO: Applying genetic operators for generation 11.
2023-08-22 07:01:52,009 INFO: Evaluating fitness for for generation 11.
2023-08-22 07:01:52,009 INFO: Will evaluate fitness for 59 individuals.
2023-08-22 07:01:52,571 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:01:52,571 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:01:52,577 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:01:52,577 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:01:52,595 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.7070707070707072, momentum=0.6262626262626263 ,nesterov=True ,amsgrad=False ,weight_decay=0.009899000000000002 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.5454545454545455 ,epsilon=0.0002929293636363636 ,centered=False ,beta_1=0.4545454545454546 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.5454545454545455].
2023-08-22 07:01:52,595 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.7070707070707072, momentum=0.6262626262626263 ,nesterov=True ,amsgrad=False ,weight_decay=0.009899000000000002 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.5454545454545455 ,epsilon=0.0002929293636363636 ,centered=False ,beta_1=0.4545454545454546 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.5454545454545455].
2023-08-22 07:01:52,613 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:01:52,613 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:02:13,196 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:02:13,196 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:02:13,375 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:02:13,375 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:02:13,590 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:02:13,590 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:02:17,471 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8686868686868687, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.5252525252525253 ,epsilon=0.0006666667 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.9090909090909092 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.595959595959596].
2023-08-22 07:02:17,472 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8686868686868687, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.5252525252525253 ,epsilon=0.0006666667 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.9090909090909092 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.595959595959596].
2023-08-22 07:02:33,638 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.5656565656565657 ,rho=0.31313131313131315 ,epsilon=0.00040404046363636356 ,centered=False ,beta_1=1.0 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.595959595959596].
2023-08-22 07:02:33,638 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.5656565656565657 ,rho=0.31313131313131315 ,epsilon=0.00040404046363636356 ,centered=False ,beta_1=1.0 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.595959595959596].
2023-08-22 07:02:33,687 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:02:33,687 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:02:34,091 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:02:34,091 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:02:41,588 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:02:41,588 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:02:53,912 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:02:53,912 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:02:54,467 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:02:54,467 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:02:56,817 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:02:56,817 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:03:02,071 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:03:02,072 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:03:14,894 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:03:14,894 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:03:15,416 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:03:15,416 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:03:18,051 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:03:18,051 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:03:22,498 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:03:22,498 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:03:35,212 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.787878787878788, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.003940000000000001 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.48484848484848486 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.48484848484848486 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.5555555555555556 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.4646464646464647 ,beta=0.595959595959596].
2023-08-22 07:03:35,212 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.787878787878788, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.003940000000000001 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.48484848484848486 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.48484848484848486 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.5555555555555556 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.4646464646464647 ,beta=0.595959595959596].
2023-08-22 07:03:35,925 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:03:35,925 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:03:38,558 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.7171717171717172 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.17171717171717174 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.8484848484848485 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.11111111111111112 ,beta=0.5050505050505051].
2023-08-22 07:03:38,558 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.7171717171717172 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.17171717171717174 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.8484848484848485 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.11111111111111112 ,beta=0.5050505050505051].
2023-08-22 07:03:43,603 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:03:43,604 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:03:56,227 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:03:56,227 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:03:59,432 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.6565656565656566 ,epsilon=0.0002020202818181818 ,centered=True ,beta_1=1.0 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.30303030303030304 ,beta=0.494949494949495].
2023-08-22 07:03:59,432 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.6565656565656566 ,epsilon=0.0002020202818181818 ,centered=True ,beta_1=1.0 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.30303030303030304 ,beta=0.494949494949495].
2023-08-22 07:04:02,383 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:04:02,383 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:04:04,141 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.006364000000000001 ,use_ema=False ,ema_momentum=0.4141414141414142 ,rho=0.0 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.13131313131313127 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.9191919191919192 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.30303030303030304 ,beta=0.9292929292929294].
2023-08-22 07:04:04,141 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.006364000000000001 ,use_ema=False ,ema_momentum=0.4141414141414142 ,rho=0.0 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.13131313131313127 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.9191919191919192 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.30303030303030304 ,beta=0.9292929292929294].
2023-08-22 07:04:16,575 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.06060606060606061, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5555555555555556 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.9292929292929294 ,beta_2=0.23232323232323235 ,learning_rate_power=-0.46464646464646464 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.9797979797979799].
2023-08-22 07:04:16,575 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.06060606060606061, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5555555555555556 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.9292929292929294 ,beta_2=0.23232323232323235 ,learning_rate_power=-0.46464646464646464 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.9797979797979799].
2023-08-22 07:04:22,489 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:04:22,490 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:04:22,753 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.393939393939394, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.33333333333333337 ,rho=0.33333333333333337 ,epsilon=0.0002020202818181818 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5656565656565657 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.8080808080808082].
2023-08-22 07:04:22,754 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.393939393939394, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.33333333333333337 ,rho=0.33333333333333337 ,epsilon=0.0002020202818181818 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5656565656565657 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.8080808080808082].
2023-08-22 07:04:27,888 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.030303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.8282828282828284 ,epsilon=6.060615454545454e-05 ,centered=False ,beta_1=0.27272727272727276 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.8787878787878788 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.27272727272727276 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:04:27,888 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.030303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.8282828282828284 ,epsilon=6.060615454545454e-05 ,centered=False ,beta_1=0.27272727272727276 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.8787878787878788 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.27272727272727276 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:04:36,836 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.001011 ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.9090909090909092 ,epsilon=0.0009494949545454545 ,centered=False ,beta_1=0.5151515151515152 ,beta_2=0.030303030303030304 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.595959595959596].
2023-08-22 07:04:36,836 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.001011 ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.9090909090909092 ,epsilon=0.0009494949545454545 ,centered=False ,beta_1=0.5151515151515152 ,beta_2=0.030303030303030304 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.595959595959596].
2023-08-22 07:04:43,402 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:04:43,403 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:04:46,789 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7575757575757577, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0020210000000000002 ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.30303030303030304 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.010101010101010102 ,beta=0.15151515151515152].
2023-08-22 07:04:46,789 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7575757575757577, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0020210000000000002 ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.30303030303030304 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.010101010101010102 ,beta=0.15151515151515152].
2023-08-22 07:04:51,792 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.31313131313131315, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.32323232323232326 ,rho=0.23232323232323235 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.09090909090909091].
2023-08-22 07:04:51,792 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.31313131313131315, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.32323232323232326 ,rho=0.23232323232323235 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.09090909090909091].
2023-08-22 07:05:00,572 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:05:00,572 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:05:03,774 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.21212121212121213, momentum=0.888888888888889 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.29292929292929293 ,rho=0.9090909090909092 ,epsilon=0.0009393939454545454 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.17171717171717174 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:05:03,774 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.21212121212121213, momentum=0.888888888888889 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.29292929292929293 ,rho=0.9090909090909092 ,epsilon=0.0009393939454545454 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.17171717171717174 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:05:07,783 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.10101010101010102 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.595959595959596].
2023-08-22 07:05:07,783 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.10101010101010102 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.595959595959596].
2023-08-22 07:05:15,748 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0008090000000000001 ,use_ema=True ,ema_momentum=0.7373737373737375 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.16161616161616163 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.23232323232323235].
2023-08-22 07:05:15,748 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0008090000000000001 ,use_ema=True ,ema_momentum=0.7373737373737375 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.16161616161616163 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.23232323232323235].
2023-08-22 07:05:20,750 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:05:20,750 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:05:28,367 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5353535353535354, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5252525252525253 ,rho=0.9090909090909092 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.0 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.27272727272727276].
2023-08-22 07:05:28,368 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5353535353535354, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5252525252525253 ,rho=0.9090909090909092 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.0 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.27272727272727276].
2023-08-22 07:05:41,090 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:05:41,090 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:05:41,323 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:05:41,323 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:05:41,561 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.07070707070707072 ,rho=0.31313131313131315 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.5757575757575758 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:05:41,561 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.07070707070707072 ,rho=0.31313131313131315 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.5757575757575758 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:05:52,241 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:05:52,241 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:06:01,635 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7777777777777778 ,rho=0.9090909090909092 ,epsilon=0.0006262626636363636 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.9696969696969697 ,initial_accumulator_value=0.696969696969697 ,l1_regularization_strength=0.6262626262626263 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.7070707070707072].
2023-08-22 07:06:01,636 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7777777777777778 ,rho=0.9090909090909092 ,epsilon=0.0006262626636363636 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.9696969696969697 ,initial_accumulator_value=0.696969696969697 ,l1_regularization_strength=0.6262626262626263 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.7070707070707072].
2023-08-22 07:06:02,283 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.13131313131313133 ,epsilon=0.0009696969727272727 ,centered=False ,beta_1=0.6262626262626263 ,beta_2=0.33333333333333337 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.8686868686868687 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.030303030303030304].
2023-08-22 07:06:02,283 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.13131313131313133 ,epsilon=0.0009696969727272727 ,centered=False ,beta_1=0.6262626262626263 ,beta_2=0.33333333333333337 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.8686868686868687 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.030303030303030304].
2023-08-22 07:06:04,722 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:06:04,722 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:06:13,172 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.4747474747474748, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.030303030303030304 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.14141414141414144 ,learning_rate_power=-0.46464646464646464 ,initial_accumulator_value=0.04040404040404041 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.6464646464646465].
2023-08-22 07:06:13,172 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.4747474747474748, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.030303030303030304 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.14141414141414144 ,learning_rate_power=-0.46464646464646464 ,initial_accumulator_value=0.04040404040404041 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.6464646464646465].
2023-08-22 07:06:25,060 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0020210000000000002 ,use_ema=True ,ema_momentum=0.3434343434343435 ,rho=0.494949494949495 ,epsilon=0.0001313132181818182 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.24242424242424243].
2023-08-22 07:06:25,060 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0020210000000000002 ,use_ema=True ,ema_momentum=0.3434343434343435 ,rho=0.494949494949495 ,epsilon=0.0001313132181818182 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.24242424242424243].
2023-08-22 07:06:25,144 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:06:25,144 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:06:36,744 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.21212121212121213 ,epsilon=0.0006161616545454546 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.12121212121212122 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.8989898989898991 ,l1_regularization_strength=0.29292929292929293 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.595959595959596].
2023-08-22 07:06:36,744 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.21212121212121213 ,epsilon=0.0006161616545454546 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.12121212121212122 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.8989898989898991 ,l1_regularization_strength=0.29292929292929293 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.595959595959596].
2023-08-22 07:06:45,063 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:06:45,063 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:06:49,537 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.27272727272727276, momentum=0.5050505050505051 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.3535353535353536 ,epsilon=0.0007777778 ,centered=True ,beta_1=0.09090909090909091 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.33333333333333337 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.595959595959596].
2023-08-22 07:06:49,537 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.27272727272727276, momentum=0.5050505050505051 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.3535353535353536 ,epsilon=0.0007777778 ,centered=True ,beta_1=0.09090909090909091 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.33333333333333337 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.595959595959596].
2023-08-22 07:07:05,768 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:07:05,768 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:07:09,601 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:07:09,601 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:07:14,302 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.26262626262626265, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.8484848484848485 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.4040404040404041 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.19191919191919193 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.8383838383838385].
2023-08-22 07:07:14,302 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.26262626262626265, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.8484848484848485 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.4040404040404041 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.19191919191919193 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.8383838383838385].
2023-08-22 07:07:30,311 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:07:30,312 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:07:49,795 INFO: Applying selection operators for generation 12.
2023-08-22 07:07:49,797 INFO: Applying genetic operators for generation 12.
2023-08-22 07:07:49,801 INFO: Evaluating fitness for for generation 12.
2023-08-22 07:07:49,802 INFO: Will evaluate fitness for 51 individuals.
2023-08-22 07:07:50,368 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.23232323232323235, momentum=0.7272727272727273 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.3434343434343435 ,epsilon=0.00032323239090909086 ,centered=False ,beta_1=0.12121212121212122 ,beta_2=0.6060606060606061 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.48484848484848486].
2023-08-22 07:07:50,368 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.23232323232323235, momentum=0.7272727272727273 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.3434343434343435 ,epsilon=0.00032323239090909086 ,centered=False ,beta_1=0.12121212121212122 ,beta_2=0.6060606060606061 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.48484848484848486].
2023-08-22 07:07:50,378 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:07:50,378 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:07:50,383 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.004142000000000001 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.7474747474747475 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.595959595959596].
2023-08-22 07:07:50,383 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.004142000000000001 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.7474747474747475 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.595959595959596].
2023-08-22 07:07:50,385 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:07:50,385 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:08:10,769 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:08:10,770 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:08:10,824 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:08:10,824 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:08:13,858 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.30303030303030304 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.020202020202020204 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.30303030303030304 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.595959595959596].
2023-08-22 07:08:13,858 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.30303030303030304 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.020202020202020204 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.30303030303030304 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.595959595959596].
2023-08-22 07:08:15,374 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.05050505050505051 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7272727272727273 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.98989898989899 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.04040404040404041].
2023-08-22 07:08:15,375 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.05050505050505051 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7272727272727273 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.98989898989899 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.04040404040404041].
2023-08-22 07:08:31,214 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.009192 ,use_ema=True ,ema_momentum=0.8989898989898991 ,rho=0.9090909090909092 ,epsilon=0.001 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.010101010101010055 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.7676767676767677].
2023-08-22 07:08:31,214 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.009192 ,use_ema=True ,ema_momentum=0.8989898989898991 ,rho=0.9090909090909092 ,epsilon=0.001 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.010101010101010055 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.7676767676767677].
2023-08-22 07:08:31,251 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:08:31,252 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:08:34,718 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4646464646464647, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8383838383838385 ,rho=0.27272727272727276 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.9090909090909092 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.494949494949495 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.595959595959596].
2023-08-22 07:08:34,718 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4646464646464647, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8383838383838385 ,rho=0.27272727272727276 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.9090909090909092 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.494949494949495 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.595959595959596].
2023-08-22 07:08:35,755 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:08:35,755 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:08:51,647 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:08:51,647 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:08:56,187 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5050505050505051, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6363636363636365 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.5757575757575758 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.05050505050505051].
2023-08-22 07:08:56,188 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5050505050505051, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6363636363636365 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.5757575757575758 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.05050505050505051].
2023-08-22 07:08:56,992 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:08:56,993 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:08:58,527 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.31313131313131315, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.8282828282828284 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5656565656565657 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:08:58,527 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.31313131313131315, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.8282828282828284 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5656565656565657 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:09:12,600 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9696969696969697, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0031320000000000007 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.5454545454545455 ,epsilon=0.00041414147272727267 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.7070707070707072 ,learning_rate_power=-0.08080808080808077 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.11111111111111112 ,beta=0.595959595959596].
2023-08-22 07:09:12,601 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9696969696969697, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0031320000000000007 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.5454545454545455 ,epsilon=0.00041414147272727267 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.7070707070707072 ,learning_rate_power=-0.08080808080808077 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.11111111111111112 ,beta=0.595959595959596].
2023-08-22 07:09:16,666 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:09:16,666 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:09:17,272 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:09:17,272 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:09:22,370 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:09:22,370 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:09:37,088 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:09:37,088 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:09:37,333 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6161616161616162, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.7272727272727273 ,epsilon=0.0009393939454545454 ,centered=False ,beta_1=0.7373737373737375 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.8282828282828283 ,initial_accumulator_value=0.6464646464646465 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.6767676767676768].
2023-08-22 07:09:37,334 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6161616161616162, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.7272727272727273 ,epsilon=0.0009393939454545454 ,centered=False ,beta_1=0.7373737373737375 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.8282828282828283 ,initial_accumulator_value=0.6464646464646465 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.6767676767676768].
2023-08-22 07:09:37,448 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.24242424242424243, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.005354000000000001 ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.595959595959596].
2023-08-22 07:09:37,448 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.24242424242424243, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.005354000000000001 ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.595959595959596].
2023-08-22 07:09:43,328 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.17171717171717174, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.008283 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.3535353535353536 ,beta_2=0.5454545454545455 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.30303030303030304 ,l1_regularization_strength=0.5252525252525253 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.08080808080808081].
2023-08-22 07:09:43,328 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.17171717171717174, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.008283 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.3535353535353536 ,beta_2=0.5454545454545455 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.30303030303030304 ,l1_regularization_strength=0.5252525252525253 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.08080808080808081].
2023-08-22 07:09:58,258 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.006263000000000001 ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.5656565656565657 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.30303030303030304 ,beta=0.595959595959596].
2023-08-22 07:09:58,258 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.006263000000000001 ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.5656565656565657 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.30303030303030304 ,beta=0.595959595959596].
2023-08-22 07:09:58,500 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:09:58,501 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:10:01,169 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.4747474747474748 ,epsilon=0.00015151523636363636 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.6464646464646465].
2023-08-22 07:10:01,170 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.4747474747474748 ,epsilon=0.00015151523636363636 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.6464646464646465].
2023-08-22 07:10:08,238 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:10:08,238 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:10:19,110 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.13131313131313133, momentum=0.12121212121212122 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5151515151515152 ,rho=0.9090909090909092 ,epsilon=0.0007070707363636364 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.393939393939394 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.8484848484848485].
2023-08-22 07:10:19,110 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.13131313131313133, momentum=0.12121212121212122 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5151515151515152 ,rho=0.9090909090909092 ,epsilon=0.0007070707363636364 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.393939393939394 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.8484848484848485].
2023-08-22 07:10:22,041 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:10:22,041 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:10:28,580 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.04040404040404041, momentum=0.31313131313131315 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9090909090909092 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.7272727272727273 ,learning_rate_power=-0.9696969696969697 ,initial_accumulator_value=0.21212121212121213 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.393939393939394].
2023-08-22 07:10:28,581 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.04040404040404041, momentum=0.31313131313131315 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9090909090909092 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.7272727272727273 ,learning_rate_power=-0.9696969696969697 ,initial_accumulator_value=0.21212121212121213 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.393939393939394].
2023-08-22 07:10:35,117 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:10:35,117 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:10:42,380 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.787878787878788, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.27272727272727276 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8181818181818182 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.8484848484848485 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7272727272727273 ,beta=0.595959595959596].
2023-08-22 07:10:42,380 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.787878787878788, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.27272727272727276 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8181818181818182 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.8484848484848485 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7272727272727273 ,beta=0.595959595959596].
2023-08-22 07:10:43,318 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:10:43,319 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:10:52,615 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:10:52,615 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:10:55,533 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:10:55,534 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:11:04,342 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:11:04,342 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:11:06,200 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:11:06,200 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:11:13,694 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:11:13,694 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:11:15,998 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:11:15,999 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:11:25,033 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:11:25,033 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:11:27,167 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:11:27,167 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:11:34,092 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:11:34,092 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:11:37,137 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:11:37,137 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:11:45,523 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:11:45,523 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:11:47,647 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:11:47,648 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:11:54,356 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:11:54,357 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:11:57,701 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:11:57,702 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:12:05,864 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.21212121212121213, momentum=0.04040404040404041 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9191919191919192 ,rho=0.3434343434343435 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.19191919191919193 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.3434343434343435 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.8080808080808082].
2023-08-22 07:12:05,864 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.21212121212121213, momentum=0.04040404040404041 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9191919191919192 ,rho=0.3434343434343435 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.19191919191919193 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.3434343434343435 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.8080808080808082].
2023-08-22 07:12:26,137 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:12:26,138 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:12:46,390 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:12:46,391 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:13:05,906 INFO: Applying selection operators for generation 13.
2023-08-22 07:13:05,908 INFO: Applying genetic operators for generation 13.
2023-08-22 07:13:05,912 INFO: Evaluating fitness for for generation 13.
2023-08-22 07:13:05,912 INFO: Will evaluate fitness for 60 individuals.
2023-08-22 07:13:06,469 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9191919191919192, momentum=0.4040404040404041 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.98989898989899 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.26262626262626254 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.8181818181818182].
2023-08-22 07:13:06,470 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9191919191919192, momentum=0.4040404040404041 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.98989898989899 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.26262626262626254 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.8181818181818182].
2023-08-22 07:13:06,470 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:13:06,470 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:13:06,523 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:13:06,523 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:13:06,553 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:13:06,553 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:13:26,683 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:13:26,683 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:13:26,690 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0006363636727272727 ,centered=False ,beta_1=0.5050505050505051 ,beta_2=0.10101010101010102 ,learning_rate_power=-0.9797979797979798 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:13:26,691 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0006363636727272727 ,centered=False ,beta_1=0.5050505050505051 ,beta_2=0.10101010101010102 ,learning_rate_power=-0.9797979797979798 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:13:26,892 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:13:26,892 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:13:27,493 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.31313131313131315 ,beta=0.5252525252525253].
2023-08-22 07:13:27,493 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.31313131313131315 ,beta=0.5252525252525253].
2023-08-22 07:13:46,823 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:13:46,824 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:13:47,630 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:13:47,630 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:13:47,903 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:13:47,903 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:13:47,927 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.020202020202020204, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.005758000000000001 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.686868686868687 ,beta_2=0.787878787878788 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.20202020202020204].
2023-08-22 07:13:47,927 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.020202020202020204, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.005758000000000001 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.686868686868687 ,beta_2=0.787878787878788 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.20202020202020204].
2023-08-22 07:14:06,847 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.23232323232323235, momentum=0.3535353535353536 ,nesterov=False ,amsgrad=True ,weight_decay=0.0031320000000000007 ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.38383838383838387 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=0.0 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.787878787878788 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.494949494949495].
2023-08-22 07:14:06,848 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.23232323232323235, momentum=0.3535353535353536 ,nesterov=False ,amsgrad=True ,weight_decay=0.0031320000000000007 ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.38383838383838387 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=0.0 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.787878787878788 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.494949494949495].
2023-08-22 07:14:08,019 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:14:08,020 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:14:08,545 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:14:08,545 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:14:12,516 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.11111111111111112, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.5757575757575758 ,epsilon=0.0008282828454545454 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.21212121212121213 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.09090909090909091].
2023-08-22 07:14:12,516 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.11111111111111112, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.5757575757575758 ,epsilon=0.0008282828454545454 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.21212121212121213 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.09090909090909091].
2023-08-22 07:14:28,396 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:14:28,396 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:14:29,041 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.8989898989898991, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.007374000000000001 ,use_ema=False ,ema_momentum=0.5151515151515152 ,rho=0.888888888888889 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.686868686868687 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.8787878787878788 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.9191919191919192 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.8787878787878789 ,beta=0.595959595959596].
2023-08-22 07:14:29,041 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.8989898989898991, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.007374000000000001 ,use_ema=False ,ema_momentum=0.5151515151515152 ,rho=0.888888888888889 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.686868686868687 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.8787878787878788 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.9191919191919192 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.8787878787878789 ,beta=0.595959595959596].
2023-08-22 07:14:31,168 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:14:31,168 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:14:32,058 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.5555555555555556 ,beta_2=0.15151515151515152 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.595959595959596].
2023-08-22 07:14:32,059 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.5555555555555556 ,beta_2=0.15151515151515152 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.595959595959596].
2023-08-22 07:14:48,703 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:14:48,703 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:14:52,306 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8383838383838385, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.888888888888889 ,epsilon=0.0006161616545454546 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.696969696969697 ,learning_rate_power=-0.02020202020202011 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:14:52,306 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8383838383838385, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.888888888888889 ,epsilon=0.0006161616545454546 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.696969696969697 ,learning_rate_power=-0.02020202020202011 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:14:52,412 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:14:52,413 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:15:02,905 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:15:02,906 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:15:09,752 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:15:09,752 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:15:12,691 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:15:12,691 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:15:16,354 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:15:16,355 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:15:23,587 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:15:23,587 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:15:30,246 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:15:30,246 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:15:32,898 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:15:32,898 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:15:37,015 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.30303030303030304 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.5050505050505051].
2023-08-22 07:15:37,015 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.30303030303030304 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.5050505050505051].
2023-08-22 07:15:44,620 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:15:44,620 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:15:50,984 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:15:50,985 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:15:54,080 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:15:54,080 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:15:57,861 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:15:57,861 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:16:06,232 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:16:06,232 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:16:12,109 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:16:12,109 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:16:14,341 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.6363636363636365 ,epsilon=0.0009898989909090908 ,centered=True ,beta_1=0.9797979797979799 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.3737373737373737 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.595959595959596].
2023-08-22 07:16:14,342 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.6363636363636365 ,epsilon=0.0009898989909090908 ,centered=True ,beta_1=0.9797979797979799 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.3737373737373737 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.595959595959596].
2023-08-22 07:16:19,206 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:16:19,206 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:16:26,985 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.8484848484848485, momentum=0.5151515151515152 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.4040404040404041 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.5555555555555556].
2023-08-22 07:16:26,985 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.8484848484848485, momentum=0.5151515151515152 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.4040404040404041 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.5555555555555556].
2023-08-22 07:16:32,549 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.27272727272727276, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007676767909090908 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.3434343434343435 ,learning_rate_power=-0.23232323232323226 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.7575757575757577 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.4747474747474748].
2023-08-22 07:16:32,550 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.27272727272727276, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007676767909090908 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.3434343434343435 ,learning_rate_power=-0.23232323232323226 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.7575757575757577 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.4747474747474748].
2023-08-22 07:16:38,522 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0032330000000000006 ,use_ema=False ,ema_momentum=0.8585858585858587 ,rho=0.9090909090909092 ,epsilon=0.0002121212909090909 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.22222222222222224 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.5454545454545455].
2023-08-22 07:16:38,522 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0032330000000000006 ,use_ema=False ,ema_momentum=0.8585858585858587 ,rho=0.9090909090909092 ,epsilon=0.0002121212909090909 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.22222222222222224 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.5454545454545455].
2023-08-22 07:16:39,964 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:16:39,964 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:16:50,426 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:16:50,426 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:16:57,033 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:16:57,034 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:17:00,537 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.33333333333333337, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.06060606060606061 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.4646464646464647].
2023-08-22 07:17:00,537 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.33333333333333337, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.06060606060606061 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.4646464646464647].
2023-08-22 07:17:03,286 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:17:03,287 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:17:11,150 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.7070707070707072, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.17171717171717174 ,epsilon=0.0008181818363636363 ,centered=True ,beta_1=0.4141414141414142 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.020202020202020204 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.595959595959596].
2023-08-22 07:17:11,151 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.7070707070707072, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.17171717171717174 ,epsilon=0.0008181818363636363 ,centered=True ,beta_1=0.4141414141414142 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.020202020202020204 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.595959595959596].
2023-08-22 07:17:17,473 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:17:17,474 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:17:23,646 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:17:23,647 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:17:23,937 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:17:23,938 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:17:38,796 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.36363636363636365, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.595959595959596 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.31313131313131315 ,beta_2=0.7373737373737375 ,learning_rate_power=-0.3434343434343434 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.08080808080808081 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.9191919191919192].
2023-08-22 07:17:38,796 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.36363636363636365, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.595959595959596 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.31313131313131315 ,beta_2=0.7373737373737375 ,learning_rate_power=-0.3434343434343434 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.08080808080808081 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.9191919191919192].
2023-08-22 07:17:43,992 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:17:43,992 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:17:45,078 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:17:45,078 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:18:03,036 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:18:03,036 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:18:04,069 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:18:04,069 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:18:05,330 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:18:05,330 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:18:23,365 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9595959595959597, momentum=0.21212121212121213 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.8080808080808082 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.595959595959596].
2023-08-22 07:18:23,365 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9595959595959597, momentum=0.21212121212121213 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.8080808080808082 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.595959595959596].
2023-08-22 07:18:24,772 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:18:24,772 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:18:25,460 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:18:25,460 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:18:46,288 INFO: Applying selection operators for generation 14.
2023-08-22 07:18:46,290 INFO: Applying genetic operators for generation 14.
2023-08-22 07:18:46,294 INFO: Evaluating fitness for for generation 14.
2023-08-22 07:18:46,294 INFO: Will evaluate fitness for 62 individuals.
2023-08-22 07:18:46,838 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:18:46,838 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:18:46,849 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:18:46,849 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:18:46,869 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:18:46,869 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:18:46,965 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:18:46,966 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:19:06,916 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:19:06,916 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:19:07,351 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:19:07,351 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:19:07,662 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:19:07,662 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:19:08,077 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:19:08,078 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:19:27,093 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:19:27,093 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:19:27,723 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:19:27,723 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:19:28,215 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:19:28,215 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:19:28,497 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:19:28,497 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:19:47,682 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:19:47,682 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:19:48,492 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:19:48,492 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:19:48,742 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:19:48,742 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:19:49,555 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:19:49,555 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:20:07,869 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.33333333333333337, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.00030400000000000007 ,use_ema=True ,ema_momentum=0.48484848484848486 ,rho=0.9090909090909092 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.18181818181818182 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.595959595959596].
2023-08-22 07:20:07,869 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.33333333333333337, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.00030400000000000007 ,use_ema=True ,ema_momentum=0.48484848484848486 ,rho=0.9090909090909092 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.18181818181818182 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.595959595959596].
2023-08-22 07:20:09,010 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:20:09,010 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:20:09,535 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:20:09,536 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:20:10,115 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.08080808080808081 ,rho=0.5858585858585859 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.5757575757575758 ,learning_rate_power=-0.3434343434343434 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.5252525252525253].
2023-08-22 07:20:10,115 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.08080808080808081 ,rho=0.5858585858585859 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.5757575757575758 ,learning_rate_power=-0.3434343434343434 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.5252525252525253].
2023-08-22 07:20:29,481 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:20:29,481 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:20:30,151 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:20:30,152 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:20:32,508 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:20:32,508 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:20:34,430 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:20:34,431 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:20:49,975 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:20:49,976 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:20:50,612 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:20:50,612 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:20:53,255 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007575757818181818 ,centered=True ,beta_1=0.7474747474747475 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6363636363636364 ,initial_accumulator_value=0.22222222222222224 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.8181818181818182].
2023-08-22 07:20:53,255 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007575757818181818 ,centered=True ,beta_1=0.7474747474747475 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6363636363636364 ,initial_accumulator_value=0.22222222222222224 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.8181818181818182].
2023-08-22 07:20:55,113 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.595959595959596 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.9292929292929294 ,learning_rate_power=-0.09090909090909083 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.595959595959596].
2023-08-22 07:20:55,114 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.595959595959596 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.9292929292929294 ,learning_rate_power=-0.09090909090909083 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.595959595959596].
2023-08-22 07:21:10,945 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:21:10,946 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:21:11,040 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0008090000000000001 ,use_ema=False ,ema_momentum=0.06060606060606061 ,rho=0.4141414141414142 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.8686868686868687 ,beta_2=0.6464646464646465 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.36363636363636365 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.595959595959596].
2023-08-22 07:21:11,040 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0008090000000000001 ,use_ema=False ,ema_momentum=0.06060606060606061 ,rho=0.4141414141414142 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.8686868686868687 ,beta_2=0.6464646464646465 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.36363636363636365 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.595959595959596].
2023-08-22 07:21:14,990 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:21:14,991 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:21:16,823 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:21:16,823 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:21:31,407 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.5858585858585859 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.888888888888889 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.5050505050505051 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.04040404040404033 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.19191919191919193 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.595959595959596].
2023-08-22 07:21:31,407 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.5858585858585859 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.888888888888889 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.5050505050505051 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.04040404040404033 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.19191919191919193 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.595959595959596].
2023-08-22 07:21:32,142 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:21:32,142 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:21:35,753 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:21:35,753 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:21:37,024 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0027280000000000004 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.020202020202020204 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.8080808080808082 ,l1_regularization_strength=0.37373737373737376 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.595959595959596].
2023-08-22 07:21:37,024 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0027280000000000004 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.020202020202020204 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.8080808080808082 ,l1_regularization_strength=0.37373737373737376 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.595959595959596].
2023-08-22 07:21:52,724 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:21:52,724 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:21:55,602 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:21:55,602 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:21:56,466 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:21:56,466 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:21:57,650 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:21:57,651 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:22:13,119 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:22:13,120 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:22:15,798 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:22:15,798 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:22:17,038 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.06060606060606061 ,epsilon=0.0004848485363636363 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.9393939393939394 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.595959595959596].
2023-08-22 07:22:17,039 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.06060606060606061 ,epsilon=0.0004848485363636363 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.9393939393939394 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.595959595959596].
2023-08-22 07:22:18,723 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:22:18,723 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:22:33,513 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:22:33,513 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:22:36,930 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:22:36,931 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:22:38,859 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:22:38,859 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:22:41,742 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:22:41,743 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:22:54,557 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:22:54,558 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:22:57,551 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5757575757575758 ,rho=0.9090909090909092 ,epsilon=0.0007676767909090908 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.43434343434343425 ,initial_accumulator_value=0.8585858585858587 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.595959595959596].
2023-08-22 07:22:57,552 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5757575757575758 ,rho=0.9090909090909092 ,epsilon=0.0007676767909090908 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.43434343434343425 ,initial_accumulator_value=0.8585858585858587 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.595959595959596].
2023-08-22 07:22:58,975 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:22:58,975 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:23:02,471 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:23:02,471 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:23:15,148 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.2828282828282829 ,rho=0.05050505050505051 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.3535353535353536 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.16161616161616155 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.686868686868687].
2023-08-22 07:23:15,148 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.2828282828282829 ,rho=0.05050505050505051 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.3535353535353536 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.16161616161616155 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.686868686868687].
2023-08-22 07:23:19,252 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:23:19,252 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:23:21,610 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.26262626262626265, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.32323232323232326 ,beta_2=0.09090909090909091 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.09090909090909091].
2023-08-22 07:23:21,610 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.26262626262626265, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.32323232323232326 ,beta_2=0.09090909090909091 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.09090909090909091].
2023-08-22 07:23:23,161 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:23:23,162 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:23:39,527 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:23:39,527 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:23:40,124 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.008788 ,use_ema=True ,ema_momentum=0.8787878787878789 ,rho=0.7373737373737375 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.8585858585858587 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.5757575757575758].
2023-08-22 07:23:40,124 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.008788 ,use_ema=True ,ema_momentum=0.8787878787878789 ,rho=0.7373737373737375 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.8585858585858587 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.5757575757575758].
2023-08-22 07:23:47,555 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:23:47,555 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:24:00,620 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:24:00,620 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:24:04,946 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.009495 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0009494949545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.8181818181818182 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.09090909090909091].
2023-08-22 07:24:04,946 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.009495 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0009494949545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.8181818181818182 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.09090909090909091].
2023-08-22 07:24:07,947 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:24:07,947 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:24:27,578 INFO: Applying selection operators for generation 15.
2023-08-22 07:24:27,579 INFO: Applying genetic operators for generation 15.
2023-08-22 07:24:27,585 INFO: Evaluating fitness for for generation 15.
2023-08-22 07:24:27,585 INFO: Will evaluate fitness for 64 individuals.
2023-08-22 07:24:28,130 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:24:28,130 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:24:28,134 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:24:28,135 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:24:28,269 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:24:28,270 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:24:28,276 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:24:28,276 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:24:48,410 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:24:48,410 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:24:48,649 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:24:48,650 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:24:48,847 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:24:48,848 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:24:48,880 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:24:48,880 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:25:08,636 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:25:08,637 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:25:09,132 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.3434343434343435 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=1.0 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.8787878787878789 ,beta=0.595959595959596].
2023-08-22 07:25:09,132 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.3434343434343435 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=1.0 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.8787878787878789 ,beta=0.595959595959596].
2023-08-22 07:25:09,367 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:25:09,367 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:25:09,904 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.32323232323232326, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.4646464646464647 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:25:09,904 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.32323232323232326, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.4646464646464647 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:25:29,660 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:25:29,661 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:25:29,815 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:25:29,815 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:25:30,295 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:25:30,296 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:25:32,371 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:25:32,371 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:25:50,141 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9797979797979799, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.008283 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.5353535353535354 ,epsilon=0.0003333334 ,centered=True ,beta_1=0.06060606060606061 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.2828282828282829 ,l1_regularization_strength=0.2828282828282829 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.12121212121212122 ,beta=0.48484848484848486].
2023-08-22 07:25:50,141 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9797979797979799, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.008283 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.5353535353535354 ,epsilon=0.0003333334 ,centered=True ,beta_1=0.06060606060606061 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.2828282828282829 ,l1_regularization_strength=0.2828282828282829 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.12121212121212122 ,beta=0.48484848484848486].
2023-08-22 07:25:50,600 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:25:50,600 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:25:50,994 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:25:50,994 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:25:52,513 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:25:52,513 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:26:11,056 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.595959595959596, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.6161616161616162 ,beta_2=0.8787878787878789 ,learning_rate_power=0.0 ,initial_accumulator_value=0.8282828282828284 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.595959595959596].
2023-08-22 07:26:11,056 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.595959595959596, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.6161616161616162 ,beta_2=0.8787878787878789 ,learning_rate_power=0.0 ,initial_accumulator_value=0.8282828282828284 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.595959595959596].
2023-08-22 07:26:11,667 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:26:11,667 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:26:13,440 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:26:13,440 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:26:14,993 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8989898989898991 ,rho=0.9090909090909092 ,epsilon=0.0003333334 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.31313131313131315 ,beta=0.9090909090909092].
2023-08-22 07:26:14,994 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8989898989898991 ,rho=0.9090909090909092 ,epsilon=0.0003333334 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.31313131313131315 ,beta=0.9090909090909092].
2023-08-22 07:26:32,299 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:26:32,299 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:26:33,749 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:26:33,749 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:26:35,539 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7070707070707072 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.31313131313131315 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:26:35,539 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7070707070707072 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.31313131313131315 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:26:38,962 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:26:38,962 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:26:52,924 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.7373737373737375, momentum=0.030303030303030304 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.22222222222222224 ,rho=0.3434343434343435 ,epsilon=8.080817272727271e-05 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.7474747474747474 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.595959595959596].
2023-08-22 07:26:52,924 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.7373737373737375, momentum=0.030303030303030304 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.22222222222222224 ,rho=0.3434343434343435 ,epsilon=8.080817272727271e-05 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.7474747474747474 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.595959595959596].
2023-08-22 07:26:53,960 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:26:53,960 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:26:56,195 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:26:56,196 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:27:00,356 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:27:00,356 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:27:14,004 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.13131313131313133, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.09090909090909091 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.2828282828282829 ,l1_regularization_strength=0.4747474747474748 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.5656565656565657].
2023-08-22 07:27:14,004 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.13131313131313133, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.09090909090909091 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.2828282828282829 ,l1_regularization_strength=0.4747474747474748 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.5656565656565657].
2023-08-22 07:27:16,857 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:27:16,857 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:27:20,992 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:27:20,992 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:27:28,310 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.04040404040404041, momentum=0.9191919191919192 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.24242424242424243 ,rho=0.5050505050505051 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.5555555555555556 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.6060606060606061 ,l1_regularization_strength=0.8585858585858587 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.9393939393939394].
2023-08-22 07:27:28,310 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.04040404040404041, momentum=0.9191919191919192 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.24242424242424243 ,rho=0.5050505050505051 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.5555555555555556 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.6060606060606061 ,l1_regularization_strength=0.8585858585858587 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.9393939393939394].
2023-08-22 07:27:37,443 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:27:37,443 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:27:39,257 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8181818181818182, momentum=0.32323232323232326 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.7272727272727273 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.15151515151515152 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.20202020202020204 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.595959595959596].
2023-08-22 07:27:39,257 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8181818181818182, momentum=0.32323232323232326 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.7272727272727273 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.15151515151515152 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.20202020202020204 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.595959595959596].
2023-08-22 07:27:41,449 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.26262626262626265 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.30303030303030304 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.3434343434343435 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.3434343434343435].
2023-08-22 07:27:41,449 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.26262626262626265 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.30303030303030304 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.3434343434343435 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.3434343434343435].
2023-08-22 07:27:52,908 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:27:52,908 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:27:58,617 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:27:58,618 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:28:01,823 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.020202020202020204 ,epsilon=0.0006868687181818181 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.6060606060606061 ,learning_rate_power=-0.4949494949494949 ,initial_accumulator_value=0.19191919191919193 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.24242424242424243].
2023-08-22 07:28:01,823 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.020202020202020204 ,epsilon=0.0006868687181818181 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.6060606060606061 ,learning_rate_power=-0.4949494949494949 ,initial_accumulator_value=0.19191919191919193 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.24242424242424243].
2023-08-22 07:28:03,509 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:28:03,509 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:28:13,566 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.22222222222222224 ,rho=0.43434343434343436 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.15151515151515152 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.27272727272727276 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.7070707070707072].
2023-08-22 07:28:13,566 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.22222222222222224 ,rho=0.43434343434343436 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.15151515151515152 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.27272727272727276 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.7070707070707072].
2023-08-22 07:28:19,332 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:28:19,332 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:28:23,673 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:28:23,674 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:28:27,392 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:28:27,393 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:28:39,032 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:28:39,033 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:28:39,862 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:28:39,862 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:28:44,559 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.06060606060606061, momentum=0.5151515151515152 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.6262626262626263 ,learning_rate_power=-0.04040404040404033 ,initial_accumulator_value=0.696969696969697 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.5858585858585859].
2023-08-22 07:28:44,560 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.06060606060606061, momentum=0.5151515151515152 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.6262626262626263 ,learning_rate_power=-0.04040404040404033 ,initial_accumulator_value=0.696969696969697 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.5858585858585859].
2023-08-22 07:28:47,928 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:28:47,928 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:28:59,661 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:28:59,661 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:29:00,989 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.15151515151515152 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6262626262626263 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.595959595959596].
2023-08-22 07:29:00,990 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.15151515151515152 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6262626262626263 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.595959595959596].
2023-08-22 07:29:08,437 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.27272727272727276 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.303030303030303 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.6161616161616162].
2023-08-22 07:29:08,437 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.27272727272727276 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.303030303030303 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.6161616161616162].
2023-08-22 07:29:09,791 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:29:09,791 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:29:20,068 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:29:20,069 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:29:25,130 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7474747474747475, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.00035353541818181815 ,centered=True ,beta_1=0.6363636363636365 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.595959595959596].
2023-08-22 07:29:25,130 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7474747474747475, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.00035353541818181815 ,centered=True ,beta_1=0.6363636363636365 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.595959595959596].
2023-08-22 07:29:30,008 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:29:30,009 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:29:32,395 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:29:32,395 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:29:41,610 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:29:41,610 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:29:49,827 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8484848484848485, momentum=0.24242424242424243 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.5050505050505051 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.5151515151515152 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.595959595959596].
2023-08-22 07:29:49,827 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8484848484848485, momentum=0.24242424242424243 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.5050505050505051 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.5151515151515152 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.595959595959596].
2023-08-22 07:29:50,241 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4444444444444445, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.33333333333333337 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.393939393939394 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.5555555555555556 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:29:50,241 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4444444444444445, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.33333333333333337 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.393939393939394 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.5555555555555556 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:29:53,542 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.1717171717171716 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.8585858585858587 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.6464646464646465].
2023-08-22 07:29:53,542 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.1717171717171716 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.8585858585858587 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.6464646464646465].
2023-08-22 07:30:02,415 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.14141414141414144, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0056570000000000014 ,use_ema=True ,ema_momentum=0.13131313131313133 ,rho=0.07070707070707072 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.686868686868687 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.8383838383838383 ,initial_accumulator_value=0.06060606060606061 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.9494949494949496].
2023-08-22 07:30:02,415 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.14141414141414144, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0056570000000000014 ,use_ema=True ,ema_momentum=0.13131313131313133 ,rho=0.07070707070707072 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.686868686868687 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.8383838383838383 ,initial_accumulator_value=0.06060606060606061 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.9494949494949496].
2023-08-22 07:30:27,077 INFO: Applying selection operators for generation 16.
2023-08-22 07:30:27,078 INFO: Applying genetic operators for generation 16.
2023-08-22 07:30:27,083 INFO: Evaluating fitness for for generation 16.
2023-08-22 07:30:27,083 INFO: Will evaluate fitness for 54 individuals.
2023-08-22 07:30:27,631 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:30:27,631 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:30:27,631 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:30:27,632 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:30:27,758 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:30:27,759 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:30:27,762 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.001819 ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0001313132181818182 ,centered=True ,beta_1=0.5151515151515152 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.8181818181818181 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.595959595959596].
2023-08-22 07:30:27,762 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.001819 ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0001313132181818182 ,centered=True ,beta_1=0.5151515151515152 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.8181818181818181 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.595959595959596].
2023-08-22 07:30:47,768 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:30:47,769 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:30:47,938 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.5151515151515152 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.48484848484848486 ,rho=0.7777777777777778 ,epsilon=0.00043434349090909084 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=0.595959595959596].
2023-08-22 07:30:47,938 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.5151515151515152 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.48484848484848486 ,rho=0.7777777777777778 ,epsilon=0.00043434349090909084 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=0.595959595959596].
2023-08-22 07:30:48,263 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.24242424242424243, momentum=0.5252525252525253 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.14141414141414144 ,rho=0.010101010101010102 ,epsilon=0.0009090909181818181 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.686868686868687 ,learning_rate_power=-0.24242424242424232 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.14141414141414144 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7777777777777778 ,beta=0.7272727272727273].
2023-08-22 07:30:48,263 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.24242424242424243, momentum=0.5252525252525253 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.14141414141414144 ,rho=0.010101010101010102 ,epsilon=0.0009090909181818181 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.686868686868687 ,learning_rate_power=-0.24242424242424232 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.14141414141414144 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7777777777777778 ,beta=0.7272727272727273].
2023-08-22 07:31:02,618 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:31:02,618 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:31:07,976 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.7676767676767677, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.003839000000000001 ,use_ema=True ,ema_momentum=0.48484848484848486 ,rho=0.9494949494949496 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.9090909090909092 ,beta_2=0.20202020202020204 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.8080808080808082 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.595959595959596].
2023-08-22 07:31:07,977 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.7676767676767677, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.003839000000000001 ,use_ema=True ,ema_momentum=0.48484848484848486 ,rho=0.9494949494949496 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.9090909090909092 ,beta_2=0.20202020202020204 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.8080808080808082 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.595959595959596].
2023-08-22 07:31:12,705 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:31:12,706 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:31:13,735 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.23232323232323235, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.21212121212121213 ,rho=0.7575757575757577 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.4040404040404041 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.30303030303030304].
2023-08-22 07:31:13,735 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.23232323232323235, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.21212121212121213 ,rho=0.7575757575757577 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.4040404040404041 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.30303030303030304].
2023-08-22 07:31:23,273 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:31:23,273 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:31:33,371 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:31:33,372 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:31:34,244 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9191919191919192, momentum=0.030303030303030304 ,nesterov=True ,amsgrad=True ,weight_decay=0.002829000000000001 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.494949494949495 ,epsilon=8.080817272727271e-05 ,centered=False ,beta_1=0.15151515151515152 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.5252525252525252 ,initial_accumulator_value=0.31313131313131315 ,l1_regularization_strength=0.23232323232323235 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.595959595959596].
2023-08-22 07:31:34,244 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9191919191919192, momentum=0.030303030303030304 ,nesterov=True ,amsgrad=True ,weight_decay=0.002829000000000001 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.494949494949495 ,epsilon=8.080817272727271e-05 ,centered=False ,beta_1=0.15151515151515152 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.5252525252525252 ,initial_accumulator_value=0.31313131313131315 ,l1_regularization_strength=0.23232323232323235 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.595959595959596].
2023-08-22 07:31:38,546 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.21212121212121213, momentum=0.24242424242424243 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.24242424242424243 ,rho=0.9494949494949496 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.595959595959596].
2023-08-22 07:31:38,546 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.21212121212121213, momentum=0.24242424242424243 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.24242424242424243 ,rho=0.9494949494949496 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.595959595959596].
2023-08-22 07:31:43,858 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:31:43,858 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:31:53,849 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:31:53,849 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:31:59,336 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:31:59,336 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:32:01,884 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:32:01,884 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:32:05,147 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:32:05,148 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:32:14,236 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:32:14,236 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:32:19,594 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:32:19,594 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:32:23,284 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.7171717171717172 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.595959595959596].
2023-08-22 07:32:23,284 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.7171717171717172 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.595959595959596].
2023-08-22 07:32:25,922 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:32:25,922 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:32:35,355 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:32:35,355 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:32:39,825 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.12121212121212122, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=1e-06 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0006060606454545455 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.5353535353535354].
2023-08-22 07:32:39,825 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.12121212121212122, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=1e-06 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0006060606454545455 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.5353535353535354].
2023-08-22 07:32:43,381 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0024250000000000005 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0004848485363636363 ,centered=False ,beta_1=0.5858585858585859 ,beta_2=0.7777777777777778 ,learning_rate_power=-0.10101010101010088 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.12121212121212122 ,beta=0.32323232323232326].
2023-08-22 07:32:43,382 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0024250000000000005 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0004848485363636363 ,centered=False ,beta_1=0.5858585858585859 ,beta_2=0.7777777777777778 ,learning_rate_power=-0.10101010101010088 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.12121212121212122 ,beta=0.32323232323232326].
2023-08-22 07:32:47,425 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:32:47,425 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:32:55,814 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:32:55,815 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:33:05,195 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:33:05,195 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:33:07,969 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:33:07,969 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:33:08,252 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.686868686868687, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8282828282828284 ,rho=0.8686868686868687 ,epsilon=0.0007777778 ,centered=True ,beta_1=1.0 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.43434343434343425 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.030303030303030304 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.595959595959596].
2023-08-22 07:33:08,252 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.686868686868687, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8282828282828284 ,rho=0.8686868686868687 ,epsilon=0.0007777778 ,centered=True ,beta_1=1.0 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.43434343434343425 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.030303030303030304 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.595959595959596].
2023-08-22 07:33:16,167 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:33:16,167 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:33:25,427 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:33:25,427 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:33:29,290 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:33:29,290 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:33:32,280 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:33:32,280 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:33:36,730 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.31313131313131315, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.10101010101010088 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.5656565656565657 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.33333333333333337].
2023-08-22 07:33:36,730 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.31313131313131315, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.10101010101010088 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.5656565656565657 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.33333333333333337].
2023-08-22 07:33:45,618 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:33:45,618 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:33:49,994 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:33:49,994 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:33:53,792 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.08080808080808081 ,nesterov=True ,amsgrad=True ,weight_decay=0.009192 ,use_ema=True ,ema_momentum=0.5252525252525253 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.9797979797979799 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.3434343434343435].
2023-08-22 07:33:53,792 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.08080808080808081 ,nesterov=True ,amsgrad=True ,weight_decay=0.009192 ,use_ema=True ,ema_momentum=0.5252525252525253 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.9797979797979799 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.3434343434343435].
2023-08-22 07:33:57,876 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:33:57,876 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:34:05,768 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:34:05,769 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:34:10,496 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:34:10,496 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:34:15,179 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:34:15,179 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:34:18,360 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:34:18,361 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:34:26,531 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:34:26,531 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:34:30,982 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.21212121212121213, momentum=0.11111111111111112 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.494949494949495 ,rho=0.9090909090909092 ,epsilon=0.0005757576181818182 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.19191919191919193 ,l1_regularization_strength=0.4747474747474748 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.595959595959596].
2023-08-22 07:34:30,982 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.21212121212121213, momentum=0.11111111111111112 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.494949494949495 ,rho=0.9090909090909092 ,epsilon=0.0005757576181818182 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.19191919191919193 ,l1_regularization_strength=0.4747474747474748 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.595959595959596].
2023-08-22 07:34:35,690 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:34:35,690 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:34:38,712 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0029300000000000007 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0009292929363636363 ,centered=True ,beta_1=0.11111111111111112 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.7777777777777778].
2023-08-22 07:34:38,712 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0029300000000000007 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0009292929363636363 ,centered=True ,beta_1=0.11111111111111112 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.7777777777777778].
2023-08-22 07:34:46,789 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:34:46,789 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:35:04,540 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:35:04,540 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:35:06,941 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:35:06,942 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:35:25,056 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8383838383838385, momentum=0.8989898989898991 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.42424242424242425 ,rho=0.797979797979798 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.020202020202020204 ,learning_rate_power=0.0 ,initial_accumulator_value=0.6060606060606061 ,l1_regularization_strength=0.8282828282828284 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.010101010101010102].
2023-08-22 07:35:25,057 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8383838383838385, momentum=0.8989898989898991 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.42424242424242425 ,rho=0.797979797979798 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.020202020202020204 ,learning_rate_power=0.0 ,initial_accumulator_value=0.6060606060606061 ,l1_regularization_strength=0.8282828282828284 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.010101010101010102].
2023-08-22 07:35:49,128 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0004949495454545454 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6262626262626263 ,beta=0.18181818181818182].
2023-08-22 07:35:49,128 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0004949495454545454 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6262626262626263 ,beta=0.18181818181818182].
2023-08-22 07:36:06,460 INFO: Applying selection operators for generation 17.
2023-08-22 07:36:06,462 INFO: Applying genetic operators for generation 17.
2023-08-22 07:36:06,467 INFO: Evaluating fitness for for generation 17.
2023-08-22 07:36:06,467 INFO: Will evaluate fitness for 61 individuals.
2023-08-22 07:36:07,024 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:36:07,024 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:36:07,029 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.17171717171717174 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.12121212121212122 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.9696969696969697 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.05050505050505051].
2023-08-22 07:36:07,029 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.17171717171717174 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.12121212121212122 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.9696969696969697 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.05050505050505051].
2023-08-22 07:36:07,099 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7777777777777778, momentum=0.8282828282828284 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0008686868818181818 ,centered=True ,beta_1=0.09090909090909091 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.7676767676767676 ,initial_accumulator_value=0.20202020202020204 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.595959595959596].
2023-08-22 07:36:07,100 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7777777777777778, momentum=0.8282828282828284 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0008686868818181818 ,centered=True ,beta_1=0.09090909090909091 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.7676767676767676 ,initial_accumulator_value=0.20202020202020204 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.595959595959596].
2023-08-22 07:36:07,176 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:36:07,176 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:36:27,691 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:36:27,691 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:36:28,105 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.6666666666666667 ,nesterov=True ,amsgrad=True ,weight_decay=0.000506 ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.00018181826363636362 ,centered=True ,beta_1=0.7676767676767677 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.9696969696969697 ,l1_regularization_strength=0.5050505050505051 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.9494949494949496].
2023-08-22 07:36:28,106 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.6666666666666667 ,nesterov=True ,amsgrad=True ,weight_decay=0.000506 ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.00018181826363636362 ,centered=True ,beta_1=0.7676767676767677 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.9696969696969697 ,l1_regularization_strength=0.5050505050505051 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.9494949494949496].
2023-08-22 07:36:32,509 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.42424242424242425, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.20202020202020204 ,epsilon=0.00043434349090909084 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.010101010101010055 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.686868686868687 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:36:32,509 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.42424242424242425, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.20202020202020204 ,epsilon=0.00043434349090909084 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.010101010101010055 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.686868686868687 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:36:42,273 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:36:42,273 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:36:48,356 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:36:48,356 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:36:52,942 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.42424242424242425, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4141414141414142 ,rho=0.9090909090909092 ,epsilon=0.0007979798181818182 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.595959595959596].
2023-08-22 07:36:52,942 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.42424242424242425, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4141414141414142 ,rho=0.9090909090909092 ,epsilon=0.0007979798181818182 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.595959595959596].
2023-08-22 07:36:57,464 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:36:57,464 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:37:02,510 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:37:02,510 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:37:09,641 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:37:09,642 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:37:11,724 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.26262626262626265].
2023-08-22 07:37:11,725 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.26262626262626265].
2023-08-22 07:37:18,153 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.7171717171717172 ,nesterov=True ,amsgrad=True ,weight_decay=0.009091 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.0 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.8686868686868687 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.595959595959596].
2023-08-22 07:37:18,154 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.7171717171717172 ,nesterov=True ,amsgrad=True ,weight_decay=0.009091 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.0 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.8686868686868687 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.595959595959596].
2023-08-22 07:37:22,813 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7575757575757577 ,rho=0.9090909090909092 ,epsilon=0.0001313132181818182 ,centered=True ,beta_1=0.27272727272727276 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:37:22,814 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7575757575757577 ,rho=0.9090909090909092 ,epsilon=0.0001313132181818182 ,centered=True ,beta_1=0.27272727272727276 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:37:30,242 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:37:30,242 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:37:39,511 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.25252525252525254, momentum=0.29292929292929293 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.05050505050505051 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:37:39,512 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.25252525252525254, momentum=0.29292929292929293 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.05050505050505051 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:37:42,085 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:37:42,085 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:37:47,912 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:37:47,912 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:37:50,770 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:37:50,771 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:38:02,499 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.009293000000000001 ,use_ema=False ,ema_momentum=0.21212121212121213 ,rho=0.393939393939394 ,epsilon=0.0008787878909090909 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.6161616161616162 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.31313131313131315].
2023-08-22 07:38:02,499 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.009293000000000001 ,use_ema=False ,ema_momentum=0.21212121212121213 ,rho=0.393939393939394 ,epsilon=0.0008787878909090909 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.6161616161616162 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.31313131313131315].
2023-08-22 07:38:05,137 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:38:05,137 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:38:08,581 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:38:08,582 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:38:11,234 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:38:11,234 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:38:25,921 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:38:25,921 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:38:26,419 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.16161616161616163 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.2828282828282829 ,rho=0.7373737373737375 ,epsilon=0.0009292929363636363 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.010101010101010055 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.888888888888889 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:38:26,419 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.16161616161616163 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.2828282828282829 ,rho=0.7373737373737375 ,epsilon=0.0009292929363636363 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.010101010101010055 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.888888888888889 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:38:28,944 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:38:28,944 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:38:32,239 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:38:32,239 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:38:46,556 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.12121212121212122, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0016170000000000002 ,use_ema=True ,ema_momentum=0.8181818181818182 ,rho=0.9090909090909092 ,epsilon=0.0003939394545454545 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.17171717171717174 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.24242424242424243].
2023-08-22 07:38:46,556 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.12121212121212122, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0016170000000000002 ,use_ema=True ,ema_momentum=0.8181818181818182 ,rho=0.9090909090909092 ,epsilon=0.0003939394545454545 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.17171717171717174 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.24242424242424243].
2023-08-22 07:38:49,412 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.9090909090909092 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.7171717171717172 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.595959595959596].
2023-08-22 07:38:49,413 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.9090909090909092 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.7171717171717172 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.595959595959596].
2023-08-22 07:38:50,881 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:38:50,882 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:38:52,875 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:38:52,875 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:39:11,821 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:39:11,821 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:39:13,274 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8585858585858587 ,rho=0.18181818181818182 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.18181818181818182 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.050505050505050386 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.07070707070707072].
2023-08-22 07:39:13,275 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8585858585858587 ,rho=0.18181818181818182 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.18181818181818182 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.050505050505050386 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.07070707070707072].
2023-08-22 07:39:13,346 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.21212121212121213, momentum=0.010101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.6565656565656566 ,epsilon=0.00035353541818181815 ,centered=True ,beta_1=0.9696969696969697 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.595959595959596].
2023-08-22 07:39:13,346 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.21212121212121213, momentum=0.010101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.6565656565656566 ,epsilon=0.00035353541818181815 ,centered=True ,beta_1=0.9696969696969697 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.595959595959596].
2023-08-22 07:39:15,228 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:39:15,229 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:39:32,144 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:39:32,145 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:39:36,165 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:39:36,166 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:39:37,602 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:39:37,603 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:39:38,385 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.8787878787878789 ,epsilon=0.0008181818363636363 ,centered=False ,beta_1=0.29292929292929293 ,beta_2=0.4040404040404041 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.595959595959596].
2023-08-22 07:39:38,385 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.8787878787878789 ,epsilon=0.0008181818363636363 ,centered=False ,beta_1=0.29292929292929293 ,beta_2=0.4040404040404041 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.595959595959596].
2023-08-22 07:39:52,484 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:39:52,484 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:39:56,928 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:39:56,928 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:39:59,142 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:39:59,142 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:40:03,570 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:40:03,570 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:40:13,446 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8787878787878789, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.3535353535353536 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.6060606060606061 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.13131313131313133 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.595959595959596].
2023-08-22 07:40:13,446 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8787878787878789, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.3535353535353536 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.6060606060606061 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.13131313131313133 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.595959595959596].
2023-08-22 07:40:17,304 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:40:17,305 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:40:19,670 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:40:19,670 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:40:24,054 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.8787878787878789 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:40:24,054 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.8787878787878789 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:40:38,105 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.15151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.005960000000000001 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.48484848484848486 ,epsilon=0.0007777778 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.595959595959596 ,learning_rate_power=-0.5454545454545454 ,initial_accumulator_value=0.27272727272727276 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:40:38,105 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.15151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.005960000000000001 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.48484848484848486 ,epsilon=0.0007777778 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.595959595959596 ,learning_rate_power=-0.5454545454545454 ,initial_accumulator_value=0.27272727272727276 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:40:38,201 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.22222222222222224, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.9090909090909092 ,epsilon=0.001 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.20202020202020204 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.595959595959596].
2023-08-22 07:40:38,202 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.22222222222222224, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.9090909090909092 ,epsilon=0.001 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.20202020202020204 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.595959595959596].
2023-08-22 07:40:39,981 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:40:39,982 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:40:49,771 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:40:49,772 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:41:01,104 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.23232323232323235, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5656565656565657 ,rho=0.9797979797979799 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.8989898989898991 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.595959595959596].
2023-08-22 07:41:01,104 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.23232323232323235, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5656565656565657 ,rho=0.9797979797979799 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.8989898989898991 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.595959595959596].
2023-08-22 07:41:02,648 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.8787878787878789 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0006868687181818181 ,centered=True ,beta_1=0.8282828282828284 ,beta_2=0.5454545454545455 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.4040404040404041 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.888888888888889].
2023-08-22 07:41:02,649 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.8787878787878789 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0006868687181818181 ,centered=True ,beta_1=0.8282828282828284 ,beta_2=0.5454545454545455 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.4040404040404041 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.888888888888889].
2023-08-22 07:41:03,377 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.21212121212121213, momentum=0.12121212121212122 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7070707070707072 ,rho=0.4747474747474748 ,epsilon=0.0007676767909090908 ,centered=False ,beta_1=0.5858585858585859 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.696969696969697 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.595959595959596].
2023-08-22 07:41:03,377 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.21212121212121213, momentum=0.12121212121212122 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7070707070707072 ,rho=0.4747474747474748 ,epsilon=0.0007676767909090908 ,centered=False ,beta_1=0.5858585858585859 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.696969696969697 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.595959595959596].
2023-08-22 07:41:25,652 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:41:25,653 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:41:27,549 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:41:27,549 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:41:27,572 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.8484848484848485 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.43434343434343436 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.19191919191919193 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.8686868686868687 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.26262626262626265].
2023-08-22 07:41:27,572 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.8484848484848485 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.43434343434343436 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.19191919191919193 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.8686868686868687 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.26262626262626265].
2023-08-22 07:41:47,877 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:41:47,877 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:41:48,148 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:41:48,149 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:42:07,508 INFO: Applying selection operators for generation 18.
2023-08-22 07:42:07,509 INFO: Applying genetic operators for generation 18.
2023-08-22 07:42:07,515 INFO: Evaluating fitness for for generation 18.
2023-08-22 07:42:07,515 INFO: Will evaluate fitness for 65 individuals.
2023-08-22 07:42:08,065 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:42:08,066 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:42:08,072 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:42:08,072 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:42:08,084 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.9090909090909092 ,epsilon=0.0007575757818181818 ,centered=True ,beta_1=0.8787878787878789 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.595959595959596 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.595959595959596].
2023-08-22 07:42:08,084 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.9090909090909092 ,epsilon=0.0007575757818181818 ,centered=True ,beta_1=0.8787878787878789 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.595959595959596 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.595959595959596].
2023-08-22 07:42:08,115 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:42:08,115 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:42:28,150 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.8282828282828284 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.595959595959596 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.6060606060606061 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.595959595959596].
2023-08-22 07:42:28,151 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.8282828282828284 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.595959595959596 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.6060606060606061 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.595959595959596].
2023-08-22 07:42:28,378 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:42:28,378 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:42:29,049 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.8080808080808082, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.37373737373737376 ,beta_2=0.595959595959596 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.29292929292929293 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.595959595959596].
2023-08-22 07:42:29,049 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.8080808080808082, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.37373737373737376 ,beta_2=0.595959595959596 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.29292929292929293 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.595959595959596].
2023-08-22 07:42:32,454 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:42:32,454 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:42:47,576 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:42:47,576 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:42:48,677 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.005960000000000001 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.6363636363636365 ,epsilon=0.0002121212909090909 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.9090909090909092 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.8787878787878789 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.595959595959596].
2023-08-22 07:42:48,677 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.005960000000000001 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.6363636363636365 ,epsilon=0.0002121212909090909 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.9090909090909092 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.8787878787878789 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.595959595959596].
2023-08-22 07:42:50,336 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:42:50,336 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:42:53,558 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:42:53,558 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:43:08,522 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:43:08,523 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:43:10,818 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:43:10,819 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:43:13,787 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:43:13,787 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:43:14,031 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6161616161616162 ,rho=0.38383838383838387 ,epsilon=0.0006565656909090909 ,centered=True ,beta_1=0.6262626262626263 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9797979797979799 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.595959595959596].
2023-08-22 07:43:14,032 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6161616161616162 ,rho=0.38383838383838387 ,epsilon=0.0006565656909090909 ,centered=True ,beta_1=0.6262626262626263 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9797979797979799 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.595959595959596].
2023-08-22 07:43:28,818 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:43:28,819 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:43:31,049 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:43:31,050 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:43:34,213 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:43:34,213 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:43:38,575 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.27272727272727276, momentum=0.30303030303030304 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.26262626262626265 ,epsilon=0.000676767709090909 ,centered=True ,beta_1=0.23232323232323235 ,beta_2=0.8787878787878789 ,learning_rate_power=-1.0 ,initial_accumulator_value=0.494949494949495 ,l1_regularization_strength=0.30303030303030304 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.21212121212121213].
2023-08-22 07:43:38,576 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.27272727272727276, momentum=0.30303030303030304 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.26262626262626265 ,epsilon=0.000676767709090909 ,centered=True ,beta_1=0.23232323232323235 ,beta_2=0.8787878787878789 ,learning_rate_power=-1.0 ,initial_accumulator_value=0.494949494949495 ,l1_regularization_strength=0.30303030303030304 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.21212121212121213].
2023-08-22 07:43:49,011 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:43:49,012 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:43:51,243 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.4141414141414142 ,epsilon=2.020211818181818e-05 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.17171717171717174 ,l1_regularization_strength=0.21212121212121213 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.595959595959596].
2023-08-22 07:43:51,243 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.4141414141414142 ,epsilon=2.020211818181818e-05 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.17171717171717174 ,l1_regularization_strength=0.21212121212121213 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.595959595959596].
2023-08-22 07:43:55,316 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:43:55,317 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:44:02,462 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:44:02,462 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:44:09,305 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.29292929292929293 ,rho=0.5050505050505051 ,epsilon=8.080817272727271e-05 ,centered=True ,beta_1=0.4747474747474748 ,beta_2=0.5656565656565657 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.31313131313131315].
2023-08-22 07:44:09,305 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.29292929292929293 ,rho=0.5050505050505051 ,epsilon=8.080817272727271e-05 ,centered=True ,beta_1=0.4747474747474748 ,beta_2=0.5656565656565657 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.31313131313131315].
2023-08-22 07:44:15,828 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:44:15,829 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:44:16,615 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.8686868686868687 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.17171717171717174 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.30303030303030304].
2023-08-22 07:44:16,615 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.8686868686868687 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.17171717171717174 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.30303030303030304].
2023-08-22 07:44:23,479 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:44:23,479 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:44:35,424 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.7373737373737375 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.2222222222222222 ,initial_accumulator_value=0.494949494949495 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:44:35,425 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.7373737373737375 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.2222222222222222 ,initial_accumulator_value=0.494949494949495 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:44:36,197 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0021220000000000006 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.12121212121212122 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.4646464646464647 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.26262626262626265 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:44:36,197 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0021220000000000006 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.12121212121212122 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.4646464646464647 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.26262626262626265 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:44:41,319 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:44:41,319 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:44:43,937 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:44:43,937 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:44:55,866 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:44:55,867 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:45:01,511 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:45:01,511 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:45:02,081 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.5353535353535354 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.9090909090909092].
2023-08-22 07:45:02,081 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.5353535353535354 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.9090909090909092].
2023-08-22 07:45:04,326 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.5757575757575758, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.6565656565656566 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.12121212121212122 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.595959595959596].
2023-08-22 07:45:04,327 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.5757575757575758, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.6565656565656566 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.12121212121212122 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.595959595959596].
2023-08-22 07:45:16,098 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6060606060606061 ,rho=0.9090909090909092 ,epsilon=0.0008080808272727272 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.8585858585858587 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.595959595959596].
2023-08-22 07:45:16,098 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6060606060606061 ,rho=0.9090909090909092 ,epsilon=0.0008080808272727272 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.8585858585858587 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.595959595959596].
2023-08-22 07:45:22,373 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.33333333333333337 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8181818181818182 ,rho=0.9292929292929294 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.07070707070707072 ,beta_2=0.686868686868687 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.595959595959596].
2023-08-22 07:45:22,373 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.33333333333333337 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8181818181818182 ,rho=0.9292929292929294 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.07070707070707072 ,beta_2=0.686868686868687 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.595959595959596].
2023-08-22 07:45:22,447 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:45:22,447 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:45:27,970 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:45:27,971 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:45:41,034 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:45:41,035 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:45:42,781 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.8080808080808082 ,epsilon=0.0009797979818181818 ,centered=False ,beta_1=0.07070707070707072 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.5252525252525253].
2023-08-22 07:45:42,782 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.8080808080808082 ,epsilon=0.0009797979818181818 ,centered=False ,beta_1=0.07070707070707072 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.5252525252525253].
2023-08-22 07:45:46,353 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8989898989898991, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.6565656565656566 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.20202020202020204 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.08080808080808081 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=1.0].
2023-08-22 07:45:46,354 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8989898989898991, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.6565656565656566 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.20202020202020204 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.08080808080808081 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=1.0].
2023-08-22 07:45:49,155 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:45:49,155 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:46:01,417 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:46:01,417 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:46:07,701 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:46:07,701 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:46:09,651 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:46:09,652 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:46:10,999 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.030303030303030304 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.4444444444444445].
2023-08-22 07:46:10,999 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.030303030303030304 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.4444444444444445].
2023-08-22 07:46:21,664 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:46:21,664 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:46:28,844 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:46:28,844 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:46:29,970 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:46:29,970 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:46:31,110 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:46:31,110 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:46:41,858 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7272727272727273 ,rho=0.9797979797979799 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.8686868686868687 ,beta_2=0.797979797979798 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.8989898989898991 ,beta=0.595959595959596].
2023-08-22 07:46:41,859 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7272727272727273 ,rho=0.9797979797979799 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.8686868686868687 ,beta_2=0.797979797979798 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.8989898989898991 ,beta=0.595959595959596].
2023-08-22 07:46:49,300 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.8282828282828284 ,beta=0.31313131313131315].
2023-08-22 07:46:49,300 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.8282828282828284 ,beta=0.31313131313131315].
2023-08-22 07:46:50,234 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:46:50,234 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:46:52,040 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.4545454545454546, momentum=0.29292929292929293 ,nesterov=True ,amsgrad=True ,weight_decay=0.0009100000000000001 ,use_ema=True ,ema_momentum=0.4141414141414142 ,rho=0.8383838383838385 ,epsilon=0.0005858586272727272 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.7373737373737375 ,learning_rate_power=-0.5353535353535352 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.38383838383838387 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.595959595959596].
2023-08-22 07:46:52,040 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.4545454545454546, momentum=0.29292929292929293 ,nesterov=True ,amsgrad=True ,weight_decay=0.0009100000000000001 ,use_ema=True ,ema_momentum=0.4141414141414142 ,rho=0.8383838383838385 ,epsilon=0.0005858586272727272 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.7373737373737375 ,learning_rate_power=-0.5353535353535352 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.38383838383838387 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.595959595959596].
2023-08-22 07:47:07,182 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:47:07,182 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:47:09,803 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:47:09,803 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:47:11,173 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:47:11,174 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:47:27,599 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:47:27,599 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:47:27,920 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.006162000000000001 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0004242424818181818 ,centered=True ,beta_1=0.7272727272727273 ,beta_2=0.4040404040404041 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.8585858585858587].
2023-08-22 07:47:27,921 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.006162000000000001 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0004242424818181818 ,centered=True ,beta_1=0.7272727272727273 ,beta_2=0.4040404040404041 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.8585858585858587].
2023-08-22 07:47:47,565 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.12121212121212122, momentum=0.5252525252525253 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.10101010101010102 ,rho=0.4141414141414142 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.30303030303030304 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:47:47,565 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.12121212121212122, momentum=0.5252525252525253 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.10101010101010102 ,rho=0.4141414141414142 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.30303030303030304 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:48:10,890 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.030303030303030304, momentum=0.4646464646464647 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0002121212909090909 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.23232323232323235 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:48:10,891 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.030303030303030304, momentum=0.4646464646464647 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0002121212909090909 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.23232323232323235 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:48:31,201 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.14141414141414144 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.6666666666666667 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.6060606060606061].
2023-08-22 07:48:31,202 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.14141414141414144 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.6666666666666667 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.6060606060606061].
2023-08-22 07:48:55,587 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:48:55,587 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:49:14,815 INFO: Applying selection operators for generation 19.
2023-08-22 07:49:14,817 INFO: Applying genetic operators for generation 19.
2023-08-22 07:49:14,823 INFO: Evaluating fitness for for generation 19.
2023-08-22 07:49:14,823 INFO: Will evaluate fitness for 57 individuals.
2023-08-22 07:49:15,368 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.020202020202020204 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.30303030303030304 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.595959595959596].
2023-08-22 07:49:15,369 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.020202020202020204 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.30303030303030304 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.595959595959596].
2023-08-22 07:49:15,443 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0011120000000000001 ,use_ema=True ,ema_momentum=0.8080808080808082 ,rho=0.38383838383838387 ,epsilon=7.070716363636363e-05 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.26262626262626254 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.8585858585858587].
2023-08-22 07:49:15,444 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0011120000000000001 ,use_ema=True ,ema_momentum=0.8080808080808082 ,rho=0.38383838383838387 ,epsilon=7.070716363636363e-05 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.26262626262626254 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.8585858585858587].
2023-08-22 07:49:15,460 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:49:15,461 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:49:15,479 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:49:15,480 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:49:35,808 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.888888888888889 ,rho=0.9090909090909092 ,epsilon=0.0007474747727272727 ,centered=False ,beta_1=0.0 ,beta_2=0.5656565656565657 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.595959595959596].
2023-08-22 07:49:35,809 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.888888888888889 ,rho=0.9090909090909092 ,epsilon=0.0007474747727272727 ,centered=False ,beta_1=0.0 ,beta_2=0.5656565656565657 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.595959595959596].
2023-08-22 07:49:36,721 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:49:36,722 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:49:39,785 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:49:39,785 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:49:41,437 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.09090909090909091, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4444444444444445 ,rho=0.595959595959596 ,epsilon=0.0009696969727272727 ,centered=True ,beta_1=0.3535353535353536 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.4747474747474748 ,l1_regularization_strength=0.9191919191919192 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.595959595959596].
2023-08-22 07:49:41,437 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.09090909090909091, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4444444444444445 ,rho=0.595959595959596 ,epsilon=0.0009696969727272727 ,centered=True ,beta_1=0.3535353535353536 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.4747474747474748 ,l1_regularization_strength=0.9191919191919192 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.595959595959596].
2023-08-22 07:49:57,271 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:49:57,271 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:50:00,123 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:50:00,124 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:50:00,691 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:50:00,691 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:50:06,003 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:50:06,003 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:50:17,707 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:50:17,707 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:50:21,086 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.14141414141414144 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.9191919191919192 ,beta_2=0.09090909090909091 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.9696969696969697 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.595959595959596].
2023-08-22 07:50:21,086 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.14141414141414144 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.9191919191919192 ,beta_2=0.09090909090909091 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.9696969696969697 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.595959595959596].
2023-08-22 07:50:21,158 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.595959595959596 ,epsilon=0.0009494949545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.8888888888888888 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.7070707070707072].
2023-08-22 07:50:21,158 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.595959595959596 ,epsilon=0.0009494949545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.8888888888888888 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.7070707070707072].
2023-08-22 07:50:26,262 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:50:26,262 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:50:38,840 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.06060606060606061 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.9090909090909092 ,epsilon=0.00035353541818181815 ,centered=False ,beta_1=0.6060606060606061 ,beta_2=0.42424242424242425 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.8989898989898991 ,beta=0.595959595959596].
2023-08-22 07:50:38,840 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.06060606060606061 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.9090909090909092 ,epsilon=0.00035353541818181815 ,centered=False ,beta_1=0.6060606060606061 ,beta_2=0.42424242424242425 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.8989898989898991 ,beta=0.595959595959596].
2023-08-22 07:50:45,202 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:50:45,202 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:50:45,215 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:50:45,215 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:50:46,447 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:50:46,447 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:51:03,612 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.42424242424242425, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0025260000000000005 ,use_ema=False ,ema_momentum=0.7474747474747475 ,rho=0.37373737373737376 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.16161616161616163 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.17171717171717174 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.595959595959596].
2023-08-22 07:51:03,612 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.42424242424242425, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0025260000000000005 ,use_ema=False ,ema_momentum=0.7474747474747475 ,rho=0.37373737373737376 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.16161616161616163 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.17171717171717174 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.595959595959596].
2023-08-22 07:51:05,320 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:51:05,320 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:51:05,558 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6464646464646465, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6262626262626263 ,rho=0.4646464646464647 ,epsilon=0.0004747475272727272 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-1.0 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7272727272727273 ,beta=0.696969696969697].
2023-08-22 07:51:05,558 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6464646464646465, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6262626262626263 ,rho=0.4646464646464647 ,epsilon=0.0004747475272727272 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-1.0 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7272727272727273 ,beta=0.696969696969697].
2023-08-22 07:51:07,493 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:51:07,493 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:51:26,256 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:51:26,257 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:51:27,502 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.4545454545454546 ,nesterov=False ,amsgrad=True ,weight_decay=0.0065660000000000015 ,use_ema=True ,ema_momentum=0.32323232323232326 ,rho=0.9090909090909092 ,epsilon=0.0009797979818181818 ,centered=False ,beta_1=0.12121212121212122 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.595959595959596].
2023-08-22 07:51:27,502 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.4545454545454546 ,nesterov=False ,amsgrad=True ,weight_decay=0.0065660000000000015 ,use_ema=True ,ema_momentum=0.32323232323232326 ,rho=0.9090909090909092 ,epsilon=0.0009797979818181818 ,centered=False ,beta_1=0.12121212121212122 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.595959595959596].
2023-08-22 07:51:27,820 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:51:27,821 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:51:30,071 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.4141414141414142 ,nesterov=False ,amsgrad=True ,weight_decay=0.004344000000000001 ,use_ema=True ,ema_momentum=0.7171717171717172 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.48484848484848486 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.787878787878788].
2023-08-22 07:51:30,071 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.4141414141414142 ,nesterov=False ,amsgrad=True ,weight_decay=0.004344000000000001 ,use_ema=True ,ema_momentum=0.7171717171717172 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.48484848484848486 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.787878787878788].
2023-08-22 07:51:46,436 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4747474747474748, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.43434343434343436 ,rho=0.9090909090909092 ,epsilon=0.00032323239090909086 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.5252525252525253 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.25252525252525254 ,l1_regularization_strength=0.5050505050505051 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.595959595959596].
2023-08-22 07:51:46,436 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4747474747474748, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.43434343434343436 ,rho=0.9090909090909092 ,epsilon=0.00032323239090909086 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.5252525252525253 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.25252525252525254 ,l1_regularization_strength=0.5050505050505051 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.595959595959596].
2023-08-22 07:51:48,195 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9191919191919192 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.08080808080808081 ,l1_regularization_strength=0.8787878787878789 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.595959595959596].
2023-08-22 07:51:48,195 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9191919191919192 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.08080808080808081 ,l1_regularization_strength=0.8787878787878789 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.595959595959596].
2023-08-22 07:51:51,777 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:51:51,777 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:51:52,873 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:51:52,873 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:52:10,296 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7474747474747475 ,rho=0.9090909090909092 ,epsilon=0.00018181826363636362 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.9191919191919192 ,initial_accumulator_value=0.7171717171717172 ,l1_regularization_strength=0.7676767676767677 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.25252525252525254].
2023-08-22 07:52:10,296 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7474747474747475 ,rho=0.9090909090909092 ,epsilon=0.00018181826363636362 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.9191919191919192 ,initial_accumulator_value=0.7171717171717172 ,l1_regularization_strength=0.7676767676767677 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.25252525252525254].
2023-08-22 07:52:12,230 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:52:12,230 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:52:14,244 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.17171717171717174, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.5757575757575758 ,epsilon=0.0006969697272727273 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.37373737373737376 ,learning_rate_power=-0.8787878787878788 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.595959595959596].
2023-08-22 07:52:14,244 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.17171717171717174, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.5757575757575758 ,epsilon=0.0006969697272727273 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.37373737373737376 ,learning_rate_power=-0.8787878787878788 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.595959595959596].
2023-08-22 07:52:25,066 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.43434343434343436, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0015160000000000002 ,use_ema=False ,ema_momentum=0.6767676767676768 ,rho=0.23232323232323235 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.05050505050505051 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.7676767676767676 ,initial_accumulator_value=0.5858585858585859 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.33333333333333337].
2023-08-22 07:52:25,067 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.43434343434343436, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0015160000000000002 ,use_ema=False ,ema_momentum=0.6767676767676768 ,rho=0.23232323232323235 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.05050505050505051 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.7676767676767676 ,initial_accumulator_value=0.5858585858585859 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.33333333333333337].
2023-08-22 07:52:30,454 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.008586 ,use_ema=True ,ema_momentum=0.25252525252525254 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.8787878787878788 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.27272727272727276].
2023-08-22 07:52:30,454 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.008586 ,use_ema=True ,ema_momentum=0.25252525252525254 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.8787878787878788 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.27272727272727276].
2023-08-22 07:52:32,620 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:52:32,620 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:52:38,004 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.22222222222222224 ,epsilon=0.0002020202818181818 ,centered=True ,beta_1=0.38383838383838387 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.22222222222222224 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:52:38,004 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.22222222222222224 ,epsilon=0.0002020202818181818 ,centered=True ,beta_1=0.38383838383838387 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.22222222222222224 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:52:45,387 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.00020300000000000003 ,use_ema=True ,ema_momentum=0.4141414141414142 ,rho=0.09090909090909091 ,epsilon=0.0009595959636363636 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.36363636363636365 ,learning_rate_power=-0.4949494949494949 ,initial_accumulator_value=0.8787878787878789 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.23232323232323235].
2023-08-22 07:52:45,388 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.00020300000000000003 ,use_ema=True ,ema_momentum=0.4141414141414142 ,rho=0.09090909090909091 ,epsilon=0.0009595959636363636 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.36363636363636365 ,learning_rate_power=-0.4949494949494949 ,initial_accumulator_value=0.8787878787878789 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.23232323232323235].
2023-08-22 07:52:52,142 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:52:52,142 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:52:52,935 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:52:52,935 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:53:02,842 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:53:02,843 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:53:10,638 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.21212121212121213, momentum=0.7777777777777778 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.30303030303030304 ,rho=0.48484848484848486 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.36363636363636365 ,l1_regularization_strength=0.595959595959596 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.595959595959596].
2023-08-22 07:53:10,639 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.21212121212121213, momentum=0.7777777777777778 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.30303030303030304 ,rho=0.48484848484848486 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.36363636363636365 ,l1_regularization_strength=0.595959595959596 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.595959595959596].
2023-08-22 07:53:12,411 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:53:12,411 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:53:13,839 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:53:13,839 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:53:23,277 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.20202020202020204 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.43434343434343436 ,rho=0.16161616161616163 ,epsilon=0.0005858586272727272 ,centered=True ,beta_1=0.8282828282828284 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.3434343434343435 ,l1_regularization_strength=0.16161616161616163 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:53:23,277 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.20202020202020204 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.43434343434343436 ,rho=0.16161616161616163 ,epsilon=0.0005858586272727272 ,centered=True ,beta_1=0.8282828282828284 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.3434343434343435 ,l1_regularization_strength=0.16161616161616163 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:53:32,694 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:53:32,694 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:53:34,213 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:53:34,213 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:53:35,843 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:53:35,843 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:53:48,314 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.17171717171717174 ,rho=0.17171717171717174 ,epsilon=0.0009393939454545454 ,centered=True ,beta_1=0.7272727272727273 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.31313131313131315 ,l1_regularization_strength=0.686868686868687 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.3535353535353536].
2023-08-22 07:53:48,315 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.17171717171717174 ,rho=0.17171717171717174 ,epsilon=0.0009393939454545454 ,centered=True ,beta_1=0.7272727272727273 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.31313131313131315 ,l1_regularization_strength=0.686868686868687 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.3535353535353536].
2023-08-22 07:53:52,877 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.21212121212121213, momentum=0.6161616161616162 ,nesterov=True ,amsgrad=True ,weight_decay=0.007879 ,use_ema=False ,ema_momentum=0.393939393939394 ,rho=0.4444444444444445 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.686868686868687 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.16161616161616155 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:53:52,877 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.21212121212121213, momentum=0.6161616161616162 ,nesterov=True ,amsgrad=True ,weight_decay=0.007879 ,use_ema=False ,ema_momentum=0.393939393939394 ,rho=0.4444444444444445 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.686868686868687 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.16161616161616155 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:53:54,589 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.21212121212121213, momentum=0.393939393939394 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.19191919191919193 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.8282828282828284].
2023-08-22 07:53:54,589 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.21212121212121213, momentum=0.393939393939394 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.19191919191919193 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.8282828282828284].
2023-08-22 07:54:17,840 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:54:17,841 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:54:19,513 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:54:19,514 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:54:37,833 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.8282828282828284 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8080808080808082 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.595959595959596].
2023-08-22 07:54:37,834 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.8282828282828284 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8080808080808082 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.595959595959596].
2023-08-22 07:54:39,664 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:54:39,664 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:54:59,163 INFO: Applying selection operators for generation 20.
2023-08-22 07:54:59,164 INFO: Applying genetic operators for generation 20.
2023-08-22 07:54:59,170 INFO: Evaluating fitness for for generation 20.
2023-08-22 07:54:59,170 INFO: Will evaluate fitness for 66 individuals.
2023-08-22 07:54:59,731 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.5555555555555556, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.003839000000000001 ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.5151515151515152 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.33333333333333337 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6262626262626263 ,beta=0.595959595959596].
2023-08-22 07:54:59,731 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.5555555555555556, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.003839000000000001 ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.5151515151515152 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.33333333333333337 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6262626262626263 ,beta=0.595959595959596].
2023-08-22 07:54:59,753 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:54:59,753 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:54:59,762 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:54:59,762 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:54:59,765 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:54:59,765 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:55:19,985 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:55:19,985 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:55:20,153 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:55:20,153 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:55:20,159 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.8080808080808082, momentum=0.7373737373737375 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8585858585858587 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.9393939393939394 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.22222222222222224 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6666666666666667 ,beta=0.595959595959596].
2023-08-22 07:55:20,159 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.8080808080808082, momentum=0.7373737373737375 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8585858585858587 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.9393939393939394 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.22222222222222224 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6666666666666667 ,beta=0.595959595959596].
2023-08-22 07:55:23,595 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:55:23,595 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:55:40,445 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0036370000000000005 ,use_ema=True ,ema_momentum=0.5858585858585859 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.43434343434343425 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.5151515151515152 ,beta=0.3434343434343435].
2023-08-22 07:55:40,445 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0036370000000000005 ,use_ema=True ,ema_momentum=0.5858585858585859 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.43434343434343425 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.5151515151515152 ,beta=0.3434343434343435].
2023-08-22 07:55:40,913 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:55:40,913 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:55:44,022 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:55:44,022 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:55:44,481 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:55:44,482 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:56:01,368 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:56:01,368 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:56:04,654 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.48484848484848486 ,epsilon=0.00023232330909090908 ,centered=True ,beta_1=0.14141414141414144 ,beta_2=0.19191919191919193 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.595959595959596].
2023-08-22 07:56:04,654 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.48484848484848486 ,epsilon=0.00023232330909090908 ,centered=True ,beta_1=0.14141414141414144 ,beta_2=0.19191919191919193 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.595959595959596].
2023-08-22 07:56:05,081 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6161616161616162 ,rho=0.33333333333333337 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.6464646464646465 ,beta_2=0.22222222222222224 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.4141414141414142 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.494949494949495].
2023-08-22 07:56:05,082 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6161616161616162 ,rho=0.33333333333333337 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.6464646464646465 ,beta_2=0.22222222222222224 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.4141414141414142 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.494949494949495].
2023-08-22 07:56:06,750 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:56:06,751 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:56:21,736 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:56:21,736 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:56:27,907 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:56:27,907 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:56:29,661 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:56:29,661 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:56:30,314 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.007071000000000001 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.6666666666666667 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.5757575757575758 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.15151515151515152 ,beta=0.595959595959596].
2023-08-22 07:56:30,314 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.007071000000000001 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.6666666666666667 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.5757575757575758 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.15151515151515152 ,beta=0.595959595959596].
2023-08-22 07:56:41,954 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7373737373737375 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.4545454545454546 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7777777777777778 ,beta=0.595959595959596].
2023-08-22 07:56:41,954 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7373737373737375 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.4545454545454546 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7777777777777778 ,beta=0.595959595959596].
2023-08-22 07:56:48,217 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:56:48,217 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:56:50,640 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:56:50,640 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:56:55,978 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.004647000000000001 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.3434343434343435 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.31313131313131315 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.595959595959596].
2023-08-22 07:56:55,979 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.004647000000000001 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.3434343434343435 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.31313131313131315 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.595959595959596].
2023-08-22 07:57:08,443 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.8484848484848485 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.13131313131313133 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.32323232323232326].
2023-08-22 07:57:08,443 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.8484848484848485 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.13131313131313133 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.32323232323232326].
2023-08-22 07:57:10,967 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:57:10,967 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:57:18,432 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:57:18,432 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:57:21,640 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0024250000000000005 ,use_ema=True ,ema_momentum=0.23232323232323235 ,rho=0.9090909090909092 ,epsilon=0.0003737374363636363 ,centered=True ,beta_1=0.020202020202020204 ,beta_2=0.7373737373737375 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.4646464646464647 ,beta=0.98989898989899].
2023-08-22 07:57:21,640 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0024250000000000005 ,use_ema=True ,ema_momentum=0.23232323232323235 ,rho=0.9090909090909092 ,epsilon=0.0003737374363636363 ,centered=True ,beta_1=0.020202020202020204 ,beta_2=0.7373737373737375 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.4646464646464647 ,beta=0.98989898989899].
2023-08-22 07:57:31,305 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:57:31,305 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:57:33,324 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:57:33,324 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:57:38,878 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:57:38,878 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:57:47,242 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:57:47,242 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:57:51,407 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:57:51,408 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:57:54,358 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.13131313131313133, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.9696969696969697 ,epsilon=0.0006161616545454546 ,centered=True ,beta_1=0.08080808080808081 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.3535353535353536 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.595959595959596].
2023-08-22 07:57:54,358 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.13131313131313133, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.9696969696969697 ,epsilon=0.0006161616545454546 ,centered=True ,beta_1=0.08080808080808081 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.3535353535353536 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.595959595959596].
2023-08-22 07:57:59,311 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:57:59,311 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:58:07,834 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.17171717171717174 ,learning_rate_power=-0.3232323232323232 ,initial_accumulator_value=0.494949494949495 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:58:07,834 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.17171717171717174 ,learning_rate_power=-0.3232323232323232 ,initial_accumulator_value=0.494949494949495 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:58:12,134 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:58:12,134 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:58:20,535 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:58:20,535 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:58:28,371 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.6363636363636365, momentum=0.030303030303030304 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.31313131313131315 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.3535353535353535 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:58:28,372 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.6363636363636365, momentum=0.030303030303030304 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.31313131313131315 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.3535353535353535 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:58:30,381 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.9292929292929294, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.001011 ,use_ema=True ,ema_momentum=0.595959595959596 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.6464646464646465 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.5151515151515152 ,beta=0.11111111111111112].
2023-08-22 07:58:30,382 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.9292929292929294, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.001011 ,use_ema=True ,ema_momentum=0.595959595959596 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.6464646464646465 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.5151515151515152 ,beta=0.11111111111111112].
2023-08-22 07:58:32,395 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.33333333333333337 ,rho=0.9090909090909092 ,epsilon=0.0006666667 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.48484848484848486 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.595959595959596].
2023-08-22 07:58:32,395 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.33333333333333337 ,rho=0.9090909090909092 ,epsilon=0.0006666667 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.48484848484848486 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.595959595959596].
2023-08-22 07:58:40,983 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.16161616161616163 ,rho=0.696969696969697 ,epsilon=0.0005757576181818182 ,centered=True ,beta_1=0.36363636363636365 ,beta_2=0.37373737373737376 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.7676767676767677].
2023-08-22 07:58:40,983 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.16161616161616163 ,rho=0.696969696969697 ,epsilon=0.0005757576181818182 ,centered=True ,beta_1=0.36363636363636365 ,beta_2=0.37373737373737376 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.7676767676767677].
2023-08-22 07:58:53,140 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:58:53,141 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:58:55,824 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:58:55,825 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:58:57,205 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0004050000000000001 ,use_ema=False ,ema_momentum=0.10101010101010102 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:58:57,205 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0004050000000000001 ,use_ema=False ,ema_momentum=0.10101010101010102 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:59:05,611 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:59:05,611 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:59:14,279 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:59:14,279 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:59:16,872 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:59:16,872 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:59:21,255 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:59:21,256 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:59:25,984 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6767676767676768, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5656565656565657 ,rho=0.7272727272727273 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.595959595959596].
2023-08-22 07:59:25,985 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6767676767676768, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5656565656565657 ,rho=0.7272727272727273 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.595959595959596].
2023-08-22 07:59:34,630 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:59:34,630 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:59:37,324 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:59:37,324 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:59:42,215 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:59:42,215 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:59:51,504 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.13131313131313133 ,rho=0.7575757575757577 ,epsilon=0.0007474747727272727 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.9090909090909092 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.4141414141414142 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.595959595959596].
2023-08-22 07:59:51,505 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.13131313131313133 ,rho=0.7575757575757577 ,epsilon=0.0007474747727272727 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.9090909090909092 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.4141414141414142 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.595959595959596].
2023-08-22 07:59:55,066 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:59:55,066 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:59:57,661 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 07:59:57,661 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:00:02,542 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:00:02,543 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:00:15,480 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.00043434349090909084 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.8585858585858587 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:00:15,480 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.00043434349090909084 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.8585858585858587 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:00:15,662 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.05050505050505051, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.17171717171717174 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.393939393939394 ,beta_2=0.23232323232323235 ,learning_rate_power=-0.31313131313131304 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.25252525252525254].
2023-08-22 08:00:15,663 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.05050505050505051, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.17171717171717174 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.393939393939394 ,beta_2=0.23232323232323235 ,learning_rate_power=-0.31313131313131304 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.25252525252525254].
2023-08-22 08:00:17,965 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.4545454545454546 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.4545454545454546 ,learning_rate_power=-0.09090909090909083 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:00:17,965 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.4545454545454546 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.4545454545454546 ,learning_rate_power=-0.09090909090909083 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:00:22,813 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9696969696969697 ,rho=0.36363636363636365 ,epsilon=0.0006666667 ,centered=False ,beta_1=0.686868686868687 ,beta_2=0.6060606060606061 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.595959595959596].
2023-08-22 08:00:22,813 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9696969696969697 ,rho=0.36363636363636365 ,epsilon=0.0006666667 ,centered=False ,beta_1=0.686868686868687 ,beta_2=0.6060606060606061 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.595959595959596].
2023-08-22 08:00:36,054 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.21212121212121213 ,epsilon=9.09091818181818e-05 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6262626262626263 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.32323232323232326].
2023-08-22 08:00:36,054 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.21212121212121213 ,epsilon=9.09091818181818e-05 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6262626262626263 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.32323232323232326].
2023-08-22 08:00:47,916 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:00:47,917 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:01:08,548 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:01:08,549 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:01:28,458 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:01:28,458 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:01:48,410 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5151515151515152 ,rho=0.31313131313131315 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.5656565656565657 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.11111111111111112 ,beta=0.5454545454545455].
2023-08-22 08:01:48,410 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5151515151515152 ,rho=0.31313131313131315 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.5656565656565657 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.11111111111111112 ,beta=0.5454545454545455].
2023-08-22 08:02:11,466 INFO: Applying selection operators for generation 21.
2023-08-22 08:02:11,467 INFO: Applying genetic operators for generation 21.
2023-08-22 08:02:11,472 INFO: Evaluating fitness for for generation 21.
2023-08-22 08:02:11,472 INFO: Will evaluate fitness for 49 individuals.
2023-08-22 08:02:12,027 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:02:12,027 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:02:12,053 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:02:12,053 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:02:12,054 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.8585858585858587 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.6565656565656566 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.3939393939393939 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.8585858585858587].
2023-08-22 08:02:12,054 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.8585858585858587 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.6565656565656566 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.3939393939393939 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.8585858585858587].
2023-08-22 08:02:12,065 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:02:12,066 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:02:32,030 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:02:32,031 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:02:32,407 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.6767676767676768, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.003738000000000001 ,use_ema=True ,ema_momentum=0.5757575757575758 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.43434343434343436 ,beta_2=0.4646464646464647 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.48484848484848486].
2023-08-22 08:02:32,407 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.6767676767676768, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.003738000000000001 ,use_ema=True ,ema_momentum=0.5757575757575758 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.43434343434343436 ,beta_2=0.4646464646464647 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.48484848484848486].
2023-08-22 08:02:32,997 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.37373737373737376 ,learning_rate_power=-0.6464646464646464 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6262626262626263 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.5858585858585859].
2023-08-22 08:02:32,997 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.37373737373737376 ,learning_rate_power=-0.6464646464646464 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6262626262626263 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.5858585858585859].
2023-08-22 08:02:37,076 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.002829000000000001 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.797979797979798 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.050505050505050386 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.08080808080808081].
2023-08-22 08:02:37,076 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.002829000000000001 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.797979797979798 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.050505050505050386 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.08080808080808081].
2023-08-22 08:02:52,668 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:02:52,669 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:02:52,779 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.393939393939394, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.6666666666666667 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.23232323232323235 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.5555555555555556 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.595959595959596].
2023-08-22 08:02:52,780 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.393939393939394, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.6666666666666667 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.23232323232323235 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.5555555555555556 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.595959595959596].
2023-08-22 08:02:57,418 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.14141414141414144 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.4040404040404041 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:02:57,418 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.14141414141414144 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.4040404040404041 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:03:01,956 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:03:01,956 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:03:11,238 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:03:11,238 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:03:13,077 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:03:13,077 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:03:22,208 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7777777777777778, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0027280000000000004 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.32323232323232326 ,epsilon=0.00010101019090909089 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:03:22,208 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7777777777777778, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0027280000000000004 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.32323232323232326 ,epsilon=0.00010101019090909089 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:03:22,735 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:03:22,735 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:03:31,382 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:03:31,382 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:03:33,450 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:03:33,450 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:03:43,898 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:03:43,899 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:03:48,200 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4141414141414142, momentum=0.6060606060606061 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.98989898989899 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.2222222222222222 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.4141414141414142 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6262626262626263 ,beta=0.393939393939394].
2023-08-22 08:03:48,201 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4141414141414142, momentum=0.6060606060606061 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.98989898989899 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.2222222222222222 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.4141414141414142 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6262626262626263 ,beta=0.393939393939394].
2023-08-22 08:03:51,502 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.5656565656565657, momentum=0.13131313131313133 ,nesterov=False ,amsgrad=True ,weight_decay=0.0006070000000000001 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.020202020202020204 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.11111111111111112 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.595959595959596].
2023-08-22 08:03:51,502 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.5656565656565657, momentum=0.13131313131313133 ,nesterov=False ,amsgrad=True ,weight_decay=0.0006070000000000001 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.020202020202020204 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.11111111111111112 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.595959595959596].
2023-08-22 08:03:54,491 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:03:54,491 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:04:04,297 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.00030400000000000007 ,use_ema=True ,ema_momentum=0.30303030303030304 ,rho=0.9090909090909092 ,epsilon=0.0009494949545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.17171717171717174 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.33333333333333337 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.3535353535353536].
2023-08-22 08:04:04,298 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.00030400000000000007 ,use_ema=True ,ema_momentum=0.30303030303030304 ,rho=0.9090909090909092 ,epsilon=0.0009494949545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.17171717171717174 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.33333333333333337 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.3535353535353536].
2023-08-22 08:04:08,605 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.14141414141414144, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.2828282828282829 ,epsilon=0.0008383838545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.8181818181818182 ,l1_regularization_strength=0.6262626262626263 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.38383838383838387 ,beta=0.7575757575757577].
2023-08-22 08:04:08,605 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.14141414141414144, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.2828282828282829 ,epsilon=0.0008383838545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.8181818181818182 ,l1_regularization_strength=0.6262626262626263 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.38383838383838387 ,beta=0.7575757575757577].
2023-08-22 08:04:12,188 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.5555555555555556 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.0 ,rho=0.08080808080808081 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.6363636363636365 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9797979797979799 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.595959595959596].
2023-08-22 08:04:12,188 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.5555555555555556 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.0 ,rho=0.08080808080808081 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.6363636363636365 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9797979797979799 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.595959595959596].
2023-08-22 08:04:14,978 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:04:14,979 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:04:23,467 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:04:23,467 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:04:27,071 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:04:27,071 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:04:35,492 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:04:35,492 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:04:37,213 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9595959595959597, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0023240000000000005 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.3535353535353536 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.9393939393939394 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.38383838383838387 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.5656565656565657].
2023-08-22 08:04:37,213 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9595959595959597, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0023240000000000005 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.3535353535353536 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.9393939393939394 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.38383838383838387 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.5656565656565657].
2023-08-22 08:04:43,860 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7777777777777778, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.24242424242424243 ,rho=0.9090909090909092 ,epsilon=4.040413636363636e-05 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.2828282828282829].
2023-08-22 08:04:43,861 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7777777777777778, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.24242424242424243 ,rho=0.9090909090909092 ,epsilon=4.040413636363636e-05 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.2828282828282829].
2023-08-22 08:04:47,353 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:04:47,354 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:04:55,789 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.00040404046363636356 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.9292929292929293 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.9191919191919192].
2023-08-22 08:04:55,790 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.00040404046363636356 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.9292929292929293 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.9191919191919192].
2023-08-22 08:04:57,974 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:04:57,974 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:05:08,209 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:05:08,209 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:05:09,556 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:05:09,556 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:05:18,234 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7474747474747475, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.48484848484848486 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.11111111111111112 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.595959595959596].
2023-08-22 08:05:18,234 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7474747474747475, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.48484848484848486 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.11111111111111112 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.595959595959596].
2023-08-22 08:05:21,722 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:05:21,722 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:05:28,427 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:05:28,427 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:05:30,116 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:05:30,117 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:05:38,451 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8585858585858587, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0065660000000000015 ,use_ema=True ,ema_momentum=0.4545454545454546 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.43434343434343436 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.3232323232323232 ,initial_accumulator_value=0.9393939393939394 ,l1_regularization_strength=0.6767676767676768 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.8080808080808082].
2023-08-22 08:05:38,452 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8585858585858587, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0065660000000000015 ,use_ema=True ,ema_momentum=0.4545454545454546 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.43434343434343436 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.3232323232323232 ,initial_accumulator_value=0.9393939393939394 ,l1_regularization_strength=0.6767676767676768 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.8080808080808082].
2023-08-22 08:05:42,337 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:05:42,337 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:05:48,611 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0004050000000000001 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.12121212121212122 ,beta=0.595959595959596].
2023-08-22 08:05:48,611 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0004050000000000001 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.12121212121212122 ,beta=0.595959595959596].
2023-08-22 08:05:50,497 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:05:50,497 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:05:59,400 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:05:59,400 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:06:02,793 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:06:02,793 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:06:09,334 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:06:09,334 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:06:11,690 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.6666666666666667 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.13131313131313133 ,rho=0.3535353535353536 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.2828282828282829 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.595959595959596].
2023-08-22 08:06:11,690 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.6666666666666667 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.13131313131313133 ,rho=0.3535353535353536 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.2828282828282829 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.595959595959596].
2023-08-22 08:06:19,722 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:06:19,722 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:06:39,257 INFO: Applying selection operators for generation 22.
2023-08-22 08:06:39,258 INFO: Applying genetic operators for generation 22.
2023-08-22 08:06:39,263 INFO: Evaluating fitness for for generation 22.
2023-08-22 08:06:39,263 INFO: Will evaluate fitness for 65 individuals.
2023-08-22 08:06:39,832 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.24242424242424243 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.4141414141414142 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.07070707070707072].
2023-08-22 08:06:39,832 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.24242424242424243 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.4141414141414142 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.07070707070707072].
2023-08-22 08:06:39,837 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:06:39,837 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:06:39,847 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.5050505050505051, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.33333333333333337 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.09090909090909083 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.010101010101010102 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.595959595959596].
2023-08-22 08:06:39,848 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.5050505050505051, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.33333333333333337 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.09090909090909083 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.010101010101010102 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.595959595959596].
2023-08-22 08:06:39,850 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:06:39,850 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:07:00,074 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:07:00,074 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:07:00,941 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:07:00,941 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:07:02,020 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:07:02,020 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:07:06,551 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:07:06,551 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:07:20,363 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:07:20,363 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:07:21,337 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.37373737373737376, momentum=0.6161616161616162 ,nesterov=False ,amsgrad=True ,weight_decay=0.0076770000000000015 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.30303030303030304 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.6161616161616162 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.8484848484848485 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.07070707070707072].
2023-08-22 08:07:21,337 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.37373737373737376, momentum=0.6161616161616162 ,nesterov=False ,amsgrad=True ,weight_decay=0.0076770000000000015 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.30303030303030304 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.6161616161616162 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.8484848484848485 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.07070707070707072].
2023-08-22 08:07:22,323 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:07:22,323 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:07:26,793 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:07:26,793 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:07:41,553 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:07:41,553 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:07:42,522 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:07:42,522 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:07:46,957 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:07:46,957 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:07:47,003 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:07:47,003 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:08:01,965 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.42424242424242425, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0029300000000000007 ,use_ema=True ,ema_momentum=0.21212121212121213 ,rho=0.18181818181818182 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.6060606060606061 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.030303030303030304 ,beta=0.595959595959596].
2023-08-22 08:08:01,965 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.42424242424242425, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0029300000000000007 ,use_ema=True ,ema_momentum=0.21212121212121213 ,rho=0.18181818181818182 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.6060606060606061 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.030303030303030304 ,beta=0.595959595959596].
2023-08-22 08:08:03,408 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.15151515151515152, momentum=0.7171717171717172 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7171717171717172 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.8282828282828284 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.595959595959596].
2023-08-22 08:08:03,409 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.15151515151515152, momentum=0.7171717171717172 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7171717171717172 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.8282828282828284 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.595959595959596].
2023-08-22 08:08:07,405 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:08:07,405 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:08:07,715 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:08:07,716 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:08:27,673 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:08:27,674 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:08:28,065 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:08:28,065 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:08:28,421 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:08:28,421 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:08:28,549 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:08:28,549 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:08:47,790 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6363636363636365, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.8484848484848485 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.2828282828282829].
2023-08-22 08:08:47,790 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6363636363636365, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.8484848484848485 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.2828282828282829].
2023-08-22 08:08:48,045 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.008889000000000001 ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.32323232323232326 ,epsilon=0.00032323239090909086 ,centered=True ,beta_1=0.98989898989899 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.595959595959596].
2023-08-22 08:08:48,045 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.008889000000000001 ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.32323232323232326 ,epsilon=0.00032323239090909086 ,centered=True ,beta_1=0.98989898989899 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.595959595959596].
2023-08-22 08:08:48,342 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:08:48,343 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:08:48,932 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:08:48,932 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:09:08,211 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:09:08,211 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:09:08,324 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:09:08,324 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:09:09,199 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:09:09,199 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:09:12,966 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:09:12,966 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:09:28,639 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:09:28,639 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:09:29,079 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:09:29,079 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:09:29,414 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:09:29,414 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:09:33,891 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:09:33,891 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:09:49,002 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.888888888888889, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.13131313131313133 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.595959595959596].
2023-08-22 08:09:49,002 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.888888888888889, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.13131313131313133 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.595959595959596].
2023-08-22 08:09:49,160 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.21212121212121213, momentum=0.5555555555555556 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9191919191919192 ,epsilon=0.0008181818363636363 ,centered=True ,beta_1=0.7373737373737375 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.595959595959596].
2023-08-22 08:09:49,161 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.21212121212121213, momentum=0.5555555555555556 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9191919191919192 ,epsilon=0.0008181818363636363 ,centered=True ,beta_1=0.7373737373737375 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.595959595959596].
2023-08-22 08:09:50,407 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:09:50,407 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:09:54,209 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:09:54,209 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:10:08,730 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:10:08,730 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:10:10,784 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:10:10,784 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:10:14,455 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.36363636363636365 ,nesterov=True ,amsgrad=False ,weight_decay=0.007576000000000001 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9797979797979799 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.8989898989898991 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.7171717171717172].
2023-08-22 08:10:14,455 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.36363636363636365 ,nesterov=True ,amsgrad=False ,weight_decay=0.007576000000000001 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9797979797979799 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.8989898989898991 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.7171717171717172].
2023-08-22 08:10:14,464 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:10:14,465 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:10:28,995 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.007475000000000002 ,use_ema=False ,ema_momentum=0.494949494949495 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.3535353535353535 ,initial_accumulator_value=0.3434343434343435 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.8686868686868687].
2023-08-22 08:10:28,996 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.007475000000000002 ,use_ema=False ,ema_momentum=0.494949494949495 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.3535353535353535 ,initial_accumulator_value=0.3434343434343435 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.8686868686868687].
2023-08-22 08:10:31,163 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:10:31,163 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:10:34,611 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9393939393939394, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7272727272727273 ,rho=0.6363636363636365 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.6767676767676768 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.30303030303030304 ,beta=0.7272727272727273].
2023-08-22 08:10:34,611 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9393939393939394, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7272727272727273 ,rho=0.6363636363636365 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.6767676767676768 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.30303030303030304 ,beta=0.7272727272727273].
2023-08-22 08:10:40,819 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.00010200000000000001 ,use_ema=True ,ema_momentum=0.11111111111111112 ,rho=0.9090909090909092 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.5151515151515152 ,beta=0.36363636363636365].
2023-08-22 08:10:40,819 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.00010200000000000001 ,use_ema=True ,ema_momentum=0.11111111111111112 ,rho=0.9090909090909092 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.5151515151515152 ,beta=0.36363636363636365].
2023-08-22 08:10:49,203 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:10:49,203 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:10:52,252 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.7373737373737375, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.007879 ,use_ema=True ,ema_momentum=0.15151515151515152 ,rho=0.7070707070707072 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.595959595959596].
2023-08-22 08:10:52,252 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.7373737373737375, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.007879 ,use_ema=True ,ema_momentum=0.15151515151515152 ,rho=0.7070707070707072 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.595959595959596].
2023-08-22 08:11:00,501 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.005758000000000001 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007979798181818182 ,centered=False ,beta_1=0.37373737373737376 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:11:00,501 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.005758000000000001 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007979798181818182 ,centered=False ,beta_1=0.37373737373737376 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:11:06,698 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:11:06,698 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:11:09,698 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=9.09091818181818e-05 ,centered=False ,beta_1=0.8686868686868687 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.5454545454545454 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.9696969696969697 ,beta=0.595959595959596].
2023-08-22 08:11:09,698 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=9.09091818181818e-05 ,centered=False ,beta_1=0.8686868686868687 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.5454545454545454 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.9696969696969697 ,beta=0.595959595959596].
2023-08-22 08:11:26,699 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:11:26,700 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:11:26,815 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:11:26,815 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:11:30,093 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:11:30,093 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:11:33,727 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:11:33,728 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:11:46,833 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:11:46,833 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:11:46,889 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:11:46,889 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:11:50,338 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:11:50,339 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:11:54,096 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.31313131313131315, momentum=0.20202020202020204 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.07070707070707072 ,rho=0.8080808080808082 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.27272727272727276 ,beta_2=0.020202020202020204 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.595959595959596].
2023-08-22 08:11:54,096 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.31313131313131315, momentum=0.20202020202020204 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.07070707070707072 ,rho=0.8080808080808082 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.27272727272727276 ,beta_2=0.020202020202020204 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.595959595959596].
2023-08-22 08:12:14,441 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0025260000000000005 ,use_ema=True ,ema_momentum=0.07070707070707072 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:12:14,441 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0025260000000000005 ,use_ema=True ,ema_momentum=0.07070707070707072 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:12:33,559 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:12:33,559 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:12:53,643 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:12:53,643 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:13:13,764 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.595959595959596, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.6666666666666667 ,epsilon=0.000454545509090909 ,centered=True ,beta_1=0.07070707070707072 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.8282828282828283 ,initial_accumulator_value=0.6767676767676768 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.07070707070707072].
2023-08-22 08:13:13,764 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.595959595959596, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.6666666666666667 ,epsilon=0.000454545509090909 ,centered=True ,beta_1=0.07070707070707072 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.8282828282828283 ,initial_accumulator_value=0.6767676767676768 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.07070707070707072].
2023-08-22 08:13:38,126 INFO: Applying selection operators for generation 23.
2023-08-22 08:13:38,127 INFO: Applying genetic operators for generation 23.
2023-08-22 08:13:38,132 INFO: Evaluating fitness for for generation 23.
2023-08-22 08:13:38,132 INFO: Will evaluate fitness for 52 individuals.
2023-08-22 08:13:38,685 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:13:38,686 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:13:38,687 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:13:38,687 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:13:38,728 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:13:38,729 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:13:38,733 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:13:38,733 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:13:58,863 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:13:58,863 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:13:59,081 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:13:59,081 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:13:59,085 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:13:59,086 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:13:59,510 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:13:59,511 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:14:18,924 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:14:18,924 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:14:19,260 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:14:19,260 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:14:19,299 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0036370000000000005 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.7171717171717172 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.595959595959596].
2023-08-22 08:14:19,300 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0036370000000000005 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.7171717171717172 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.595959595959596].
2023-08-22 08:14:19,709 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:14:19,710 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:14:38,961 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:14:38,961 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:14:39,335 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:14:39,335 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:14:39,658 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.686868686868687, momentum=0.787878787878788 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.595959595959596].
2023-08-22 08:14:39,659 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.686868686868687, momentum=0.787878787878788 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.595959595959596].
2023-08-22 08:14:40,154 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.004647000000000001 ,use_ema=False ,ema_momentum=0.6363636363636365 ,rho=0.5252525252525253 ,epsilon=0.00015151523636363636 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.4040404040404041 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:14:40,155 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.004647000000000001 ,use_ema=False ,ema_momentum=0.6363636363636365 ,rho=0.5252525252525253 ,epsilon=0.00015151523636363636 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.4040404040404041 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:14:59,636 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:14:59,636 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:15:00,446 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9393939393939394, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.003738000000000001 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0004242424818181818 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.8686868686868687 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.595959595959596].
2023-08-22 08:15:00,447 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9393939393939394, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.003738000000000001 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0004242424818181818 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.8686868686868687 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.595959595959596].
2023-08-22 08:15:04,373 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.19191919191919193, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=1.0 ,epsilon=0.00011111119999999999 ,centered=True ,beta_1=0.5555555555555556 ,beta_2=0.48484848484848486 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4747474747474748 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.30303030303030304].
2023-08-22 08:15:04,373 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.19191919191919193, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=1.0 ,epsilon=0.00011111119999999999 ,centered=True ,beta_1=0.5555555555555556 ,beta_2=0.48484848484848486 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4747474747474748 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.30303030303030304].
2023-08-22 08:15:05,827 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.09090909090909091, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.9090909090909092 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:15:05,827 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.09090909090909091, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.9090909090909092 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:15:19,919 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.18181818181818182, momentum=0.14141414141414144 ,nesterov=True ,amsgrad=True ,weight_decay=0.0031320000000000007 ,use_ema=True ,ema_momentum=0.27272727272727276 ,rho=0.5454545454545455 ,epsilon=0.0006262626636363636 ,centered=False ,beta_1=0.25252525252525254 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.8282828282828283 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.595959595959596].
2023-08-22 08:15:19,919 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.18181818181818182, momentum=0.14141414141414144 ,nesterov=True ,amsgrad=True ,weight_decay=0.0031320000000000007 ,use_ema=True ,ema_momentum=0.27272727272727276 ,rho=0.5454545454545455 ,epsilon=0.0006262626636363636 ,centered=False ,beta_1=0.25252525252525254 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.8282828282828283 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.595959595959596].
2023-08-22 08:15:26,273 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:15:26,273 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:15:26,571 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:15:26,572 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:15:30,090 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:15:30,090 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:15:40,024 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.00026262633636363634 ,centered=False ,beta_1=0.6262626262626263 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.19191919191919193 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.8282828282828284 ,beta=0.595959595959596].
2023-08-22 08:15:40,025 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.00026262633636363634 ,centered=False ,beta_1=0.6262626262626263 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.19191919191919193 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.8282828282828284 ,beta=0.595959595959596].
2023-08-22 08:15:46,519 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:15:46,519 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:15:46,980 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:15:46,980 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:15:50,406 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:15:50,406 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:16:03,887 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.17171717171717174 ,rho=0.26262626262626265 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.30303030303030304 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.30303030303030304 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.8282828282828284].
2023-08-22 08:16:03,887 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.17171717171717174 ,rho=0.26262626262626265 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.30303030303030304 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.30303030303030304 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.8282828282828284].
2023-08-22 08:16:06,811 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:16:06,811 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:16:07,355 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.08080808080808077 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.4646464646464647 ,beta=0.4141414141414142].
2023-08-22 08:16:07,355 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.08080808080808077 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.4646464646464647 ,beta=0.4141414141414142].
2023-08-22 08:16:10,496 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.21212121212121213, momentum=0.14141414141414144 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.11111111111111112 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.48484848484848486 ,beta_2=0.29292929292929293 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.4141414141414142 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.595959595959596].
2023-08-22 08:16:10,496 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.21212121212121213, momentum=0.14141414141414144 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.11111111111111112 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.48484848484848486 ,beta_2=0.29292929292929293 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.4141414141414142 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.595959595959596].
2023-08-22 08:16:27,817 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:16:27,817 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:16:28,298 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:16:28,298 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:16:28,590 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:16:28,590 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:16:34,005 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:16:34,005 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:16:48,157 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:16:48,158 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:16:49,019 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:16:49,019 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:16:49,033 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7575757575757577, momentum=0.23232323232323235 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6161616161616162 ,rho=0.9090909090909092 ,epsilon=0.00025252532727272723 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.595959595959596 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.26262626262626265 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.595959595959596].
2023-08-22 08:16:49,033 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7575757575757577, momentum=0.23232323232323235 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6161616161616162 ,rho=0.9090909090909092 ,epsilon=0.00025252532727272723 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.595959595959596 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.26262626262626265 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.595959595959596].
2023-08-22 08:16:54,124 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:16:54,125 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:17:08,376 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:17:08,376 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:17:09,275 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:17:09,275 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:17:13,910 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:17:13,911 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:17:14,947 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:17:14,948 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:17:28,551 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:17:28,552 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:17:29,479 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7272727272727273 ,rho=0.393939393939394 ,epsilon=0.0006868687181818181 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.6565656565656566].
2023-08-22 08:17:29,479 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7272727272727273 ,rho=0.393939393939394 ,epsilon=0.0006868687181818181 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.6565656565656566].
2023-08-22 08:17:34,039 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:17:34,039 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:17:35,081 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:17:35,081 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:17:49,253 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8787878787878789, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8080808080808082 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.23232323232323235].
2023-08-22 08:17:49,253 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8787878787878789, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8080808080808082 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.23232323232323235].
2023-08-22 08:18:09,733 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.09090909090909091, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.007475000000000002 ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007676767909090908 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.33333333333333337 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.8787878787878789].
2023-08-22 08:18:09,734 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.09090909090909091, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.007475000000000002 ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007676767909090908 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.33333333333333337 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.8787878787878789].
2023-08-22 08:18:33,345 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:18:33,346 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:18:53,226 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:18:53,226 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:19:12,496 INFO: Applying selection operators for generation 24.
2023-08-22 08:19:12,498 INFO: Applying genetic operators for generation 24.
2023-08-22 08:19:12,503 INFO: Evaluating fitness for for generation 24.
2023-08-22 08:19:12,503 INFO: Will evaluate fitness for 58 individuals.
2023-08-22 08:19:13,046 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:19:13,046 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:19:13,075 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:19:13,076 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:19:13,081 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:19:13,081 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:19:13,082 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:19:13,082 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:19:33,033 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.19191919191919193 ,rho=0.4141414141414142 ,epsilon=0.00024242431818181817 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.9595959595959597 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.595959595959596].
2023-08-22 08:19:33,033 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.19191919191919193 ,rho=0.4141414141414142 ,epsilon=0.00024242431818181817 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.9595959595959597 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.595959595959596].
2023-08-22 08:19:33,323 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:19:33,324 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:19:33,564 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:19:33,565 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:19:34,039 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:19:34,039 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:19:53,576 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:19:53,577 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:19:53,678 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:19:53,678 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:19:54,429 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:19:54,429 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:19:58,564 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.26262626262626265 ,epsilon=0.00010101019090909089 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.12121212121212122 ,learning_rate_power=-0.6464646464646464 ,initial_accumulator_value=0.05050505050505051 ,l1_regularization_strength=0.595959595959596 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:19:58,565 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.26262626262626265 ,epsilon=0.00010101019090909089 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.12121212121212122 ,learning_rate_power=-0.6464646464646464 ,initial_accumulator_value=0.05050505050505051 ,l1_regularization_strength=0.595959595959596 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:20:13,499 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:20:13,499 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:20:14,619 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:20:14,619 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:20:16,135 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:20:16,135 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:20:23,807 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:20:23,807 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:20:33,576 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.23232323232323235 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.19191919191919193 ,rho=0.595959595959596 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.5050505050505051].
2023-08-22 08:20:33,576 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.23232323232323235 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.19191919191919193 ,rho=0.595959595959596 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.5050505050505051].
2023-08-22 08:20:34,894 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.21212121212121213, momentum=0.4545454545454546 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7777777777777778 ,rho=0.9090909090909092 ,epsilon=0.0006969697272727273 ,centered=True ,beta_1=0.42424242424242425 ,beta_2=0.36363636363636365 ,learning_rate_power=-0.3232323232323232 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.595959595959596].
2023-08-22 08:20:34,895 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.21212121212121213, momentum=0.4545454545454546 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7777777777777778 ,rho=0.9090909090909092 ,epsilon=0.0006969697272727273 ,centered=True ,beta_1=0.42424242424242425 ,beta_2=0.36363636363636365 ,learning_rate_power=-0.3232323232323232 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.595959595959596].
2023-08-22 08:20:36,648 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:20:36,648 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:20:43,753 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.007576000000000001 ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.18181818181818182 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.3535353535353536 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.6464646464646465].
2023-08-22 08:20:43,754 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.007576000000000001 ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.18181818181818182 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.3535353535353536 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.6464646464646465].
2023-08-22 08:20:57,067 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:20:57,068 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:20:59,174 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:20:59,175 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:21:01,730 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:21:01,730 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:21:08,843 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:21:08,843 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:21:17,352 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:21:17,352 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:21:19,412 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.797979797979798 ,beta_2=0.0 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.30303030303030304].
2023-08-22 08:21:19,413 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.797979797979798 ,beta_2=0.0 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.30303030303030304].
2023-08-22 08:21:22,040 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:21:22,040 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:21:29,655 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:21:29,656 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:21:38,511 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:21:38,512 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:21:38,940 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.787878787878788, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0014150000000000002 ,use_ema=True ,ema_momentum=0.7070707070707072 ,rho=0.9090909090909092 ,epsilon=0.0005858586272727272 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.5050505050505051 ,learning_rate_power=-0.010101010101010055 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.494949494949495].
2023-08-22 08:21:38,940 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.787878787878788, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0014150000000000002 ,use_ema=True ,ema_momentum=0.7070707070707072 ,rho=0.9090909090909092 ,epsilon=0.0005858586272727272 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.5050505050505051 ,learning_rate_power=-0.010101010101010055 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.494949494949495].
2023-08-22 08:21:42,282 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:21:42,282 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:21:49,809 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.494949494949495, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0032330000000000006 ,use_ema=True ,ema_momentum=0.5252525252525253 ,rho=0.9090909090909092 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.8383838383838385 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.02020202020202011 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.9696969696969697 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.04040404040404041].
2023-08-22 08:21:49,809 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.494949494949495, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0032330000000000006 ,use_ema=True ,ema_momentum=0.5252525252525253 ,rho=0.9090909090909092 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.8383838383838385 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.02020202020202011 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.9696969696969697 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.04040404040404041].
2023-08-22 08:21:59,043 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4040404040404041, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0047480000000000005 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.5858585858585859 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.14141414141414144 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.6565656565656566 ,l1_regularization_strength=0.13131313131313133 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.595959595959596].
2023-08-22 08:21:59,043 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4040404040404041, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0047480000000000005 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.5858585858585859 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.14141414141414144 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.6565656565656566 ,l1_regularization_strength=0.13131313131313133 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.595959595959596].
2023-08-22 08:22:03,001 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:22:03,001 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:22:04,943 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.08080808080808081 ,rho=0.9090909090909092 ,epsilon=9.09091818181818e-05 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.595959595959596].
2023-08-22 08:22:04,943 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.08080808080808081 ,rho=0.9090909090909092 ,epsilon=9.09091818181818e-05 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.595959595959596].
2023-08-22 08:22:15,630 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:22:15,630 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:22:23,422 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:22:23,423 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:22:25,191 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:22:25,191 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:22:30,101 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:22:30,102 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:22:36,431 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:22:36,431 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:22:43,652 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:22:43,653 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:22:45,581 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.24242424242424243, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.3535353535353536 ,epsilon=0.0002121212909090909 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.07070707070707072].
2023-08-22 08:22:45,581 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.24242424242424243, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.3535353535353536 ,epsilon=0.0002121212909090909 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.07070707070707072].
2023-08-22 08:22:50,550 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:22:50,551 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:22:56,759 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.07070707070707072, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0067680000000000014 ,use_ema=True ,ema_momentum=0.11111111111111112 ,rho=0.9090909090909092 ,epsilon=0.0008484848636363636 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.9797979797979799 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.4646464646464647].
2023-08-22 08:22:56,759 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.07070707070707072, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0067680000000000014 ,use_ema=True ,ema_momentum=0.11111111111111112 ,rho=0.9090909090909092 ,epsilon=0.0008484848636363636 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.9797979797979799 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.4646464646464647].
2023-08-22 08:23:03,800 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9494949494949496, momentum=0.3535353535353536 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.4545454545454546 ,epsilon=0.00025252532727272723 ,centered=True ,beta_1=0.9696969696969697 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.9696969696969697 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:23:03,800 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9494949494949496, momentum=0.3535353535353536 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.4545454545454546 ,epsilon=0.00025252532727272723 ,centered=True ,beta_1=0.9696969696969697 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.9696969696969697 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:23:10,872 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:23:10,872 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:23:12,103 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.21212121212121213, momentum=0.6161616161616162 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.4444444444444445 ,rho=0.8989898989898991 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:23:12,104 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.21212121212121213, momentum=0.6161616161616162 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.4444444444444445 ,rho=0.8989898989898991 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:23:22,694 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.07070707070707072 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.09090909090909091 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:23:22,694 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.07070707070707072 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.09090909090909091 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:23:28,972 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:23:28,973 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:23:31,043 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:23:31,044 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:23:37,044 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:23:37,045 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:23:49,590 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:23:49,590 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:23:51,859 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.43434343434343436, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.595959595959596].
2023-08-22 08:23:51,859 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.43434343434343436, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.595959595959596].
2023-08-22 08:23:57,323 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:23:57,323 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:24:09,819 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4747474747474748 ,rho=0.5050505050505051 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.8383838383838385 ,beta_2=0.393939393939394 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.6666666666666667].
2023-08-22 08:24:09,819 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4747474747474748 ,rho=0.5050505050505051 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.8383838383838385 ,beta_2=0.393939393939394 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.6666666666666667].
2023-08-22 08:24:12,018 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:24:12,018 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:24:31,970 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:24:31,970 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:24:36,054 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:24:36,054 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:24:56,078 INFO: Applying selection operators for generation 25.
2023-08-22 08:24:56,079 INFO: Applying genetic operators for generation 25.
2023-08-22 08:24:56,085 INFO: Evaluating fitness for for generation 25.
2023-08-22 08:24:56,085 INFO: Will evaluate fitness for 61 individuals.
2023-08-22 08:24:56,666 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:24:56,666 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:24:56,690 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.020202020202020204 ,rho=0.8484848484848485 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.7272727272727273 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6666666666666667 ,beta=0.020202020202020204].
2023-08-22 08:24:56,690 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.020202020202020204 ,rho=0.8484848484848485 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.7272727272727273 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6666666666666667 ,beta=0.020202020202020204].
2023-08-22 08:24:56,690 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:24:56,691 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:24:56,691 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:24:56,691 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:25:17,347 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:25:17,348 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:25:17,385 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:25:17,385 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:25:17,600 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:25:17,601 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:25:22,096 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:25:22,096 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:25:37,442 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:25:37,443 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:25:37,507 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:25:37,507 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:25:37,950 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7474747474747475, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.38383838383838387 ,beta_2=0.98989898989899 ,learning_rate_power=-0.3434343434343434 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.9595959595959597 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.5454545454545455].
2023-08-22 08:25:37,950 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7474747474747475, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.38383838383838387 ,beta_2=0.98989898989899 ,learning_rate_power=-0.3434343434343434 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.9595959595959597 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.5454545454545455].
2023-08-22 08:25:42,441 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:25:42,441 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:25:57,446 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:25:57,446 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:25:57,533 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:25:57,533 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:25:58,201 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:25:58,201 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:26:02,613 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:26:02,613 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:26:17,547 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:26:17,547 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:26:17,877 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.6767676767676768 ,nesterov=True ,amsgrad=False ,weight_decay=0.009697 ,use_ema=False ,ema_momentum=0.4747474747474748 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.18181818181818182 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.595959595959596].
2023-08-22 08:26:17,877 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.6767676767676768 ,nesterov=True ,amsgrad=False ,weight_decay=0.009697 ,use_ema=False ,ema_momentum=0.4747474747474748 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.18181818181818182 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.595959595959596].
2023-08-22 08:26:18,486 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.787878787878788 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.02020202020202011 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=1.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.4545454545454546].
2023-08-22 08:26:18,486 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.787878787878788 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.02020202020202011 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=1.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.4545454545454546].
2023-08-22 08:26:23,014 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:26:23,014 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:26:37,909 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:26:37,909 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:26:38,359 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.8383838383838385 ,epsilon=0.0008686868818181818 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.6060606060606061 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.4040404040404041 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.19191919191919193].
2023-08-22 08:26:38,360 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.8383838383838385 ,epsilon=0.0008686868818181818 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.6060606060606061 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.4040404040404041 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.19191919191919193].
2023-08-22 08:26:44,065 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:26:44,065 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:26:44,653 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:26:44,653 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:26:58,083 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:26:58,083 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 08:27:02,867 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.36363636363636365 ,epsilon=0.0006262626636363636 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.12121212121212122 ,learning_rate_power=-0.08080808080808077 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.595959595959596].
2023-08-22 08:27:02,867 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.36363636363636365 ,epsilon=0.0006262626636363636 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.12121212121212122 ,learning_rate_power=-0.08080808080808077 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.595959595959596].

2023-08-22 00:50:02,081 INFO: Starting experiment with the arguments logged below.
2023-08-22 00:50:02,081 INFO: Namespace(results_path='/mnt/lustre/users/mbornman1/evoopt-cnn/experiments/fashionmnist_pop50_gen100_alexnet_tou10_cxp70_mut30_gmp50_alexnet_epo10_bat1024_sed1', cpu_count=4, seed=1, dataset='fashion_mnist', pop_size=50, ngen=100, model='alexnet', epochs=10, batch_size=1024, tournsize=10, cxpb=0.5, mutpb=0.2, gene_mut_prob=0.5)
2023-08-22 00:50:02,081 INFO: Setting the random number generator seed for this experiment.
2023-08-22 00:50:02,081 INFO: Initializing the multiprocessing pool.
2023-08-22 00:50:02,091 INFO: Running the evolutionary algorithm with the given hyper-parameters. This may take a while. Statistics for every generation will be printed below.
2023-08-22 00:50:02,092 INFO: Setting up DEAP toolbox.
2023-08-22 00:50:02,092 INFO: Registering individual initialization method.
2023-08-22 00:50:02,092 INFO: Registering population initialization method.
2023-08-22 00:50:02,092 INFO: Registering the selection method.
2023-08-22 00:50:02,092 INFO: Registering the evaluation method.
2023-08-22 00:50:02,092 INFO: Registering the genetic operators.
2023-08-22 00:50:02,092 INFO: Setting up the hall of fame and stats we want to keep track of.
2023-08-22 00:50:02,092 INFO: Initializing the initial population.
2023-08-22 00:50:02,107 INFO: Running the evolutionary algorithm.
2023-08-22 00:50:02,107 INFO: Evaluating fitness for the initial generation of individuals.
2023-08-22 00:50:02,107 INFO: Will evaluate fitness for 50 individuals.
2023-08-22 00:50:03,778 DEBUG: Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
2023-08-22 00:50:03,778 DEBUG: Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
2023-08-22 00:50:03,778 DEBUG: Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
2023-08-22 00:50:03,778 DEBUG: Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
2023-08-22 00:50:04,074 DEBUG: Creating converter from 7 to 5
2023-08-22 00:50:04,074 DEBUG: Creating converter from 7 to 5
2023-08-22 00:50:04,074 DEBUG: Creating converter from 7 to 5
2023-08-22 00:50:04,074 DEBUG: Creating converter from 7 to 5
2023-08-22 00:50:04,074 DEBUG: Creating converter from 5 to 7
2023-08-22 00:50:04,074 DEBUG: Creating converter from 5 to 7
2023-08-22 00:50:04,074 DEBUG: Creating converter from 5 to 7
2023-08-22 00:50:04,074 DEBUG: Creating converter from 7 to 5
2023-08-22 00:50:04,074 DEBUG: Creating converter from 5 to 7
2023-08-22 00:50:04,074 DEBUG: Creating converter from 7 to 5
2023-08-22 00:50:04,074 DEBUG: Creating converter from 7 to 5
2023-08-22 00:50:04,074 DEBUG: Creating converter from 5 to 7
2023-08-22 00:50:04,074 DEBUG: Creating converter from 7 to 5
2023-08-22 00:50:04,074 DEBUG: Creating converter from 5 to 7
2023-08-22 00:50:04,074 DEBUG: Creating converter from 5 to 7
2023-08-22 00:50:04,074 DEBUG: Creating converter from 5 to 7
2023-08-22 00:50:13,015 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.006364000000000001 ,use_ema=False ,ema_momentum=0.8383838383838385 ,rho=0.48484848484848486 ,epsilon=0.00026262633636363634 ,centered=True ,beta_1=0.6262626262626263 ,beta_2=0.030303030303030304 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.5555555555555556 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.9797979797979799 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.0].
2023-08-22 00:50:13,015 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.006364000000000001 ,use_ema=False ,ema_momentum=0.8383838383838385 ,rho=0.48484848484848486 ,epsilon=0.00026262633636363634 ,centered=True ,beta_1=0.6262626262626263 ,beta_2=0.030303030303030304 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.5555555555555556 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.9797979797979799 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.0].
2023-08-22 00:50:13,062 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.5858585858585859, momentum=0.8989898989898991 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.494949494949495 ,rho=0.43434343434343436 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.33333333333333337 ,beta_2=0.13131313131313133 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.9393939393939394 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.26262626262626265 ,l2_shrinkage_regularization_strength=0.7777777777777778 ,beta=0.5555555555555556].
2023-08-22 00:50:13,063 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.5858585858585859, momentum=0.8989898989898991 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.494949494949495 ,rho=0.43434343434343436 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.33333333333333337 ,beta_2=0.13131313131313133 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.9393939393939394 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.26262626262626265 ,l2_shrinkage_regularization_strength=0.7777777777777778 ,beta=0.5555555555555556].
2023-08-22 00:50:13,095 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.37373737373737376, momentum=0.6464646464646465 ,nesterov=True ,amsgrad=False ,weight_decay=0.007879 ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.20202020202020204 ,epsilon=0.00025252532727272723 ,centered=False ,beta_1=0.7272727272727273 ,beta_2=0.17171717171717174 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.27272727272727276 ,l2_regularization_strength=0.3434343434343435 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.12121212121212122].
2023-08-22 00:50:13,095 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.37373737373737376, momentum=0.6464646464646465 ,nesterov=True ,amsgrad=False ,weight_decay=0.007879 ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.20202020202020204 ,epsilon=0.00025252532727272723 ,centered=False ,beta_1=0.7272727272727273 ,beta_2=0.17171717171717174 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.27272727272727276 ,l2_regularization_strength=0.3434343434343435 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.12121212121212122].
2023-08-22 00:50:13,118 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.11111111111111112, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0047480000000000005 ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.05050505050505051 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.8282828282828284 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.6464646464646465 ,l1_regularization_strength=0.29292929292929293 ,l2_regularization_strength=0.010101010101010102 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.25252525252525254].
2023-08-22 00:50:13,118 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.11111111111111112, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0047480000000000005 ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.05050505050505051 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.8282828282828284 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.6464646464646465 ,l1_regularization_strength=0.29292929292929293 ,l2_regularization_strength=0.010101010101010102 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.25252525252525254].
2023-08-22 00:50:38,948 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.3434343434343435, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8383838383838385 ,rho=0.696969696969697 ,epsilon=1.010110909090909e-05 ,centered=False ,beta_1=0.8787878787878789 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.4545454545454545 ,initial_accumulator_value=0.9292929292929294 ,l1_regularization_strength=0.030303030303030304 ,l2_regularization_strength=0.6767676767676768 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.9797979797979799].
2023-08-22 00:50:38,949 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.3434343434343435, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8383838383838385 ,rho=0.696969696969697 ,epsilon=1.010110909090909e-05 ,centered=False ,beta_1=0.8787878787878789 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.4545454545454545 ,initial_accumulator_value=0.9292929292929294 ,l1_regularization_strength=0.030303030303030304 ,l2_regularization_strength=0.6767676767676768 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.9797979797979799].
2023-08-22 00:50:39,556 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 00:50:39,556 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 00:50:39,688 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-22 00:50:39,688 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-22 00:50:43,364 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.7070707070707072, momentum=0.4444444444444445 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.17171717171717174 ,rho=0.21212121212121213 ,epsilon=0.0002121212909090909 ,centered=True ,beta_1=0.3434343434343435 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.6464646464646465 ,l2_regularization_strength=0.32323232323232326 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.43434343434343436].
2023-08-22 00:50:43,364 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.7070707070707072, momentum=0.4444444444444445 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.17171717171717174 ,rho=0.21212121212121213 ,epsilon=0.0002121212909090909 ,centered=True ,beta_1=0.3434343434343435 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.6464646464646465 ,l2_regularization_strength=0.32323232323232326 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.43434343434343436].
2023-08-22 00:50:58,763 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.5050505050505051, momentum=0.8686868686868687 ,nesterov=False ,amsgrad=True ,weight_decay=0.009495 ,use_ema=True ,ema_momentum=0.27272727272727276 ,rho=0.06060606060606061 ,epsilon=0.0003939394545454545 ,centered=True ,beta_1=0.09090909090909091 ,beta_2=0.393939393939394 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.9595959595959597 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.5353535353535354 ,l2_shrinkage_regularization_strength=0.7272727272727273 ,beta=0.32323232323232326].
2023-08-22 00:50:58,763 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.5050505050505051, momentum=0.8686868686868687 ,nesterov=False ,amsgrad=True ,weight_decay=0.009495 ,use_ema=True ,ema_momentum=0.27272727272727276 ,rho=0.06060606060606061 ,epsilon=0.0003939394545454545 ,centered=True ,beta_1=0.09090909090909091 ,beta_2=0.393939393939394 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.9595959595959597 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.5353535353535354 ,l2_shrinkage_regularization_strength=0.7272727272727273 ,beta=0.32323232323232326].
2023-08-22 00:51:00,398 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.6262626262626263, momentum=0.4545454545454546 ,nesterov=False ,amsgrad=True ,weight_decay=0.006869000000000001 ,use_ema=False ,ema_momentum=0.7676767676767677 ,rho=0.030303030303030304 ,epsilon=0.0002929293636363636 ,centered=True ,beta_1=0.7070707070707072 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.7676767676767676 ,initial_accumulator_value=0.11111111111111112 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.32323232323232326 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.8686868686868687].
2023-08-22 00:51:00,398 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.6262626262626263, momentum=0.4545454545454546 ,nesterov=False ,amsgrad=True ,weight_decay=0.006869000000000001 ,use_ema=False ,ema_momentum=0.7676767676767677 ,rho=0.030303030303030304 ,epsilon=0.0002929293636363636 ,centered=True ,beta_1=0.7070707070707072 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.7676767676767676 ,initial_accumulator_value=0.11111111111111112 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.32323232323232326 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.8686868686868687].
2023-08-22 00:51:00,703 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.6363636363636365, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.37373737373737376 ,rho=0.020202020202020204 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.23232323232323235 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.37373737373737376 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.9595959595959597 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.9292929292929294].
2023-08-22 00:51:00,703 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.6363636363636365, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.37373737373737376 ,rho=0.020202020202020204 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.23232323232323235 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.37373737373737376 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.9595959595959597 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.9292929292929294].
2023-08-22 00:51:10,006 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.14141414141414144, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.05050505050505051 ,rho=0.5252525252525253 ,epsilon=9.09091818181818e-05 ,centered=False ,beta_1=0.18181818181818182 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.787878787878788 ,l2_regularization_strength=0.7575757575757577 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.09090909090909091].
2023-08-22 00:51:10,007 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.14141414141414144, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.05050505050505051 ,rho=0.5252525252525253 ,epsilon=9.09091818181818e-05 ,centered=False ,beta_1=0.18181818181818182 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.787878787878788 ,l2_regularization_strength=0.7575757575757577 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.09090909090909091].
2023-08-22 00:51:19,029 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.25252525252525254 ,rho=0.4444444444444445 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.7373737373737375 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.6363636363636365 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.8585858585858587].
2023-08-22 00:51:19,030 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.25252525252525254 ,rho=0.4444444444444445 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.7373737373737375 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.6363636363636365 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.8585858585858587].
2023-08-22 00:51:21,897 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.6464646464646465, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.007576000000000001 ,use_ema=False ,ema_momentum=0.7575757575757577 ,rho=0.04040404040404041 ,epsilon=0.0006161616545454546 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.46464646464646464 ,initial_accumulator_value=0.8585858585858587 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.4646464646464647 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.8989898989898991].
2023-08-22 00:51:21,897 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.6464646464646465, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.007576000000000001 ,use_ema=False ,ema_momentum=0.7575757575757577 ,rho=0.04040404040404041 ,epsilon=0.0006161616545454546 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.46464646464646464 ,initial_accumulator_value=0.8585858585858587 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.4646464646464647 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.8989898989898991].
2023-08-22 00:51:26,685 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.10101010101010102, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=False ,weight_decay=0.0031320000000000007 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.23232323232323235 ,epsilon=0.00044444449999999996 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.6767676767676768 ,l2_regularization_strength=0.21212121212121213 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.3434343434343435].
2023-08-22 00:51:26,686 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.10101010101010102, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=False ,weight_decay=0.0031320000000000007 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.23232323232323235 ,epsilon=0.00044444449999999996 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.6767676767676768 ,l2_regularization_strength=0.21212121212121213 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.3434343434343435].
2023-08-22 00:51:30,871 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-22 00:51:30,872 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-22 00:51:39,126 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 00:51:39,127 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 00:51:48,165 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.9393939393939394, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.009697 ,use_ema=False ,ema_momentum=0.6060606060606061 ,rho=0.19191919191919193 ,epsilon=0.00012121220909090907 ,centered=False ,beta_1=0.09090909090909091 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.22222222222222224 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=1.0 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.18181818181818182].
2023-08-22 00:51:48,166 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.9393939393939394, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.009697 ,use_ema=False ,ema_momentum=0.6060606060606061 ,rho=0.19191919191919193 ,epsilon=0.00012121220909090907 ,centered=False ,beta_1=0.09090909090909091 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.22222222222222224 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=1.0 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.18181818181818182].
2023-08-22 00:51:49,808 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.8787878787878789, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.006364000000000001 ,use_ema=True ,ema_momentum=0.9191919191919192 ,rho=0.5252525252525253 ,epsilon=0.00043434349090909084 ,centered=False ,beta_1=0.8282828282828284 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.9393939393939394 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.9797979797979799 ,l2_regularization_strength=0.6565656565656566 ,l2_shrinkage_regularization_strength=0.8282828282828284 ,beta=0.4747474747474748].
2023-08-22 00:51:49,809 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.8787878787878789, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.006364000000000001 ,use_ema=True ,ema_momentum=0.9191919191919192 ,rho=0.5252525252525253 ,epsilon=0.00043434349090909084 ,centered=False ,beta_1=0.8282828282828284 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.9393939393939394 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.9797979797979799 ,l2_regularization_strength=0.6565656565656566 ,l2_shrinkage_regularization_strength=0.8282828282828284 ,beta=0.4747474747474748].
2023-08-22 00:51:52,083 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.8484848484848485, momentum=0.37373737373737376 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6767676767676768 ,rho=0.5656565656565657 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.2222222222222222 ,initial_accumulator_value=0.31313131313131315 ,l1_regularization_strength=0.33333333333333337 ,l2_regularization_strength=0.26262626262626265 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.36363636363636365].
2023-08-22 00:51:52,084 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.8484848484848485, momentum=0.37373737373737376 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6767676767676768 ,rho=0.5656565656565657 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.2222222222222222 ,initial_accumulator_value=0.31313131313131315 ,l1_regularization_strength=0.33333333333333337 ,l2_regularization_strength=0.26262626262626265 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.36363636363636365].
2023-08-22 00:52:00,634 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.26262626262626265, momentum=0.8383838383838385 ,nesterov=True ,amsgrad=True ,weight_decay=0.00010200000000000001 ,use_ema=False ,ema_momentum=0.5757575757575758 ,rho=0.5050505050505051 ,epsilon=0.00040404046363636356 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.08080808080808081 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.14141414141414144 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.27272727272727276].
2023-08-22 00:52:00,634 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.26262626262626265, momentum=0.8383838383838385 ,nesterov=True ,amsgrad=True ,weight_decay=0.00010200000000000001 ,use_ema=False ,ema_momentum=0.5757575757575758 ,rho=0.5050505050505051 ,epsilon=0.00040404046363636356 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.08080808080808081 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.14141414141414144 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.27272727272727276].
2023-08-22 00:52:09,249 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.393939393939394, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.8686868686868687 ,epsilon=0.0007070707363636364 ,centered=True ,beta_1=0.22222222222222224 ,beta_2=0.38383838383838387 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.686868686868687 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.06060606060606061 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.8585858585858587].
2023-08-22 00:52:09,249 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.393939393939394, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.8686868686868687 ,epsilon=0.0007070707363636364 ,centered=True ,beta_1=0.22222222222222224 ,beta_2=0.38383838383838387 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.686868686868687 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.06060606060606061 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.8585858585858587].
2023-08-22 00:52:12,570 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.6565656565656566, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.008889000000000001 ,use_ema=False ,ema_momentum=0.21212121212121213 ,rho=0.8989898989898991 ,epsilon=0.0008989899090909091 ,centered=False ,beta_1=0.7676767676767677 ,beta_2=0.10101010101010102 ,learning_rate_power=-0.8484848484848485 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.7373737373737375 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.22222222222222224].
2023-08-22 00:52:12,570 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.6565656565656566, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.008889000000000001 ,use_ema=False ,ema_momentum=0.21212121212121213 ,rho=0.8989898989898991 ,epsilon=0.0008989899090909091 ,centered=False ,beta_1=0.7676767676767677 ,beta_2=0.10101010101010102 ,learning_rate_power=-0.8484848484848485 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.7373737373737375 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.22222222222222224].
2023-08-22 00:52:15,092 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.696969696969697, momentum=0.25252525252525254 ,nesterov=False ,amsgrad=False ,weight_decay=0.008788 ,use_ema=True ,ema_momentum=0.696969696969697 ,rho=0.4545454545454546 ,epsilon=0.0006262626636363636 ,centered=False ,beta_1=0.15151515151515152 ,beta_2=0.98989898989899 ,learning_rate_power=-0.7373737373737373 ,initial_accumulator_value=0.7373737373737375 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.26262626262626265 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.13131313131313133].
2023-08-22 00:52:15,092 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.696969696969697, momentum=0.25252525252525254 ,nesterov=False ,amsgrad=False ,weight_decay=0.008788 ,use_ema=True ,ema_momentum=0.696969696969697 ,rho=0.4545454545454546 ,epsilon=0.0006262626636363636 ,centered=False ,beta_1=0.15151515151515152 ,beta_2=0.98989898989899 ,learning_rate_power=-0.7373737373737373 ,initial_accumulator_value=0.7373737373737375 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.26262626262626265 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.13131313131313133].
2023-08-22 00:52:21,938 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.8484848484848485, momentum=0.4545454545454546 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4646464646464647 ,rho=0.10101010101010102 ,epsilon=0.00035353541818181815 ,centered=True ,beta_1=0.9696969696969697 ,beta_2=0.5757575757575758 ,learning_rate_power=-0.8888888888888888 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.7373737373737375 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.29292929292929293].
2023-08-22 00:52:21,938 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.8484848484848485, momentum=0.4545454545454546 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4646464646464647 ,rho=0.10101010101010102 ,epsilon=0.00035353541818181815 ,centered=True ,beta_1=0.9696969696969697 ,beta_2=0.5757575757575758 ,learning_rate_power=-0.8888888888888888 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.7373737373737375 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.29292929292929293].
2023-08-22 00:52:30,275 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.32323232323232326, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.007071000000000001 ,use_ema=False ,ema_momentum=0.686868686868687 ,rho=0.5858585858585859 ,epsilon=1.010110909090909e-05 ,centered=False ,beta_1=0.43434343434343436 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.030303030303030304 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.7373737373737375].
2023-08-22 00:52:30,275 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.32323232323232326, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.007071000000000001 ,use_ema=False ,ema_momentum=0.686868686868687 ,rho=0.5858585858585859 ,epsilon=1.010110909090909e-05 ,centered=False ,beta_1=0.43434343434343436 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.030303030303030304 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.7373737373737375].
2023-08-22 00:52:34,235 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.32323232323232326, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.008788 ,use_ema=False ,ema_momentum=0.494949494949495 ,rho=0.6565656565656566 ,epsilon=0.0002121212909090909 ,centered=True ,beta_1=0.6767676767676768 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.8080808080808082 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.3434343434343435 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.10101010101010102].
2023-08-22 00:52:34,235 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.32323232323232326, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.008788 ,use_ema=False ,ema_momentum=0.494949494949495 ,rho=0.6565656565656566 ,epsilon=0.0002121212909090909 ,centered=True ,beta_1=0.6767676767676768 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.8080808080808082 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.3434343434343435 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.10101010101010102].
2023-08-22 00:52:36,552 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.15151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0009100000000000001 ,use_ema=False ,ema_momentum=0.5555555555555556 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.9797979797979799 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.5757575757575758].
2023-08-22 00:52:36,552 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.15151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0009100000000000001 ,use_ema=False ,ema_momentum=0.5555555555555556 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.9797979797979799 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.5757575757575758].
2023-08-22 00:52:43,668 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.393939393939394, momentum=0.05050505050505051 ,nesterov=True ,amsgrad=False ,weight_decay=0.007475000000000002 ,use_ema=True ,ema_momentum=0.42424242424242425 ,rho=0.12121212121212122 ,epsilon=0.0006969697272727273 ,centered=True ,beta_1=0.31313131313131315 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.9797979797979798 ,initial_accumulator_value=0.31313131313131315 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.09090909090909091 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.7070707070707072].
2023-08-22 00:52:43,668 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.393939393939394, momentum=0.05050505050505051 ,nesterov=True ,amsgrad=False ,weight_decay=0.007475000000000002 ,use_ema=True ,ema_momentum=0.42424242424242425 ,rho=0.12121212121212122 ,epsilon=0.0006969697272727273 ,centered=True ,beta_1=0.31313131313131315 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.9797979797979798 ,initial_accumulator_value=0.31313131313131315 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.09090909090909091 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.7070707070707072].
2023-08-22 00:52:51,794 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.7272727272727273 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.4040404040404041].
2023-08-22 00:52:51,794 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.7272727272727273 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.4040404040404041].
2023-08-22 00:52:55,138 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=1.0, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.004849000000000001 ,use_ema=False ,ema_momentum=0.21212121212121213 ,rho=0.4141414141414142 ,epsilon=0.0005656566090909091 ,centered=True ,beta_1=0.797979797979798 ,beta_2=0.6262626262626263 ,learning_rate_power=-0.7272727272727273 ,initial_accumulator_value=0.15151515151515152 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.7676767676767677 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.5252525252525253].
2023-08-22 00:52:55,138 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=1.0, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.004849000000000001 ,use_ema=False ,ema_momentum=0.21212121212121213 ,rho=0.4141414141414142 ,epsilon=0.0005656566090909091 ,centered=True ,beta_1=0.797979797979798 ,beta_2=0.6262626262626263 ,learning_rate_power=-0.7272727272727273 ,initial_accumulator_value=0.15151515151515152 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.7676767676767677 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.5252525252525253].
2023-08-22 00:52:56,252 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.393939393939394, momentum=0.696969696969697 ,nesterov=False ,amsgrad=False ,weight_decay=0.0014150000000000002 ,use_ema=False ,ema_momentum=0.26262626262626265 ,rho=0.7171717171717172 ,epsilon=1e-10 ,centered=False ,beta_1=0.8181818181818182 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.9494949494949496 ,l1_regularization_strength=0.9393939393939394 ,l2_regularization_strength=0.6565656565656566 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.595959595959596].
2023-08-22 00:52:56,252 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.393939393939394, momentum=0.696969696969697 ,nesterov=False ,amsgrad=False ,weight_decay=0.0014150000000000002 ,use_ema=False ,ema_momentum=0.26262626262626265 ,rho=0.7171717171717172 ,epsilon=1e-10 ,centered=False ,beta_1=0.8181818181818182 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.9494949494949496 ,l1_regularization_strength=0.9393939393939394 ,l2_regularization_strength=0.6565656565656566 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.595959595959596].
2023-08-22 00:53:11,292 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.9595959595959597, momentum=0.9191919191919192 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6767676767676768 ,rho=0.0 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.5454545454545455 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.7474747474747475 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.8989898989898991].
2023-08-22 00:53:11,292 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.9595959595959597, momentum=0.9191919191919192 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6767676767676768 ,rho=0.0 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.5454545454545455 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.7474747474747475 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.8989898989898991].
2023-08-22 00:53:11,750 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.21212121212121213, momentum=0.38383838383838387 ,nesterov=False ,amsgrad=True ,weight_decay=0.005051000000000001 ,use_ema=True ,ema_momentum=0.6161616161616162 ,rho=0.33333333333333337 ,epsilon=0.0007878788090909091 ,centered=False ,beta_1=0.9191919191919192 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.31313131313131315 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.030303030303030304].
2023-08-22 00:53:11,751 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.21212121212121213, momentum=0.38383838383838387 ,nesterov=False ,amsgrad=True ,weight_decay=0.005051000000000001 ,use_ema=True ,ema_momentum=0.6161616161616162 ,rho=0.33333333333333337 ,epsilon=0.0007878788090909091 ,centered=False ,beta_1=0.9191919191919192 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.31313131313131315 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.030303030303030304].
2023-08-22 00:53:16,358 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.36363636363636365 ,nesterov=False ,amsgrad=True ,weight_decay=0.005758000000000001 ,use_ema=False ,ema_momentum=0.6363636363636365 ,rho=0.7575757575757577 ,epsilon=0.00014141422727272727 ,centered=True ,beta_1=0.10101010101010102 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.6161616161616162 ,l2_regularization_strength=0.4040404040404041 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.7474747474747475].
2023-08-22 00:53:16,359 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.36363636363636365 ,nesterov=False ,amsgrad=True ,weight_decay=0.005758000000000001 ,use_ema=False ,ema_momentum=0.6363636363636365 ,rho=0.7575757575757577 ,epsilon=0.00014141422727272727 ,centered=True ,beta_1=0.10101010101010102 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.6161616161616162 ,l2_regularization_strength=0.4040404040404041 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.7474747474747475].
2023-08-22 00:53:18,039 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.9191919191919192, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.26262626262626265 ,rho=0.5454545454545455 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.8181818181818182 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.3434343434343434 ,initial_accumulator_value=0.6060606060606061 ,l1_regularization_strength=0.6464646464646465 ,l2_regularization_strength=0.4747474747474748 ,l2_shrinkage_regularization_strength=0.12121212121212122 ,beta=0.4040404040404041].
2023-08-22 00:53:18,040 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.9191919191919192, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.26262626262626265 ,rho=0.5454545454545455 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.8181818181818182 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.3434343434343434 ,initial_accumulator_value=0.6060606060606061 ,l1_regularization_strength=0.6464646464646465 ,l2_regularization_strength=0.4747474747474748 ,l2_shrinkage_regularization_strength=0.12121212121212122 ,beta=0.4040404040404041].
2023-08-22 00:53:32,648 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.4040404040404041, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.7474747474747475 ,rho=0.9393939393939394 ,epsilon=0.00018181826363636362 ,centered=False ,beta_1=0.5858585858585859 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.17171717171717174 ,l1_regularization_strength=1.0 ,l2_regularization_strength=0.17171717171717174 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.5656565656565657].
2023-08-22 00:53:32,648 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.4040404040404041, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.7474747474747475 ,rho=0.9393939393939394 ,epsilon=0.00018181826363636362 ,centered=False ,beta_1=0.5858585858585859 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.17171717171717174 ,l1_regularization_strength=1.0 ,l2_regularization_strength=0.17171717171717174 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.5656565656565657].
2023-08-22 00:53:37,824 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.6363636363636365, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3434343434343435 ,rho=0.22222222222222224 ,epsilon=0.0009898989909090908 ,centered=True ,beta_1=1.0 ,beta_2=0.7777777777777778 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.4444444444444445 ,l1_regularization_strength=0.33333333333333337 ,l2_regularization_strength=0.9090909090909092 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.8787878787878789].
2023-08-22 00:53:37,824 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.6363636363636365, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3434343434343435 ,rho=0.22222222222222224 ,epsilon=0.0009898989909090908 ,centered=True ,beta_1=1.0 ,beta_2=0.7777777777777778 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.4444444444444445 ,l1_regularization_strength=0.33333333333333337 ,l2_regularization_strength=0.9090909090909092 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.8787878787878789].
2023-08-22 00:53:38,166 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.25252525252525254, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.00010200000000000001 ,use_ema=True ,ema_momentum=0.8585858585858587 ,rho=0.696969696969697 ,epsilon=7.070716363636363e-05 ,centered=False ,beta_1=0.32323232323232326 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.595959595959596 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.38383838383838387 ,l2_shrinkage_regularization_strength=0.010101010101010102 ,beta=0.04040404040404041].
2023-08-22 00:53:38,166 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.25252525252525254, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.00010200000000000001 ,use_ema=True ,ema_momentum=0.8585858585858587 ,rho=0.696969696969697 ,epsilon=7.070716363636363e-05 ,centered=False ,beta_1=0.32323232323232326 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.595959595959596 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.38383838383838387 ,l2_shrinkage_regularization_strength=0.010101010101010102 ,beta=0.04040404040404041].
2023-08-22 00:53:39,969 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.005051000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.4141414141414142 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.04040404040404041 ,l2_regularization_strength=0.494949494949495 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.9393939393939394].
2023-08-22 00:53:39,970 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.005051000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.4141414141414142 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.04040404040404041 ,l2_regularization_strength=0.494949494949495 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.9393939393939394].
2023-08-22 00:53:58,603 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.19191919191919193, momentum=0.595959595959596 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6565656565656566 ,rho=0.12121212121212122 ,epsilon=0.0009595959636363636 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.4545454545454546 ,learning_rate_power=-0.9191919191919192 ,initial_accumulator_value=0.8484848484848485 ,l1_regularization_strength=0.5656565656565657 ,l2_regularization_strength=0.020202020202020204 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.6464646464646465].
2023-08-22 00:53:58,604 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.19191919191919193, momentum=0.595959595959596 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6565656565656566 ,rho=0.12121212121212122 ,epsilon=0.0009595959636363636 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.4545454545454546 ,learning_rate_power=-0.9191919191919192 ,initial_accumulator_value=0.8484848484848485 ,l1_regularization_strength=0.5656565656565657 ,l2_regularization_strength=0.020202020202020204 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.6464646464646465].
2023-08-22 00:53:58,949 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.393939393939394, momentum=0.9696969696969697 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.08080808080808081 ,rho=0.13131313131313133 ,epsilon=0.0002929293636363636 ,centered=False ,beta_1=0.4141414141414142 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.8787878787878788 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.07070707070707072 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.020202020202020204].
2023-08-22 00:53:58,949 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.393939393939394, momentum=0.9696969696969697 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.08080808080808081 ,rho=0.13131313131313133 ,epsilon=0.0002929293636363636 ,centered=False ,beta_1=0.4141414141414142 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.8787878787878788 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.07070707070707072 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.020202020202020204].
2023-08-22 00:53:59,338 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.4040404040404041, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0014150000000000002 ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.31313131313131315 ,epsilon=0.0006464646818181818 ,centered=True ,beta_1=0.42424242424242425 ,beta_2=0.43434343434343436 ,learning_rate_power=-0.3434343434343434 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.7474747474747475 ,l2_regularization_strength=0.6161616161616162 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.16161616161616163].
2023-08-22 00:53:59,338 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.4040404040404041, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0014150000000000002 ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.31313131313131315 ,epsilon=0.0006464646818181818 ,centered=True ,beta_1=0.42424242424242425 ,beta_2=0.43434343434343436 ,learning_rate_power=-0.3434343434343434 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.7474747474747475 ,l2_regularization_strength=0.6161616161616162 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.16161616161616163].
2023-08-22 00:54:01,469 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.6767676767676768, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.030303030303030304 ,rho=0.6363636363636365 ,epsilon=0.0008181818363636363 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.42424242424242425].
2023-08-22 00:54:01,469 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.6767676767676768, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.030303030303030304 ,rho=0.6363636363636365 ,epsilon=0.0008181818363636363 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.42424242424242425].
2023-08-22 00:54:20,033 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8787878787878789, momentum=0.04040404040404041 ,nesterov=False ,amsgrad=False ,weight_decay=0.008485000000000001 ,use_ema=True ,ema_momentum=0.787878787878788 ,rho=0.888888888888889 ,epsilon=0.0002222223 ,centered=True ,beta_1=0.2828282828282829 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.48484848484848486 ,l2_shrinkage_regularization_strength=0.9696969696969697 ,beta=0.21212121212121213].
2023-08-22 00:54:20,033 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8787878787878789, momentum=0.04040404040404041 ,nesterov=False ,amsgrad=False ,weight_decay=0.008485000000000001 ,use_ema=True ,ema_momentum=0.787878787878788 ,rho=0.888888888888889 ,epsilon=0.0002222223 ,centered=True ,beta_1=0.2828282828282829 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.48484848484848486 ,l2_shrinkage_regularization_strength=0.9696969696969697 ,beta=0.21212121212121213].
2023-08-22 00:54:20,651 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.888888888888889, momentum=0.11111111111111112 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.42424242424242425 ,rho=0.3434343434343435 ,epsilon=8.080817272727271e-05 ,centered=True ,beta_1=0.8989898989898991 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.4747474747474748 ,l1_regularization_strength=0.595959595959596 ,l2_regularization_strength=0.6565656565656566 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.9494949494949496].
2023-08-22 00:54:20,651 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.888888888888889, momentum=0.11111111111111112 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.42424242424242425 ,rho=0.3434343434343435 ,epsilon=8.080817272727271e-05 ,centered=True ,beta_1=0.8989898989898991 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.4747474747474748 ,l1_regularization_strength=0.595959595959596 ,l2_regularization_strength=0.6565656565656566 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.9494949494949496].
2023-08-22 00:54:21,793 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.33333333333333337, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.5454545454545455 ,rho=0.7777777777777778 ,epsilon=0.0008989899090909091 ,centered=True ,beta_1=0.4545454545454546 ,beta_2=0.7070707070707072 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.686868686868687 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.5454545454545455].
2023-08-22 00:54:21,793 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.33333333333333337, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.5454545454545455 ,rho=0.7777777777777778 ,epsilon=0.0008989899090909091 ,centered=True ,beta_1=0.4545454545454546 ,beta_2=0.7070707070707072 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.686868686868687 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.5454545454545455].
2023-08-22 00:54:23,220 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.6767676767676768, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0025260000000000005 ,use_ema=False ,ema_momentum=0.6666666666666667 ,rho=0.4141414141414142 ,epsilon=0.00012121220909090907 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.26262626262626254 ,initial_accumulator_value=0.08080808080808081 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.38383838383838387 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.686868686868687].
2023-08-22 00:54:23,220 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.6767676767676768, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0025260000000000005 ,use_ema=False ,ema_momentum=0.6666666666666667 ,rho=0.4141414141414142 ,epsilon=0.00012121220909090907 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.26262626262626254 ,initial_accumulator_value=0.08080808080808081 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.38383838383838387 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.686868686868687].
2023-08-22 00:54:41,541 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.5353535353535354, momentum=0.38383838383838387 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.19191919191919193 ,rho=0.4040404040404041 ,epsilon=0.0009393939454545454 ,centered=False ,beta_1=0.4141414141414142 ,beta_2=0.7373737373737375 ,learning_rate_power=-0.9191919191919192 ,initial_accumulator_value=0.5757575757575758 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.6161616161616162 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.4646464646464647].
2023-08-22 00:54:41,542 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.5353535353535354, momentum=0.38383838383838387 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.19191919191919193 ,rho=0.4040404040404041 ,epsilon=0.0009393939454545454 ,centered=False ,beta_1=0.4141414141414142 ,beta_2=0.7373737373737375 ,learning_rate_power=-0.9191919191919192 ,initial_accumulator_value=0.5757575757575758 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.6161616161616162 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.4646464646464647].
2023-08-22 00:55:02,639 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.10101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0067680000000000014 ,use_ema=False ,ema_momentum=0.31313131313131315 ,rho=0.8989898989898991 ,epsilon=0.0007373737636363636 ,centered=False ,beta_1=0.4646464646464647 ,beta_2=0.8282828282828284 ,learning_rate_power=-0.5252525252525252 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.595959595959596 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.43434343434343436].
2023-08-22 00:55:02,639 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.10101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0067680000000000014 ,use_ema=False ,ema_momentum=0.31313131313131315 ,rho=0.8989898989898991 ,epsilon=0.0007373737636363636 ,centered=False ,beta_1=0.4646464646464647 ,beta_2=0.8282828282828284 ,learning_rate_power=-0.5252525252525252 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.595959595959596 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.43434343434343436].
2023-08-22 00:55:28,300 INFO: Applying selection operators for generation 1.
2023-08-22 00:55:28,300 INFO: Applying genetic operators for generation 1.
2023-08-22 00:55:28,303 INFO: Evaluating fitness for for generation 1.
2023-08-22 00:55:28,303 INFO: Will evaluate fitness for 26 individuals.
2023-08-22 00:55:28,843 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.9696969696969697, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.8282828282828284 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.7373737373737373 ,initial_accumulator_value=0.22222222222222224 ,l1_regularization_strength=0.29292929292929293 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.31313131313131315].
2023-08-22 00:55:28,843 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.9696969696969697, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.8282828282828284 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.7373737373737373 ,initial_accumulator_value=0.22222222222222224 ,l1_regularization_strength=0.29292929292929293 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.31313131313131315].
2023-08-22 00:55:28,854 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.21212121212121213, momentum=0.38383838383838387 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.48484848484848486 ,rho=0.23232323232323235 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.6767676767676768 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.6767676767676768 ,l2_regularization_strength=0.21212121212121213 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.8989898989898991].
2023-08-22 00:55:28,854 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.21212121212121213, momentum=0.38383838383838387 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.48484848484848486 ,rho=0.23232323232323235 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.6767676767676768 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.6767676767676768 ,l2_regularization_strength=0.21212121212121213 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.8989898989898991].
2023-08-22 00:55:28,860 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.05050505050505051 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.0 ,l1_regularization_strength=1.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7272727272727273 ,beta=0.7171717171717172].
2023-08-22 00:55:28,860 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.05050505050505051 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.0 ,l1_regularization_strength=1.0 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7272727272727273 ,beta=0.7171717171717172].
2023-08-22 00:55:28,869 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.19191919191919193, momentum=0.595959595959596 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6767676767676768 ,rho=0.0 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.5454545454545455 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.7474747474747475 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.8989898989898991].
2023-08-22 00:55:28,869 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.19191919191919193, momentum=0.595959595959596 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6767676767676768 ,rho=0.0 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.5454545454545455 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.7474747474747475 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.8989898989898991].
2023-08-22 00:55:50,603 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.6666666666666667, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0017180000000000001 ,use_ema=True ,ema_momentum=0.5050505050505051 ,rho=0.7272727272727273 ,epsilon=0.0006868687181818181 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.19191919191919193].
2023-08-22 00:55:50,604 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.6666666666666667, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0017180000000000001 ,use_ema=True ,ema_momentum=0.5050505050505051 ,rho=0.7272727272727273 ,epsilon=0.0006868687181818181 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.19191919191919193].
2023-08-22 00:55:51,113 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.36363636363636365 ,nesterov=False ,amsgrad=True ,weight_decay=0.005758000000000001 ,use_ema=False ,ema_momentum=0.6363636363636365 ,rho=0.7575757575757577 ,epsilon=0.00014141422727272727 ,centered=True ,beta_1=0.10101010101010102 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.6161616161616162 ,l2_regularization_strength=0.4040404040404041 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.7474747474747475].
2023-08-22 00:55:51,114 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.36363636363636365 ,nesterov=False ,amsgrad=True ,weight_decay=0.005758000000000001 ,use_ema=False ,ema_momentum=0.6363636363636365 ,rho=0.7575757575757577 ,epsilon=0.00014141422727272727 ,centered=True ,beta_1=0.10101010101010102 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.6161616161616162 ,l2_regularization_strength=0.4040404040404041 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.7474747474747475].
2023-08-22 00:55:55,377 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.10101010101010102, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=0.005051000000000001 ,use_ema=True ,ema_momentum=0.6161616161616162 ,rho=0.33333333333333337 ,epsilon=0.0007878788090909091 ,centered=False ,beta_1=0.9191919191919192 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.31313131313131315 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.3434343434343435].
2023-08-22 00:55:55,378 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.10101010101010102, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=0.005051000000000001 ,use_ema=True ,ema_momentum=0.6161616161616162 ,rho=0.33333333333333337 ,epsilon=0.0007878788090909091 ,centered=False ,beta_1=0.9191919191919192 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.31313131313131315 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.3434343434343435].
2023-08-22 00:55:56,019 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.9595959595959597, momentum=0.9191919191919192 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6565656565656566 ,rho=0.12121212121212122 ,epsilon=0.0009595959636363636 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.4545454545454546 ,learning_rate_power=-0.9191919191919192 ,initial_accumulator_value=0.8484848484848485 ,l1_regularization_strength=0.5656565656565657 ,l2_regularization_strength=0.020202020202020204 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.6464646464646465].
2023-08-22 00:55:56,019 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.9595959595959597, momentum=0.9191919191919192 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6565656565656566 ,rho=0.12121212121212122 ,epsilon=0.0009595959636363636 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.4545454545454546 ,learning_rate_power=-0.9191919191919192 ,initial_accumulator_value=0.8484848484848485 ,l1_regularization_strength=0.5656565656565657 ,l2_regularization_strength=0.020202020202020204 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.6464646464646465].
2023-08-22 00:56:11,388 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 00:56:11,388 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 00:56:13,565 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4646464646464647, momentum=0.18181818181818182 ,nesterov=False ,amsgrad=False ,weight_decay=0.0016170000000000002 ,use_ema=True ,ema_momentum=0.5555555555555556 ,rho=0.6464646464646465 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.7474747474747474 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.8585858585858587 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.4040404040404041].
2023-08-22 00:56:13,565 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4646464646464647, momentum=0.18181818181818182 ,nesterov=False ,amsgrad=False ,weight_decay=0.0016170000000000002 ,use_ema=True ,ema_momentum=0.5555555555555556 ,rho=0.6464646464646465 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.7474747474747474 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.8585858585858587 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.4040404040404041].
2023-08-22 00:56:18,357 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 00:56:18,358 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 00:56:18,500 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7171717171717172, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.8686868686868687 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.22222222222222224 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.6565656565656566 ,l1_regularization_strength=0.4646464646464647 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.4646464646464647 ,beta=0.05050505050505051].
2023-08-22 00:56:18,500 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7171717171717172, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.8686868686868687 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.22222222222222224 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.6565656565656566 ,l1_regularization_strength=0.4646464646464647 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.4646464646464647 ,beta=0.05050505050505051].
2023-08-22 00:56:32,771 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.15151515151515152, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.5757575757575758].
2023-08-22 00:56:32,771 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.15151515151515152, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.5757575757575758].
2023-08-22 00:56:36,438 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 00:56:36,438 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 00:56:39,856 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.5151515151515152 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.4545454545454546 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.6767676767676768].
2023-08-22 00:56:39,856 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.5151515151515152 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.4545454545454546 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.6767676767676768].
2023-08-22 00:56:40,328 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.19191919191919193, momentum=0.26262626262626265 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6565656565656566 ,rho=0.12121212121212122 ,epsilon=0.0009595959636363636 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.4545454545454546 ,learning_rate_power=-0.9191919191919192 ,initial_accumulator_value=0.8484848484848485 ,l1_regularization_strength=0.04040404040404041 ,l2_regularization_strength=0.020202020202020204 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.6464646464646465].
2023-08-22 00:56:40,328 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.19191919191919193, momentum=0.26262626262626265 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6565656565656566 ,rho=0.12121212121212122 ,epsilon=0.0009595959636363636 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.4545454545454546 ,learning_rate_power=-0.9191919191919192 ,initial_accumulator_value=0.8484848484848485 ,l1_regularization_strength=0.04040404040404041 ,l2_regularization_strength=0.020202020202020204 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.6464646464646465].
2023-08-22 00:56:53,402 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.004243000000000001 ,use_ema=False ,ema_momentum=0.25252525252525254 ,rho=0.4747474747474748 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.7373737373737375 ,beta_2=0.6464646464646465 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.6363636363636365 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.8585858585858587].
2023-08-22 00:56:53,402 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.004243000000000001 ,use_ema=False ,ema_momentum=0.25252525252525254 ,rho=0.4747474747474748 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.7373737373737375 ,beta_2=0.6464646464646465 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.6363636363636365 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.8585858585858587].
2023-08-22 00:56:58,555 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.4040404040404041 ,epsilon=0.0002020202818181818 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.6464646464646465].
2023-08-22 00:56:58,556 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.4040404040404041 ,epsilon=0.0002020202818181818 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.6464646464646465].
2023-08-22 00:57:00,494 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6161616161616162 ,rho=0.33333333333333337 ,epsilon=0.0007878788090909091 ,centered=False ,beta_1=0.9191919191919192 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 00:57:00,494 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6161616161616162 ,rho=0.33333333333333337 ,epsilon=0.0007878788090909091 ,centered=False ,beta_1=0.9191919191919192 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 00:57:02,549 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0009100000000000001 ,use_ema=False ,ema_momentum=0.5555555555555556 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.9797979797979799 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-22 00:57:02,549 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0009100000000000001 ,use_ema=False ,ema_momentum=0.5555555555555556 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.9797979797979799 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-22 00:57:12,905 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.21212121212121213, momentum=0.4646464646464647 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5050505050505051 ,rho=0.33333333333333337 ,epsilon=0.0007878788090909091 ,centered=False ,beta_1=0.21212121212121213 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.31313131313131315 ,l2_shrinkage_regularization_strength=0.12121212121212122 ,beta=0.6161616161616162].
2023-08-22 00:57:12,905 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.21212121212121213, momentum=0.4646464646464647 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5050505050505051 ,rho=0.33333333333333337 ,epsilon=0.0007878788090909091 ,centered=False ,beta_1=0.21212121212121213 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.31313131313131315 ,l2_shrinkage_regularization_strength=0.12121212121212122 ,beta=0.6161616161616162].
2023-08-22 00:57:20,101 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.10101010101010102, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=False ,weight_decay=0.0031320000000000007 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.21212121212121213 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.3434343434343435].
2023-08-22 00:57:20,101 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.10101010101010102, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=False ,weight_decay=0.0031320000000000007 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.21212121212121213 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.3434343434343435].
2023-08-22 00:57:22,585 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.21212121212121213, momentum=0.38383838383838387 ,nesterov=False ,amsgrad=True ,weight_decay=0.005051000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.31313131313131315 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.030303030303030304].
2023-08-22 00:57:22,585 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.21212121212121213, momentum=0.38383838383838387 ,nesterov=False ,amsgrad=True ,weight_decay=0.005051000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.31313131313131315 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.030303030303030304].
2023-08-22 00:57:24,973 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.15151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.5757575757575758].
2023-08-22 00:57:24,974 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.15151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.5757575757575758].
2023-08-22 00:57:34,651 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.7272727272727273 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.4040404040404041].
2023-08-22 00:57:34,651 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.7272727272727273 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.4040404040404041].
2023-08-22 00:57:54,662 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.7070707070707072, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8383838383838385 ,rho=0.7676767676767677 ,epsilon=0.0008787878909090909 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.13131313131313133 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-22 00:57:54,663 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.7070707070707072, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8383838383838385 ,rho=0.7676767676767677 ,epsilon=0.0008787878909090909 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.13131313131313133 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-22 00:58:14,115 INFO: Applying selection operators for generation 2.
2023-08-22 00:58:14,116 INFO: Applying genetic operators for generation 2.
2023-08-22 00:58:14,118 INFO: Evaluating fitness for for generation 2.
2023-08-22 00:58:14,118 INFO: Will evaluate fitness for 26 individuals.
2023-08-22 00:58:14,671 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-22 00:58:14,672 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-22 00:58:14,672 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.9494949494949496, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=False ,weight_decay=0.007879 ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.19191919191919193 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.5656565656565657 ,l1_regularization_strength=0.686868686868687 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.686868686868687].
2023-08-22 00:58:14,672 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.9494949494949496, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=False ,weight_decay=0.007879 ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.19191919191919193 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.5656565656565657 ,l1_regularization_strength=0.686868686868687 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.686868686868687].
2023-08-22 00:58:14,674 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 00:58:14,675 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 00:58:14,676 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.15151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0009100000000000001 ,use_ema=False ,ema_momentum=0.5555555555555556 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.5757575757575758].
2023-08-22 00:58:14,676 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.15151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0009100000000000001 ,use_ema=False ,ema_momentum=0.5555555555555556 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.5757575757575758].
2023-08-22 00:58:34,585 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.15151515151515152, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.9797979797979799 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.5757575757575758].
2023-08-22 00:58:34,586 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.15151515151515152, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.9797979797979799 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.5757575757575758].
2023-08-22 00:58:35,991 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-22 00:58:35,991 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-22 00:58:36,499 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.7676767676767677 ,rho=1.0 ,epsilon=7.070716363636363e-05 ,centered=True ,beta_1=0.7070707070707072 ,beta_2=0.4040404040404041 ,learning_rate_power=-0.04040404040404033 ,initial_accumulator_value=0.06060606060606061 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=0.5151515151515152].
2023-08-22 00:58:36,500 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.7676767676767677 ,rho=1.0 ,epsilon=7.070716363636363e-05 ,centered=True ,beta_1=0.7070707070707072 ,beta_2=0.4040404040404041 ,learning_rate_power=-0.04040404040404033 ,initial_accumulator_value=0.06060606060606061 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=0.5151515151515152].
2023-08-22 00:58:36,801 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9292929292929294, momentum=0.4545454545454546 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.4646464646464647 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.6262626262626263 ,beta_2=0.7373737373737375 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.26262626262626265 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.33333333333333337].
2023-08-22 00:58:36,801 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9292929292929294, momentum=0.4545454545454546 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.4646464646464647 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.6262626262626263 ,beta_2=0.7373737373737375 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.26262626262626265 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.33333333333333337].
2023-08-22 00:58:53,204 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-22 00:58:53,204 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-22 00:58:55,895 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-22 00:58:55,895 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-22 00:58:56,101 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 00:58:56,101 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 00:58:58,325 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.15151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.5757575757575758].
2023-08-22 00:58:58,325 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.15151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.5757575757575758].
2023-08-22 00:59:13,955 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.15151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.5757575757575758].
2023-08-22 00:59:13,955 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.15151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.5757575757575758].
2023-08-22 00:59:16,446 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 00:59:16,447 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 00:59:17,568 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.15151515151515152, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.0009100000000000001 ,use_ema=False ,ema_momentum=0.5555555555555556 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.9797979797979799 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.5757575757575758].
2023-08-22 00:59:17,569 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.15151515151515152, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.0009100000000000001 ,use_ema=False ,ema_momentum=0.5555555555555556 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.9797979797979799 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.5757575757575758].
2023-08-22 00:59:17,776 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.5151515151515152, momentum=0.27272727272727276 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=0.0004949495454545454 ,centered=False ,beta_1=0.9191919191919192 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.12121212121212122 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.6464646464646465].
2023-08-22 00:59:17,776 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.5151515151515152, momentum=0.27272727272727276 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=0.0004949495454545454 ,centered=False ,beta_1=0.9191919191919192 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.12121212121212122 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.6464646464646465].
2023-08-22 00:59:33,534 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.15151515151515152, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.5757575757575758].
2023-08-22 00:59:33,535 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.15151515151515152, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.5757575757575758].
2023-08-22 00:59:37,148 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 00:59:37,148 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 00:59:37,880 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 00:59:37,881 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 00:59:38,585 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-22 00:59:38,585 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-22 00:59:52,205 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.15151515151515152, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.5757575757575758].
2023-08-22 00:59:52,205 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.15151515151515152, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.5757575757575758].
2023-08-22 00:59:58,397 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-22 00:59:58,397 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-22 00:59:59,347 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.15151515151515152, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.5757575757575758].
2023-08-22 00:59:59,347 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.15151515151515152, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.5757575757575758].
2023-08-22 00:59:59,429 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-22 00:59:59,429 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-22 01:00:10,792 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.5555555555555556 ,epsilon=0.00044444449999999996 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.9393939393939394 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.6464646464646465].
2023-08-22 01:00:10,792 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.5555555555555556 ,epsilon=0.00044444449999999996 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.9393939393939394 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.6464646464646465].
2023-08-22 01:00:32,729 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-22 01:00:32,730 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-22 01:00:51,322 INFO: Applying selection operators for generation 3.
2023-08-22 01:00:51,322 INFO: Applying genetic operators for generation 3.
2023-08-22 01:00:51,325 INFO: Evaluating fitness for for generation 3.
2023-08-22 01:00:51,325 INFO: Will evaluate fitness for 34 individuals.
2023-08-22 01:00:51,846 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:00:51,846 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:00:51,874 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.15151515151515152, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.5757575757575758].
2023-08-22 01:00:51,875 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.15151515151515152, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.5757575757575758].
2023-08-22 01:00:51,878 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:00:51,879 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:00:51,881 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:00:51,881 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:01:10,561 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.15151515151515152, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.5757575757575758].
2023-08-22 01:01:10,562 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.15151515151515152, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.5757575757575758].
2023-08-22 01:01:11,905 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.7272727272727273, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.686868686868687 ,rho=0.6262626262626263 ,epsilon=0.00017171725454545453 ,centered=True ,beta_1=0.7373737373737375 ,beta_2=0.696969696969697 ,learning_rate_power=-0.4949494949494949 ,initial_accumulator_value=0.3535353535353536 ,l1_regularization_strength=0.696969696969697 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.5151515151515152 ,beta=0.05050505050505051].
2023-08-22 01:01:11,906 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.7272727272727273, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.686868686868687 ,rho=0.6262626262626263 ,epsilon=0.00017171725454545453 ,centered=True ,beta_1=0.7373737373737375 ,beta_2=0.696969696969697 ,learning_rate_power=-0.4949494949494949 ,initial_accumulator_value=0.3535353535353536 ,l1_regularization_strength=0.696969696969697 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.5151515151515152 ,beta=0.05050505050505051].
2023-08-22 01:01:13,087 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:01:13,087 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:01:14,453 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:01:14,453 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:01:29,343 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.8484848484848485, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.22222222222222224 ,rho=0.6262626262626263 ,epsilon=0.0005959596363636363 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.43434343434343436 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.7474747474747475].
2023-08-22 01:01:29,344 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.8484848484848485, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.22222222222222224 ,rho=0.6262626262626263 ,epsilon=0.0005959596363636363 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.43434343434343436 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.7474747474747475].
2023-08-22 01:01:33,049 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.797979797979798, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.005253000000000001 ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.888888888888889 ,epsilon=0.0007171717454545454 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7272727272727273 ,beta=0.686868686868687].
2023-08-22 01:01:33,049 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.797979797979798, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.005253000000000001 ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.888888888888889 ,epsilon=0.0007171717454545454 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7272727272727273 ,beta=0.686868686868687].
2023-08-22 01:01:34,059 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.595959595959596, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6666666666666667 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.06060606060606061 ,beta_2=0.010101010101010102 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.26262626262626265 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5757575757575758 ,beta=0.8686868686868687].
2023-08-22 01:01:34,059 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.595959595959596, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6666666666666667 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.06060606060606061 ,beta_2=0.010101010101010102 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.26262626262626265 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5757575757575758 ,beta=0.8686868686868687].
2023-08-22 01:01:35,372 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:01:35,372 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:01:51,484 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.5757575757575758].
2023-08-22 01:01:51,484 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.5757575757575758].
2023-08-22 01:01:54,946 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.15151515151515152, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.5757575757575758].
2023-08-22 01:01:54,947 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.15151515151515152, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.5757575757575758].
2023-08-22 01:01:56,220 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:01:56,221 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:02:01,400 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:02:01,400 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:02:12,313 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:02:12,313 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:02:14,589 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.16161616161616163].
2023-08-22 01:02:14,589 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.16161616161616163].
2023-08-22 01:02:17,471 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.030303030303030304 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.0006565656909090909 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.7575757575757577 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7373737373737375 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.16161616161616163].
2023-08-22 01:02:17,471 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.030303030303030304 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.0006565656909090909 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.7575757575757577 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7373737373737375 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.16161616161616163].
2023-08-22 01:02:22,182 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.9494949494949496, momentum=0.5858585858585859 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.020202020202020204 ,beta_2=0.3434343434343435 ,learning_rate_power=-0.31313131313131304 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.9191919191919192].
2023-08-22 01:02:22,183 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.9494949494949496, momentum=0.5858585858585859 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.020202020202020204 ,beta_2=0.3434343434343435 ,learning_rate_power=-0.31313131313131304 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.9191919191919192].
2023-08-22 01:02:34,919 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:02:34,920 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:02:35,540 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:02:35,540 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:02:40,020 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:02:40,020 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:02:43,476 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.22222222222222224, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6666666666666667 ,rho=0.6262626262626263 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.43434343434343425 ,initial_accumulator_value=0.030303030303030304 ,l1_regularization_strength=0.9393939393939394 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.696969696969697].
2023-08-22 01:02:43,476 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.22222222222222224, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6666666666666667 ,rho=0.6262626262626263 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.43434343434343425 ,initial_accumulator_value=0.030303030303030304 ,l1_regularization_strength=0.9393939393939394 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.696969696969697].
2023-08-22 01:02:56,048 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:02:56,049 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:02:56,421 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:02:56,421 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:03:01,039 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.15151515151515152, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.5757575757575758].
2023-08-22 01:03:01,040 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.15151515151515152, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.5757575757575758].
2023-08-22 01:03:05,647 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:03:05,647 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:03:16,717 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.4444444444444445 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.494949494949495 ,rho=0.98989898989899 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.6161616161616162 ,beta_2=0.19191919191919193 ,learning_rate_power=-0.9292929292929293 ,initial_accumulator_value=0.12121212121212122 ,l1_regularization_strength=0.9393939393939394 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.06060606060606061].
2023-08-22 01:03:16,718 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.4444444444444445 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.494949494949495 ,rho=0.98989898989899 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.6161616161616162 ,beta_2=0.19191919191919193 ,learning_rate_power=-0.9292929292929293 ,initial_accumulator_value=0.12121212121212122 ,l1_regularization_strength=0.9393939393939394 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.06060606060606061].
2023-08-22 01:03:17,812 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.15151515151515152, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.5757575757575758].
2023-08-22 01:03:17,812 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.15151515151515152, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.5757575757575758].
2023-08-22 01:03:22,354 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:03:22,354 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:03:37,071 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.16161616161616163].
2023-08-22 01:03:37,071 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.16161616161616163].
2023-08-22 01:03:39,317 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:03:39,318 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:03:43,233 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:03:43,233 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:04:03,328 INFO: Applying selection operators for generation 4.
2023-08-22 01:04:03,328 INFO: Applying genetic operators for generation 4.
2023-08-22 01:04:03,331 INFO: Evaluating fitness for for generation 4.
2023-08-22 01:04:03,331 INFO: Will evaluate fitness for 31 individuals.
2023-08-22 01:04:03,836 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0032330000000000006 ,use_ema=True ,ema_momentum=0.38383838383838387 ,rho=0.6262626262626263 ,epsilon=0.00032323239090909086 ,centered=False ,beta_1=0.8686868686868687 ,beta_2=0.010101010101010102 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.9393939393939394 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=1.0].
2023-08-22 01:04:03,836 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0032330000000000006 ,use_ema=True ,ema_momentum=0.38383838383838387 ,rho=0.6262626262626263 ,epsilon=0.00032323239090909086 ,centered=False ,beta_1=0.8686868686868687 ,beta_2=0.010101010101010102 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.9393939393939394 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=1.0].
2023-08-22 01:04:04,022 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:04:04,022 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:04:04,032 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:04:04,032 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:04:04,044 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:04:04,044 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:04:24,655 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:04:24,656 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:04:24,735 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6262626262626263 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.5757575757575758 ,beta_2=0.797979797979798 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7676767676767677 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.16161616161616163].
2023-08-22 01:04:24,735 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6262626262626263 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.5757575757575758 ,beta_2=0.797979797979798 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7676767676767677 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.16161616161616163].
2023-08-22 01:04:24,738 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:04:24,739 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:04:26,462 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:04:26,462 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:04:45,225 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:04:45,225 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:04:46,119 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:04:46,119 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:04:46,721 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.3535353535353536, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.98989898989899 ,rho=0.19191919191919193 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.4646464646464647 ,beta_2=0.4545454545454546 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.3535353535353536 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.494949494949495].
2023-08-22 01:04:46,721 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.3535353535353536, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.98989898989899 ,rho=0.19191919191919193 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.4646464646464647 ,beta_2=0.4545454545454546 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.3535353535353536 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.494949494949495].
2023-08-22 01:04:47,760 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.29292929292929293, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=0.001213 ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.0006161616545454546 ,centered=False ,beta_1=0.6464646464646465 ,beta_2=0.31313131313131315 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7171717171717172 ,l1_regularization_strength=0.4747474747474748 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.16161616161616163].
2023-08-22 01:04:47,761 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.29292929292929293, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=0.001213 ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.0006161616545454546 ,centered=False ,beta_1=0.6464646464646465 ,beta_2=0.31313131313131315 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7171717171717172 ,l1_regularization_strength=0.4747474747474748 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.16161616161616163].
2023-08-22 01:05:06,336 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:05:06,337 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:05:06,945 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:05:06,945 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:05:09,065 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.393939393939394, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.005556000000000001 ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.12121212121212122 ,learning_rate_power=-0.06060606060606055 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.48484848484848486].
2023-08-22 01:05:09,066 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.393939393939394, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.005556000000000001 ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.12121212121212122 ,learning_rate_power=-0.06060606060606055 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.48484848484848486].
2023-08-22 01:05:10,352 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.7777777777777778 ,epsilon=0.0006363636727272727 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.24242424242424243 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.33333333333333337 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:05:10,352 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.7777777777777778 ,epsilon=0.0006363636727272727 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.24242424242424243 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.33333333333333337 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:05:27,066 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:05:27,066 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:05:27,704 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.005556000000000001 ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.06060606060606061 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.8484848484848485 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.6161616161616162].
2023-08-22 01:05:27,705 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.005556000000000001 ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.06060606060606061 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.8484848484848485 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.6161616161616162].
2023-08-22 01:05:30,953 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0.29292929292929293 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.38383838383838387 ,rho=0.6262626262626263 ,epsilon=0.0009797979818181818 ,centered=False ,beta_1=0.13131313131313133 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.5454545454545455].
2023-08-22 01:05:30,953 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0.29292929292929293 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.38383838383838387 ,rho=0.6262626262626263 ,epsilon=0.0009797979818181818 ,centered=False ,beta_1=0.13131313131313133 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.5454545454545455].
2023-08-22 01:05:32,295 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:05:32,295 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:05:47,727 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:05:47,727 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:05:50,863 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:05:50,863 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:05:52,834 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8989898989898991 ,rho=0.18181818181818182 ,epsilon=0.0006464646818181818 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.494949494949495 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.04040404040404041 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.25252525252525254].
2023-08-22 01:05:52,835 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8989898989898991 ,rho=0.18181818181818182 ,epsilon=0.0006464646818181818 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.494949494949495 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.04040404040404041 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.25252525252525254].
2023-08-22 01:05:53,659 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:05:53,659 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:06:08,404 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:06:08,404 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:06:11,760 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:06:11,760 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:06:14,610 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.42424242424242425 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9191919191919192 ,rho=0.7575757575757577 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.9696969696969697 ,l1_regularization_strength=0.3434343434343435 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.14141414141414144].
2023-08-22 01:06:14,610 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.42424242424242425 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9191919191919192 ,rho=0.7575757575757577 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.9696969696969697 ,l1_regularization_strength=0.3434343434343435 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.14141414141414144].
2023-08-22 01:06:15,067 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:06:15,068 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:06:29,500 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:06:29,500 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:06:32,608 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.6767676767676768, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8585858585858587 ,rho=0.6262626262626263 ,epsilon=0.0009595959636363636 ,centered=False ,beta_1=0.10101010101010102 ,beta_2=0.797979797979798 ,learning_rate_power=-0.6363636363636364 ,initial_accumulator_value=0.4545454545454546 ,l1_regularization_strength=0.8080808080808082 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5757575757575758 ,beta=0.16161616161616163].
2023-08-22 01:06:32,608 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.6767676767676768, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8585858585858587 ,rho=0.6262626262626263 ,epsilon=0.0009595959636363636 ,centered=False ,beta_1=0.10101010101010102 ,beta_2=0.797979797979798 ,learning_rate_power=-0.6363636363636364 ,initial_accumulator_value=0.4545454545454546 ,l1_regularization_strength=0.8080808080808082 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5757575757575758 ,beta=0.16161616161616163].
2023-08-22 01:06:37,337 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:06:37,337 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:06:57,792 INFO: Applying selection operators for generation 5.
2023-08-22 01:06:57,793 INFO: Applying genetic operators for generation 5.
2023-08-22 01:06:57,796 INFO: Evaluating fitness for for generation 5.
2023-08-22 01:06:57,796 INFO: Will evaluate fitness for 33 individuals.
2023-08-22 01:06:58,299 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:06:58,299 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:06:58,496 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:06:58,496 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:06:58,499 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:06:58,500 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:06:58,504 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:06:58,504 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:07:18,464 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:07:18,464 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:07:18,922 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.3535353535353536 ,l1_regularization_strength=0.8585858585858587 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.16161616161616163].
2023-08-22 01:07:18,922 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.3535353535353536 ,l1_regularization_strength=0.8585858585858587 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.16161616161616163].
2023-08-22 01:07:19,284 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:07:19,285 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:07:19,416 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.98989898989899, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.18181818181818182 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.16161616161616163].
2023-08-22 01:07:19,417 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.98989898989899, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.18181818181818182 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.16161616161616163].
2023-08-22 01:07:38,956 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:07:38,956 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:07:39,752 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0025260000000000005 ,use_ema=True ,ema_momentum=0.12121212121212122 ,rho=0.29292929292929293 ,epsilon=0.0003838384454545454 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.686868686868687 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.12121212121212122 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5151515151515152 ,beta=0.5050505050505051].
2023-08-22 01:07:39,752 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0025260000000000005 ,use_ema=True ,ema_momentum=0.12121212121212122 ,rho=0.29292929292929293 ,epsilon=0.0003838384454545454 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.686868686868687 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.12121212121212122 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5151515151515152 ,beta=0.5050505050505051].
2023-08-22 01:07:39,804 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.8686868686868687, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.16161616161616163].
2023-08-22 01:07:39,804 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.8686868686868687, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.16161616161616163].
2023-08-22 01:07:40,027 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:07:40,027 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:07:59,066 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:07:59,067 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:08:01,414 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.14141414141414144 ,rho=0.6262626262626263 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.16161616161616163].
2023-08-22 01:08:01,415 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.14141414141414144 ,rho=0.6262626262626263 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.16161616161616163].
2023-08-22 01:08:03,165 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:08:03,165 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:08:09,055 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:08:09,056 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:08:19,288 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:08:19,289 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:08:24,452 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.9797979797979799 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9191919191919192 ,rho=0.6262626262626263 ,epsilon=0.0003838384454545454 ,centered=False ,beta_1=1.0 ,beta_2=0.29292929292929293 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8585858585858587 ,beta=0.16161616161616163].
2023-08-22 01:08:24,452 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.9797979797979799 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9191919191919192 ,rho=0.6262626262626263 ,epsilon=0.0003838384454545454 ,centered=False ,beta_1=1.0 ,beta_2=0.29292929292929293 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8585858585858587 ,beta=0.16161616161616163].
2023-08-22 01:08:24,627 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:08:24,627 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:08:30,182 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:08:30,182 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:08:39,987 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:08:39,987 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:08:45,615 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:08:45,615 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:08:47,377 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:08:47,377 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:08:50,930 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9595959595959597, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8989898989898991 ,rho=0.42424242424242425 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.38383838383838387 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.9797979797979799 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.5858585858585859].
2023-08-22 01:08:50,930 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9595959595959597, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8989898989898991 ,rho=0.42424242424242425 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.38383838383838387 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.9797979797979799 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.5858585858585859].
2023-08-22 01:09:00,212 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:09:00,213 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:09:06,529 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.25252525252525254, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.6262626262626263 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.04040404040404041 ,learning_rate_power=-0.04040404040404033 ,initial_accumulator_value=0.6666666666666667 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.16161616161616163].
2023-08-22 01:09:06,529 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.25252525252525254, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.6262626262626263 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.04040404040404041 ,learning_rate_power=-0.04040404040404033 ,initial_accumulator_value=0.6666666666666667 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.16161616161616163].
2023-08-22 01:09:08,299 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:09:08,299 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:09:20,576 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:09:20,577 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:09:29,700 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:09:29,701 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:09:29,989 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9595959595959597 ,rho=1.0 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.7171717171717172].
2023-08-22 01:09:29,989 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9595959595959597 ,rho=1.0 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.7171717171717172].
2023-08-22 01:09:40,754 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:09:40,754 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:09:50,503 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:09:50,504 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:09:52,641 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8989898989898991 ,rho=0.9797979797979799 ,epsilon=0.000454545509090909 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.32323232323232326 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.6060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.16161616161616163].
2023-08-22 01:09:52,641 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8989898989898991 ,rho=0.9797979797979799 ,epsilon=0.000454545509090909 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.32323232323232326 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.6060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.16161616161616163].
2023-08-22 01:10:14,508 INFO: Applying selection operators for generation 6.
2023-08-22 01:10:14,508 INFO: Applying genetic operators for generation 6.
2023-08-22 01:10:14,511 INFO: Evaluating fitness for for generation 6.
2023-08-22 01:10:14,511 INFO: Will evaluate fitness for 29 individuals.
2023-08-22 01:10:15,039 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:10:15,039 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:10:15,208 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:10:15,209 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:10:15,214 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:10:15,214 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:10:15,216 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:10:15,216 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:10:35,136 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.13131313131313133, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6363636363636365 ,rho=0.6262626262626263 ,epsilon=0.00035353541818181815 ,centered=True ,beta_1=0.4040404040404041 ,beta_2=0.4040404040404041 ,learning_rate_power=-0.8484848484848485 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=1.0 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.17171717171717174].
2023-08-22 01:10:35,136 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.13131313131313133, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6363636363636365 ,rho=0.6262626262626263 ,epsilon=0.00035353541818181815 ,centered=True ,beta_1=0.4040404040404041 ,beta_2=0.4040404040404041 ,learning_rate_power=-0.8484848484848485 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=1.0 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.17171717171717174].
2023-08-22 01:10:35,654 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:10:35,655 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:10:36,408 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:10:36,409 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:10:36,514 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=0.00010200000000000001 ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.21212121212121213 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.2727272727272727 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:10:36,514 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=0.00010200000000000001 ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.21212121212121213 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.2727272727272727 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:10:56,674 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:10:56,675 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:10:56,736 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:10:56,736 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:10:57,194 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:10:57,194 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:10:59,306 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=1.0 ,epsilon=0.0002828283545454545 ,centered=False ,beta_1=0.4545454545454546 ,beta_2=0.797979797979798 ,learning_rate_power=-0.404040404040404 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.16161616161616163].
2023-08-22 01:10:59,306 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=1.0 ,epsilon=0.0002828283545454545 ,centered=False ,beta_1=0.4545454545454546 ,beta_2=0.797979797979798 ,learning_rate_power=-0.404040404040404 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.16161616161616163].
2023-08-22 01:11:17,161 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:11:17,161 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:11:17,359 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:11:17,359 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:11:17,947 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:11:17,947 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:11:20,893 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:11:20,893 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:11:37,511 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:11:37,511 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:11:37,947 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:11:37,947 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:11:39,065 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:11:39,066 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:11:41,656 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.0004242424818181818 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4141414141414142 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9797979797979799 ,beta=0.16161616161616163].
2023-08-22 01:11:41,656 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.0004242424818181818 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4141414141414142 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9797979797979799 ,beta=0.16161616161616163].
2023-08-22 01:11:58,229 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:11:58,230 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:11:58,531 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.686868686868687 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.06060606060606061 ,l1_regularization_strength=0.3434343434343435 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.7171717171717172].
2023-08-22 01:11:58,531 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.686868686868687 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.06060606060606061 ,l1_regularization_strength=0.3434343434343435 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.7171717171717172].
2023-08-22 01:11:59,721 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.7777777777777778, momentum=0.11111111111111112 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.10101010101010102 ,epsilon=0.0005656566090909091 ,centered=True ,beta_1=0.10101010101010102 ,beta_2=0.797979797979798 ,learning_rate_power=-0.9393939393939394 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.16161616161616163].
2023-08-22 01:11:59,722 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.7777777777777778, momentum=0.11111111111111112 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.10101010101010102 ,epsilon=0.0005656566090909091 ,centered=True ,beta_1=0.10101010101010102 ,beta_2=0.797979797979798 ,learning_rate_power=-0.9393939393939394 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.16161616161616163].
2023-08-22 01:12:05,141 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:12:05,141 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:12:18,550 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6767676767676768 ,rho=0.393939393939394 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.4747474747474748 ,beta_2=0.14141414141414144 ,learning_rate_power=-0.303030303030303 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.3434343434343435].
2023-08-22 01:12:18,550 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6767676767676768 ,rho=0.393939393939394 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.4747474747474748 ,beta_2=0.14141414141414144 ,learning_rate_power=-0.303030303030303 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.3434343434343435].
2023-08-22 01:12:21,694 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:12:21,694 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:12:23,481 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:12:23,481 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:12:41,047 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:12:41,048 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:12:42,236 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:12:42,237 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:13:01,958 INFO: Applying selection operators for generation 7.
2023-08-22 01:13:01,959 INFO: Applying genetic operators for generation 7.
2023-08-22 01:13:01,962 INFO: Evaluating fitness for for generation 7.
2023-08-22 01:13:01,962 INFO: Will evaluate fitness for 26 individuals.
2023-08-22 01:13:02,533 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:13:02,533 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:13:02,591 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:13:02,591 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:13:02,605 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4646464646464647 ,beta=0.20202020202020204].
2023-08-22 01:13:02,605 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4646464646464647 ,beta=0.20202020202020204].
2023-08-22 01:13:02,655 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:13:02,655 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:13:22,595 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:13:22,596 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:13:23,062 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5050505050505051, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.004041 ,use_ema=True ,ema_momentum=0.5151515151515152 ,rho=0.6262626262626263 ,epsilon=0.0007676767909090908 ,centered=False ,beta_1=0.6565656565656566 ,beta_2=0.5050505050505051 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.18181818181818182].
2023-08-22 01:13:23,062 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5050505050505051, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.004041 ,use_ema=True ,ema_momentum=0.5151515151515152 ,rho=0.6262626262626263 ,epsilon=0.0007676767909090908 ,centered=False ,beta_1=0.6565656565656566 ,beta_2=0.5050505050505051 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.18181818181818182].
2023-08-22 01:13:23,153 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=0.003940000000000001 ,use_ema=True ,ema_momentum=0.30303030303030304 ,rho=0.26262626262626265 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.393939393939394 ,beta_2=0.797979797979798 ,learning_rate_power=-0.9696969696969697 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.37373737373737376].
2023-08-22 01:13:23,153 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=0.003940000000000001 ,use_ema=True ,ema_momentum=0.30303030303030304 ,rho=0.26262626262626265 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.393939393939394 ,beta_2=0.797979797979798 ,learning_rate_power=-0.9696969696969697 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.37373737373737376].
2023-08-22 01:13:23,663 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:13:23,663 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:13:42,771 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:13:42,771 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:13:44,262 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:13:44,263 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:13:46,332 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:13:46,332 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:13:46,983 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:13:46,983 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:14:03,521 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:14:03,521 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:14:04,715 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:14:04,715 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:14:07,459 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:14:07,459 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:14:07,672 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.26262626262626265, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8282828282828284 ,rho=0.888888888888889 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4545454545454546 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:14:07,673 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.26262626262626265, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8282828282828284 ,rho=0.888888888888889 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4545454545454546 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:14:23,876 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4040404040404041, momentum=0.33333333333333337 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.08080808080808081 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.6767676767676768 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7272727272727273 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5757575757575758 ,beta=0.08080808080808081].
2023-08-22 01:14:23,876 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4040404040404041, momentum=0.33333333333333337 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.08080808080808081 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.6767676767676768 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7272727272727273 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5757575757575758 ,beta=0.08080808080808081].
2023-08-22 01:14:25,218 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:14:25,218 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:14:26,618 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:14:26,618 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:14:28,153 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.8383838383838385 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7474747474747475 ,rho=0.8686868686868687 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.33333333333333337 ,learning_rate_power=-0.8383838383838383 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.5252525252525253 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.04040404040404041].
2023-08-22 01:14:28,154 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.8383838383838385 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7474747474747475 ,rho=0.8686868686868687 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.33333333333333337 ,learning_rate_power=-0.8383838383838383 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.5252525252525253 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.04040404040404041].
2023-08-22 01:14:46,195 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:14:46,195 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:14:46,392 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5050505050505051, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.797979797979798 ,l1_regularization_strength=0.4141414141414142 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:14:46,393 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5050505050505051, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.797979797979798 ,l1_regularization_strength=0.4141414141414142 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:14:47,821 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:14:47,821 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:14:48,644 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.25252525252525254 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.20202020202020204 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.6363636363636365].
2023-08-22 01:14:48,645 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.25252525252525254 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.20202020202020204 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.6363636363636365].
2023-08-22 01:15:06,677 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8989898989898991, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.6060606060606061 ,epsilon=0.0006565656909090909 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.19191919191919193 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.696969696969697].
2023-08-22 01:15:06,677 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8989898989898991, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.6060606060606061 ,epsilon=0.0006565656909090909 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.19191919191919193 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.696969696969697].
2023-08-22 01:15:29,061 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=0.008687 ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.5050505050505051 ,beta_2=0.010101010101010102 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.16161616161616163].
2023-08-22 01:15:29,061 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=0.008687 ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.5050505050505051 ,beta_2=0.010101010101010102 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.16161616161616163].
2023-08-22 01:15:57,733 INFO: Applying selection operators for generation 8.
2023-08-22 01:15:57,734 INFO: Applying genetic operators for generation 8.
2023-08-22 01:15:57,737 INFO: Evaluating fitness for for generation 8.
2023-08-22 01:15:57,737 INFO: Will evaluate fitness for 34 individuals.
2023-08-22 01:15:58,483 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:15:58,484 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:15:58,490 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:15:58,490 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:15:58,491 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4545454545454546 ,rho=0.5858585858585859 ,epsilon=0.0005656566090909091 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.16161616161616163].
2023-08-22 01:15:58,491 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4545454545454546 ,rho=0.5858585858585859 ,epsilon=0.0005656566090909091 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.16161616161616163].
2023-08-22 01:15:58,500 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:15:58,500 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:16:19,064 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:16:19,064 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:16:19,134 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:16:19,134 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:16:19,634 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5858585858585859, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=0.007273000000000001 ,use_ema=False ,ema_momentum=0.18181818181818182 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.13131313131313133 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.4545454545454546 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:16:19,634 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5858585858585859, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=0.007273000000000001 ,use_ema=False ,ema_momentum=0.18181818181818182 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.13131313131313133 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.4545454545454546 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:16:19,714 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:16:19,714 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:16:39,301 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:16:39,301 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:16:39,569 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.36363636363636365 ,rho=0.6262626262626263 ,epsilon=0.0009494949545454545 ,centered=False ,beta_1=0.797979797979798 ,beta_2=0.797979797979798 ,learning_rate_power=-0.09090909090909083 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.14141414141414144 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.15151515151515152 ,beta=0.7171717171717172].
2023-08-22 01:16:39,569 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.36363636363636365 ,rho=0.6262626262626263 ,epsilon=0.0009494949545454545 ,centered=False ,beta_1=0.797979797979798 ,beta_2=0.797979797979798 ,learning_rate_power=-0.09090909090909083 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.14141414141414144 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.15151515151515152 ,beta=0.7171717171717172].
2023-08-22 01:16:39,919 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:16:39,919 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:16:40,225 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:16:40,225 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:16:59,373 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:16:59,374 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:17:00,278 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:17:00,279 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:17:01,401 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.0, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=0.009495 ,use_ema=True ,ema_momentum=0.4646464646464647 ,rho=0.2828282828282829 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.6464646464646465 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.07070707070707072].
2023-08-22 01:17:01,401 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.0, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=0.009495 ,use_ema=True ,ema_momentum=0.4646464646464647 ,rho=0.2828282828282829 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.6464646464646465 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.07070707070707072].
2023-08-22 01:17:01,461 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=0.003738000000000001 ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.0002121212909090909 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.7171717171717172 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9797979797979799 ,beta=0.9696969696969697].
2023-08-22 01:17:01,462 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=0.003738000000000001 ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.0002121212909090909 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.7171717171717172 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9797979797979799 ,beta=0.9696969696969697].
2023-08-22 01:17:20,017 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:17:20,018 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:17:20,782 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.9090909090909092, momentum=0.7070707070707072 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.48484848484848486 ,rho=0.787878787878788 ,epsilon=0.0005555556 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.24242424242424243 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.8080808080808082 ,l1_regularization_strength=0.4444444444444445 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8787878787878789 ,beta=0.30303030303030304].
2023-08-22 01:17:20,782 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.9090909090909092, momentum=0.7070707070707072 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.48484848484848486 ,rho=0.787878787878788 ,epsilon=0.0005555556 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.24242424242424243 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.8080808080808082 ,l1_regularization_strength=0.4444444444444445 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8787878787878789 ,beta=0.30303030303030304].
2023-08-22 01:17:21,221 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:17:21,221 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:17:25,821 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:17:25,822 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:17:40,202 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.4141414141414142, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.10101010101010102 ,epsilon=0.0007171717454545454 ,centered=False ,beta_1=0.7373737373737375 ,beta_2=0.9191919191919192 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:17:40,202 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.4141414141414142, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.10101010101010102 ,epsilon=0.0007171717454545454 ,centered=False ,beta_1=0.7373737373737375 ,beta_2=0.9191919191919192 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:17:41,632 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:17:41,632 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:17:43,639 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:17:43,640 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:17:46,327 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:17:46,327 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:18:02,194 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:18:02,195 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:18:03,643 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.29292929292929293 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.9393939393939394 ,beta_2=0.9292929292929294 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:18:03,643 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.29292929292929293 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.9393939393939394 ,beta_2=0.9292929292929294 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:18:04,720 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.6565656565656566, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.7474747474747475 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.9696969696969697 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.17171717171717174].
2023-08-22 01:18:04,721 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.6565656565656566, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.7474747474747475 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.9696969696969697 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.17171717171717174].
2023-08-22 01:18:06,844 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.3939393939393939 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.16161616161616163].
2023-08-22 01:18:06,845 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.3939393939393939 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.16161616161616163].
2023-08-22 01:18:23,161 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:18:23,161 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:18:24,249 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.7676767676767677, momentum=0.4040404040404041 ,nesterov=False ,amsgrad=False ,weight_decay=0.0015160000000000002 ,use_ema=False ,ema_momentum=0.7676767676767677 ,rho=0.6262626262626263 ,epsilon=6.060615454545454e-05 ,centered=False ,beta_1=0.5555555555555556 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.30303030303030304 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6666666666666667 ,beta=0.16161616161616163].
2023-08-22 01:18:24,249 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.7676767676767677, momentum=0.4040404040404041 ,nesterov=False ,amsgrad=False ,weight_decay=0.0015160000000000002 ,use_ema=False ,ema_momentum=0.7676767676767677 ,rho=0.6262626262626263 ,epsilon=6.060615454545454e-05 ,centered=False ,beta_1=0.5555555555555556 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.30303030303030304 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6666666666666667 ,beta=0.16161616161616163].
2023-08-22 01:18:27,723 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.787878787878788, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.10101010101010102 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.4444444444444445 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.16161616161616163].
2023-08-22 01:18:27,724 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.787878787878788, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.10101010101010102 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.4444444444444445 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.16161616161616163].
2023-08-22 01:18:43,677 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:18:43,677 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:18:46,534 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=0.0033340000000000006 ,use_ema=True ,ema_momentum=0.07070707070707072 ,rho=0.5252525252525253 ,epsilon=0.00015151523636363636 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.4646464646464647 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.98989898989899 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:18:46,534 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=0.0033340000000000006 ,use_ema=True ,ema_momentum=0.07070707070707072 ,rho=0.5252525252525253 ,epsilon=0.00015151523636363636 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.4646464646464647 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.98989898989899 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:18:50,107 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:18:50,107 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:19:10,795 INFO: Applying selection operators for generation 9.
2023-08-22 01:19:10,796 INFO: Applying genetic operators for generation 9.
2023-08-22 01:19:10,799 INFO: Evaluating fitness for for generation 9.
2023-08-22 01:19:10,799 INFO: Will evaluate fitness for 25 individuals.
2023-08-22 01:19:11,355 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:19:11,356 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:19:11,403 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.18181818181818182, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0020210000000000002 ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=6.060615454545454e-05 ,centered=False ,beta_1=0.19191919191919193 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.06060606060606061 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.11111111111111112 ,beta=0.98989898989899].
2023-08-22 01:19:11,403 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.18181818181818182, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0020210000000000002 ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=6.060615454545454e-05 ,centered=False ,beta_1=0.19191919191919193 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.06060606060606061 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.11111111111111112 ,beta=0.98989898989899].
2023-08-22 01:19:11,489 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:19:11,489 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:19:11,498 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:19:11,498 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:19:32,032 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:19:32,032 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:19:32,149 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:19:32,149 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:19:32,494 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:19:32,494 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:19:35,606 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5757575757575758, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.5858585858585859 ,l1_regularization_strength=0.4545454545454546 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.8484848484848485].
2023-08-22 01:19:35,607 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5757575757575758, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.5858585858585859 ,l1_regularization_strength=0.4545454545454546 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.8484848484848485].
2023-08-22 01:19:52,189 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:19:52,189 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:19:52,624 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.0009191919272727272 ,centered=False ,beta_1=0.4646464646464647 ,beta_2=0.797979797979798 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.16161616161616163].
2023-08-22 01:19:52,625 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.0009191919272727272 ,centered=False ,beta_1=0.4646464646464647 ,beta_2=0.797979797979798 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.16161616161616163].
2023-08-22 01:19:53,294 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.12121212121212122, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.43434343434343436 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.888888888888889 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.6161616161616162 ,l1_regularization_strength=0.38383838383838387 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.16161616161616163].
2023-08-22 01:19:53,294 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.12121212121212122, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.43434343434343436 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.888888888888889 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.6161616161616162 ,l1_regularization_strength=0.38383838383838387 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.16161616161616163].
2023-08-22 01:19:56,250 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6767676767676768, momentum=0.38383838383838387 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.9090909090909092 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.98989898989899 ,beta_2=0.19191919191919193 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.16161616161616163].
2023-08-22 01:19:56,250 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6767676767676768, momentum=0.38383838383838387 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.9090909090909092 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.98989898989899 ,beta_2=0.19191919191919193 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.16161616161616163].
2023-08-22 01:20:12,412 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:20:12,413 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:20:14,592 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:20:14,592 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:20:14,652 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.8484848484848485, momentum=0.9797979797979799 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7676767676767677 ,rho=0.48484848484848486 ,epsilon=0.0004848485363636363 ,centered=False ,beta_1=0.8080808080808082 ,beta_2=0.797979797979798 ,learning_rate_power=-0.36363636363636354 ,initial_accumulator_value=0.030303030303030304 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.9797979797979799].
2023-08-22 01:20:14,653 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.8484848484848485, momentum=0.9797979797979799 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7676767676767677 ,rho=0.48484848484848486 ,epsilon=0.0004848485363636363 ,centered=False ,beta_1=0.8080808080808082 ,beta_2=0.797979797979798 ,learning_rate_power=-0.36363636363636354 ,initial_accumulator_value=0.030303030303030304 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.9797979797979799].
2023-08-22 01:20:19,189 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.4141414141414142 ,rho=0.6767676767676768 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.9696969696969697 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:20:19,189 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.4141414141414142 ,rho=0.6767676767676768 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.9696969696969697 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:20:33,239 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:20:33,239 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:20:35,212 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:20:35,212 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:20:37,907 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.48484848484848486, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00035353541818181815 ,centered=False ,beta_1=0.11111111111111112 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.19191919191919193 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.12121212121212122].
2023-08-22 01:20:37,907 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.48484848484848486, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00035353541818181815 ,centered=False ,beta_1=0.11111111111111112 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.19191919191919193 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.12121212121212122].
2023-08-22 01:20:41,569 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:20:41,569 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:20:53,593 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5353535353535354, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.8484848484848485 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.7272727272727273 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.3434343434343435 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:20:53,593 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5353535353535354, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.8484848484848485 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.7272727272727273 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.3434343434343435 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:20:55,730 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:20:55,730 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:21:01,205 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:21:01,206 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:21:02,637 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.8787878787878789 ,epsilon=0.0008787878909090909 ,centered=False ,beta_1=0.6565656565656566 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.9696969696969697 ,initial_accumulator_value=0.9696969696969697 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.393939393939394].
2023-08-22 01:21:02,637 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.8787878787878789 ,epsilon=0.0008787878909090909 ,centered=False ,beta_1=0.6565656565656566 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.9696969696969697 ,initial_accumulator_value=0.9696969696969697 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.393939393939394].
2023-08-22 01:21:15,900 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.9292929292929294, momentum=0.29292929292929293 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.26262626262626265 ,rho=0.30303030303030304 ,epsilon=0.0005151515636363636 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5656565656565657 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7777777777777778 ,beta=0.16161616161616163].
2023-08-22 01:21:15,900 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.9292929292929294, momentum=0.29292929292929293 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.26262626262626265 ,rho=0.30303030303030304 ,epsilon=0.0005151515636363636 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5656565656565657 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7777777777777778 ,beta=0.16161616161616163].
2023-08-22 01:21:37,640 INFO: Applying selection operators for generation 10.
2023-08-22 01:21:37,641 INFO: Applying genetic operators for generation 10.
2023-08-22 01:21:37,643 INFO: Evaluating fitness for for generation 10.
2023-08-22 01:21:37,644 INFO: Will evaluate fitness for 30 individuals.
2023-08-22 01:21:38,219 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:21:38,219 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:21:38,221 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.25252525252525254, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.8080808080808082 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.5151515151515152].
2023-08-22 01:21:38,221 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.25252525252525254, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.8080808080808082 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.5151515151515152].
2023-08-22 01:21:38,226 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:21:38,226 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:21:38,320 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9494949494949496, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.009192 ,use_ema=True ,ema_momentum=0.05050505050505051 ,rho=0.36363636363636365 ,epsilon=0.00015151523636363636 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.5555555555555556 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.16161616161616163].
2023-08-22 01:21:38,320 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9494949494949496, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.009192 ,use_ema=True ,ema_momentum=0.05050505050505051 ,rho=0.36363636363636365 ,epsilon=0.00015151523636363636 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.5555555555555556 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.16161616161616163].
2023-08-22 01:21:58,787 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5858585858585859, momentum=0.010101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.5252525252525252 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.38383838383838387 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.38383838383838387].
2023-08-22 01:21:58,787 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5858585858585859, momentum=0.010101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.5252525252525252 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.38383838383838387 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.38383838383838387].
2023-08-22 01:21:58,831 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:21:58,831 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:22:01,230 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:22:01,230 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:22:02,198 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:22:02,198 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:22:19,120 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:22:19,120 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:22:19,362 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:22:19,362 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:22:22,246 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:22:22,246 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:22:22,725 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:22:22,725 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:22:39,429 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:22:39,429 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:22:39,932 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:22:39,932 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:22:42,718 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:22:42,718 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:22:43,192 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.009596 ,use_ema=False ,ema_momentum=0.29292929292929293 ,rho=0.2828282828282829 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8989898989898991 ,beta=0.4444444444444445].
2023-08-22 01:22:43,193 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.009596 ,use_ema=False ,ema_momentum=0.29292929292929293 ,rho=0.2828282828282829 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8989898989898991 ,beta=0.4444444444444445].
2023-08-22 01:23:00,160 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:23:00,160 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:23:01,054 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0065660000000000015 ,use_ema=True ,ema_momentum=0.494949494949495 ,rho=0.8080808080808082 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.595959595959596 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.0].
2023-08-22 01:23:01,054 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0065660000000000015 ,use_ema=True ,ema_momentum=0.494949494949495 ,rho=0.8080808080808082 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.595959595959596 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.0].
2023-08-22 01:23:03,229 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:23:03,230 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:23:06,595 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:23:06,595 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:23:20,641 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:23:20,641 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:23:24,292 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:23:24,292 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:23:24,938 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.5050505050505051, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.5757575757575758 ,epsilon=8.080817272727271e-05 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.5454545454545455 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.494949494949495 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.686868686868687].
2023-08-22 01:23:24,938 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.5050505050505051, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.5757575757575758 ,epsilon=8.080817272727271e-05 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.5454545454545455 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.494949494949495 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.686868686868687].
2023-08-22 01:23:27,322 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:23:27,322 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:23:41,072 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0.04040404040404041 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.5757575757575758 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.8787878787878789 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:23:41,072 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0.04040404040404041 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.5757575757575758 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.8787878787878789 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:23:43,260 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.393939393939394, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.01 ,use_ema=True ,ema_momentum=0.7474747474747475 ,rho=0.6262626262626263 ,epsilon=0.0005858586272727272 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.9595959595959597 ,learning_rate_power=-0.303030303030303 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.030303030303030304].
2023-08-22 01:23:43,260 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.393939393939394, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.01 ,use_ema=True ,ema_momentum=0.7474747474747475 ,rho=0.6262626262626263 ,epsilon=0.0005858586272727272 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.9595959595959597 ,learning_rate_power=-0.303030303030303 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.030303030303030304].
2023-08-22 01:23:44,918 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:23:44,918 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:24:01,389 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.8181818181818182, momentum=0.3535353535353536 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.4646464646464647 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.26262626262626265 ,l1_regularization_strength=0.010101010101010102 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:24:01,390 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.8181818181818182, momentum=0.3535353535353536 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.4646464646464647 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.26262626262626265 ,l1_regularization_strength=0.010101010101010102 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:24:05,266 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:24:05,266 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:24:08,203 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.05050505050505051, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9696969696969697 ,rho=0.6262626262626263 ,epsilon=0.0001919192727272727 ,centered=False ,beta_1=0.8181818181818182 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.2828282828282829 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5151515151515152 ,beta=0.6262626262626263].
2023-08-22 01:24:08,204 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.05050505050505051, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9696969696969697 ,rho=0.6262626262626263 ,epsilon=0.0001919192727272727 ,centered=False ,beta_1=0.8181818181818182 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.2828282828282829 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5151515151515152 ,beta=0.6262626262626263].
2023-08-22 01:24:30,397 INFO: Applying selection operators for generation 11.
2023-08-22 01:24:30,398 INFO: Applying genetic operators for generation 11.
2023-08-22 01:24:30,400 INFO: Evaluating fitness for for generation 11.
2023-08-22 01:24:30,400 INFO: Will evaluate fitness for 32 individuals.
2023-08-22 01:24:30,957 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:24:30,957 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:24:30,969 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:24:30,970 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:24:31,081 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:24:31,081 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:24:31,131 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9494949494949496, momentum=0.15151515151515152 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0008383838545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.33333333333333337 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.16161616161616163].
2023-08-22 01:24:31,131 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9494949494949496, momentum=0.15151515151515152 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0008383838545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.33333333333333337 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.16161616161616163].
2023-08-22 01:24:51,261 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0.09090909090909091 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.010101010101010102 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.12121212121212122 ,beta=0.9595959595959597].
2023-08-22 01:24:51,261 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0.09090909090909091 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.010101010101010102 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.12121212121212122 ,beta=0.9595959595959597].
2023-08-22 01:24:51,315 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5050505050505051, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.24242424242424243 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.24242424242424243 ,beta_2=0.04040404040404041 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.4141414141414142 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.10101010101010102].
2023-08-22 01:24:51,315 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5050505050505051, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.24242424242424243 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.24242424242424243 ,beta_2=0.04040404040404041 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.4141414141414142 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.10101010101010102].
2023-08-22 01:24:52,162 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:24:52,162 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:24:54,555 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.7070707070707072 ,epsilon=0.00031313138181818175 ,centered=True ,beta_1=0.6767676767676768 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.010101010101010102 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.16161616161616163].
2023-08-22 01:24:54,556 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.7070707070707072 ,epsilon=0.00031313138181818175 ,centered=True ,beta_1=0.6767676767676768 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.010101010101010102 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.16161616161616163].
2023-08-22 01:25:11,645 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:25:11,645 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:25:12,384 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:25:12,385 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:25:12,903 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7171717171717172 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4646464646464647 ,rho=0.36363636363636365 ,epsilon=0.0008181818363636363 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.8787878787878789 ,l1_regularization_strength=0.19191919191919193 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.16161616161616163].
2023-08-22 01:25:12,903 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7171717171717172 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4646464646464647 ,rho=0.36363636363636365 ,epsilon=0.0008181818363636363 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.8787878787878789 ,l1_regularization_strength=0.19191919191919193 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.16161616161616163].
2023-08-22 01:25:18,844 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.00020300000000000003 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.9292929292929294 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7272727272727273 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:25:18,844 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.00020300000000000003 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.9292929292929294 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7272727272727273 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:25:32,638 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:25:32,638 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:25:32,936 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:25:32,936 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:25:35,663 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.16161616161616163].
2023-08-22 01:25:35,663 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.16161616161616163].
2023-08-22 01:25:43,343 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:25:43,343 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:25:53,179 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:25:53,180 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:25:53,195 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:25:53,195 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:25:59,032 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:25:59,032 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:26:04,136 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:26:04,137 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:26:13,457 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.595959595959596 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.16161616161616163].
2023-08-22 01:26:13,457 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.595959595959596 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.16161616161616163].
2023-08-22 01:26:13,614 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:26:13,614 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:26:19,381 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:26:19,381 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:26:24,966 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:26:24,967 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:26:34,036 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.13131313131313133, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.01 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.7373737373737375 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.7474747474747475 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.16161616161616163].
2023-08-22 01:26:34,036 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.13131313131313133, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.01 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.7373737373737375 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.7474747474747475 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.16161616161616163].
2023-08-22 01:26:36,446 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9595959595959597, momentum=0.17171717171717174 ,nesterov=True ,amsgrad=True ,weight_decay=0.006263000000000001 ,use_ema=False ,ema_momentum=0.42424242424242425 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.04040404040404041 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.33333333333333337].
2023-08-22 01:26:36,446 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9595959595959597, momentum=0.17171717171717174 ,nesterov=True ,amsgrad=True ,weight_decay=0.006263000000000001 ,use_ema=False ,ema_momentum=0.42424242424242425 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.04040404040404041 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.33333333333333337].
2023-08-22 01:26:39,741 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:26:39,742 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:26:46,621 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:26:46,622 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:26:55,806 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:26:55,806 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:26:56,955 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:26:56,955 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:27:00,631 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:27:00,631 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:27:07,615 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:27:07,615 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:27:27,565 INFO: Applying selection operators for generation 12.
2023-08-22 01:27:27,565 INFO: Applying genetic operators for generation 12.
2023-08-22 01:27:27,568 INFO: Evaluating fitness for for generation 12.
2023-08-22 01:27:27,568 INFO: Will evaluate fitness for 30 individuals.
2023-08-22 01:27:28,127 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:27:28,128 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:27:28,137 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.15151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.5353535353535354 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.27272727272727276 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.12121212121212122].
2023-08-22 01:27:28,137 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.15151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.5353535353535354 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.27272727272727276 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.12121212121212122].
2023-08-22 01:27:28,144 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.07070707070707072 ,rho=0.07070707070707072 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.797979797979798 ,beta_2=0.33333333333333337 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.9393939393939394 ,l1_regularization_strength=0.21212121212121213 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.4141414141414142].
2023-08-22 01:27:28,145 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.07070707070707072 ,rho=0.07070707070707072 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.797979797979798 ,beta_2=0.33333333333333337 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.9393939393939394 ,l1_regularization_strength=0.21212121212121213 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.4141414141414142].
2023-08-22 01:27:28,159 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.005758000000000001 ,use_ema=False ,ema_momentum=0.6666666666666667 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.494949494949495].
2023-08-22 01:27:28,159 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.005758000000000001 ,use_ema=False ,ema_momentum=0.6666666666666667 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.494949494949495].
2023-08-22 01:27:48,207 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:27:48,207 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:27:51,112 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:27:51,112 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:27:51,342 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:27:51,343 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:27:59,183 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:27:59,183 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:28:08,961 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.787878787878788, momentum=0.27272727272727276 ,nesterov=True ,amsgrad=False ,weight_decay=0.0034350000000000006 ,use_ema=True ,ema_momentum=0.8585858585858587 ,rho=0.31313131313131315 ,epsilon=0.00035353541818181815 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8585858585858587 ,beta=0.16161616161616163].
2023-08-22 01:28:08,961 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.787878787878788, momentum=0.27272727272727276 ,nesterov=True ,amsgrad=False ,weight_decay=0.0034350000000000006 ,use_ema=True ,ema_momentum=0.8585858585858587 ,rho=0.31313131313131315 ,epsilon=0.00035353541818181815 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8585858585858587 ,beta=0.16161616161616163].
2023-08-22 01:28:11,308 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:28:11,308 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:28:12,244 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:28:12,244 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:28:20,369 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:28:20,370 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:28:30,924 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:28:30,924 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:28:32,073 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:28:32,073 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:28:33,174 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:28:33,174 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:28:41,015 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.43434343434343436 ,rho=0.4747474747474748 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.4646464646464647 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.06060606060606061 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.16161616161616163].
2023-08-22 01:28:41,015 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.43434343434343436 ,rho=0.4747474747474748 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.4646464646464647 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.06060606060606061 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.16161616161616163].
2023-08-22 01:28:51,171 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:28:51,171 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:28:52,262 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.29292929292929293 ,epsilon=0.00046464651818181813 ,centered=False ,beta_1=0.020202020202020204 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7777777777777778 ,initial_accumulator_value=0.7373737373737375 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8282828282828284 ,beta=0.16161616161616163].
2023-08-22 01:28:52,263 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.29292929292929293 ,epsilon=0.00046464651818181813 ,centered=False ,beta_1=0.020202020202020204 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7777777777777778 ,initial_accumulator_value=0.7373737373737375 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8282828282828284 ,beta=0.16161616161616163].
2023-08-22 01:28:53,876 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:28:53,876 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:29:04,205 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:29:04,205 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:29:11,538 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:29:11,539 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:29:14,375 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:29:14,375 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:29:15,472 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:29:15,472 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:29:25,414 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.31313131313131315 ,learning_rate_power=-0.050505050505050386 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.16161616161616163].
2023-08-22 01:29:25,414 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.31313131313131315 ,learning_rate_power=-0.050505050505050386 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.16161616161616163].
2023-08-22 01:29:32,340 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:29:32,340 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:29:35,105 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.009798000000000001 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.33333333333333337 ,beta_2=0.13131313131313133 ,learning_rate_power=-0.26262626262626254 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.27272727272727276].
2023-08-22 01:29:35,106 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.009798000000000001 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.33333333333333337 ,beta_2=0.13131313131313133 ,learning_rate_power=-0.26262626262626254 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.27272727272727276].
2023-08-22 01:29:36,300 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:29:36,301 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:29:52,660 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:29:52,660 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:29:56,907 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:29:56,908 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:29:59,518 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:29:59,518 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:30:19,089 INFO: Applying selection operators for generation 13.
2023-08-22 01:30:19,090 INFO: Applying genetic operators for generation 13.
2023-08-22 01:30:19,092 INFO: Evaluating fitness for for generation 13.
2023-08-22 01:30:19,092 INFO: Will evaluate fitness for 37 individuals.
2023-08-22 01:30:19,645 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:30:19,646 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:30:19,667 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:30:19,668 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:30:19,676 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:30:19,676 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:30:19,711 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:30:19,711 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:30:40,025 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:30:40,026 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:30:40,184 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.8585858585858587 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.0 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=1.0].
2023-08-22 01:30:40,184 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.8585858585858587 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.0 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=1.0].
2023-08-22 01:30:40,248 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:30:40,248 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:30:40,469 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.6363636363636365, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.5151515151515152 ,epsilon=0.0006868687181818181 ,centered=False ,beta_1=0.16161616161616163 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=1.0].
2023-08-22 01:30:40,470 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.6363636363636365, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.5151515151515152 ,epsilon=0.0006868687181818181 ,centered=False ,beta_1=0.16161616161616163 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=1.0].
2023-08-22 01:31:00,821 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:31:00,821 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:31:01,113 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:31:01,114 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:31:03,275 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:31:03,275 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:31:03,280 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.9393939393939394, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.9696969696969697 ,beta_2=0.17171717171717174 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8989898989898991 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.30303030303030304 ,beta=0.6565656565656566].
2023-08-22 01:31:03,281 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.9393939393939394, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.9696969696969697 ,beta_2=0.17171717171717174 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8989898989898991 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.30303030303030304 ,beta=0.6565656565656566].
2023-08-22 01:31:21,536 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:31:21,536 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:31:21,576 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:31:21,576 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:31:23,388 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:31:23,388 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:31:26,076 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0006464646818181818 ,centered=False ,beta_1=0.22222222222222224 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.06060606060606055 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.16161616161616163].
2023-08-22 01:31:26,076 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0006464646818181818 ,centered=False ,beta_1=0.22222222222222224 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.06060606060606055 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.16161616161616163].
2023-08-22 01:31:42,062 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:31:42,062 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:31:43,039 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:31:43,039 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:31:43,566 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:31:43,567 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:31:48,590 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:31:48,591 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:32:02,431 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:32:02,431 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:32:03,781 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:32:03,781 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:32:04,325 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:32:04,325 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:32:09,512 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:32:09,512 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:32:23,378 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:32:23,378 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:32:24,426 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.07070707070707072, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.5050505050505051 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.17171717171717174].
2023-08-22 01:32:24,426 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.07070707070707072, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.5050505050505051 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.17171717171717174].
2023-08-22 01:32:24,564 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.020202020202020204, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.009495 ,use_ema=True ,ema_momentum=0.7070707070707072 ,rho=0.5252525252525253 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5151515151515152 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.5252525252525252 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.010101010101010102].
2023-08-22 01:32:24,564 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.020202020202020204, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.009495 ,use_ema=True ,ema_momentum=0.7070707070707072 ,rho=0.5252525252525253 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5151515151515152 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.5252525252525252 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.010101010101010102].
2023-08-22 01:32:29,796 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.07070707070707072 ,nesterov=False ,amsgrad=False ,weight_decay=0.002829000000000001 ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.393939393939394 ,epsilon=0.0008888889 ,centered=False ,beta_1=0.98989898989899 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.16161616161616163].
2023-08-22 01:32:29,796 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.07070707070707072 ,nesterov=False ,amsgrad=False ,weight_decay=0.002829000000000001 ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.393939393939394 ,epsilon=0.0008888889 ,centered=False ,beta_1=0.98989898989899 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.16161616161616163].
2023-08-22 01:32:43,817 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:32:43,817 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:32:47,517 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.20202020202020204 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6363636363636365 ,rho=0.6262626262626263 ,epsilon=0.0007979798181818182 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.7373737373737375 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.42424242424242425 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.0].
2023-08-22 01:32:47,518 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.20202020202020204 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6363636363636365 ,rho=0.6262626262626263 ,epsilon=0.0007979798181818182 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.7373737373737375 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.42424242424242425 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.0].
2023-08-22 01:32:48,153 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.4141414141414142, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00032323239090909086 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.303030303030303 ,initial_accumulator_value=0.686868686868687 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.4747474747474748].
2023-08-22 01:32:48,153 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.4141414141414142, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00032323239090909086 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.303030303030303 ,initial_accumulator_value=0.686868686868687 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.4747474747474748].
2023-08-22 01:32:53,357 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:32:53,357 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:33:04,414 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:33:04,414 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:33:11,255 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:33:11,256 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:33:11,726 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:33:11,726 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:33:14,208 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:33:14,208 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:33:25,440 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:33:25,440 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:33:45,165 INFO: Applying selection operators for generation 14.
2023-08-22 01:33:45,166 INFO: Applying genetic operators for generation 14.
2023-08-22 01:33:45,169 INFO: Evaluating fitness for for generation 14.
2023-08-22 01:33:45,169 INFO: Will evaluate fitness for 25 individuals.
2023-08-22 01:33:45,708 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.9595959595959597, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.008788 ,use_ema=True ,ema_momentum=0.16161616161616163 ,rho=0.7171717171717172 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.9393939393939394 ,learning_rate_power=-0.46464646464646464 ,initial_accumulator_value=0.21212121212121213 ,l1_regularization_strength=0.9797979797979799 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6060606060606061].
2023-08-22 01:33:45,709 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.9595959595959597, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.008788 ,use_ema=True ,ema_momentum=0.16161616161616163 ,rho=0.7171717171717172 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.9393939393939394 ,learning_rate_power=-0.46464646464646464 ,initial_accumulator_value=0.21212121212121213 ,l1_regularization_strength=0.9797979797979799 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6060606060606061].
2023-08-22 01:33:45,743 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:33:45,743 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:33:45,745 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:33:45,745 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:33:45,749 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3434343434343435 ,rho=0.6262626262626263 ,epsilon=0.0007373737636363636 ,centered=False ,beta_1=0.33333333333333337 ,beta_2=0.38383838383838387 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.13131313131313133 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.6464646464646465].
2023-08-22 01:33:45,749 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3434343434343435 ,rho=0.6262626262626263 ,epsilon=0.0007373737636363636 ,centered=False ,beta_1=0.33333333333333337 ,beta_2=0.38383838383838387 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.13131313131313133 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.6464646464646465].
2023-08-22 01:34:05,906 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:34:05,906 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:34:05,917 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:34:05,917 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:34:09,052 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:34:09,052 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:34:09,536 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3434343434343435 ,rho=0.6262626262626263 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.09090909090909091 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.17171717171717174].
2023-08-22 01:34:09,537 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3434343434343435 ,rho=0.6262626262626263 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.09090909090909091 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.17171717171717174].
2023-08-22 01:34:26,756 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:34:26,757 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:34:26,849 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:34:26,850 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:34:30,441 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9494949494949496, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.007374000000000001 ,use_ema=True ,ema_momentum=0.4141414141414142 ,rho=0.25252525252525254 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.9494949494949496 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.48484848484848486].
2023-08-22 01:34:30,441 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9494949494949496, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.007374000000000001 ,use_ema=True ,ema_momentum=0.4141414141414142 ,rho=0.25252525252525254 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.9494949494949496 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.48484848484848486].
2023-08-22 01:34:33,317 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:34:33,318 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:34:47,137 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:34:47,138 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:34:47,145 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7777777777777778, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.5151515151515152 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.9292929292929294 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.16161616161616163].
2023-08-22 01:34:47,145 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7777777777777778, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.5151515151515152 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.9292929292929294 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.16161616161616163].
2023-08-22 01:34:53,861 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:34:53,862 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:34:54,601 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:34:54,601 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:35:06,814 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.4141414141414142 ,beta_2=0.8282828282828284 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.05050505050505051].
2023-08-22 01:35:06,814 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.4141414141414142 ,beta_2=0.8282828282828284 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.05050505050505051].
2023-08-22 01:35:07,407 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:35:07,408 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:35:14,264 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:35:14,264 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:35:15,248 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.007071000000000001 ,use_ema=True ,ema_momentum=0.595959595959596 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.5757575757575758 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.7272727272727273].
2023-08-22 01:35:15,248 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.007071000000000001 ,use_ema=True ,ema_momentum=0.595959595959596 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.5757575757575758 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.7272727272727273].
2023-08-22 01:35:27,126 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.888888888888889, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.7373737373737375 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.494949494949495 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.3434343434343435].
2023-08-22 01:35:27,127 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.888888888888889, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.7373737373737375 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.494949494949495 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.3434343434343435].
2023-08-22 01:35:27,603 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:35:27,604 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:35:35,495 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:35:35,495 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:35:37,247 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.9696969696969697, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.37373737373737376 ,rho=0.6161616161616162 ,epsilon=0.00010101019090909089 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.33333333333333337 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.010101010101010102 ,beta=0.696969696969697].
2023-08-22 01:35:37,248 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.9696969696969697, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.37373737373737376 ,rho=0.6161616161616162 ,epsilon=0.00010101019090909089 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.33333333333333337 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.010101010101010102 ,beta=0.696969696969697].
2023-08-22 01:35:48,432 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:35:48,433 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:36:07,994 INFO: Applying selection operators for generation 15.
2023-08-22 01:36:07,995 INFO: Applying genetic operators for generation 15.
2023-08-22 01:36:07,997 INFO: Evaluating fitness for for generation 15.
2023-08-22 01:36:07,998 INFO: Will evaluate fitness for 26 individuals.
2023-08-22 01:36:08,553 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:36:08,553 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:36:08,582 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:36:08,582 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:36:08,583 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:36:08,583 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:36:08,609 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.06060606060606061 ,epsilon=0.001 ,centered=False ,beta_1=0.5050505050505051 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.33333333333333337].
2023-08-22 01:36:08,609 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.06060606060606061 ,epsilon=0.001 ,centered=False ,beta_1=0.5050505050505051 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.33333333333333337].
2023-08-22 01:36:28,834 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.24242424242424243, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0004747475272727272 ,centered=False ,beta_1=0.5555555555555556 ,beta_2=0.14141414141414144 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.9494949494949496].
2023-08-22 01:36:28,835 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.24242424242424243, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0004747475272727272 ,centered=False ,beta_1=0.5555555555555556 ,beta_2=0.14141414141414144 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.9494949494949496].
2023-08-22 01:36:29,110 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.07070707070707072 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.16161616161616163].
2023-08-22 01:36:29,111 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.07070707070707072 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.16161616161616163].
2023-08-22 01:36:29,599 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6565656565656566 ,rho=0.13131313131313133 ,epsilon=0.0009494949545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:36:29,599 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6565656565656566 ,rho=0.13131313131313133 ,epsilon=0.0009494949545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:36:32,004 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.6565656565656566, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.48484848484848486 ,rho=0.6262626262626263 ,epsilon=0.0009292929363636363 ,centered=True ,beta_1=0.6161616161616162 ,beta_2=0.787878787878788 ,learning_rate_power=-0.5454545454545454 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.30303030303030304 ,beta=0.16161616161616163].
2023-08-22 01:36:32,005 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.6565656565656566, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.48484848484848486 ,rho=0.6262626262626263 ,epsilon=0.0009292929363636363 ,centered=True ,beta_1=0.6161616161616162 ,beta_2=0.787878787878788 ,learning_rate_power=-0.5454545454545454 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.30303030303030304 ,beta=0.16161616161616163].
2023-08-22 01:36:49,957 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.25252525252525254, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.38383838383838387 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.33333333333333326 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.4040404040404041 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.010101010101010102].
2023-08-22 01:36:49,957 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.25252525252525254, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.38383838383838387 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.33333333333333326 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.4040404040404041 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.010101010101010102].
2023-08-22 01:36:51,799 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:36:51,800 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:36:53,506 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:36:53,506 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:36:54,974 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:36:54,975 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:37:12,603 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:37:12,603 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:37:13,690 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:37:13,691 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:37:13,833 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9696969696969697, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.27272727272727276 ,rho=0.6262626262626263 ,epsilon=0.0005959596363636363 ,centered=False ,beta_1=0.3434343434343435 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.98989898989899 ,l1_regularization_strength=0.5050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.98989898989899].
2023-08-22 01:37:13,833 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9696969696969697, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.27272727272727276 ,rho=0.6262626262626263 ,epsilon=0.0005959596363636363 ,centered=False ,beta_1=0.3434343434343435 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.98989898989899 ,l1_regularization_strength=0.5050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.98989898989899].
2023-08-22 01:37:16,061 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:37:16,062 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:37:32,895 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:37:32,895 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:37:34,302 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:37:34,302 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:37:36,564 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:37:36,564 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:37:37,009 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.009798000000000001 ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.9191919191919192 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.19191919191919193 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.16161616161616163].
2023-08-22 01:37:37,009 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.009798000000000001 ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.9191919191919192 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.19191919191919193 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.16161616161616163].
2023-08-22 01:37:53,136 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:37:53,136 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:37:55,057 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:37:55,057 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:37:57,030 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:37:57,031 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:38:00,254 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.36363636363636365 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0007171717454545454 ,centered=False ,beta_1=0.020202020202020204 ,beta_2=0.42424242424242425 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.7171717171717172 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.16161616161616163].
2023-08-22 01:38:00,254 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.36363636363636365 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0007171717454545454 ,centered=False ,beta_1=0.020202020202020204 ,beta_2=0.42424242424242425 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.7171717171717172 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.16161616161616163].
2023-08-22 01:38:13,705 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.6060606060606061 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.9595959595959597 ,epsilon=0.0005151515636363636 ,centered=False ,beta_1=0.5757575757575758 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.16161616161616163].
2023-08-22 01:38:13,706 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.6060606060606061 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.9595959595959597 ,epsilon=0.0005151515636363636 ,centered=False ,beta_1=0.5757575757575758 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.16161616161616163].
2023-08-22 01:38:37,500 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.18181818181818182 ,epsilon=0.0006565656909090909 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.16161616161616163 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:38:37,501 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.18181818181818182 ,epsilon=0.0006565656909090909 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.16161616161616163 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:38:59,540 INFO: Applying selection operators for generation 16.
2023-08-22 01:38:59,541 INFO: Applying genetic operators for generation 16.
2023-08-22 01:38:59,543 INFO: Evaluating fitness for for generation 16.
2023-08-22 01:38:59,543 INFO: Will evaluate fitness for 31 individuals.
2023-08-22 01:39:00,137 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:39:00,137 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:39:00,144 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:39:00,144 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:39:00,160 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.98989898989899, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.5050505050505051 ,epsilon=0.0006868687181818181 ,centered=False ,beta_1=0.9393939393939394 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.9494949494949496 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.9595959595959597].
2023-08-22 01:39:00,160 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.98989898989899, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.5050505050505051 ,epsilon=0.0006868687181818181 ,centered=False ,beta_1=0.9393939393939394 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.9494949494949496 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.9595959595959597].
2023-08-22 01:39:00,168 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7777777777777778 ,rho=0.7373737373737375 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.8282828282828284 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.16161616161616163].
2023-08-22 01:39:00,168 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7777777777777778 ,rho=0.7373737373737375 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.8282828282828284 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.16161616161616163].
2023-08-22 01:39:20,351 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:39:20,351 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:39:20,721 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:39:20,721 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:39:22,584 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:39:22,585 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:39:23,655 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.686868686868687, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=1e-10 ,centered=False ,beta_1=0.3535353535353536 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.696969696969697 ,l1_regularization_strength=0.4141414141414142 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.16161616161616163].
2023-08-22 01:39:23,655 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.686868686868687, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=1e-10 ,centered=False ,beta_1=0.3535353535353536 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.696969696969697 ,l1_regularization_strength=0.4141414141414142 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.16161616161616163].
2023-08-22 01:39:41,016 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0067680000000000014 ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.9393939393939394 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.010101010101010055 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.16161616161616163 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.16161616161616163].
2023-08-22 01:39:41,016 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0067680000000000014 ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.9393939393939394 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.010101010101010055 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.16161616161616163 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.16161616161616163].
2023-08-22 01:39:41,072 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.06060606060606061 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0006363636727272727 ,centered=False ,beta_1=0.04040404040404041 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.37373737373737376 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.5151515151515152].
2023-08-22 01:39:41,072 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.06060606060606061 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0006363636727272727 ,centered=False ,beta_1=0.04040404040404041 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.37373737373737376 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.5151515151515152].
2023-08-22 01:39:42,892 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:39:42,892 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:39:46,701 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:39:46,701 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:40:03,517 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:40:03,517 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:40:03,772 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:40:03,772 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:40:05,317 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:40:05,318 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:40:08,150 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:40:08,151 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:40:23,839 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:40:23,839 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:40:24,090 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:40:24,091 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:40:25,949 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:40:25,949 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:40:28,875 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:40:28,875 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:40:44,370 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:40:44,370 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:40:44,425 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:40:44,425 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:40:46,439 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.8282828282828284 ,nesterov=True ,amsgrad=False ,weight_decay=0.008586 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.020202020202020204 ,epsilon=0.0001919192727272727 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.16161616161616163 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:40:46,439 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.8282828282828284 ,nesterov=True ,amsgrad=False ,weight_decay=0.008586 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.020202020202020204 ,epsilon=0.0001919192727272727 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.16161616161616163 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:40:49,582 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:40:49,582 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:41:04,589 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:41:04,589 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:41:04,707 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:41:04,708 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:41:10,150 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0027280000000000004 ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.16161616161616163].
2023-08-22 01:41:10,150 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0027280000000000004 ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.16161616161616163].
2023-08-22 01:41:10,646 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:41:10,647 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:41:24,784 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:41:24,784 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:41:25,520 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.15151515151515152 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9696969696969697 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.08080808080808081].
2023-08-22 01:41:25,520 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.15151515151515152 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9696969696969697 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.08080808080808081].
2023-08-22 01:41:34,126 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:41:34,127 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:41:53,883 INFO: Applying selection operators for generation 17.
2023-08-22 01:41:53,883 INFO: Applying genetic operators for generation 17.
2023-08-22 01:41:53,886 INFO: Evaluating fitness for for generation 17.
2023-08-22 01:41:53,886 INFO: Will evaluate fitness for 29 individuals.
2023-08-22 01:41:54,467 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.8282828282828284 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.686868686868687].
2023-08-22 01:41:54,468 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.8282828282828284 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.686868686868687].
2023-08-22 01:41:54,528 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:41:54,528 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:41:54,541 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.09090909090909091 ,rho=0.20202020202020204 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.3535353535353536 ,beta_2=0.4141414141414142 ,learning_rate_power=-0.24242424242424232 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.4646464646464647 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.31313131313131315 ,beta=0.16161616161616163].
2023-08-22 01:41:54,542 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.09090909090909091 ,rho=0.20202020202020204 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.3535353535353536 ,beta_2=0.4141414141414142 ,learning_rate_power=-0.24242424242424232 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.4646464646464647 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.31313131313131315 ,beta=0.16161616161616163].
2023-08-22 01:41:54,570 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:41:54,570 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:42:14,769 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:42:14,769 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:42:14,818 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.006061000000000001 ,use_ema=True ,ema_momentum=0.020202020202020204 ,rho=0.7474747474747475 ,epsilon=0.00043434349090909084 ,centered=False ,beta_1=0.020202020202020204 ,beta_2=0.494949494949495 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.16161616161616163].
2023-08-22 01:42:14,818 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.006061000000000001 ,use_ema=True ,ema_momentum=0.020202020202020204 ,rho=0.7474747474747475 ,epsilon=0.00043434349090909084 ,centered=False ,beta_1=0.020202020202020204 ,beta_2=0.494949494949495 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.16161616161616163].
2023-08-22 01:42:15,365 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.33333333333333337, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.020202020202020204 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.29292929292929293 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.16161616161616163].
2023-08-22 01:42:15,366 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.33333333333333337, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.020202020202020204 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.29292929292929293 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.16161616161616163].
2023-08-22 01:42:17,370 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:42:17,370 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:42:35,028 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.8080808080808082, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.23232323232323235 ,rho=0.7272727272727273 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.16161616161616163].
2023-08-22 01:42:35,029 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.8080808080808082, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.23232323232323235 ,rho=0.7272727272727273 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.16161616161616163].
2023-08-22 01:42:35,336 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:42:35,337 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:42:37,748 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:42:37,748 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:42:39,589 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:42:39,590 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:42:55,820 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.6666666666666667, momentum=0.787878787878788 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00041414147272727267 ,centered=True ,beta_1=0.04040404040404041 ,beta_2=0.0 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.16161616161616163].
2023-08-22 01:42:55,820 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.6666666666666667, momentum=0.787878787878788 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00041414147272727267 ,centered=True ,beta_1=0.04040404040404041 ,beta_2=0.0 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.16161616161616163].
2023-08-22 01:42:56,745 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:42:56,746 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:42:58,773 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:42:58,774 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:43:00,213 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.004849000000000001 ,use_ema=True ,ema_momentum=0.595959595959596 ,rho=0.9494949494949496 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.7171717171717172 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.16161616161616163].
2023-08-22 01:43:00,213 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.004849000000000001 ,use_ema=True ,ema_momentum=0.595959595959596 ,rho=0.9494949494949496 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.7171717171717172 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.16161616161616163].
2023-08-22 01:43:17,232 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6363636363636365 ,rho=0.6262626262626263 ,epsilon=0.000676767709090909 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.48484848484848486 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8585858585858587 ,beta=0.16161616161616163].
2023-08-22 01:43:17,233 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6363636363636365 ,rho=0.6262626262626263 ,epsilon=0.000676767709090909 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.48484848484848486 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8585858585858587 ,beta=0.16161616161616163].
2023-08-22 01:43:19,324 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:43:19,325 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:43:20,898 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:43:20,898 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:43:27,810 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:43:27,810 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:43:39,713 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:43:39,713 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:43:40,643 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0002222223 ,centered=True ,beta_1=0.15151515151515152 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.6868686868686869 ,initial_accumulator_value=0.22222222222222224 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.16161616161616163].
2023-08-22 01:43:40,644 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0002222223 ,centered=True ,beta_1=0.15151515151515152 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.6868686868686869 ,initial_accumulator_value=0.22222222222222224 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.16161616161616163].
2023-08-22 01:43:42,085 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:43:42,085 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:43:48,529 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:43:48,530 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:44:00,223 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:44:00,224 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:44:03,001 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00035353541818181815 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.38383838383838387 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.4444444444444445].
2023-08-22 01:44:03,001 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00035353541818181815 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.38383838383838387 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.4444444444444445].
2023-08-22 01:44:03,546 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.7373737373737375, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0016170000000000002 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.050505050505050386 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:44:03,546 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.7373737373737375, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0016170000000000002 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.050505050505050386 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:44:21,144 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.19191919191919193, momentum=0.8181818181818182 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.31313131313131315 ,rho=0.5252525252525253 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.9292929292929294 ,beta_2=0.23232323232323235 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.4040404040404041 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.16161616161616163].
2023-08-22 01:44:21,145 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.19191919191919193, momentum=0.8181818181818182 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.31313131313131315 ,rho=0.5252525252525253 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.9292929292929294 ,beta_2=0.23232323232323235 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.4040404040404041 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.16161616161616163].
2023-08-22 01:44:23,668 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:44:23,668 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:44:43,806 INFO: Applying selection operators for generation 18.
2023-08-22 01:44:43,807 INFO: Applying genetic operators for generation 18.
2023-08-22 01:44:43,810 INFO: Evaluating fitness for for generation 18.
2023-08-22 01:44:43,810 INFO: Will evaluate fitness for 28 individuals.
2023-08-22 01:44:44,355 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:44:44,355 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:44:44,357 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:44:44,357 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:44:44,478 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.19191919191919193 ,epsilon=0.0003636364272727272 ,centered=True ,beta_1=0.5353535353535354 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.303030303030303 ,initial_accumulator_value=0.17171717171717174 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.16161616161616163].
2023-08-22 01:44:44,478 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.19191919191919193 ,epsilon=0.0003636364272727272 ,centered=True ,beta_1=0.5353535353535354 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.303030303030303 ,initial_accumulator_value=0.17171717171717174 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.16161616161616163].
2023-08-22 01:44:44,498 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.9595959595959597, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.4444444444444445 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.5252525252525253 ,beta_2=0.787878787878788 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.30303030303030304 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.10101010101010102 ,beta=0.7171717171717172].
2023-08-22 01:44:44,498 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.9595959595959597, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.4444444444444445 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.5252525252525253 ,beta_2=0.787878787878788 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.30303030303030304 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.10101010101010102 ,beta=0.7171717171717172].
2023-08-22 01:45:04,631 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.8484848484848485 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8080808080808082 ,rho=0.6262626262626263 ,epsilon=0.0008686868818181818 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6262626262626263 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.16161616161616163].
2023-08-22 01:45:04,631 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.8484848484848485 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8080808080808082 ,rho=0.6262626262626263 ,epsilon=0.0008686868818181818 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6262626262626263 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.16161616161616163].
2023-08-22 01:45:05,909 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:45:05,910 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:45:07,796 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.020202020202020204, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0045460000000000006 ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.494949494949495 ,epsilon=0.00046464651818181813 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.8080808080808081 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.4747474747474748].
2023-08-22 01:45:07,797 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.020202020202020204, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0045460000000000006 ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.494949494949495 ,epsilon=0.00046464651818181813 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.8080808080808081 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.4747474747474748].
2023-08-22 01:45:07,874 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.32323232323232326, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.009293000000000001 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.98989898989899 ,epsilon=0.0009292929363636363 ,centered=False ,beta_1=0.19191919191919193 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.04040404040404033 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.8989898989898991].
2023-08-22 01:45:07,874 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.32323232323232326, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.009293000000000001 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.98989898989899 ,epsilon=0.0009292929363636363 ,centered=False ,beta_1=0.19191919191919193 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.04040404040404033 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.8989898989898991].
2023-08-22 01:45:26,722 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:45:26,722 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:45:29,608 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.4141414141414142, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=False ,weight_decay=0.005253000000000001 ,use_ema=False ,ema_momentum=0.24242424242424243 ,rho=0.393939393939394 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.12121212121212122 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.16161616161616163].
2023-08-22 01:45:29,608 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.4141414141414142, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=False ,weight_decay=0.005253000000000001 ,use_ema=False ,ema_momentum=0.24242424242424243 ,rho=0.393939393939394 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.12121212121212122 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.16161616161616163].
2023-08-22 01:45:31,454 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:45:31,454 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:45:31,823 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:45:31,823 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:45:47,438 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:45:47,438 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:45:52,029 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5656565656565657 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.48484848484848486 ,learning_rate_power=-0.7676767676767676 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.8181818181818182].
2023-08-22 01:45:52,029 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5656565656565657 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.48484848484848486 ,learning_rate_power=-0.7676767676767676 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.8181818181818182].
2023-08-22 01:45:52,759 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:45:52,760 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:45:52,775 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:45:52,775 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:46:08,814 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.393939393939394, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.4646464646464647 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.11111111111111112 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.08080808080808081].
2023-08-22 01:46:08,814 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.393939393939394, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.4646464646464647 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.11111111111111112 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.08080808080808081].
2023-08-22 01:46:12,971 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:46:12,971 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:46:13,022 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:46:13,022 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:46:24,584 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0.6363636363636365 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.020202020202020204 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.6666666666666667].
2023-08-22 01:46:24,584 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0.6363636363636365 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.020202020202020204 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.6666666666666667].
2023-08-22 01:46:32,990 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.05050505050505051, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.10101010101010102 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.36363636363636365].
2023-08-22 01:46:32,990 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.05050505050505051, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.10101010101010102 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.36363636363636365].
2023-08-22 01:46:33,134 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.030303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00017171725454545453 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.31313131313131304 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.15151515151515152 ,beta=0.16161616161616163].
2023-08-22 01:46:33,134 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.030303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00017171725454545453 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.31313131313131304 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.15151515151515152 ,beta=0.16161616161616163].
2023-08-22 01:46:34,047 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:46:34,048 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:46:47,854 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:46:47,854 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:46:54,664 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:46:54,665 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:46:56,881 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.32323232323232326, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0065660000000000015 ,use_ema=True ,ema_momentum=0.29292929292929293 ,rho=0.787878787878788 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.9393939393939394 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7575757575757577 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.8181818181818182].
2023-08-22 01:46:56,882 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.32323232323232326, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0065660000000000015 ,use_ema=True ,ema_momentum=0.29292929292929293 ,rho=0.787878787878788 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.9393939393939394 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7575757575757577 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.8181818181818182].
2023-08-22 01:47:14,776 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.43434343434343436 ,epsilon=7.070716363636363e-05 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6262626262626263 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4444444444444445 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.16161616161616163].
2023-08-22 01:47:14,776 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.43434343434343436 ,epsilon=7.070716363636363e-05 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6262626262626263 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4444444444444445 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.16161616161616163].
2023-08-22 01:47:21,272 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.0, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.007374000000000001 ,use_ema=True ,ema_momentum=0.07070707070707072 ,rho=0.6262626262626263 ,epsilon=0.00023232330909090908 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.11111111111111105 ,initial_accumulator_value=0.7474747474747475 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5757575757575758 ,beta=0.5454545454545455].
2023-08-22 01:47:21,273 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.0, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.007374000000000001 ,use_ema=True ,ema_momentum=0.07070707070707072 ,rho=0.6262626262626263 ,epsilon=0.00023232330909090908 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.11111111111111105 ,initial_accumulator_value=0.7474747474747475 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5757575757575758 ,beta=0.5454545454545455].
2023-08-22 01:47:45,394 INFO: Applying selection operators for generation 19.
2023-08-22 01:47:45,394 INFO: Applying genetic operators for generation 19.
2023-08-22 01:47:45,396 INFO: Evaluating fitness for for generation 19.
2023-08-22 01:47:45,396 INFO: Will evaluate fitness for 30 individuals.
2023-08-22 01:47:45,947 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:47:45,947 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:47:45,954 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:47:45,954 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:47:46,056 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:47:46,056 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:47:46,124 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:47:46,124 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:48:06,383 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:48:06,383 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:48:06,406 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.05050505050505051, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.003738000000000001 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0005252525727272728 ,centered=False ,beta_1=0.7676767676767677 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.29292929292929293].
2023-08-22 01:48:06,406 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.05050505050505051, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.003738000000000001 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0005252525727272728 ,centered=False ,beta_1=0.7676767676767677 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.29292929292929293].
2023-08-22 01:48:06,513 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.6767676767676768, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6767676767676768 ,rho=0.6262626262626263 ,epsilon=0.0001919192727272727 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.5151515151515151 ,initial_accumulator_value=0.27272727272727276 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.16161616161616163].
2023-08-22 01:48:06,513 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.6767676767676768, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6767676767676768 ,rho=0.6262626262626263 ,epsilon=0.0001919192727272727 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.5151515151515151 ,initial_accumulator_value=0.27272727272727276 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.16161616161616163].
2023-08-22 01:48:07,009 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:48:07,009 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:48:27,278 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.32323232323232326, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.5656565656565657 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7474747474747475 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.16161616161616163].
2023-08-22 01:48:27,278 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.32323232323232326, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.5656565656565657 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7474747474747475 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.16161616161616163].
2023-08-22 01:48:27,416 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6666666666666667, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6464646464646465 ,rho=0.5151515151515152 ,epsilon=0.0003737374363636363 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.20202020202020204 ,l1_regularization_strength=0.7575757575757577 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:48:27,416 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6666666666666667, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6464646464646465 ,rho=0.5151515151515152 ,epsilon=0.0003737374363636363 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.20202020202020204 ,l1_regularization_strength=0.7575757575757577 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:48:30,756 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:48:30,757 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:48:38,641 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:48:38,641 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:48:46,979 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:48:46,979 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:48:50,969 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:48:50,969 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:48:52,173 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:48:52,173 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:48:59,386 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:48:59,386 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:49:07,201 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:49:07,201 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:49:11,993 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:49:11,994 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:49:12,929 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:49:12,929 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:49:19,898 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:49:19,898 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:49:27,566 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:49:27,566 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:49:32,563 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.8181818181818182, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.16161616161616163 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.6666666666666667 ,beta_2=0.12121212121212122 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.36363636363636365 ,l1_regularization_strength=0.8080808080808082 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.16161616161616163].
2023-08-22 01:49:32,563 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.8181818181818182, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.16161616161616163 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.6666666666666667 ,beta_2=0.12121212121212122 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.36363636363636365 ,l1_regularization_strength=0.8080808080808082 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.16161616161616163].
2023-08-22 01:49:33,605 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:49:33,605 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:49:40,250 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:49:40,250 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:49:48,255 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:49:48,255 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:49:55,030 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8585858585858587, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.686868686868687 ,epsilon=0.0007474747727272727 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.595959595959596 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.16161616161616163].
2023-08-22 01:49:55,030 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8585858585858587, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.686868686868687 ,epsilon=0.0007474747727272727 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.595959595959596 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.16161616161616163].
2023-08-22 01:49:55,175 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:49:55,175 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:50:08,481 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:50:08,481 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:50:15,462 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7575757575757577, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.009091 ,use_ema=False ,ema_momentum=0.6161616161616162 ,rho=0.43434343434343436 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.07070707070707072 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4040404040404041 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.27272727272727276].
2023-08-22 01:50:15,462 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7575757575757577, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.009091 ,use_ema=False ,ema_momentum=0.6161616161616162 ,rho=0.43434343434343436 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.07070707070707072 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4040404040404041 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.27272727272727276].
2023-08-22 01:50:18,907 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:50:18,907 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:50:38,798 INFO: Applying selection operators for generation 20.
2023-08-22 01:50:38,799 INFO: Applying genetic operators for generation 20.
2023-08-22 01:50:38,801 INFO: Evaluating fitness for for generation 20.
2023-08-22 01:50:38,801 INFO: Will evaluate fitness for 26 individuals.
2023-08-22 01:50:39,359 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:50:39,360 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:50:39,380 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:50:39,380 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:50:39,384 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.7373737373737375, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.494949494949495 ,rho=0.6262626262626263 ,epsilon=0.0006464646818181818 ,centered=False ,beta_1=0.4040404040404041 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.8383838383838383 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.9696969696969697].
2023-08-22 01:50:39,385 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.7373737373737375, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.494949494949495 ,rho=0.6262626262626263 ,epsilon=0.0006464646818181818 ,centered=False ,beta_1=0.4040404040404041 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.8383838383838383 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.9696969696969697].
2023-08-22 01:50:39,391 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:50:39,391 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:50:58,241 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6565656565656566, momentum=0.27272727272727276 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.8484848484848485 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.98989898989899 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.16161616161616163].
2023-08-22 01:50:58,242 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6565656565656566, momentum=0.27272727272727276 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.8484848484848485 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.98989898989899 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.16161616161616163].
2023-08-22 01:50:59,578 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:50:59,578 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:50:59,858 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:50:59,858 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:50:59,957 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:50:59,957 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:51:18,576 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.32323232323232326, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.020202020202020204 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7777777777777778 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.8686868686868687 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.9797979797979799].
2023-08-22 01:51:18,576 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.32323232323232326, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.020202020202020204 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7777777777777778 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.8686868686868687 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.9797979797979799].
2023-08-22 01:51:19,808 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:51:19,809 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:51:20,183 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0.29292929292929293 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3434343434343435 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.9696969696969697 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.5555555555555556 ,initial_accumulator_value=0.25252525252525254 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:51:20,183 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0.29292929292929293 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3434343434343435 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.9696969696969697 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.5555555555555556 ,initial_accumulator_value=0.25252525252525254 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:51:21,349 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.696969696969697 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.4141414141414142 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.16161616161616163].
2023-08-22 01:51:21,349 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.696969696969697 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.4141414141414142 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.16161616161616163].
2023-08-22 01:51:38,165 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4141414141414142, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.008889000000000001 ,use_ema=True ,ema_momentum=0.25252525252525254 ,rho=0.6262626262626263 ,epsilon=8.080817272727271e-05 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.4141414141414142 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.5757575757575758 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.5858585858585859].
2023-08-22 01:51:38,165 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4141414141414142, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.008889000000000001 ,use_ema=True ,ema_momentum=0.25252525252525254 ,rho=0.6262626262626263 ,epsilon=8.080817272727271e-05 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.4141414141414142 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.5757575757575758 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.5858585858585859].
2023-08-22 01:51:40,948 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.008182 ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.6262626262626263 ,epsilon=0.0005959596363636363 ,centered=True ,beta_1=0.05050505050505051 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9797979797979799 ,beta=0.16161616161616163].
2023-08-22 01:51:40,948 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.008182 ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.6262626262626263 ,epsilon=0.0005959596363636363 ,centered=True ,beta_1=0.05050505050505051 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9797979797979799 ,beta=0.16161616161616163].
2023-08-22 01:51:45,626 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6363636363636365 ,epsilon=0.00041414147272727267 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.2525252525252525 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.8787878787878789].
2023-08-22 01:51:45,627 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6363636363636365 ,epsilon=0.00041414147272727267 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.2525252525252525 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.8787878787878789].
2023-08-22 01:51:52,126 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.04040404040404041 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.8181818181818182].
2023-08-22 01:51:52,126 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.04040404040404041 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.8181818181818182].
2023-08-22 01:52:01,965 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:52:01,965 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:52:04,486 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:52:04,487 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:52:12,906 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:52:12,906 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:52:18,970 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:52:18,970 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:52:22,727 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:52:22,727 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:52:24,864 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:52:24,865 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:52:33,337 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:52:33,338 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:52:40,290 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:52:40,290 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:52:42,987 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:52:42,988 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:53:03,144 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8989898989898991, momentum=0.07070707070707072 ,nesterov=True ,amsgrad=False ,weight_decay=0.005556000000000001 ,use_ema=False ,ema_momentum=0.5555555555555556 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.22222222222222224].
2023-08-22 01:53:03,144 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8989898989898991, momentum=0.07070707070707072 ,nesterov=True ,amsgrad=False ,weight_decay=0.005556000000000001 ,use_ema=False ,ema_momentum=0.5555555555555556 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.22222222222222224].
2023-08-22 01:53:22,675 INFO: Applying selection operators for generation 21.
2023-08-22 01:53:22,676 INFO: Applying genetic operators for generation 21.
2023-08-22 01:53:22,679 INFO: Evaluating fitness for for generation 21.
2023-08-22 01:53:22,679 INFO: Will evaluate fitness for 35 individuals.
2023-08-22 01:53:23,243 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.00020300000000000003 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.17171717171717174 ,learning_rate_power=0.0 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.5656565656565657].
2023-08-22 01:53:23,244 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.00020300000000000003 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.17171717171717174 ,learning_rate_power=0.0 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.5656565656565657].
2023-08-22 01:53:23,264 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.09090909090909091 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5151515151515152 ,beta=0.16161616161616163].
2023-08-22 01:53:23,265 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.09090909090909091 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5151515151515152 ,beta=0.16161616161616163].
2023-08-22 01:53:23,275 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:53:23,275 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:53:23,298 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.10101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0029300000000000007 ,use_ema=True ,ema_momentum=0.24242424242424243 ,rho=0.23232323232323235 ,epsilon=0.0005858586272727272 ,centered=False ,beta_1=0.7272727272727273 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.08080808080808081 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.16161616161616163].
2023-08-22 01:53:23,299 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.10101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0029300000000000007 ,use_ema=True ,ema_momentum=0.24242424242424243 ,rho=0.23232323232323235 ,epsilon=0.0005858586272727272 ,centered=False ,beta_1=0.7272727272727273 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.08080808080808081 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.16161616161616163].
2023-08-22 01:53:42,641 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0.31313131313131315 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0006060606454545455 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.8080808080808081 ,initial_accumulator_value=0.8686868686868687 ,l1_regularization_strength=0.36363636363636365 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.16161616161616163].
2023-08-22 01:53:42,641 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0.31313131313131315 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0006060606454545455 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.8080808080808081 ,initial_accumulator_value=0.8686868686868687 ,l1_regularization_strength=0.36363636363636365 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.16161616161616163].
2023-08-22 01:53:43,459 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:53:43,459 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:53:45,738 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.595959595959596 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.6262626262626263 ,epsilon=0.00032323239090909086 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.9292929292929294 ,l1_regularization_strength=0.686868686868687 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.787878787878788].
2023-08-22 01:53:45,738 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.595959595959596 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.6262626262626263 ,epsilon=0.00032323239090909086 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.9292929292929294 ,l1_regularization_strength=0.686868686868687 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.787878787878788].
2023-08-22 01:53:48,508 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:53:48,508 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:54:04,455 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:54:04,456 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:54:07,145 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:54:07,145 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:54:08,889 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.22222222222222224 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.32323232323232326 ,rho=0.6262626262626263 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.11111111111111112 ,beta=0.12121212121212122].
2023-08-22 01:54:08,889 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.22222222222222224 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.32323232323232326 ,rho=0.6262626262626263 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.11111111111111112 ,beta=0.12121212121212122].
2023-08-22 01:54:09,857 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:54:09,857 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:54:24,889 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:54:24,890 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:54:27,859 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:54:27,860 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:54:28,295 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:54:28,295 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:54:30,349 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:54:30,349 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:54:45,204 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:54:45,205 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:54:48,424 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:54:48,424 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:54:48,999 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.19191919191919193 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.9393939393939394].
2023-08-22 01:54:48,999 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.19191919191919193 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.9393939393939394].
2023-08-22 01:54:50,717 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:54:50,717 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:55:05,510 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:55:05,510 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:55:08,922 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.030303030303030304 ,epsilon=0.0002929293636363636 ,centered=True ,beta_1=0.6565656565656566 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.16161616161616163].
2023-08-22 01:55:08,922 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.030303030303030304 ,epsilon=0.0002929293636363636 ,centered=True ,beta_1=0.6565656565656566 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.16161616161616163].
2023-08-22 01:55:09,245 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:55:09,246 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:55:11,623 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:55:11,623 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:55:26,280 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.595959595959596, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.4040404040404041 ,epsilon=3.030312727272727e-05 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.4141414141414142 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.3535353535353536].
2023-08-22 01:55:26,281 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.595959595959596, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.4040404040404041 ,epsilon=3.030312727272727e-05 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.4141414141414142 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.3535353535353536].
2023-08-22 01:55:27,871 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:55:27,871 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:55:29,425 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.7171717171717172 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.7474747474747475].
2023-08-22 01:55:29,425 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.7171717171717172 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.7474747474747475].
2023-08-22 01:55:32,080 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:55:32,081 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:55:48,574 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:55:48,574 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:55:49,272 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:55:49,273 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:55:50,307 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:55:50,307 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:55:52,497 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:55:52,498 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:56:09,240 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:56:09,240 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:56:09,435 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:56:09,436 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:56:10,645 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:56:10,646 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:56:30,209 INFO: Applying selection operators for generation 22.
2023-08-22 01:56:30,209 INFO: Applying genetic operators for generation 22.
2023-08-22 01:56:30,212 INFO: Evaluating fitness for for generation 22.
2023-08-22 01:56:30,212 INFO: Will evaluate fitness for 28 individuals.
2023-08-22 01:56:30,783 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:56:30,783 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:56:30,787 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0007080000000000002 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.8686868686868687 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.6464646464646465 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.9292929292929293 ,initial_accumulator_value=0.18181818181818182 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:56:30,788 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0007080000000000002 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.8686868686868687 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.6464646464646465 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.9292929292929293 ,initial_accumulator_value=0.18181818181818182 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:56:30,835 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:56:30,835 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:56:30,837 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0008989899090909091 ,centered=False ,beta_1=0.31313131313131315 ,beta_2=0.010101010101010102 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.8989898989898991 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.12121212121212122].
2023-08-22 01:56:30,838 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0008989899090909091 ,centered=False ,beta_1=0.31313131313131315 ,beta_2=0.010101010101010102 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.8989898989898991 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.12121212121212122].
2023-08-22 01:56:51,016 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.16161616161616163 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.16161616161616163].
2023-08-22 01:56:51,016 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.16161616161616163 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.16161616161616163].
2023-08-22 01:56:51,118 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:56:51,118 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:56:54,897 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0045460000000000006 ,use_ema=True ,ema_momentum=0.888888888888889 ,rho=0.6262626262626263 ,epsilon=0.0002727273454545454 ,centered=False ,beta_1=0.6464646464646465 ,beta_2=0.29292929292929293 ,learning_rate_power=-0.7676767676767676 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.33333333333333337 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.16161616161616163].
2023-08-22 01:56:54,897 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0045460000000000006 ,use_ema=True ,ema_momentum=0.888888888888889 ,rho=0.6262626262626263 ,epsilon=0.0002727273454545454 ,centered=False ,beta_1=0.6464646464646465 ,beta_2=0.29292929292929293 ,learning_rate_power=-0.7676767676767676 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.33333333333333337 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.16161616161616163].
2023-08-22 01:56:55,941 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:56:55,941 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:57:12,065 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:57:12,066 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:57:14,273 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:57:14,273 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:57:16,640 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:57:16,640 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:57:22,050 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:57:22,051 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:57:32,513 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.5353535353535354, momentum=0.08080808080808081 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.9292929292929294 ,epsilon=0.0009191919272727272 ,centered=False ,beta_1=0.4747474747474748 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.11111111111111105 ,initial_accumulator_value=0.8686868686868687 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.12121212121212122 ,beta=0.5252525252525253].
2023-08-22 01:57:32,513 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.5353535353535354, momentum=0.08080808080808081 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.9292929292929294 ,epsilon=0.0009191919272727272 ,centered=False ,beta_1=0.4747474747474748 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.11111111111111105 ,initial_accumulator_value=0.8686868686868687 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.12121212121212122 ,beta=0.5252525252525253].
2023-08-22 01:57:34,554 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:57:34,554 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:57:37,240 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:57:37,240 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:57:43,176 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:57:43,177 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:57:55,463 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:57:55,463 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:57:58,852 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:57:58,853 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:58:03,780 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.06060606060606061, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.18181818181818182 ,rho=0.393939393939394 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.22222222222222224 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.5353535353535354 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.15151515151515152 ,beta=0.4444444444444445].
2023-08-22 01:58:03,780 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.06060606060606061, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.18181818181818182 ,rho=0.393939393939394 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.22222222222222224 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.5353535353535354 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.15151515151515152 ,beta=0.4444444444444445].
2023-08-22 01:58:05,040 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:58:05,040 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:58:15,856 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:58:15,856 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:58:19,556 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:58:19,556 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:58:26,030 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.4646464646464647 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.4646464646464647 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.30303030303030304].
2023-08-22 01:58:26,030 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.4646464646464647 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.4646464646464647 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.30303030303030304].
2023-08-22 01:58:27,646 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:58:27,646 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:58:36,085 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:58:36,086 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:58:40,229 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.29292929292929293 ,rho=0.6262626262626263 ,epsilon=0.00023232330909090908 ,centered=False ,beta_1=0.797979797979798 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.21212121212121213].
2023-08-22 01:58:40,229 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.29292929292929293 ,rho=0.6262626262626263 ,epsilon=0.00023232330909090908 ,centered=False ,beta_1=0.797979797979798 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.21212121212121213].
2023-08-22 01:58:56,911 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:58:56,912 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:59:12,847 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:59:12,847 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:59:32,564 INFO: Applying selection operators for generation 23.
2023-08-22 01:59:32,565 INFO: Applying genetic operators for generation 23.
2023-08-22 01:59:32,567 INFO: Evaluating fitness for for generation 23.
2023-08-22 01:59:32,567 INFO: Will evaluate fitness for 26 individuals.
2023-08-22 01:59:33,153 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:59:33,153 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:59:33,159 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:59:33,159 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:59:33,161 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.19191919191919193, momentum=0.8282828282828284 ,nesterov=True ,amsgrad=False ,weight_decay=0.0076770000000000015 ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.686868686868687 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.19191919191919193 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.16161616161616163].
2023-08-22 01:59:33,161 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.19191919191919193, momentum=0.8282828282828284 ,nesterov=True ,amsgrad=False ,weight_decay=0.0076770000000000015 ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.686868686868687 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.19191919191919193 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.16161616161616163].
2023-08-22 01:59:33,197 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:59:33,197 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:59:53,422 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:59:53,422 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:59:53,635 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:59:53,635 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:59:53,934 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:59:53,934 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:59:56,728 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 01:59:56,728 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:00:14,318 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.797979797979798 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.36363636363636365 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.48484848484848486 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.30303030303030304 ,beta=0.16161616161616163].
2023-08-22 02:00:14,319 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.797979797979798 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.36363636363636365 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.48484848484848486 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.30303030303030304 ,beta=0.16161616161616163].
2023-08-22 02:00:14,442 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:00:14,442 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:00:14,891 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7171717171717172, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.5353535353535354 ,rho=0.0 ,epsilon=0.00025252532727272723 ,centered=False ,beta_1=0.4040404040404041 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.43434343434343425 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9696969696969697 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.8686868686868687].
2023-08-22 02:00:14,892 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7171717171717172, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.5353535353535354 ,rho=0.0 ,epsilon=0.00025252532727272723 ,centered=False ,beta_1=0.4040404040404041 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.43434343434343425 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9696969696969697 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.8686868686868687].
2023-08-22 02:00:16,949 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:00:16,949 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:00:34,896 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:00:34,897 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:00:37,769 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:00:37,769 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:00:37,993 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.8282828282828284, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.7272727272727273 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.3535353535353536 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.16161616161616163].
2023-08-22 02:00:37,993 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.8282828282828284, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.7272727272727273 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.3535353535353536 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.16161616161616163].
2023-08-22 02:00:38,464 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9595959595959597 ,rho=0.9696969696969697 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.5252525252525253 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.29292929292929293 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.4545454545454546].
2023-08-22 02:00:38,464 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9595959595959597 ,rho=0.9696969696969697 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.5252525252525253 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.29292929292929293 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.4545454545454546].
2023-08-22 02:00:55,825 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:00:55,825 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:00:57,941 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:00:57,941 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:01:01,552 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:01:01,552 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:01:10,728 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:01:10,728 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:01:16,369 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:01:16,369 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:01:18,224 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:01:18,224 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:01:22,279 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:01:22,280 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:01:31,628 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.8383838383838385, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.004243000000000001 ,use_ema=True ,ema_momentum=1.0 ,rho=0.6262626262626263 ,epsilon=0.0005656566090909091 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:01:31,629 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.8383838383838385, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.004243000000000001 ,use_ema=True ,ema_momentum=1.0 ,rho=0.6262626262626263 ,epsilon=0.0005656566090909091 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:01:36,831 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:01:36,831 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:01:56,840 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:01:56,840 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:02:16,550 INFO: Applying selection operators for generation 24.
2023-08-22 02:02:16,551 INFO: Applying genetic operators for generation 24.
2023-08-22 02:02:16,553 INFO: Evaluating fitness for for generation 24.
2023-08-22 02:02:16,553 INFO: Will evaluate fitness for 26 individuals.
2023-08-22 02:02:17,115 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:02:17,115 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:02:17,142 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:02:17,142 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:02:17,191 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:02:17,192 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:02:17,202 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:02:17,202 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:02:37,362 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:02:37,363 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:02:37,474 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:02:37,475 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:02:37,723 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:02:37,723 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:02:38,121 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:02:38,121 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:02:57,434 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:02:57,434 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:02:57,699 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:02:57,699 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:02:58,234 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:02:58,234 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:02:58,318 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:02:58,318 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:03:18,294 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:03:18,295 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:03:18,408 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:03:18,408 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:03:18,557 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:03:18,557 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:03:18,817 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:03:18,817 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:03:38,410 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:03:38,411 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:03:38,933 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.4444444444444445, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.001314 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0008282828454545454 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.3737373737373737 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.9595959595959597].
2023-08-22 02:03:38,933 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.4444444444444445, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.001314 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0008282828454545454 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.3737373737373737 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.9595959595959597].
2023-08-22 02:03:39,260 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.008081 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.9292929292929294 ,beta_2=0.5252525252525253 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7676767676767677 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.16161616161616163].
2023-08-22 02:03:39,260 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.008081 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.9292929292929294 ,beta_2=0.5252525252525253 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7676767676767677 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.16161616161616163].
2023-08-22 02:03:40,163 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:03:40,163 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:03:58,419 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:03:58,419 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:04:00,894 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.0, momentum=0.4444444444444445 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.787878787878788 ,rho=0.8585858585858587 ,epsilon=0.000676767709090909 ,centered=False ,beta_1=0.9191919191919192 ,beta_2=0.8989898989898991 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.42424242424242425 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:04:00,894 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.0, momentum=0.4444444444444445 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.787878787878788 ,rho=0.8585858585858587 ,epsilon=0.000676767709090909 ,centered=False ,beta_1=0.9191919191919192 ,beta_2=0.8989898989898991 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.42424242424242425 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:04:02,833 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:04:02,833 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:04:04,488 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:04:04,488 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:04:19,145 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.020202020202020204, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.05050505050505051 ,rho=0.4141414141414142 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.8989898989898991 ,beta_2=0.595959595959596 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5757575757575758 ,beta=0.16161616161616163].
2023-08-22 02:04:19,146 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.020202020202020204, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.05050505050505051 ,rho=0.4141414141414142 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.8989898989898991 ,beta_2=0.595959595959596 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5757575757575758 ,beta=0.16161616161616163].
2023-08-22 02:04:42,810 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9191919191919192, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.797979797979798 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.6262626262626263].
2023-08-22 02:04:42,810 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9191919191919192, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.797979797979798 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.6262626262626263].
2023-08-22 02:05:02,164 INFO: Applying selection operators for generation 25.
2023-08-22 02:05:02,164 INFO: Applying genetic operators for generation 25.
2023-08-22 02:05:02,167 INFO: Evaluating fitness for for generation 25.
2023-08-22 02:05:02,167 INFO: Will evaluate fitness for 29 individuals.
2023-08-22 02:05:02,732 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:05:02,732 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:05:02,738 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8383838383838385 ,rho=0.37373737373737376 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.46464646464646464 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=0.16161616161616163].
2023-08-22 02:05:02,738 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8383838383838385 ,rho=0.37373737373737376 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.46464646464646464 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=0.16161616161616163].
2023-08-22 02:05:02,758 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:05:02,759 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:05:02,777 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:05:02,778 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:05:22,730 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.3535353535353536, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.08080808080808081 ,epsilon=0.0007575757818181818 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.5353535353535354].
2023-08-22 02:05:22,730 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.3535353535353536, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.08080808080808081 ,epsilon=0.0007575757818181818 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.5353535353535354].
2023-08-22 02:05:23,311 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:05:23,311 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:05:23,563 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:05:23,563 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:05:35,539 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:05:35,540 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:05:43,782 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.009394000000000001 ,use_ema=True ,ema_momentum=0.9292929292929294 ,rho=0.20202020202020204 ,epsilon=0.0004242424818181818 ,centered=False ,beta_1=0.6060606060606061 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.3737373737373737 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.16161616161616163].
2023-08-22 02:05:43,783 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.009394000000000001 ,use_ema=True ,ema_momentum=0.9292929292929294 ,rho=0.20202020202020204 ,epsilon=0.0004242424818181818 ,centered=False ,beta_1=0.6060606060606061 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.3737373737373737 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.16161616161616163].
2023-08-22 02:05:44,876 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:05:44,877 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:05:47,038 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.007980000000000001 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.010101010101010102].
2023-08-22 02:05:47,038 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.007980000000000001 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.010101010101010102].
2023-08-22 02:05:56,042 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:05:56,042 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:06:05,796 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:06:05,796 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:06:08,219 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:06:08,220 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:06:11,442 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:06:11,442 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:06:17,056 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:06:17,056 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:06:26,656 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:06:26,656 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:06:28,497 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.595959595959596 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.24242424242424243 ,learning_rate_power=-0.5353535353535352 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.010101010101010102 ,beta=0.16161616161616163].
2023-08-22 02:06:28,497 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.595959595959596 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.24242424242424243 ,learning_rate_power=-0.5353535353535352 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.010101010101010102 ,beta=0.16161616161616163].
2023-08-22 02:06:31,708 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:06:31,708 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:06:37,808 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5353535353535354 ,rho=0.5858585858585859 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5555555555555556 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.5858585858585859 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:06:37,808 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5353535353535354 ,rho=0.5858585858585859 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5555555555555556 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.5858585858585859 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:06:48,349 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:06:48,349 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:06:51,746 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:06:51,746 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:06:51,957 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.7777777777777778, momentum=0.43434343434343436 ,nesterov=True ,amsgrad=True ,weight_decay=0.0034350000000000006 ,use_ema=True ,ema_momentum=0.6666666666666667 ,rho=0.06060606060606061 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.12121212121212122].
2023-08-22 02:06:51,958 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.7777777777777778, momentum=0.43434343434343436 ,nesterov=True ,amsgrad=True ,weight_decay=0.0034350000000000006 ,use_ema=True ,ema_momentum=0.6666666666666667 ,rho=0.06060606060606061 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.12121212121212122].
2023-08-22 02:07:01,869 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:07:01,869 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:07:09,262 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:07:09,263 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:07:12,173 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7373737373737375 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.16161616161616163].
2023-08-22 02:07:12,174 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7373737373737375 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.16161616161616163].
2023-08-22 02:07:16,640 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.787878787878788, momentum=0.24242424242424243 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7272727272727273 ,initial_accumulator_value=0.2828282828282829 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.16161616161616163].
2023-08-22 02:07:16,640 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.787878787878788, momentum=0.24242424242424243 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7272727272727273 ,initial_accumulator_value=0.2828282828282829 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.16161616161616163].
2023-08-22 02:07:29,956 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:07:29,956 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:07:35,586 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:07:35,586 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:07:55,012 INFO: Applying selection operators for generation 26.
2023-08-22 02:07:55,012 INFO: Applying genetic operators for generation 26.
2023-08-22 02:07:55,015 INFO: Evaluating fitness for for generation 26.
2023-08-22 02:07:55,015 INFO: Will evaluate fitness for 36 individuals.
2023-08-22 02:07:55,581 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:07:55,582 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:07:55,584 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:07:55,584 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:07:55,625 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:07:55,625 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:07:55,641 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.10101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.595959595959596 ,rho=0.7070707070707072 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.38383838383838387 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.2929292929292928 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.16161616161616163].
2023-08-22 02:07:55,641 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.10101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.595959595959596 ,rho=0.7070707070707072 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.38383838383838387 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.2929292929292928 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.16161616161616163].
2023-08-22 02:08:16,191 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:08:16,191 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:08:16,447 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:08:16,447 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:08:16,893 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:08:16,894 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:08:19,108 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:08:19,109 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:08:36,321 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:08:36,321 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:08:36,831 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7070707070707072 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6161616161616162 ,rho=0.5858585858585859 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.595959595959596].
2023-08-22 02:08:36,832 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7070707070707072 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6161616161616162 ,rho=0.5858585858585859 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.595959595959596].
2023-08-22 02:08:37,535 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:08:37,535 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:08:40,069 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.7676767676767677 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.38383838383838387 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.5353535353535354 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.15151515151515152 ,beta=0.16161616161616163].
2023-08-22 02:08:40,069 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.7676767676767677 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.38383838383838387 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.5353535353535354 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.15151515151515152 ,beta=0.16161616161616163].
2023-08-22 02:08:56,433 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.07070707070707072 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.5555555555555556 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.16161616161616163].
2023-08-22 02:08:56,433 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.07070707070707072 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.5555555555555556 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.16161616161616163].
2023-08-22 02:08:58,089 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.38383838383838387, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0006070000000000001 ,use_ema=True ,ema_momentum=0.8585858585858587 ,rho=0.7171717171717172 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.6868686868686869 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9595959595959597 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.16161616161616163].
2023-08-22 02:08:58,089 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.38383838383838387, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0006070000000000001 ,use_ema=True ,ema_momentum=0.8585858585858587 ,rho=0.7171717171717172 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.6868686868686869 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9595959595959597 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.16161616161616163].
2023-08-22 02:09:00,940 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:09:00,941 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:09:02,954 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:09:02,954 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:09:21,355 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:09:21,355 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:09:23,412 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:09:23,412 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:09:24,119 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0009797979818181818 ,centered=True ,beta_1=0.8686868686868687 ,beta_2=0.22222222222222224 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.010101010101010102].
2023-08-22 02:09:24,119 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0009797979818181818 ,centered=True ,beta_1=0.8686868686868687 ,beta_2=0.22222222222222224 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.010101010101010102].
2023-08-22 02:09:30,498 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:09:30,498 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:09:42,357 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:09:42,357 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:09:43,714 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:09:43,714 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:09:48,914 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:09:48,914 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:09:50,761 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:09:50,761 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:10:02,841 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:10:02,842 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:10:04,718 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:10:04,718 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:10:09,574 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.010101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=0.001213 ,use_ema=False ,ema_momentum=0.4444444444444445 ,rho=0.7777777777777778 ,epsilon=0.00032323239090909086 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.8989898989898991 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.16161616161616163].
2023-08-22 02:10:09,575 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.010101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=0.001213 ,use_ema=False ,ema_momentum=0.4444444444444445 ,rho=0.7777777777777778 ,epsilon=0.00032323239090909086 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.8989898989898991 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.16161616161616163].
2023-08-22 02:10:11,010 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:10:11,010 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:10:23,211 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:10:23,211 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:10:25,153 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:10:25,153 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:10:31,885 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4545454545454546, momentum=0.010101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5151515151515152 ,rho=0.4040404040404041 ,epsilon=0.00031313138181818175 ,centered=False ,beta_1=0.797979797979798 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.6666666666666667 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.16161616161616163].
2023-08-22 02:10:31,885 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4545454545454546, momentum=0.010101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5151515151515152 ,rho=0.4040404040404041 ,epsilon=0.00031313138181818175 ,centered=False ,beta_1=0.797979797979798 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.6666666666666667 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.16161616161616163].
2023-08-22 02:10:34,176 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:10:34,177 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:10:44,228 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:10:44,228 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:10:45,533 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6767676767676768 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.686868686868687 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:10:45,533 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6767676767676768 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.686868686868687 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:10:55,712 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:10:55,712 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:10:55,858 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:10:55,858 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:11:15,811 INFO: Applying selection operators for generation 27.
2023-08-22 02:11:15,812 INFO: Applying genetic operators for generation 27.
2023-08-22 02:11:15,815 INFO: Evaluating fitness for for generation 27.
2023-08-22 02:11:15,815 INFO: Will evaluate fitness for 34 individuals.
2023-08-22 02:11:16,376 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.006667000000000001 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.5454545454545455 ,epsilon=0.0009292929363636363 ,centered=False ,beta_1=0.7777777777777778 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.16161616161616163].
2023-08-22 02:11:16,377 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.006667000000000001 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.5454545454545455 ,epsilon=0.0009292929363636363 ,centered=False ,beta_1=0.7777777777777778 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.16161616161616163].
2023-08-22 02:11:16,380 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:11:16,380 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:11:16,382 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:11:16,382 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:11:16,490 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:11:16,491 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:11:36,816 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:11:36,817 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:11:36,950 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0004242424818181818 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.98989898989899 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.27272727272727276].
2023-08-22 02:11:36,950 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0004242424818181818 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.98989898989899 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.27272727272727276].
2023-08-22 02:11:36,982 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:11:36,982 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:11:40,063 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7373737373737375 ,rho=0.6262626262626263 ,epsilon=0.0003030303727272727 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.37373737373737376 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4040404040404041 ,l1_regularization_strength=0.4646464646464647 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.10101010101010102].
2023-08-22 02:11:40,063 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7373737373737375 ,rho=0.6262626262626263 ,epsilon=0.0003030303727272727 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.37373737373737376 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4040404040404041 ,l1_regularization_strength=0.4646464646464647 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.10101010101010102].
2023-08-22 02:11:57,147 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:11:57,147 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:11:57,767 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:11:57,767 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:12:01,018 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:12:01,018 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:12:04,255 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:12:04,256 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:12:18,258 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0004242424818181818 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.5353535353535354 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:12:18,259 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0004242424818181818 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.5353535353535354 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:12:19,213 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00026262633636363634 ,centered=False ,beta_1=0.11111111111111112 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:12:19,214 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00026262633636363634 ,centered=False ,beta_1=0.11111111111111112 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:12:21,440 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.008889000000000001 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.32323232323232326 ,epsilon=0.0009797979818181818 ,centered=False ,beta_1=0.8787878787878789 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8080808080808082 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.16161616161616163].
2023-08-22 02:12:21,440 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.008889000000000001 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.32323232323232326 ,epsilon=0.0009797979818181818 ,centered=False ,beta_1=0.8787878787878789 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8080808080808082 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.16161616161616163].
2023-08-22 02:12:24,566 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.6161616161616162, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.006970000000000001 ,use_ema=False ,ema_momentum=0.7676767676767677 ,rho=0.020202020202020204 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7676767676767677 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.787878787878788].
2023-08-22 02:12:24,566 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.6161616161616162, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.006970000000000001 ,use_ema=False ,ema_momentum=0.7676767676767677 ,rho=0.020202020202020204 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7676767676767677 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.787878787878788].
2023-08-22 02:12:38,169 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:12:38,169 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:12:41,856 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:12:41,856 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:12:46,779 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9090909090909092, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5858585858585859 ,rho=0.23232323232323235 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.16161616161616163].
2023-08-22 02:12:46,780 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9090909090909092, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5858585858585859 ,rho=0.23232323232323235 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.16161616161616163].
2023-08-22 02:12:58,167 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:12:58,168 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:12:58,929 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.787878787878788 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.43434343434343436 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.3535353535353535 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.31313131313131315 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.48484848484848486].
2023-08-22 02:12:58,929 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.787878787878788 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.43434343434343436 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.3535353535353535 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.31313131313131315 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.48484848484848486].
2023-08-22 02:13:02,244 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5252525252525253, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.686868686868687 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.030303030303030304 ,learning_rate_power=-0.46464646464646464 ,initial_accumulator_value=0.8787878787878789 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.4444444444444445].
2023-08-22 02:13:02,245 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5252525252525253, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.686868686868687 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.030303030303030304 ,learning_rate_power=-0.46464646464646464 ,initial_accumulator_value=0.8787878787878789 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.4444444444444445].
2023-08-22 02:13:10,905 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:13:10,905 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:13:18,958 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:13:18,959 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:13:22,733 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.38383838383838387, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.8787878787878789 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.31313131313131315 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.16161616161616163].
2023-08-22 02:13:22,734 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.38383838383838387, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.8787878787878789 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.31313131313131315 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.16161616161616163].
2023-08-22 02:13:25,425 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:13:25,425 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:13:31,288 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:13:31,288 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:13:39,325 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:13:39,325 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:13:43,700 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:13:43,700 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:13:46,220 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:13:46,220 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:13:52,451 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:13:52,451 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:14:04,087 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:14:04,087 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:14:06,722 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:14:06,723 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:14:12,886 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:14:12,886 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:14:32,440 INFO: Applying selection operators for generation 28.
2023-08-22 02:14:32,440 INFO: Applying genetic operators for generation 28.
2023-08-22 02:14:32,444 INFO: Evaluating fitness for for generation 28.
2023-08-22 02:14:32,444 INFO: Will evaluate fitness for 32 individuals.
2023-08-22 02:14:32,981 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.4040404040404041, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0009393939454545454 ,centered=False ,beta_1=0.8383838383838385 ,beta_2=0.19191919191919193 ,learning_rate_power=-0.9191919191919192 ,initial_accumulator_value=0.3535353535353536 ,l1_regularization_strength=0.4646464646464647 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.2828282828282829].
2023-08-22 02:14:32,982 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.4040404040404041, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0009393939454545454 ,centered=False ,beta_1=0.8383838383838385 ,beta_2=0.19191919191919193 ,learning_rate_power=-0.9191919191919192 ,initial_accumulator_value=0.3535353535353536 ,l1_regularization_strength=0.4646464646464647 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.2828282828282829].
2023-08-22 02:14:32,997 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:14:32,997 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:14:33,144 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.07070707070707072, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0005858586272727272 ,centered=False ,beta_1=0.5050505050505051 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.8181818181818182].
2023-08-22 02:14:33,145 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.07070707070707072, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0005858586272727272 ,centered=False ,beta_1=0.5050505050505051 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.8181818181818182].
2023-08-22 02:14:33,151 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=1e-06 ,use_ema=False ,ema_momentum=0.7474747474747475 ,rho=0.4444444444444445 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.12121212121212122 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.12121212121212122 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6666666666666667 ,beta=0.16161616161616163].
2023-08-22 02:14:33,151 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=1e-06 ,use_ema=False ,ema_momentum=0.7474747474747475 ,rho=0.4444444444444445 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.12121212121212122 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.12121212121212122 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6666666666666667 ,beta=0.16161616161616163].
2023-08-22 02:14:53,172 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:14:53,172 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:14:56,529 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.05050505050505051, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.37373737373737376 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.9393939393939394 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.8181818181818182 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.686868686868687].
2023-08-22 02:14:56,530 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.05050505050505051, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.37373737373737376 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.9393939393939394 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.8181818181818182 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.686868686868687].
2023-08-22 02:14:56,637 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:14:56,637 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:15:07,929 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:15:07,929 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:15:14,076 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:15:14,076 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:15:16,851 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.12121212121212122, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.006364000000000001 ,use_ema=True ,ema_momentum=0.4141414141414142 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.33333333333333337 ,beta_2=0.4444444444444445 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.494949494949495 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.38383838383838387 ,beta=0.16161616161616163].
2023-08-22 02:15:16,851 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.12121212121212122, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.006364000000000001 ,use_ema=True ,ema_momentum=0.4141414141414142 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.33333333333333337 ,beta_2=0.4444444444444445 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.494949494949495 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.38383838383838387 ,beta=0.16161616161616163].
2023-08-22 02:15:17,445 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:15:17,445 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:15:28,613 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:15:28,613 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:15:34,537 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.8686868686868687 ,epsilon=0.00018181826363636362 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.16161616161616163].
2023-08-22 02:15:34,537 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.8686868686868687 ,epsilon=0.00018181826363636362 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.16161616161616163].
2023-08-22 02:15:37,745 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5757575757575758, momentum=0.7373737373737375 ,nesterov=True ,amsgrad=False ,weight_decay=0.0065660000000000015 ,use_ema=True ,ema_momentum=0.7070707070707072 ,rho=0.9797979797979799 ,epsilon=0.00010101019090909089 ,centered=False ,beta_1=0.20202020202020204 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.08080808080808081 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.7070707070707072].
2023-08-22 02:15:37,745 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5757575757575758, momentum=0.7373737373737375 ,nesterov=True ,amsgrad=False ,weight_decay=0.0065660000000000015 ,use_ema=True ,ema_momentum=0.7070707070707072 ,rho=0.9797979797979799 ,epsilon=0.00010101019090909089 ,centered=False ,beta_1=0.20202020202020204 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.08080808080808081 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.7070707070707072].
2023-08-22 02:15:38,032 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.26262626262626265 ,epsilon=0.0005252525727272728 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.42424242424242425].
2023-08-22 02:15:38,032 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.26262626262626265 ,epsilon=0.0005252525727272728 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.42424242424242425].
2023-08-22 02:15:49,249 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.3434343434343435, momentum=0.696969696969697 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.8585858585858587 ,epsilon=0.0009696969727272727 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.13131313131313133 ,l1_regularization_strength=0.33333333333333337 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.8989898989898991].
2023-08-22 02:15:49,249 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.3434343434343435, momentum=0.696969696969697 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.8585858585858587 ,epsilon=0.0009696969727272727 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.13131313131313133 ,l1_regularization_strength=0.33333333333333337 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.8989898989898991].
2023-08-22 02:15:56,772 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.595959595959596, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.005253000000000001 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0005555556 ,centered=False ,beta_1=0.8282828282828284 ,beta_2=0.09090909090909091 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.18181818181818182 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.15151515151515152].
2023-08-22 02:15:56,772 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.595959595959596, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.005253000000000001 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0005555556 ,centered=False ,beta_1=0.8282828282828284 ,beta_2=0.09090909090909091 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.18181818181818182 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.15151515151515152].
2023-08-22 02:15:58,660 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.010101010101010102 ,epsilon=0.0008686868818181818 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:15:58,660 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.010101010101010102 ,epsilon=0.0008686868818181818 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:16:02,552 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:16:02,552 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:16:15,021 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:16:15,021 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:16:22,534 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:16:22,535 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:16:23,086 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.4747474747474748 ,epsilon=0.0005252525727272728 ,centered=False ,beta_1=0.7171717171717172 ,beta_2=0.5252525252525253 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.16161616161616163].
2023-08-22 02:16:23,087 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.4747474747474748 ,epsilon=0.0005252525727272728 ,centered=False ,beta_1=0.7171717171717172 ,beta_2=0.5252525252525253 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.16161616161616163].
2023-08-22 02:16:23,338 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:16:23,338 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:16:35,778 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.31313131313131315, momentum=0.393939393939394 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0007676767909090908 ,centered=False ,beta_1=0.8383838383838385 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.24242424242424232 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.696969696969697 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.16161616161616163].
2023-08-22 02:16:35,778 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.31313131313131315, momentum=0.393939393939394 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0007676767909090908 ,centered=False ,beta_1=0.8383838383838385 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.24242424242424232 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.696969696969697 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.16161616161616163].
2023-08-22 02:16:43,430 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.5454545454545455, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7272727272727273 ,rho=0.6262626262626263 ,epsilon=0.00041414147272727267 ,centered=True ,beta_1=0.06060606060606061 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.6767676767676768 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.16161616161616163].
2023-08-22 02:16:43,430 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.5454545454545455, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7272727272727273 ,rho=0.6262626262626263 ,epsilon=0.00041414147272727267 ,centered=True ,beta_1=0.06060606060606061 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.6767676767676768 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.16161616161616163].
2023-08-22 02:16:43,578 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:16:43,578 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:16:57,300 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:16:57,300 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:16:59,488 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:16:59,489 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:17:03,758 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:17:03,758 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:17:07,483 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6666666666666667, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.37373737373737376 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.8989898989898991 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.13131313131313133 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.16161616161616163].
2023-08-22 02:17:07,483 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6666666666666667, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.37373737373737376 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.8989898989898991 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.13131313131313133 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.16161616161616163].
2023-08-22 02:17:17,659 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:17:17,659 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:17:21,249 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:17:21,249 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:17:41,315 INFO: Applying selection operators for generation 29.
2023-08-22 02:17:41,315 INFO: Applying genetic operators for generation 29.
2023-08-22 02:17:41,318 INFO: Evaluating fitness for for generation 29.
2023-08-22 02:17:41,318 INFO: Will evaluate fitness for 30 individuals.
2023-08-22 02:17:41,912 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4747474747474748, momentum=0.43434343434343436 ,nesterov=True ,amsgrad=True ,weight_decay=0.0047480000000000005 ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0002727273454545454 ,centered=False ,beta_1=0.8383838383838385 ,beta_2=0.7171717171717172 ,learning_rate_power=-0.8484848484848485 ,initial_accumulator_value=0.696969696969697 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.16161616161616163].
2023-08-22 02:17:41,912 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4747474747474748, momentum=0.43434343434343436 ,nesterov=True ,amsgrad=True ,weight_decay=0.0047480000000000005 ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0002727273454545454 ,centered=False ,beta_1=0.8383838383838385 ,beta_2=0.7171717171717172 ,learning_rate_power=-0.8484848484848485 ,initial_accumulator_value=0.696969696969697 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.16161616161616163].
2023-08-22 02:17:41,913 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:17:41,914 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:17:41,919 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:17:41,919 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:17:41,922 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:17:41,922 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:18:02,363 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:18:02,364 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:18:02,427 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8181818181818182, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.30303030303030304 ,rho=0.6262626262626263 ,epsilon=0.0002020202818181818 ,centered=True ,beta_1=0.686868686868687 ,beta_2=0.9595959595959597 ,learning_rate_power=-0.31313131313131304 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.09090909090909091].
2023-08-22 02:18:02,427 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8181818181818182, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.30303030303030304 ,rho=0.6262626262626263 ,epsilon=0.0002020202818181818 ,centered=True ,beta_1=0.686868686868687 ,beta_2=0.9595959595959597 ,learning_rate_power=-0.31313131313131304 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.09090909090909091].
2023-08-22 02:18:02,774 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7777777777777778, momentum=0.09090909090909091 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.08080808080808081 ,rho=0.7272727272727273 ,epsilon=6.060615454545454e-05 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.08080808080808081 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.16161616161616163].
2023-08-22 02:18:02,775 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7777777777777778, momentum=0.09090909090909091 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.08080808080808081 ,rho=0.7272727272727273 ,epsilon=6.060615454545454e-05 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.08080808080808081 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.16161616161616163].
2023-08-22 02:18:06,243 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:18:06,243 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:18:22,930 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.27272727272727276, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.001 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.7575757575757577 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:18:22,930 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.27272727272727276, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.001 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.7575757575757577 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:18:26,298 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:18:26,299 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:18:26,605 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:18:26,605 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:18:27,063 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:18:27,063 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:18:46,564 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:18:46,564 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:18:46,767 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:18:46,768 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:18:47,562 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:18:47,562 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:18:48,561 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.26262626262626265 ,epsilon=0.0005252525727272728 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:18:48,562 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.26262626262626265 ,epsilon=0.0005252525727272728 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:19:06,689 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.42424242424242425].
2023-08-22 02:19:06,689 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.42424242424242425].
2023-08-22 02:19:06,912 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:19:06,912 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:19:08,657 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:19:08,657 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:19:13,486 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:19:13,487 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:19:25,918 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:19:25,919 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:19:27,704 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:19:27,705 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:19:29,207 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:19:29,207 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:19:34,148 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0008989899090909091 ,centered=False ,beta_1=0.3434343434343435 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.31313131313131315 ,l1_regularization_strength=0.4141414141414142 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.16161616161616163].
2023-08-22 02:19:34,149 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0008989899090909091 ,centered=False ,beta_1=0.3434343434343435 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.31313131313131315 ,l1_regularization_strength=0.4141414141414142 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.16161616161616163].
2023-08-22 02:19:46,279 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:19:46,279 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:19:47,997 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.8787878787878789 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.9797979797979799 ,beta_2=0.030303030303030304 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.27272727272727276 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.16161616161616163].
2023-08-22 02:19:47,997 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.8787878787878789 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.9797979797979799 ,beta_2=0.030303030303030304 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.27272727272727276 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.16161616161616163].
2023-08-22 02:19:49,479 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:19:49,479 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:20:06,493 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:20:06,493 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:20:09,906 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:20:09,906 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:20:14,425 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.11111111111111112, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.8181818181818181 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.13131313131313133].
2023-08-22 02:20:14,425 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.11111111111111112, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.8181818181818181 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.13131313131313133].
2023-08-22 02:20:36,882 INFO: Applying selection operators for generation 30.
2023-08-22 02:20:36,883 INFO: Applying genetic operators for generation 30.
2023-08-22 02:20:36,885 INFO: Evaluating fitness for for generation 30.
2023-08-22 02:20:36,885 INFO: Will evaluate fitness for 24 individuals.
2023-08-22 02:20:37,429 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.42424242424242425, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.5252525252525253 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.31313131313131304 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.4747474747474748 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.8383838383838385].
2023-08-22 02:20:37,430 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.42424242424242425, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.5252525252525253 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.31313131313131304 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.4747474747474748 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.8383838383838385].
2023-08-22 02:20:37,461 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:20:37,461 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:20:37,475 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7474747474747475, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.08080808080808081 ,rho=0.6262626262626263 ,epsilon=0.0009191919272727272 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.2727272727272727 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.9090909090909092].
2023-08-22 02:20:37,475 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7474747474747475, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.08080808080808081 ,rho=0.6262626262626263 ,epsilon=0.0009191919272727272 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.2727272727272727 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.9090909090909092].
2023-08-22 02:20:37,479 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:20:37,479 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:20:58,217 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:20:58,217 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:20:58,952 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:20:58,953 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:21:01,785 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.004142000000000001 ,use_ema=True ,ema_momentum=0.7676767676767677 ,rho=0.26262626262626265 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.7676767676767677 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.16161616161616163].
2023-08-22 02:21:01,785 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.004142000000000001 ,use_ema=True ,ema_momentum=0.7676767676767677 ,rho=0.26262626262626265 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.7676767676767677 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.16161616161616163].
2023-08-22 02:21:02,123 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.11111111111111112, momentum=0.6767676767676768 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.6262626262626263 ,epsilon=0.0008484848636363636 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.6464646464646465 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.9191919191919192].
2023-08-22 02:21:02,123 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.11111111111111112, momentum=0.6767676767676768 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.6262626262626263 ,epsilon=0.0008484848636363636 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.6464646464646465 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.9191919191919192].
2023-08-22 02:21:18,380 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:21:18,380 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:21:19,649 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:21:19,649 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:21:20,898 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:21:20,898 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:21:26,305 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.8181818181818182, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.4141414141414142 ,epsilon=0.0002020202818181818 ,centered=False ,beta_1=0.787878787878788 ,beta_2=0.787878787878788 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.4040404040404041 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.16161616161616163].
2023-08-22 02:21:26,305 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.8181818181818182, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.4141414141414142 ,epsilon=0.0002020202818181818 ,centered=False ,beta_1=0.787878787878788 ,beta_2=0.787878787878788 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.4040404040404041 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.16161616161616163].
2023-08-22 02:21:38,629 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8383838383838385, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.5151515151515152 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.11111111111111112 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.05050505050505051].
2023-08-22 02:21:38,630 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8383838383838385, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.5151515151515152 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.11111111111111112 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.05050505050505051].
2023-08-22 02:21:40,228 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:21:40,228 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:21:41,126 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:21:41,126 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:21:44,662 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:21:44,662 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:22:01,379 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:22:01,379 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:22:02,156 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6666666666666667 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.2222222222222222 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.48484848484848486 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.16161616161616163].
2023-08-22 02:22:02,157 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6666666666666667 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.2222222222222222 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.48484848484848486 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.16161616161616163].
2023-08-22 02:22:03,485 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0.12121212121212122 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.16161616161616163].
2023-08-22 02:22:03,486 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0.12121212121212122 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.16161616161616163].
2023-08-22 02:22:04,790 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:22:04,790 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:22:20,324 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:22:20,324 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:22:22,315 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.17171717171717174, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6767676767676768 ,rho=0.9797979797979799 ,epsilon=0.0008080808272727272 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.24242424242424232 ,initial_accumulator_value=0.696969696969697 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.10101010101010102 ,beta=0.16161616161616163].
2023-08-22 02:22:22,315 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.17171717171717174, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6767676767676768 ,rho=0.9797979797979799 ,epsilon=0.0008080808272727272 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.24242424242424232 ,initial_accumulator_value=0.696969696969697 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.10101010101010102 ,beta=0.16161616161616163].
2023-08-22 02:22:25,824 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:22:25,824 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:22:27,784 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.6161616161616162, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.005455000000000001 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.22222222222222224 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.20202020202020204 ,beta_2=0.8585858585858587 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:22:27,784 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.6161616161616162, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.005455000000000001 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.22222222222222224 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.20202020202020204 ,beta_2=0.8585858585858587 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:22:52,698 INFO: Applying selection operators for generation 31.
2023-08-22 02:22:52,699 INFO: Applying genetic operators for generation 31.
2023-08-22 02:22:52,702 INFO: Evaluating fitness for for generation 31.
2023-08-22 02:22:52,702 INFO: Will evaluate fitness for 30 individuals.
2023-08-22 02:22:53,277 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:22:53,277 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:22:53,291 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.18181818181818182, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.494949494949495 ,rho=0.9292929292929294 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.9393939393939394 ,beta_2=0.18181818181818182 ,learning_rate_power=-0.3535353535353535 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.16161616161616163].
2023-08-22 02:22:53,292 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.18181818181818182, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.494949494949495 ,rho=0.9292929292929294 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.9393939393939394 ,beta_2=0.18181818181818182 ,learning_rate_power=-0.3535353535353535 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.16161616161616163].
2023-08-22 02:22:53,292 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:22:53,292 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:22:53,324 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.8181818181818182, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.686868686868687 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.18181818181818182 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.16161616161616163].
2023-08-22 02:22:53,324 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.8181818181818182, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.686868686868687 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.18181818181818182 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.16161616161616163].
2023-08-22 02:23:13,301 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:23:13,301 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:23:13,318 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:23:13,318 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:23:13,671 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:23:13,672 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:23:16,699 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:23:16,700 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:23:33,905 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:23:33,905 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:23:34,148 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0.7171717171717172 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0006363636727272727 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.9393939393939394 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:23:34,148 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0.7171717171717172 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0006363636727272727 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.9393939393939394 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:23:35,120 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:23:35,120 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:23:37,739 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.005051000000000001 ,use_ema=False ,ema_momentum=0.6767676767676768 ,rho=0.14141414141414144 ,epsilon=0.0003030303727272727 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:23:37,739 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.005051000000000001 ,use_ema=False ,ema_momentum=0.6767676767676768 ,rho=0.14141414141414144 ,epsilon=0.0003030303727272727 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:23:54,098 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:23:54,098 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:23:55,852 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:23:55,852 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:24:02,212 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6464646464646465, momentum=0.4545454545454546 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6161616161616162 ,rho=0.6262626262626263 ,epsilon=0.00018181826363636362 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.16161616161616163].
2023-08-22 02:24:02,213 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6464646464646465, momentum=0.4545454545454546 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6161616161616162 ,rho=0.6262626262626263 ,epsilon=0.00018181826363636362 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.16161616161616163].
2023-08-22 02:24:08,688 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.14141414141414144, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.494949494949495 ,rho=0.6262626262626263 ,epsilon=0.00023232330909090908 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.33333333333333337 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.5353535353535354].
2023-08-22 02:24:08,688 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.14141414141414144, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.494949494949495 ,rho=0.6262626262626263 ,epsilon=0.00023232330909090908 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.33333333333333337 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.5353535353535354].
2023-08-22 02:24:14,186 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:24:14,186 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:24:16,451 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:24:16,452 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:24:26,682 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.98989898989899, momentum=0.4545454545454546 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.5252525252525253 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.29292929292929293 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8787878787878789 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.3535353535353536].
2023-08-22 02:24:26,682 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.98989898989899, momentum=0.4545454545454546 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.5252525252525253 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.29292929292929293 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8787878787878789 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.3535353535353536].
2023-08-22 02:24:34,252 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0.7272727272727273 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.06060606060606061 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.20202020202020204 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9797979797979799 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.696969696969697].
2023-08-22 02:24:34,252 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0.7272727272727273 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.06060606060606061 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.20202020202020204 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9797979797979799 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.696969696969697].
2023-08-22 02:24:37,105 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:24:37,105 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:24:43,576 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.4646464646464647, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5353535353535354 ,rho=0.8282828282828284 ,epsilon=0.0002121212909090909 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.5757575757575758 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.787878787878788 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:24:43,576 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.4646464646464647, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5353535353535354 ,rho=0.8282828282828284 ,epsilon=0.0002121212909090909 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.5757575757575758 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.787878787878788 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:24:47,022 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9090909090909092, momentum=0.08080808080808081 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6262626262626263 ,rho=0.6262626262626263 ,epsilon=3.030312727272727e-05 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.30303030303030304].
2023-08-22 02:24:47,022 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9090909090909092, momentum=0.08080808080808081 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6262626262626263 ,rho=0.6262626262626263 ,epsilon=3.030312727272727e-05 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.30303030303030304].
2023-08-22 02:24:58,475 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.10101010101010102 ,rho=0.4747474747474748 ,epsilon=0.0004242424818181818 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.9393939393939394 ,learning_rate_power=-0.8686868686868687 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.9797979797979799].
2023-08-22 02:24:58,476 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.10101010101010102 ,rho=0.4747474747474748 ,epsilon=0.0004242424818181818 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.9393939393939394 ,learning_rate_power=-0.8686868686868687 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.9797979797979799].
2023-08-22 02:25:07,529 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=0.008687 ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.6464646464646465 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.4040404040404041 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.37373737373737376 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6666666666666667 ,beta=0.16161616161616163].
2023-08-22 02:25:07,529 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=0.008687 ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.6464646464646465 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.4040404040404041 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.37373737373737376 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6666666666666667 ,beta=0.16161616161616163].
2023-08-22 02:25:08,607 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:25:08,607 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:25:11,659 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:25:11,660 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:25:16,808 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.09090909090909091, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.31313131313131315 ,epsilon=0.0009898989909090908 ,centered=False ,beta_1=0.16161616161616163 ,beta_2=0.9292929292929294 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:25:16,808 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.09090909090909091, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.31313131313131315 ,epsilon=0.0009898989909090908 ,centered=False ,beta_1=0.16161616161616163 ,beta_2=0.9292929292929294 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:25:28,840 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:25:28,840 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:25:32,947 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:25:32,947 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:25:52,559 INFO: Applying selection operators for generation 32.
2023-08-22 02:25:52,559 INFO: Applying genetic operators for generation 32.
2023-08-22 02:25:52,563 INFO: Evaluating fitness for for generation 32.
2023-08-22 02:25:52,563 INFO: Will evaluate fitness for 38 individuals.
2023-08-22 02:25:53,121 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.3535353535353536, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.43434343434343436 ,rho=0.6262626262626263 ,epsilon=0.0006868687181818181 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.17171717171717174 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.16161616161616163].
2023-08-22 02:25:53,121 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.3535353535353536, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.43434343434343436 ,rho=0.6262626262626263 ,epsilon=0.0006868687181818181 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.17171717171717174 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.16161616161616163].
2023-08-22 02:25:53,130 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:25:53,130 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:25:53,140 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.393939393939394, momentum=0.7474747474747475 ,nesterov=True ,amsgrad=False ,weight_decay=0.008182 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.22222222222222224 ,epsilon=4.040413636363636e-05 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.8585858585858586 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.7575757575757577].
2023-08-22 02:25:53,140 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.393939393939394, momentum=0.7474747474747475 ,nesterov=True ,amsgrad=False ,weight_decay=0.008182 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.22222222222222224 ,epsilon=4.040413636363636e-05 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.8585858585858586 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.7575757575757577].
2023-08-22 02:25:53,156 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.007172000000000001 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.9696969696969697 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.8787878787878789 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.8787878787878789].
2023-08-22 02:25:53,156 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.007172000000000001 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.9696969696969697 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.8787878787878789 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.8787878787878789].
2023-08-22 02:26:14,049 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.33333333333333337, momentum=0.11111111111111112 ,nesterov=True ,amsgrad=False ,weight_decay=0.0011120000000000001 ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.8484848484848485 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.5858585858585859 ,beta_2=0.31313131313131315 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.020202020202020204].
2023-08-22 02:26:14,049 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.33333333333333337, momentum=0.11111111111111112 ,nesterov=True ,amsgrad=False ,weight_decay=0.0011120000000000001 ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.8484848484848485 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.5858585858585859 ,beta_2=0.31313131313131315 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.020202020202020204].
2023-08-22 02:26:16,677 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:26:16,677 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:26:17,312 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.08080808080808081, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0005151515636363636 ,centered=False ,beta_1=0.12121212121212122 ,beta_2=0.04040404040404041 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.787878787878788 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.16161616161616163].
2023-08-22 02:26:17,312 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.08080808080808081, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0005151515636363636 ,centered=False ,beta_1=0.12121212121212122 ,beta_2=0.04040404040404041 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.787878787878788 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.16161616161616163].
2023-08-22 02:26:18,370 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:26:18,370 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:26:36,479 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:26:36,479 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:26:36,859 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:26:36,859 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:26:39,896 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:26:39,896 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:26:42,377 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:26:42,377 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:26:56,956 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:26:56,956 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:26:56,973 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:26:56,973 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:27:00,607 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:27:00,608 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:27:02,678 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.393939393939394 ,nesterov=True ,amsgrad=True ,weight_decay=0.0011120000000000001 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.4747474747474748 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.8686868686868687 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.29292929292929293].
2023-08-22 02:27:02,678 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.393939393939394 ,nesterov=True ,amsgrad=True ,weight_decay=0.0011120000000000001 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.4747474747474748 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.8686868686868687 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.29292929292929293].
2023-08-22 02:27:16,955 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:27:16,955 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:27:17,410 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:27:17,410 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:27:21,199 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:27:21,200 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:27:27,809 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.4141414141414142, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.9494949494949496 ,epsilon=0.0009090909181818181 ,centered=True ,beta_1=0.9191919191919192 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.3434343434343434 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.16161616161616163].
2023-08-22 02:27:27,809 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.4141414141414142, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.9494949494949496 ,epsilon=0.0009090909181818181 ,centered=True ,beta_1=0.9191919191919192 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.3434343434343434 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.16161616161616163].
2023-08-22 02:27:37,732 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.6363636363636365, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0006262626636363636 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.3434343434343435 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.6060606060606061 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.05050505050505051].
2023-08-22 02:27:37,733 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.6363636363636365, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0006262626636363636 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.3434343434343435 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.6060606060606061 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.05050505050505051].
2023-08-22 02:27:38,684 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.004344000000000001 ,use_ema=True ,ema_momentum=0.9191919191919192 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.98989898989899 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.14141414141414144].
2023-08-22 02:27:38,684 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.004344000000000001 ,use_ema=True ,ema_momentum=0.9191919191919192 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.98989898989899 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.14141414141414144].
2023-08-22 02:27:41,770 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:27:41,770 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:28:00,901 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:28:00,902 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:28:02,494 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9595959595959597, momentum=0.686868686868687 ,nesterov=True ,amsgrad=False ,weight_decay=0.0021220000000000006 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0006868687181818181 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8989898989898991 ,learning_rate_power=-0.3535353535353535 ,initial_accumulator_value=0.8686868686868687 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9696969696969697 ,beta=0.8585858585858587].
2023-08-22 02:28:02,495 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9595959595959597, momentum=0.686868686868687 ,nesterov=True ,amsgrad=False ,weight_decay=0.0021220000000000006 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0006868687181818181 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8989898989898991 ,learning_rate_power=-0.3535353535353535 ,initial_accumulator_value=0.8686868686868687 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9696969696969697 ,beta=0.8585858585858587].
2023-08-22 02:28:02,956 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:28:02,956 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:28:14,506 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:28:14,507 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:28:21,094 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:28:21,095 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:28:23,481 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:28:23,482 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:28:23,500 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:28:23,501 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:28:34,909 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0007080000000000002 ,use_ema=True ,ema_momentum=0.5555555555555556 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.6565656565656566 ,beta_2=0.37373737373737376 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.9292929292929294].
2023-08-22 02:28:34,909 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0007080000000000002 ,use_ema=True ,ema_momentum=0.5555555555555556 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.6565656565656566 ,beta_2=0.37373737373737376 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.9292929292929294].
2023-08-22 02:28:41,234 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.38383838383838387, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.12121212121212122 ,rho=0.010101010101010102 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.8787878787878789 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.5151515151515151 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.27272727272727276].
2023-08-22 02:28:41,234 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.38383838383838387, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.12121212121212122 ,rho=0.010101010101010102 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.8787878787878789 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.5151515151515151 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.27272727272727276].
2023-08-22 02:28:43,687 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:28:43,687 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:28:44,021 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.8181818181818182 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.15151515151515152 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.6464646464646464 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.9696969696969697].
2023-08-22 02:28:44,021 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.8181818181818182 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.15151515151515152 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.6464646464646464 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.9696969696969697].
2023-08-22 02:28:56,613 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:28:56,613 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:29:02,166 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:29:02,166 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:29:03,859 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=0.009596 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.686868686868687 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.98989898989899 ,learning_rate_power=-0.9696969696969697 ,initial_accumulator_value=0.8585858585858587 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6666666666666667 ,beta=0.7070707070707072].
2023-08-22 02:29:03,859 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=0.009596 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.686868686868687 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.98989898989899 ,learning_rate_power=-0.9696969696969697 ,initial_accumulator_value=0.8585858585858587 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6666666666666667 ,beta=0.7070707070707072].
2023-08-22 02:29:23,616 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:29:23,616 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:29:43,501 INFO: Applying selection operators for generation 33.
2023-08-22 02:29:43,502 INFO: Applying genetic operators for generation 33.
2023-08-22 02:29:43,504 INFO: Evaluating fitness for for generation 33.
2023-08-22 02:29:43,504 INFO: Will evaluate fitness for 27 individuals.
2023-08-22 02:29:44,074 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:29:44,074 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:29:44,090 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:29:44,091 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:29:44,147 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:29:44,147 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:29:44,162 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:29:44,162 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:30:04,081 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:30:04,081 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:30:04,363 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:30:04,364 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:30:04,401 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:30:04,402 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:30:04,547 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:30:04,547 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:30:24,277 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:30:24,278 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:30:24,420 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7676767676767677 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7272727272727273 ,rho=0.030303030303030304 ,epsilon=0.0004242424818181818 ,centered=False ,beta_1=0.7171717171717172 ,beta_2=0.9494949494949496 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.98989898989899 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.42424242424242425].
2023-08-22 02:30:24,420 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7676767676767677 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7272727272727273 ,rho=0.030303030303030304 ,epsilon=0.0004242424818181818 ,centered=False ,beta_1=0.7171717171717172 ,beta_2=0.9494949494949496 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.98989898989899 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.42424242424242425].
2023-08-22 02:30:24,882 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:30:24,882 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:30:25,130 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:30:25,130 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:30:45,015 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:30:45,015 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:30:45,943 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:30:45,943 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:30:46,619 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:30:46,619 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:30:48,878 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:30:48,878 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:31:05,201 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:31:05,201 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:31:06,342 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.38383838383838387, momentum=0.23232323232323235 ,nesterov=True ,amsgrad=True ,weight_decay=0.009697 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0006565656909090909 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:31:06,342 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.38383838383838387, momentum=0.23232323232323235 ,nesterov=True ,amsgrad=True ,weight_decay=0.009697 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0006565656909090909 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:31:07,231 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:31:07,231 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:31:08,979 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:31:08,980 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:31:25,401 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.24242424242424243, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.007273000000000001 ,use_ema=True ,ema_momentum=0.4545454545454546 ,rho=0.6262626262626263 ,epsilon=0.0007373737636363636 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.5555555555555556 ,initial_accumulator_value=0.020202020202020204 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8787878787878789 ,beta=0.7171717171717172].
2023-08-22 02:31:25,401 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.24242424242424243, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.007273000000000001 ,use_ema=True ,ema_momentum=0.4545454545454546 ,rho=0.6262626262626263 ,epsilon=0.0007373737636363636 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.5555555555555556 ,initial_accumulator_value=0.020202020202020204 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8787878787878789 ,beta=0.7171717171717172].
2023-08-22 02:31:27,681 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=1.0, momentum=0.6262626262626263 ,nesterov=False ,amsgrad=False ,weight_decay=0.0036370000000000005 ,use_ema=False ,ema_momentum=0.22222222222222224 ,rho=0.6262626262626263 ,epsilon=0.0002121212909090909 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.98989898989899 ,learning_rate_power=-0.24242424242424232 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.888888888888889 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.16161616161616163].
2023-08-22 02:31:27,681 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=1.0, momentum=0.6262626262626263 ,nesterov=False ,amsgrad=False ,weight_decay=0.0036370000000000005 ,use_ema=False ,ema_momentum=0.22222222222222224 ,rho=0.6262626262626263 ,epsilon=0.0002121212909090909 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.98989898989899 ,learning_rate_power=-0.24242424242424232 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.888888888888889 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.16161616161616163].
2023-08-22 02:31:28,992 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:31:28,993 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:31:31,303 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:31:31,303 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:31:49,166 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.32323232323232326, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.15151515151515152 ,rho=0.6262626262626263 ,epsilon=0.0008080808272727272 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.4242424242424242 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.31313131313131315 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.16161616161616163].
2023-08-22 02:31:49,166 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.32323232323232326, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.15151515151515152 ,rho=0.6262626262626263 ,epsilon=0.0008080808272727272 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.4242424242424242 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.31313131313131315 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.16161616161616163].
2023-08-22 02:31:50,154 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:31:50,154 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:32:13,426 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:32:13,426 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:32:32,697 INFO: Applying selection operators for generation 34.
2023-08-22 02:32:32,698 INFO: Applying genetic operators for generation 34.
2023-08-22 02:32:32,701 INFO: Evaluating fitness for for generation 34.
2023-08-22 02:32:32,701 INFO: Will evaluate fitness for 32 individuals.
2023-08-22 02:32:33,264 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.14141414141414144, momentum=0.4646464646464647 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.0 ,epsilon=0.0006666667 ,centered=True ,beta_1=0.7474747474747475 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.7777777777777778].
2023-08-22 02:32:33,264 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.14141414141414144, momentum=0.4646464646464647 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.0 ,epsilon=0.0006666667 ,centered=True ,beta_1=0.7474747474747475 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.7777777777777778].
2023-08-22 02:32:33,285 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:32:33,285 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:32:33,291 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:32:33,292 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:32:33,303 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.5656565656565657 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.8080808080808082 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.17171717171717174].
2023-08-22 02:32:33,303 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.5656565656565657 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.8080808080808082 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.17171717171717174].
2023-08-22 02:32:53,433 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:32:53,433 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:32:53,450 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:32:53,451 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:32:57,266 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8989898989898991, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.8282828282828284 ,epsilon=6.060615454545454e-05 ,centered=False ,beta_1=0.27272727272727276 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.8787878787878788 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.27272727272727276 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:32:57,267 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8989898989898991, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.8282828282828284 ,epsilon=6.060615454545454e-05 ,centered=False ,beta_1=0.27272727272727276 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.8787878787878788 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.27272727272727276 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:32:57,880 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:32:57,881 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:33:13,636 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.001011 ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0009494949545454545 ,centered=False ,beta_1=0.5151515151515152 ,beta_2=0.030303030303030304 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.16161616161616163].
2023-08-22 02:33:13,636 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.001011 ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0009494949545454545 ,centered=False ,beta_1=0.5151515151515152 ,beta_2=0.030303030303030304 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.16161616161616163].
2023-08-22 02:33:14,088 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:33:14,088 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:33:18,569 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5353535353535354, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5252525252525253 ,rho=0.6262626262626263 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.0 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.27272727272727276].
2023-08-22 02:33:18,570 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5353535353535354, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5252525252525253 ,rho=0.6262626262626263 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.0 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.27272727272727276].
2023-08-22 02:33:21,705 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7575757575757577, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0020210000000000002 ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.30303030303030304 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.010101010101010102 ,beta=0.15151515151515152].
2023-08-22 02:33:21,706 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7575757575757577, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0020210000000000002 ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.30303030303030304 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.010101010101010102 ,beta=0.15151515151515152].
2023-08-22 02:33:34,156 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.888888888888889 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.29292929292929293 ,rho=0.6262626262626263 ,epsilon=0.0009393939454545454 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.17171717171717174 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:33:34,156 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.888888888888889 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.29292929292929293 ,rho=0.6262626262626263 ,epsilon=0.0009393939454545454 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.17171717171717174 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:33:37,876 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.07070707070707072 ,rho=0.31313131313131315 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5757575757575758 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:33:37,876 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.07070707070707072 ,rho=0.31313131313131315 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5757575757575758 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:33:42,772 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.10101010101010102 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.16161616161616163].
2023-08-22 02:33:42,772 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.10101010101010102 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.16161616161616163].
2023-08-22 02:33:43,384 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:33:43,384 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:33:59,295 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.13131313131313133 ,epsilon=0.0009696969727272727 ,centered=False ,beta_1=0.6262626262626263 ,beta_2=0.33333333333333337 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.8686868686868687 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.030303030303030304].
2023-08-22 02:33:59,295 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.13131313131313133 ,epsilon=0.0009696969727272727 ,centered=False ,beta_1=0.6262626262626263 ,beta_2=0.33333333333333337 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.8686868686868687 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.030303030303030304].
2023-08-22 02:34:02,030 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.31313131313131315, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.32323232323232326 ,rho=0.23232323232323235 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.09090909090909091].
2023-08-22 02:34:02,030 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.31313131313131315, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.32323232323232326 ,rho=0.23232323232323235 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.09090909090909091].
2023-08-22 02:34:04,894 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:34:04,894 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:34:18,508 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:34:18,508 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:34:22,340 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:34:22,340 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:34:25,575 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:34:25,575 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:34:26,113 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0008090000000000001 ,use_ema=True ,ema_momentum=0.7373737373737375 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.16161616161616163 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.23232323232323235].
2023-08-22 02:34:26,113 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0008090000000000001 ,use_ema=True ,ema_momentum=0.7373737373737375 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.16161616161616163 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.23232323232323235].
2023-08-22 02:34:39,002 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7777777777777778 ,rho=0.6262626262626263 ,epsilon=0.0006262626636363636 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.9696969696969697 ,initial_accumulator_value=0.696969696969697 ,l1_regularization_strength=0.6262626262626263 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.7070707070707072].
2023-08-22 02:34:39,002 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7777777777777778 ,rho=0.6262626262626263 ,epsilon=0.0006262626636363636 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.9696969696969697 ,initial_accumulator_value=0.696969696969697 ,l1_regularization_strength=0.6262626262626263 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.7070707070707072].
2023-08-22 02:34:43,075 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:34:43,075 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:34:46,074 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:34:46,074 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:34:52,254 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.21212121212121213 ,epsilon=0.0006161616545454546 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.12121212121212122 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.8989898989898991 ,l1_regularization_strength=0.29292929292929293 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.16161616161616163].
2023-08-22 02:34:52,254 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.21212121212121213 ,epsilon=0.0006161616545454546 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.12121212121212122 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.8989898989898991 ,l1_regularization_strength=0.29292929292929293 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.16161616161616163].
2023-08-22 02:35:03,368 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:35:03,368 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:35:03,504 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:35:03,505 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:35:06,705 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.4747474747474748, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.030303030303030304 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.14141414141414144 ,learning_rate_power=-0.46464646464646464 ,initial_accumulator_value=0.04040404040404041 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.6464646464646465].
2023-08-22 02:35:06,705 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.4747474747474748, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.030303030303030304 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.14141414141414144 ,learning_rate_power=-0.46464646464646464 ,initial_accumulator_value=0.04040404040404041 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.6464646464646465].
2023-08-22 02:35:24,672 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0020210000000000002 ,use_ema=True ,ema_momentum=0.3434343434343435 ,rho=0.494949494949495 ,epsilon=0.0001313132181818182 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.24242424242424243].
2023-08-22 02:35:24,672 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0020210000000000002 ,use_ema=True ,ema_momentum=0.3434343434343435 ,rho=0.494949494949495 ,epsilon=0.0001313132181818182 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.24242424242424243].
2023-08-22 02:35:28,009 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:35:28,010 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:35:49,267 INFO: Applying selection operators for generation 35.
2023-08-22 02:35:49,267 INFO: Applying genetic operators for generation 35.
2023-08-22 02:35:49,270 INFO: Evaluating fitness for for generation 35.
2023-08-22 02:35:49,270 INFO: Will evaluate fitness for 28 individuals.
2023-08-22 02:35:49,842 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:35:49,842 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:35:49,893 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:35:49,894 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:35:49,914 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.003839000000000001 ,use_ema=True ,ema_momentum=0.4141414141414142 ,rho=0.36363636363636365 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.9595959595959597 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.5555555555555556].
2023-08-22 02:35:49,914 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.003839000000000001 ,use_ema=True ,ema_momentum=0.4141414141414142 ,rho=0.36363636363636365 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.9595959595959597 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.5555555555555556].
2023-08-22 02:35:49,918 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:35:49,918 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:36:09,109 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9090909090909092, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.7171717171717172 ,epsilon=0.0009090909181818181 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9595959595959597 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.30303030303030304].
2023-08-22 02:36:09,109 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9090909090909092, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.7171717171717172 ,epsilon=0.0009090909181818181 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9595959595959597 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.30303030303030304].
2023-08-22 02:36:09,732 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.16161616161616163].
2023-08-22 02:36:09,732 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.16161616161616163].
2023-08-22 02:36:10,147 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:36:10,147 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:36:10,507 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:36:10,507 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:36:29,161 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:36:29,161 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:36:30,977 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:36:30,977 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:36:31,474 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:36:31,474 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:36:33,910 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:36:33,911 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:36:49,888 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:36:49,888 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:36:52,028 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:36:52,028 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:36:52,326 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.42424242424242425 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.5252525252525252 ,initial_accumulator_value=0.98989898989899 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.11111111111111112 ,beta=0.7676767676767677].
2023-08-22 02:36:52,326 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.42424242424242425 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.5252525252525252 ,initial_accumulator_value=0.98989898989899 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.11111111111111112 ,beta=0.7676767676767677].
2023-08-22 02:36:54,164 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:36:54,165 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:37:10,065 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:37:10,065 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:37:12,442 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:37:12,442 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:37:14,398 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.16161616161616163, momentum=0.9393939393939394 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.27272727272727276 ,rho=0.6161616161616162 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.696969696969697 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.15151515151515152].
2023-08-22 02:37:14,398 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.16161616161616163, momentum=0.9393939393939394 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.27272727272727276 ,rho=0.6161616161616162 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.696969696969697 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.15151515151515152].
2023-08-22 02:37:17,299 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:37:17,300 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:37:30,226 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8383838383838385, momentum=0.38383838383838387 ,nesterov=False ,amsgrad=False ,weight_decay=0.006061000000000001 ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0005757576181818182 ,centered=True ,beta_1=0.8585858585858587 ,beta_2=0.7777777777777778 ,learning_rate_power=-0.3737373737373737 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.5151515151515152].
2023-08-22 02:37:30,226 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8383838383838385, momentum=0.38383838383838387 ,nesterov=False ,amsgrad=False ,weight_decay=0.006061000000000001 ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0005757576181818182 ,centered=True ,beta_1=0.8585858585858587 ,beta_2=0.7777777777777778 ,learning_rate_power=-0.3737373737373737 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.5151515151515152].
2023-08-22 02:37:32,855 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:37:32,856 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:37:38,034 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.007172000000000001 ,use_ema=True ,ema_momentum=0.4747474747474748 ,rho=0.8080808080808082 ,epsilon=1e-10 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.38383838383838387 ,learning_rate_power=-0.7676767676767676 ,initial_accumulator_value=0.6666666666666667 ,l1_regularization_strength=0.36363636363636365 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.3535353535353536].
2023-08-22 02:37:38,034 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.007172000000000001 ,use_ema=True ,ema_momentum=0.4747474747474748 ,rho=0.8080808080808082 ,epsilon=1e-10 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.38383838383838387 ,learning_rate_power=-0.7676767676767676 ,initial_accumulator_value=0.6666666666666667 ,l1_regularization_strength=0.36363636363636365 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.3535353535353536].
2023-08-22 02:37:38,168 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.36363636363636365, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.888888888888889 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.8080808080808082].
2023-08-22 02:37:38,168 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.36363636363636365, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.888888888888889 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.8080808080808082].
2023-08-22 02:37:53,891 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:37:53,891 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:37:54,861 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.4747474747474748, momentum=0.6060606060606061 ,nesterov=True ,amsgrad=False ,weight_decay=0.005051000000000001 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00024242431818181817 ,centered=False ,beta_1=0.494949494949495 ,beta_2=0.24242424242424243 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.797979797979798 ,l1_regularization_strength=0.48484848484848486 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.16161616161616163].
2023-08-22 02:37:54,862 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.4747474747474748, momentum=0.6060606060606061 ,nesterov=True ,amsgrad=False ,weight_decay=0.005051000000000001 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00024242431818181817 ,centered=False ,beta_1=0.494949494949495 ,beta_2=0.24242424242424243 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.797979797979798 ,l1_regularization_strength=0.48484848484848486 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.16161616161616163].
2023-08-22 02:38:14,146 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:38:14,147 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:38:19,764 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:38:19,765 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:38:39,303 INFO: Applying selection operators for generation 36.
2023-08-22 02:38:39,304 INFO: Applying genetic operators for generation 36.
2023-08-22 02:38:39,306 INFO: Evaluating fitness for for generation 36.
2023-08-22 02:38:39,306 INFO: Will evaluate fitness for 35 individuals.
2023-08-22 02:38:39,867 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:38:39,868 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:38:39,891 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.36363636363636365, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.23232323232323235 ,rho=0.6262626262626263 ,epsilon=0.0007979798181818182 ,centered=False ,beta_1=0.29292929292929293 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.13131313131313133 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.14141414141414144].
2023-08-22 02:38:39,891 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.36363636363636365, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.23232323232323235 ,rho=0.6262626262626263 ,epsilon=0.0007979798181818182 ,centered=False ,beta_1=0.29292929292929293 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.13131313131313133 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.14141414141414144].
2023-08-22 02:38:39,905 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:38:39,906 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:38:39,914 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:38:39,914 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:39:00,040 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0.4646464646464647 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.7575757575757577 ,rho=0.6262626262626263 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.5252525252525253 ,learning_rate_power=-0.3737373737373737 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.3434343434343435 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.16161616161616163].
2023-08-22 02:39:00,040 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0.4646464646464647 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.7575757575757577 ,rho=0.6262626262626263 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.5252525252525253 ,learning_rate_power=-0.3737373737373737 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.3434343434343435 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.16161616161616163].
2023-08-22 02:39:00,071 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:39:00,072 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:39:01,508 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:39:01,508 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:39:03,716 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:39:03,716 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:39:21,056 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:39:21,056 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:39:22,216 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:39:22,216 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:39:23,360 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:39:23,360 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:39:23,901 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:39:23,901 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:39:41,445 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:39:41,446 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:39:42,850 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:39:42,850 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:39:44,302 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.33333333333333337, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.494949494949495 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.13131313131313127 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.5555555555555556].
2023-08-22 02:39:44,302 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.33333333333333337, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.494949494949495 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.13131313131313127 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.5555555555555556].
2023-08-22 02:39:44,699 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:39:44,699 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:40:01,775 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:40:01,776 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:40:03,399 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.31313131313131315, momentum=0.14141414141414144 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0006969697272727273 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.9292929292929294 ,learning_rate_power=-0.3535353535353535 ,initial_accumulator_value=0.9393939393939394 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.6565656565656566].
2023-08-22 02:40:03,399 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.31313131313131315, momentum=0.14141414141414144 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0006969697272727273 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.9292929292929294 ,learning_rate_power=-0.3535353535353535 ,initial_accumulator_value=0.9393939393939394 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.6565656565656566].
2023-08-22 02:40:03,474 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.36363636363636365 ,rho=0.6262626262626263 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.11111111111111112 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.4444444444444445 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.16161616161616163].
2023-08-22 02:40:03,475 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.36363636363636365 ,rho=0.6262626262626263 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.11111111111111112 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.4444444444444445 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.16161616161616163].
2023-08-22 02:40:04,952 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.5555555555555556, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0029300000000000007 ,use_ema=True ,ema_momentum=0.8787878787878789 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.3434343434343435 ,beta_2=0.888888888888889 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.8181818181818182 ,l1_regularization_strength=0.5252525252525253 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.9393939393939394].
2023-08-22 02:40:04,952 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.5555555555555556, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0029300000000000007 ,use_ema=True ,ema_momentum=0.8787878787878789 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.3434343434343435 ,beta_2=0.888888888888889 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.8181818181818182 ,l1_regularization_strength=0.5252525252525253 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.9393939393939394].
2023-08-22 02:40:22,107 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:40:22,107 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:40:26,478 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:40:26,479 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:40:29,759 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:40:29,759 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:40:41,578 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:40:41,578 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:40:43,115 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:40:43,116 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:40:46,904 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:40:46,904 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:40:50,400 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7171717171717172, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0036370000000000005 ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.38383838383838387 ,epsilon=0.0005050505545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.38383838383838387 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.030303030303030304].
2023-08-22 02:40:50,401 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7171717171717172, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0036370000000000005 ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.38383838383838387 ,epsilon=0.0005050505545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.38383838383838387 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.030303030303030304].
2023-08-22 02:41:02,434 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:41:02,435 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:41:03,479 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.020202020202020204 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6464646464646465 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:41:03,479 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.020202020202020204 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6464646464646465 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:41:07,042 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:41:07,042 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:41:15,325 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:41:15,326 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:41:22,697 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:41:22,697 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:41:27,738 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:41:27,738 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:41:28,207 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.0 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.6464646464646465 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.20202020202020204 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.9090909090909092].
2023-08-22 02:41:28,207 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.0 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.6464646464646465 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.20202020202020204 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.9090909090909092].
2023-08-22 02:41:36,033 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:41:36,033 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:41:56,787 INFO: Applying selection operators for generation 37.
2023-08-22 02:41:56,787 INFO: Applying genetic operators for generation 37.
2023-08-22 02:41:56,790 INFO: Evaluating fitness for for generation 37.
2023-08-22 02:41:56,790 INFO: Will evaluate fitness for 36 individuals.
2023-08-22 02:41:57,334 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:41:57,335 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:41:57,352 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:41:57,352 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:41:57,403 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.13131313131313133 ,rho=0.12121212121212122 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.16161616161616163].
2023-08-22 02:41:57,403 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.13131313131313133 ,rho=0.12121212121212122 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.16161616161616163].
2023-08-22 02:41:57,442 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:41:57,443 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:42:17,490 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:42:17,490 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:42:17,806 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:42:17,806 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:42:18,340 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:42:18,340 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:42:21,754 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:42:21,754 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:42:38,151 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.32323232323232326, momentum=0.48484848484848486 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7272727272727273 ,rho=0.3535353535353536 ,epsilon=0.0004747475272727272 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.38383838383838387 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.13131313131313133].
2023-08-22 02:42:38,152 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.32323232323232326, momentum=0.48484848484848486 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7272727272727273 ,rho=0.3535353535353536 ,epsilon=0.0004747475272727272 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.38383838383838387 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.13131313131313133].
2023-08-22 02:42:38,400 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:42:38,400 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:42:38,564 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.020202020202020204 ,rho=0.5353535353535354 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.6363636363636365].
2023-08-22 02:42:38,564 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.020202020202020204 ,rho=0.5353535353535354 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.6363636363636365].
2023-08-22 02:42:42,572 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:42:42,572 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:42:59,971 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:42:59,971 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:43:02,550 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:43:02,550 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:43:03,004 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:43:03,005 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:43:03,383 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:43:03,383 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:43:20,750 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.48484848484848486, momentum=0.6262626262626263 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.8383838383838385 ,beta_2=0.30303030303030304 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.38383838383838387 ,beta=0.36363636363636365].
2023-08-22 02:43:20,750 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.48484848484848486, momentum=0.6262626262626263 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.8383838383838385 ,beta_2=0.30303030303030304 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.38383838383838387 ,beta=0.36363636363636365].
2023-08-22 02:43:22,661 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.04040404040404041, momentum=0.31313131313131315 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6262626262626263 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.7272727272727273 ,learning_rate_power=-0.9696969696969697 ,initial_accumulator_value=0.21212121212121213 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.393939393939394].
2023-08-22 02:43:22,661 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.04040404040404041, momentum=0.31313131313131315 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6262626262626263 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.7272727272727273 ,learning_rate_power=-0.9696969696969697 ,initial_accumulator_value=0.21212121212121213 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.393939393939394].
2023-08-22 02:43:23,114 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.787878787878788, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.27272727272727276 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8181818181818182 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.8484848484848485 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7272727272727273 ,beta=0.16161616161616163].
2023-08-22 02:43:23,114 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.787878787878788, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.27272727272727276 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8181818181818182 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.8484848484848485 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7272727272727273 ,beta=0.16161616161616163].
2023-08-22 02:43:24,246 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:43:24,246 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:43:40,501 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.08080808080808081, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.008283 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.3535353535353536 ,beta_2=0.5454545454545455 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.30303030303030304 ,l1_regularization_strength=0.5252525252525253 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.08080808080808081].
2023-08-22 02:43:40,501 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.08080808080808081, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.008283 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.3535353535353536 ,beta_2=0.5454545454545455 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.30303030303030304 ,l1_regularization_strength=0.5252525252525253 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.08080808080808081].
2023-08-22 02:43:43,418 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:43:43,418 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:43:44,644 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:43:44,645 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:43:47,590 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:43:47,590 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:44:01,459 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:44:01,459 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:44:03,608 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:44:03,609 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:44:04,883 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:44:04,883 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:44:08,407 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:44:08,407 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:44:22,968 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:44:22,969 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:44:23,725 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:44:23,725 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:44:25,155 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:44:25,155 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:44:28,782 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:44:28,782 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:44:43,543 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:44:43,543 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:44:43,820 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:44:43,820 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:44:46,165 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:44:46,165 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:44:48,987 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:44:48,987 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:45:08,544 INFO: Applying selection operators for generation 38.
2023-08-22 02:45:08,545 INFO: Applying genetic operators for generation 38.
2023-08-22 02:45:08,547 INFO: Evaluating fitness for for generation 38.
2023-08-22 02:45:08,547 INFO: Will evaluate fitness for 31 individuals.
2023-08-22 02:45:09,089 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9292929292929294, momentum=0.04040404040404041 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0005151515636363636 ,centered=False ,beta_1=0.4040404040404041 ,beta_2=0.15151515151515152 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.030303030303030304 ,l1_regularization_strength=0.6060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.38383838383838387 ,beta=0.16161616161616163].
2023-08-22 02:45:09,089 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9292929292929294, momentum=0.04040404040404041 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0005151515636363636 ,centered=False ,beta_1=0.4040404040404041 ,beta_2=0.15151515151515152 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.030303030303030304 ,l1_regularization_strength=0.6060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.38383838383838387 ,beta=0.16161616161616163].
2023-08-22 02:45:09,099 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:45:09,099 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:45:09,223 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:45:09,224 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:45:09,232 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:45:09,232 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:45:29,242 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:45:29,242 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:45:29,555 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:45:29,555 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:45:29,982 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:45:29,982 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:45:33,811 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:45:33,811 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:45:50,098 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:45:50,098 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:45:50,245 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:45:50,245 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:45:50,935 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:45:50,935 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:45:53,890 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5252525252525253, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=False ,weight_decay=0.008384 ,use_ema=True ,ema_momentum=0.9595959595959597 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.3434343434343435 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.16161616161616163].
2023-08-22 02:45:53,890 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5252525252525253, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=False ,weight_decay=0.008384 ,use_ema=True ,ema_momentum=0.9595959595959597 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.3434343434343435 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.16161616161616163].
2023-08-22 02:46:10,403 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:46:10,403 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:46:10,684 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:46:10,684 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:46:11,547 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.7474747474747475, momentum=0.48484848484848486 ,nesterov=True ,amsgrad=False ,weight_decay=0.006263000000000001 ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.7070707070707072 ,epsilon=0.0004848485363636363 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4141414141414142 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.16161616161616163].
2023-08-22 02:46:11,548 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.7474747474747475, momentum=0.48484848484848486 ,nesterov=True ,amsgrad=False ,weight_decay=0.006263000000000001 ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.7070707070707072 ,epsilon=0.0004848485363636363 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4141414141414142 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.16161616161616163].
2023-08-22 02:46:14,599 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:46:14,599 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:46:30,561 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:46:30,561 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:46:31,166 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:46:31,166 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:46:35,296 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:46:35,297 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:46:36,347 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:46:36,347 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:46:51,401 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.3535353535353536 ,epsilon=7.070716363636363e-05 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.8787878787878788 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:46:51,401 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.3535353535353536 ,epsilon=7.070716363636363e-05 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.8787878787878788 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:46:51,483 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:46:51,483 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:46:55,442 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:46:55,442 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:46:57,787 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:46:57,787 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:47:12,617 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.7272727272727273, momentum=0.5353535353535354 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.5252525252525253 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5555555555555556 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7474747474747474 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.16161616161616163].
2023-08-22 02:47:12,618 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.7272727272727273, momentum=0.5353535353535354 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.5252525252525253 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5555555555555556 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7474747474747474 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.16161616161616163].
2023-08-22 02:47:15,441 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:47:15,441 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:47:15,935 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:47:15,935 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:47:18,427 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:47:18,427 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:47:35,416 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:47:35,416 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:47:35,709 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:47:35,710 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:47:36,232 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:47:36,232 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:47:56,211 INFO: Applying selection operators for generation 39.
2023-08-22 02:47:56,212 INFO: Applying genetic operators for generation 39.
2023-08-22 02:47:56,214 INFO: Evaluating fitness for for generation 39.
2023-08-22 02:47:56,214 INFO: Will evaluate fitness for 34 individuals.
2023-08-22 02:47:56,762 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.5555555555555556 ,nesterov=True ,amsgrad=False ,weight_decay=0.004243000000000001 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.22222222222222224 ,epsilon=0.00023232330909090908 ,centered=False ,beta_1=0.15151515151515152 ,beta_2=0.08080808080808081 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.06060606060606061 ,l1_regularization_strength=0.7575757575757577 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.16161616161616163].
2023-08-22 02:47:56,762 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.5555555555555556 ,nesterov=True ,amsgrad=False ,weight_decay=0.004243000000000001 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.22222222222222224 ,epsilon=0.00023232330909090908 ,centered=False ,beta_1=0.15151515151515152 ,beta_2=0.08080808080808081 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.06060606060606061 ,l1_regularization_strength=0.7575757575757577 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.16161616161616163].
2023-08-22 02:47:56,764 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:47:56,764 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:47:56,901 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:47:56,902 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:47:56,911 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7676767676767677, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7777777777777778 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:47:56,911 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7676767676767677, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7777777777777778 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:48:16,654 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.9292929292929294 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.08080808080808081 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.16161616161616163].
2023-08-22 02:48:16,655 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.9292929292929294 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.08080808080808081 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.16161616161616163].
2023-08-22 02:48:17,162 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:48:17,162 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:48:17,319 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:48:17,319 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:48:23,095 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:48:23,095 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:48:37,540 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:48:37,541 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:48:38,589 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:48:38,589 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:48:41,214 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9292929292929294 ,rho=0.6262626262626263 ,epsilon=0.00025252532727272723 ,centered=True ,beta_1=1.0 ,beta_2=0.5353535353535354 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.16161616161616163].
2023-08-22 02:48:41,215 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9292929292929294 ,rho=0.6262626262626263 ,epsilon=0.00025252532727272723 ,centered=True ,beta_1=1.0 ,beta_2=0.5353535353535354 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.16161616161616163].
2023-08-22 02:48:44,161 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.008182 ,use_ema=False ,ema_momentum=0.8181818181818182 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.888888888888889].
2023-08-22 02:48:44,162 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.008182 ,use_ema=False ,ema_momentum=0.8181818181818182 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.888888888888889].
2023-08-22 02:48:57,747 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:48:57,747 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:48:59,206 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:48:59,207 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:49:04,540 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.04040404040404041 ,rho=0.6262626262626263 ,epsilon=0.0009898989909090908 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.3232323232323232 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.38383838383838387].
2023-08-22 02:49:04,540 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.04040404040404041 ,rho=0.6262626262626263 ,epsilon=0.0009898989909090908 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.3232323232323232 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.38383838383838387].
2023-08-22 02:49:06,144 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:49:06,144 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:49:18,517 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:49:18,517 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:49:19,612 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:49:19,613 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:49:26,357 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:49:26,357 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:49:29,578 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0008080808272727272 ,centered=False ,beta_1=0.25252525252525254 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.4545454545454545 ,initial_accumulator_value=1.0 ,l1_regularization_strength=0.37373737373737376 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.22222222222222224].
2023-08-22 02:49:29,578 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0008080808272727272 ,centered=False ,beta_1=0.25252525252525254 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.4545454545454545 ,initial_accumulator_value=1.0 ,l1_regularization_strength=0.37373737373737376 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.22222222222222224].
2023-08-22 02:49:38,878 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:49:38,879 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:49:40,056 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.010101010101010102, momentum=0.19191919191919193 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.25252525252525254 ,rho=0.6262626262626263 ,epsilon=2.020211818181818e-05 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.6363636363636364 ,initial_accumulator_value=0.98989898989899 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:49:40,057 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.010101010101010102, momentum=0.19191919191919193 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.25252525252525254 ,rho=0.6262626262626263 ,epsilon=2.020211818181818e-05 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.6363636363636364 ,initial_accumulator_value=0.98989898989899 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:49:46,489 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:49:46,490 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:49:54,269 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:49:54,269 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:49:59,314 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.31313131313131315 ,rho=0.8989898989898991 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.3535353535353535 ,initial_accumulator_value=0.4444444444444445 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4646464646464647 ,beta=0.16161616161616163].
2023-08-22 02:49:59,314 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.31313131313131315 ,rho=0.8989898989898991 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.3535353535353535 ,initial_accumulator_value=0.4444444444444445 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4646464646464647 ,beta=0.16161616161616163].
2023-08-22 02:50:06,490 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:50:06,491 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:50:15,460 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:50:15,460 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:50:18,394 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:50:18,394 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:50:24,324 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.8989898989898991 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.10101010101010102].
2023-08-22 02:50:24,325 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.8989898989898991 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.10101010101010102].
2023-08-22 02:50:27,338 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:50:27,338 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:50:35,925 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:50:35,925 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:50:47,436 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:50:47,436 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:50:49,374 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:50:49,374 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:50:56,291 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:50:56,292 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:51:15,716 INFO: Applying selection operators for generation 40.
2023-08-22 02:51:15,717 INFO: Applying genetic operators for generation 40.
2023-08-22 02:51:15,719 INFO: Evaluating fitness for for generation 40.
2023-08-22 02:51:15,719 INFO: Will evaluate fitness for 34 individuals.
2023-08-22 02:51:16,269 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:51:16,269 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:51:16,294 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:51:16,294 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:51:16,414 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.30303030303030304 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.5050505050505051].
2023-08-22 02:51:16,414 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.30303030303030304 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.5050505050505051].
2023-08-22 02:51:16,426 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:51:16,427 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:51:36,083 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:51:36,083 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:51:36,535 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.5555555555555556 ,beta_2=0.15151515151515152 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.16161616161616163].
2023-08-22 02:51:36,535 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.5555555555555556 ,beta_2=0.15151515151515152 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.16161616161616163].
2023-08-22 02:51:36,708 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:51:36,708 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:51:37,195 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:51:37,195 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:51:56,645 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:51:56,645 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:51:56,699 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:51:56,699 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:51:57,534 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.27272727272727276, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0007676767909090908 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.3434343434343435 ,learning_rate_power=-0.23232323232323226 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.7575757575757577 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.4747474747474748].
2023-08-22 02:51:57,535 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.27272727272727276, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0007676767909090908 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.3434343434343435 ,learning_rate_power=-0.23232323232323226 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.7575757575757577 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.4747474747474748].
2023-08-22 02:51:57,913 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.10101010101010102 ,rho=0.8383838383838385 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.6464646464646465 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.31313131313131315 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.16161616161616163].
2023-08-22 02:51:57,913 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.10101010101010102 ,rho=0.8383838383838385 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.6464646464646465 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.31313131313131315 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.16161616161616163].
2023-08-22 02:52:16,620 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:52:16,621 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:52:17,541 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:52:17,541 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:52:22,646 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:52:22,647 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:52:23,706 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:52:23,706 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:52:36,750 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:52:36,750 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:52:37,749 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0032330000000000006 ,use_ema=False ,ema_momentum=0.8585858585858587 ,rho=0.6262626262626263 ,epsilon=0.0002121212909090909 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.22222222222222224 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.5454545454545455].
2023-08-22 02:52:37,749 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0032330000000000006 ,use_ema=False ,ema_momentum=0.8585858585858587 ,rho=0.6262626262626263 ,epsilon=0.0002121212909090909 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.22222222222222224 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.5454545454545455].
2023-08-22 02:52:42,884 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:52:42,884 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:52:44,356 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:52:44,356 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:52:56,751 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6363636363636365 ,epsilon=0.0009898989909090908 ,centered=False ,beta_1=0.9797979797979799 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.3737373737373737 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.16161616161616163].
2023-08-22 02:52:56,751 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6363636363636365 ,epsilon=0.0009898989909090908 ,centered=False ,beta_1=0.9797979797979799 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.3737373737373737 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.16161616161616163].
2023-08-22 02:53:02,399 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:53:02,400 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:53:04,126 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:53:04,127 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:53:04,843 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:53:04,843 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:53:22,063 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:53:22,063 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:53:22,640 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:53:22,640 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:53:24,538 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:53:24,538 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:53:26,224 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.7070707070707072, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.17171717171717174 ,epsilon=0.0008181818363636363 ,centered=False ,beta_1=0.4141414141414142 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.020202020202020204 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.16161616161616163].
2023-08-22 02:53:26,224 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.7070707070707072, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.17171717171717174 ,epsilon=0.0008181818363636363 ,centered=False ,beta_1=0.4141414141414142 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.020202020202020204 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.16161616161616163].
2023-08-22 02:53:42,138 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:53:42,138 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:53:43,457 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:53:43,457 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:53:44,704 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:53:44,704 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:54:02,241 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.33333333333333337, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.06060606060606061 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.4646464646464647].
2023-08-22 02:54:02,241 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.33333333333333337, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.06060606060606061 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.4646464646464647].
2023-08-22 02:54:03,762 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.8484848484848485, momentum=0.5151515151515152 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4040404040404041 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.5555555555555556].
2023-08-22 02:54:03,762 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.8484848484848485, momentum=0.5151515151515152 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4040404040404041 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.5555555555555556].
2023-08-22 02:54:04,861 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:54:04,862 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:54:26,832 INFO: Applying selection operators for generation 41.
2023-08-22 02:54:26,832 INFO: Applying genetic operators for generation 41.
2023-08-22 02:54:26,835 INFO: Evaluating fitness for for generation 41.
2023-08-22 02:54:26,835 INFO: Will evaluate fitness for 31 individuals.
2023-08-22 02:54:27,390 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.33333333333333337, momentum=0.9696969696969697 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=1.0 ,beta_2=0.37373737373737376 ,learning_rate_power=-0.02020202020202011 ,initial_accumulator_value=0.797979797979798 ,l1_regularization_strength=0.19191919191919193 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:54:27,390 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.33333333333333337, momentum=0.9696969696969697 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=1.0 ,beta_2=0.37373737373737376 ,learning_rate_power=-0.02020202020202011 ,initial_accumulator_value=0.797979797979798 ,l1_regularization_strength=0.19191919191919193 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:54:27,411 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:54:27,411 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:54:27,532 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:54:27,532 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:54:27,542 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:54:27,542 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:54:47,619 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:54:47,620 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:54:47,655 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:54:47,655 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:54:47,851 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:54:47,852 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:54:48,017 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:54:48,018 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:55:07,774 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.595959595959596 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0009797979818181818 ,centered=False ,beta_1=0.0 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.15151515151515152 ,beta=0.8383838383838385].
2023-08-22 02:55:07,775 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.595959595959596 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0009797979818181818 ,centered=False ,beta_1=0.0 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.15151515151515152 ,beta=0.8383838383838385].
2023-08-22 02:55:07,978 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:55:07,979 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:55:08,445 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:55:08,445 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:55:09,316 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:55:09,317 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:55:27,954 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:55:27,954 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:55:28,587 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:55:28,587 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:55:29,975 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:55:29,975 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:55:32,785 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:55:32,785 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:55:47,948 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0002727273454545454 ,centered=True ,beta_1=0.5656565656565657 ,beta_2=0.7373737373737375 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.36363636363636365 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.05050505050505051].
2023-08-22 02:55:47,948 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0002727273454545454 ,centered=True ,beta_1=0.5656565656565657 ,beta_2=0.7373737373737375 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.36363636363636365 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.05050505050505051].
2023-08-22 02:55:48,651 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:55:48,652 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:55:50,396 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.10101010101010102, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.7575757575757577 ,epsilon=0.001 ,centered=True ,beta_1=0.22222222222222224 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.6464646464646464 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.888888888888889].
2023-08-22 02:55:50,396 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.10101010101010102, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.7575757575757577 ,epsilon=0.001 ,centered=True ,beta_1=0.22222222222222224 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.6464646464646464 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.888888888888889].
2023-08-22 02:55:53,841 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:55:53,841 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:56:08,594 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:56:08,594 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:56:08,673 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.4545454545454546 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.7171717171717172 ,beta_2=0.10101010101010102 ,learning_rate_power=-0.9393939393939394 ,initial_accumulator_value=0.020202020202020204 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.6060606060606061].
2023-08-22 02:56:08,673 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.4545454545454546 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.7171717171717172 ,beta_2=0.10101010101010102 ,learning_rate_power=-0.9393939393939394 ,initial_accumulator_value=0.020202020202020204 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.6060606060606061].
2023-08-22 02:56:14,201 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.686868686868687, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.009899000000000002 ,use_ema=True ,ema_momentum=0.08080808080808081 ,rho=0.6262626262626263 ,epsilon=0.0005959596363636363 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.26262626262626265].
2023-08-22 02:56:14,201 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.686868686868687, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.009899000000000002 ,use_ema=True ,ema_momentum=0.08080808080808081 ,rho=0.6262626262626263 ,epsilon=0.0005959596363636363 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.26262626262626265].
2023-08-22 02:56:15,709 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0007080000000000002 ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0006868687181818181 ,centered=False ,beta_1=0.7070707070707072 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.8080808080808082 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.16161616161616163].
2023-08-22 02:56:15,710 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0007080000000000002 ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0006868687181818181 ,centered=False ,beta_1=0.7070707070707072 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.8080808080808082 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.16161616161616163].
2023-08-22 02:56:28,703 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.7171717171717172, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00017171725454545453 ,centered=True ,beta_1=0.36363636363636365 ,beta_2=0.09090909090909091 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.25252525252525254 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.16161616161616163].
2023-08-22 02:56:28,704 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.7171717171717172, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00017171725454545453 ,centered=True ,beta_1=0.36363636363636365 ,beta_2=0.09090909090909091 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.25252525252525254 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.16161616161616163].
2023-08-22 02:56:33,867 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:56:33,867 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:56:34,393 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:56:34,394 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:56:35,079 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4747474747474748 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.14141414141414144 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.11111111111111112 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.16161616161616163].
2023-08-22 02:56:35,079 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4747474747474748 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.14141414141414144 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.11111111111111112 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.16161616161616163].
2023-08-22 02:56:53,247 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:56:53,247 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:56:54,041 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.005152000000000001 ,use_ema=True ,ema_momentum=0.21212121212121213 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.6666666666666667 ,beta_2=0.888888888888889 ,learning_rate_power=-0.4242424242424242 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6666666666666667 ,beta=0.16161616161616163].
2023-08-22 02:56:54,041 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.005152000000000001 ,use_ema=True ,ema_momentum=0.21212121212121213 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.6666666666666667 ,beta_2=0.888888888888889 ,learning_rate_power=-0.4242424242424242 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6666666666666667 ,beta=0.16161616161616163].
2023-08-22 02:56:54,633 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:56:54,633 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:57:14,676 INFO: Applying selection operators for generation 42.
2023-08-22 02:57:14,676 INFO: Applying genetic operators for generation 42.
2023-08-22 02:57:14,679 INFO: Evaluating fitness for for generation 42.
2023-08-22 02:57:14,680 INFO: Will evaluate fitness for 32 individuals.
2023-08-22 02:57:15,243 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.12121212121212122 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.43434343434343436 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9191919191919192 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.7171717171717172].
2023-08-22 02:57:15,243 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.12121212121212122 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.43434343434343436 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9191919191919192 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.7171717171717172].
2023-08-22 02:57:15,253 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:57:15,253 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:57:15,272 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:57:15,272 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:57:15,302 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:57:15,303 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:57:35,403 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:57:35,403 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:57:35,877 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:57:35,877 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:57:35,930 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.26262626262626265, momentum=0.15151515151515152 ,nesterov=True ,amsgrad=True ,weight_decay=0.009697 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.20202020202020204 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9797979797979799 ,beta=0.9393939393939394].
2023-08-22 02:57:35,931 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.26262626262626265, momentum=0.15151515151515152 ,nesterov=True ,amsgrad=True ,weight_decay=0.009697 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.20202020202020204 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9797979797979799 ,beta=0.9393939393939394].
2023-08-22 02:57:40,011 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:57:40,011 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:57:55,348 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:57:55,349 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:57:56,370 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:57:56,370 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:58:00,434 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.888888888888889, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.07070707070707072].
2023-08-22 02:58:00,435 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.888888888888889, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.07070707070707072].
2023-08-22 02:58:01,295 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.494949494949495, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0033340000000000006 ,use_ema=False ,ema_momentum=0.7474747474747475 ,rho=0.11111111111111112 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.303030303030303 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.010101010101010102 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.5151515151515152].
2023-08-22 02:58:01,296 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.494949494949495, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0033340000000000006 ,use_ema=False ,ema_momentum=0.7474747474747475 ,rho=0.11111111111111112 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.303030303030303 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.010101010101010102 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.5151515151515152].
2023-08-22 02:58:15,388 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:58:15,388 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:58:18,066 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8383838383838385, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.15151515151515152 ,epsilon=0.00026262633636363634 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.16161616161616163].
2023-08-22 02:58:18,066 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8383838383838385, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.15151515151515152 ,epsilon=0.00026262633636363634 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.16161616161616163].
2023-08-22 02:58:21,765 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.8282828282828284 ,nesterov=True ,amsgrad=False ,weight_decay=0.0034350000000000006 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.888888888888889 ,epsilon=0.0009292929363636363 ,centered=False ,beta_1=0.393939393939394 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.0].
2023-08-22 02:58:21,766 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.8282828282828284 ,nesterov=True ,amsgrad=False ,weight_decay=0.0034350000000000006 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.888888888888889 ,epsilon=0.0009292929363636363 ,centered=False ,beta_1=0.393939393939394 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.0].
2023-08-22 02:58:25,962 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.9393939393939394, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0003030303727272727 ,centered=True ,beta_1=0.5050505050505051 ,beta_2=0.5454545454545455 ,learning_rate_power=-0.13131313131313127 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.31313131313131315].
2023-08-22 02:58:25,962 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.9393939393939394, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0003030303727272727 ,centered=True ,beta_1=0.5050505050505051 ,beta_2=0.5454545454545455 ,learning_rate_power=-0.13131313131313127 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.31313131313131315].
2023-08-22 02:58:36,119 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:58:36,119 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:58:43,221 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:58:43,222 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:58:47,531 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:58:47,531 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:58:49,932 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.3434343434343435 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.8080808080808082 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.09090909090909083 ,initial_accumulator_value=0.25252525252525254 ,l1_regularization_strength=0.19191919191919193 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.24242424242424243].
2023-08-22 02:58:49,932 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.3434343434343435 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.8080808080808082 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.09090909090909083 ,initial_accumulator_value=0.25252525252525254 ,l1_regularization_strength=0.19191919191919193 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.24242424242424243].
2023-08-22 02:58:56,342 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:58:56,342 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:59:03,860 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:59:03,860 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:59:07,842 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8080808080808082, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0029300000000000007 ,use_ema=True ,ema_momentum=0.6262626262626263 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.8282828282828283 ,initial_accumulator_value=0.8787878787878789 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4646464646464647 ,beta=0.12121212121212122].
2023-08-22 02:59:07,843 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8080808080808082, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0029300000000000007 ,use_ema=True ,ema_momentum=0.6262626262626263 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.8282828282828283 ,initial_accumulator_value=0.8787878787878789 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4646464646464647 ,beta=0.12121212121212122].
2023-08-22 02:59:15,524 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.7474747474747475, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=0.006364000000000001 ,use_ema=True ,ema_momentum=0.48484848484848486 ,rho=0.787878787878788 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.6262626262626263 ,beta_2=0.7777777777777778 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.16161616161616163].
2023-08-22 02:59:15,524 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.7474747474747475, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=0.006364000000000001 ,use_ema=True ,ema_momentum=0.48484848484848486 ,rho=0.787878787878788 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.6262626262626263 ,beta_2=0.7777777777777778 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.16161616161616163].
2023-08-22 02:59:16,570 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5858585858585859, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6363636363636365 ,rho=0.6262626262626263 ,epsilon=0.00015151523636363636 ,centered=False ,beta_1=0.22222222222222224 ,beta_2=0.8282828282828284 ,learning_rate_power=-0.10101010101010088 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.010101010101010102].
2023-08-22 02:59:16,571 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5858585858585859, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6363636363636365 ,rho=0.6262626262626263 ,epsilon=0.00015151523636363636 ,centered=False ,beta_1=0.22222222222222224 ,beta_2=0.8282828282828284 ,learning_rate_power=-0.10101010101010088 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.010101010101010102].
2023-08-22 02:59:24,440 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5757575757575758, momentum=0.08080808080808081 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.8282828282828284 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.030303030303030304 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8989898989898991 ,beta=0.16161616161616163].
2023-08-22 02:59:24,440 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5757575757575758, momentum=0.08080808080808081 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.8282828282828284 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.030303030303030304 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8989898989898991 ,beta=0.16161616161616163].
2023-08-22 02:59:28,799 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:59:28,800 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:59:41,531 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:59:41,531 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:59:49,912 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:59:49,912 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:59:51,496 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:59:51,497 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:59:52,785 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 02:59:52,786 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:00:12,734 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6767676767676768, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.5454545454545455 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.11111111111111112 ,beta_2=0.9393939393939394 ,learning_rate_power=-0.303030303030303 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.26262626262626265 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.16161616161616163].
2023-08-22 03:00:12,734 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6767676767676768, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.5454545454545455 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.11111111111111112 ,beta_2=0.9393939393939394 ,learning_rate_power=-0.303030303030303 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.26262626262626265 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.16161616161616163].
2023-08-22 03:00:36,293 INFO: Applying selection operators for generation 43.
2023-08-22 03:00:36,294 INFO: Applying genetic operators for generation 43.
2023-08-22 03:00:36,296 INFO: Evaluating fitness for for generation 43.
2023-08-22 03:00:36,296 INFO: Will evaluate fitness for 26 individuals.
2023-08-22 03:00:36,864 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:00:36,864 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:00:36,872 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:00:36,872 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:00:36,943 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:00:36,944 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:00:36,944 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.8585858585858587, momentum=0.05050505050505051 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.23232323232323235 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.11111111111111105 ,initial_accumulator_value=0.9494949494949496 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.16161616161616163].
2023-08-22 03:00:36,944 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.8585858585858587, momentum=0.05050505050505051 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.23232323232323235 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.11111111111111105 ,initial_accumulator_value=0.9494949494949496 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.16161616161616163].
2023-08-22 03:00:57,046 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:00:57,046 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:00:57,279 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:00:57,279 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:00:58,079 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:00:58,079 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:01:00,454 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.26262626262626265 ,epsilon=9.09091818181818e-05 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.3535353535353536].
2023-08-22 03:01:00,455 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.26262626262626265 ,epsilon=9.09091818181818e-05 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.3535353535353536].
2023-08-22 03:01:16,962 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.8282828282828284 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.8484848484848485 ,beta_2=0.5050505050505051 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.43434343434343436 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8282828282828284 ,beta=0.16161616161616163].
2023-08-22 03:01:16,962 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.8282828282828284 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.8484848484848485 ,beta_2=0.5050505050505051 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.43434343434343436 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8282828282828284 ,beta=0.16161616161616163].
2023-08-22 03:01:17,767 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:01:17,767 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:01:18,335 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:01:18,335 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:01:25,321 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:01:25,321 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:01:39,266 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.5151515151515152 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5656565656565657 ,beta_2=0.020202020202020204 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.42424242424242425].
2023-08-22 03:01:39,266 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.5151515151515152 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5656565656565657 ,beta_2=0.020202020202020204 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.42424242424242425].
2023-08-22 03:01:39,524 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:01:39,525 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:01:41,777 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:01:41,777 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:01:45,364 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:01:45,364 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:02:00,959 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:02:00,959 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:02:02,654 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:02:02,654 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:02:04,849 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:02:04,849 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:02:05,354 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:02:05,355 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:02:21,292 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:02:21,292 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:02:22,871 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0009100000000000001 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.5555555555555556 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.21212121212121213].
2023-08-22 03:02:22,871 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0009100000000000001 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.5555555555555556 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.21212121212121213].
2023-08-22 03:02:25,396 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:02:25,396 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:02:26,030 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:02:26,030 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:02:41,561 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.06060606060606061, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00026262633636363634 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.9494949494949496 ,learning_rate_power=-0.8080808080808081 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.16161616161616163].
2023-08-22 03:02:41,562 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.06060606060606061, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00026262633636363634 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.9494949494949496 ,learning_rate_power=-0.8080808080808081 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.16161616161616163].
2023-08-22 03:03:16,743 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.020202020202020204 ,rho=0.07070707070707072 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.04040404040404041 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.7575757575757577 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.6262626262626263].
2023-08-22 03:03:16,743 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.020202020202020204 ,rho=0.07070707070707072 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.04040404040404041 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.7575757575757577 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.6262626262626263].
2023-08-22 03:03:50,608 INFO: Applying selection operators for generation 44.
2023-08-22 03:03:50,609 INFO: Applying genetic operators for generation 44.
2023-08-22 03:03:50,611 INFO: Evaluating fitness for for generation 44.
2023-08-22 03:03:50,611 INFO: Will evaluate fitness for 26 individuals.
2023-08-22 03:03:51,189 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:03:51,189 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:03:51,216 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.48484848484848486].
2023-08-22 03:03:51,216 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.48484848484848486].
2023-08-22 03:03:51,219 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0029300000000000007 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.33333333333333337 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5555555555555556 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.030303030303030304 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:03:51,219 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0029300000000000007 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.33333333333333337 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5555555555555556 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.030303030303030304 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:03:51,245 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:03:51,245 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:04:11,125 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.17171717171717174 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0008282828454545454 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.33333333333333337 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.23232323232323235].
2023-08-22 03:04:11,125 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.17171717171717174 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0008282828454545454 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.33333333333333337 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.23232323232323235].
2023-08-22 03:04:11,452 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.7474747474747475, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.11111111111111112 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:04:11,453 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.7474747474747475, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.11111111111111112 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:04:12,593 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:04:12,593 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:04:17,741 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:04:17,741 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:04:33,119 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.3434343434343435, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0065660000000000015 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.9494949494949496 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.5757575757575758 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.16161616161616163].
2023-08-22 03:04:33,119 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.3434343434343435, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0065660000000000015 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.9494949494949496 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.5757575757575758 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.16161616161616163].
2023-08-22 03:04:35,281 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:04:35,281 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:04:36,918 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:04:36,919 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:04:38,471 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:04:38,471 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:04:55,894 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:04:55,894 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:04:57,327 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:04:57,327 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:04:58,555 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:04:58,555 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:05:00,168 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.98989898989899 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5151515151515152 ,beta=0.24242424242424243].
2023-08-22 03:05:00,169 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.98989898989899 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5151515151515152 ,beta=0.24242424242424243].
2023-08-22 03:05:15,878 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:05:15,878 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:05:17,773 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:05:17,773 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:05:18,707 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:05:18,707 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:05:20,742 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:05:20,742 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:05:35,908 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.5555555555555556, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5656565656565657 ,rho=0.9292929292929294 ,epsilon=0.0005858586272727272 ,centered=False ,beta_1=0.24242424242424243 ,beta_2=0.29292929292929293 ,learning_rate_power=-0.9292929292929293 ,initial_accumulator_value=0.08080808080808081 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.16161616161616163].
2023-08-22 03:05:35,908 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.5555555555555556, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5656565656565657 ,rho=0.9292929292929294 ,epsilon=0.0005858586272727272 ,centered=False ,beta_1=0.24242424242424243 ,beta_2=0.29292929292929293 ,learning_rate_power=-0.9292929292929293 ,initial_accumulator_value=0.08080808080808081 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.16161616161616163].
2023-08-22 03:05:38,003 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:05:38,003 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:05:39,567 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:05:39,567 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:05:42,290 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:05:42,291 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:05:59,081 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:05:59,081 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:06:18,979 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:06:18,979 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:06:38,130 INFO: Applying selection operators for generation 45.
2023-08-22 03:06:38,130 INFO: Applying genetic operators for generation 45.
2023-08-22 03:06:38,133 INFO: Evaluating fitness for for generation 45.
2023-08-22 03:06:38,133 INFO: Will evaluate fitness for 27 individuals.
2023-08-22 03:06:38,694 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:06:38,694 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:06:38,712 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:06:38,713 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:06:38,724 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8787878787878789 ,rho=0.6262626262626263 ,epsilon=0.00043434349090909084 ,centered=False ,beta_1=0.13131313131313133 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.16161616161616163].
2023-08-22 03:06:38,725 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8787878787878789 ,rho=0.6262626262626263 ,epsilon=0.00043434349090909084 ,centered=False ,beta_1=0.13131313131313133 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.16161616161616163].
2023-08-22 03:06:38,743 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8181818181818182 ,rho=0.6262626262626263 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.888888888888889 ,beta_2=0.595959595959596 ,learning_rate_power=-0.9393939393939394 ,initial_accumulator_value=0.6161616161616162 ,l1_regularization_strength=0.7373737373737375 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.16161616161616163].
2023-08-22 03:06:38,743 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8181818181818182 ,rho=0.6262626262626263 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.888888888888889 ,beta_2=0.595959595959596 ,learning_rate_power=-0.9393939393939394 ,initial_accumulator_value=0.6161616161616162 ,l1_regularization_strength=0.7373737373737375 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.16161616161616163].
2023-08-22 03:06:58,929 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:06:58,929 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:06:59,070 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:06:59,070 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:06:59,327 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:06:59,328 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:07:03,296 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:07:03,296 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:07:19,318 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:07:19,318 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:07:19,412 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.7474747474747475, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.9797979797979798 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.16161616161616163].
2023-08-22 03:07:19,412 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.7474747474747475, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.9797979797979798 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.16161616161616163].
2023-08-22 03:07:19,994 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:07:19,994 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:07:23,436 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:07:23,437 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:07:39,281 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.38383838383838387 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=1.0 ,rho=0.6262626262626263 ,epsilon=0.0005555556 ,centered=True ,beta_1=0.2828282828282829 ,beta_2=0.33333333333333337 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.9797979797979799 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.07070707070707072].
2023-08-22 03:07:39,281 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.38383838383838387 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=1.0 ,rho=0.6262626262626263 ,epsilon=0.0005555556 ,centered=True ,beta_1=0.2828282828282829 ,beta_2=0.33333333333333337 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.9797979797979799 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.07070707070707072].
2023-08-22 03:07:40,422 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:07:40,423 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:07:44,418 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:07:44,418 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:07:45,056 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:07:45,056 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:08:00,763 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.8686868686868687, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.001819 ,use_ema=True ,ema_momentum=0.4545454545454546 ,rho=0.12121212121212122 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.15151515151515152 ,beta=0.16161616161616163].
2023-08-22 03:08:00,763 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.8686868686868687, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.001819 ,use_ema=True ,ema_momentum=0.4545454545454546 ,rho=0.12121212121212122 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.15151515151515152 ,beta=0.16161616161616163].
2023-08-22 03:08:04,357 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3434343434343435 ,rho=0.26262626262626265 ,epsilon=4.040413636363636e-05 ,centered=False ,beta_1=0.0 ,beta_2=0.8484848484848485 ,learning_rate_power=-0.303030303030303 ,initial_accumulator_value=0.6161616161616162 ,l1_regularization_strength=0.43434343434343436 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.6262626262626263].
2023-08-22 03:08:04,357 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3434343434343435 ,rho=0.26262626262626265 ,epsilon=4.040413636363636e-05 ,centered=False ,beta_1=0.0 ,beta_2=0.8484848484848485 ,learning_rate_power=-0.303030303030303 ,initial_accumulator_value=0.6161616161616162 ,l1_regularization_strength=0.43434343434343436 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.6262626262626263].
2023-08-22 03:08:04,683 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:08:04,683 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:08:05,751 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:08:05,751 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:08:24,753 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:08:24,753 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:08:26,210 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.31313131313131315, momentum=0.17171717171717174 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.25252525252525254 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.9090909090909092 ,l1_regularization_strength=0.08080808080808081 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.5050505050505051].
2023-08-22 03:08:26,210 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.31313131313131315, momentum=0.17171717171717174 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.25252525252525254 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.9090909090909092 ,l1_regularization_strength=0.08080808080808081 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.5050505050505051].
2023-08-22 03:08:26,231 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:08:26,232 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:08:29,331 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:08:29,331 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:08:44,768 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:08:44,768 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:08:46,679 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:08:46,679 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:09:05,473 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:09:05,474 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:09:24,693 INFO: Applying selection operators for generation 46.
2023-08-22 03:09:24,694 INFO: Applying genetic operators for generation 46.
2023-08-22 03:09:24,696 INFO: Evaluating fitness for for generation 46.
2023-08-22 03:09:24,696 INFO: Will evaluate fitness for 26 individuals.
2023-08-22 03:09:25,287 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:09:25,287 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:09:25,287 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:09:25,287 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:09:25,289 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:09:25,289 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:09:25,305 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.33333333333333337, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.007576000000000001 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.8181818181818181 ,initial_accumulator_value=0.22222222222222224 ,l1_regularization_strength=0.43434343434343436 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.15151515151515152].
2023-08-22 03:09:25,305 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.33333333333333337, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.007576000000000001 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.8181818181818181 ,initial_accumulator_value=0.22222222222222224 ,l1_regularization_strength=0.43434343434343436 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.15151515151515152].
2023-08-22 03:09:45,120 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:09:45,120 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:09:45,230 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:09:45,230 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:09:45,558 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:09:45,558 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:09:48,655 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:09:48,655 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:10:05,101 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:10:05,101 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:10:06,013 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:10:06,014 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:10:06,014 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:10:06,014 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:10:09,465 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:10:09,466 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:10:25,014 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:10:25,014 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:10:26,203 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.7171717171717172, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.888888888888889 ,epsilon=0.0006262626636363636 ,centered=False ,beta_1=0.7070707070707072 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.16161616161616163].
2023-08-22 03:10:26,203 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.7171717171717172, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.888888888888889 ,epsilon=0.0006262626636363636 ,centered=False ,beta_1=0.7070707070707072 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.16161616161616163].
2023-08-22 03:10:26,447 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:10:26,447 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:10:30,041 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:10:30,042 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:10:45,541 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:10:45,541 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:10:45,748 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8484848484848485, momentum=0.24242424242424243 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.5050505050505051 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.5151515151515152 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.16161616161616163].
2023-08-22 03:10:45,748 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8484848484848485, momentum=0.24242424242424243 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.5050505050505051 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.5151515151515152 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.16161616161616163].
2023-08-22 03:10:47,700 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:10:47,700 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:10:50,217 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:10:50,217 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:11:05,489 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:11:05,489 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:11:08,277 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:11:08,277 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:11:10,547 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4444444444444445, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.33333333333333337 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.393939393939394 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.5555555555555556 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:11:10,547 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4444444444444445, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.33333333333333337 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.393939393939394 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.5555555555555556 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:11:11,218 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.06060606060606061, momentum=0.5151515151515152 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6262626262626263 ,learning_rate_power=-0.04040404040404033 ,initial_accumulator_value=0.696969696969697 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.5858585858585859].
2023-08-22 03:11:11,218 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.06060606060606061, momentum=0.5151515151515152 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6262626262626263 ,learning_rate_power=-0.04040404040404033 ,initial_accumulator_value=0.696969696969697 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.5858585858585859].
2023-08-22 03:11:25,314 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:11:25,315 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:11:45,833 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.27272727272727276 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.303030303030303 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.6161616161616162].
2023-08-22 03:11:45,833 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.27272727272727276 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.303030303030303 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.6161616161616162].
2023-08-22 03:12:09,038 INFO: Applying selection operators for generation 47.
2023-08-22 03:12:09,038 INFO: Applying genetic operators for generation 47.
2023-08-22 03:12:09,041 INFO: Evaluating fitness for for generation 47.
2023-08-22 03:12:09,041 INFO: Will evaluate fitness for 26 individuals.
2023-08-22 03:12:09,611 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.7676767676767677 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.98989898989899 ,learning_rate_power=-1.0 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.16161616161616163].
2023-08-22 03:12:09,612 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.7676767676767677 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.98989898989899 ,learning_rate_power=-1.0 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.16161616161616163].
2023-08-22 03:12:09,614 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.686868686868687 ,rho=0.6262626262626263 ,epsilon=0.00012121220909090907 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.98989898989899 ,learning_rate_power=-0.8686868686868687 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.98989898989899].
2023-08-22 03:12:09,614 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.686868686868687 ,rho=0.6262626262626263 ,epsilon=0.00012121220909090907 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.98989898989899 ,learning_rate_power=-0.8686868686868687 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.98989898989899].
2023-08-22 03:12:09,635 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:12:09,635 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:12:09,650 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:12:09,651 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:12:29,721 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:12:29,721 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:12:30,031 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:12:30,031 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:12:34,462 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0009898989909090908 ,centered=True ,beta_1=0.5353535353535354 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=1.0 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.36363636363636365].
2023-08-22 03:12:34,462 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0009898989909090908 ,centered=True ,beta_1=0.5353535353535354 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=1.0 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.36363636363636365].
2023-08-22 03:12:35,779 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.22222222222222224 ,rho=0.9696969696969697 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.24242424242424243 ,learning_rate_power=-0.13131313131313127 ,initial_accumulator_value=0.9494949494949496 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.18181818181818182].
2023-08-22 03:12:35,780 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.22222222222222224 ,rho=0.9696969696969697 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.24242424242424243 ,learning_rate_power=-0.13131313131313127 ,initial_accumulator_value=0.9494949494949496 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.18181818181818182].
2023-08-22 03:12:50,542 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:12:50,542 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:12:51,323 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:12:51,323 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:12:54,277 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:12:54,278 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:13:10,671 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.36363636363636365, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.007273000000000001 ,use_ema=True ,ema_momentum=0.4040404040404041 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.37373737373737376 ,l1_regularization_strength=0.5050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.9191919191919192].
2023-08-22 03:13:10,671 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.36363636363636365, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.007273000000000001 ,use_ema=True ,ema_momentum=0.4040404040404041 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.37373737373737376 ,l1_regularization_strength=0.5050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.9191919191919192].
2023-08-22 03:13:11,881 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:13:11,881 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:13:12,787 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:13:12,787 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:13:14,477 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:13:14,477 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:13:31,293 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.8787878787878789 ,nesterov=True ,amsgrad=False ,weight_decay=0.0008090000000000001 ,use_ema=True ,ema_momentum=0.13131313131313133 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.5858585858585859].
2023-08-22 03:13:31,293 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.8787878787878789 ,nesterov=True ,amsgrad=False ,weight_decay=0.0008090000000000001 ,use_ema=True ,ema_momentum=0.13131313131313133 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.5858585858585859].
2023-08-22 03:13:32,401 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:13:32,402 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:13:32,682 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:13:32,682 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:13:35,316 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:13:35,317 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:13:52,660 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:13:52,660 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:13:52,786 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:13:52,787 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:13:55,918 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.16161616161616163].
2023-08-22 03:13:55,919 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.16161616161616163].
2023-08-22 03:13:58,750 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.48484848484848486 ,rho=0.7676767676767677 ,epsilon=0.0006363636727272727 ,centered=True ,beta_1=0.3434343434343435 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.6868686868686869 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.16161616161616163].
2023-08-22 03:13:58,751 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.48484848484848486 ,rho=0.7676767676767677 ,epsilon=0.0006363636727272727 ,centered=True ,beta_1=0.3434343434343435 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.6868686868686869 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.16161616161616163].
2023-08-22 03:14:12,567 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:14:12,568 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:14:14,272 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.8080808080808082, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.000676767709090909 ,centered=False ,beta_1=0.5656565656565657 ,beta_2=0.4545454545454546 ,learning_rate_power=-0.10101010101010088 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.6464646464646465].
2023-08-22 03:14:14,272 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.8080808080808082, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.000676767709090909 ,centered=False ,beta_1=0.5656565656565657 ,beta_2=0.4545454545454546 ,learning_rate_power=-0.10101010101010088 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.6464646464646465].
2023-08-22 03:14:33,829 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.494949494949495 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5353535353535354 ,rho=0.38383838383838387 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6161616161616162 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.18181818181818182].
2023-08-22 03:14:33,830 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.494949494949495 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5353535353535354 ,rho=0.38383838383838387 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6161616161616162 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.18181818181818182].
2023-08-22 03:14:57,830 INFO: Applying selection operators for generation 48.
2023-08-22 03:14:57,831 INFO: Applying genetic operators for generation 48.
2023-08-22 03:14:57,834 INFO: Evaluating fitness for for generation 48.
2023-08-22 03:14:57,834 INFO: Will evaluate fitness for 37 individuals.
2023-08-22 03:14:58,394 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.48484848484848486 ,rho=0.26262626262626265 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.8787878787878788 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.010101010101010102 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.13131313131313133].
2023-08-22 03:14:58,394 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.48484848484848486 ,rho=0.26262626262626265 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.8787878787878788 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.010101010101010102 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.13131313131313133].
2023-08-22 03:14:58,423 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:14:58,423 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:14:58,429 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:14:58,429 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:14:58,445 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:14:58,445 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:15:17,676 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.003940000000000001 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6565656565656566 ,epsilon=0.0006363636727272727 ,centered=False ,beta_1=0.5252525252525253 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.27272727272727276].
2023-08-22 03:15:17,676 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.003940000000000001 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6565656565656566 ,epsilon=0.0006363636727272727 ,centered=False ,beta_1=0.5252525252525253 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.27272727272727276].
2023-08-22 03:15:18,391 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:15:18,391 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:15:18,474 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.98989898989899 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.3939393939393939 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.6060606060606061].
2023-08-22 03:15:18,474 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.98989898989899 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.3939393939393939 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.6060606060606061].
2023-08-22 03:15:18,714 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:15:18,714 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:15:38,181 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:15:38,181 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:15:40,407 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:15:40,407 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:15:43,383 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:15:43,383 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:15:43,572 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:15:43,572 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:15:58,982 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0.4444444444444445 ,nesterov=True ,amsgrad=False ,weight_decay=0.007576000000000001 ,use_ema=True ,ema_momentum=0.5252525252525253 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.36363636363636365 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.8686868686868687 ,l1_regularization_strength=0.4444444444444445 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.16161616161616163].
2023-08-22 03:15:58,982 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0.4444444444444445 ,nesterov=True ,amsgrad=False ,weight_decay=0.007576000000000001 ,use_ema=True ,ema_momentum=0.5252525252525253 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.36363636363636365 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.8686868686868687 ,l1_regularization_strength=0.4444444444444445 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.16161616161616163].
2023-08-22 03:16:00,898 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5353535353535354 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.20202020202020204 ,beta_2=0.3434343434343435 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.25252525252525254 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:16:00,899 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5353535353535354 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.20202020202020204 ,beta_2=0.3434343434343435 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.25252525252525254 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:16:03,488 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5353535353535354 ,rho=0.6262626262626263 ,epsilon=0.0009191919272727272 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.13131313131313127 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.696969696969697].
2023-08-22 03:16:03,488 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5353535353535354 ,rho=0.6262626262626263 ,epsilon=0.0009191919272727272 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.13131313131313127 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.696969696969697].
2023-08-22 03:16:04,682 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:16:04,682 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:16:21,239 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:16:21,239 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:16:25,035 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.08080808080808081 ,nesterov=True ,amsgrad=False ,weight_decay=0.0022230000000000006 ,use_ema=True ,ema_momentum=0.16161616161616163 ,rho=0.4646464646464647 ,epsilon=0.0005353535818181818 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6464646464646465 ,learning_rate_power=-0.3535353535353535 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:16:25,035 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.08080808080808081 ,nesterov=True ,amsgrad=False ,weight_decay=0.0022230000000000006 ,use_ema=True ,ema_momentum=0.16161616161616163 ,rho=0.4646464646464647 ,epsilon=0.0005353535818181818 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6464646464646465 ,learning_rate_power=-0.3535353535353535 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:16:37,310 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.5151515151515151 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.5656565656565657].
2023-08-22 03:16:37,310 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.5151515151515151 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.5656565656565657].
2023-08-22 03:16:41,222 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5252525252525253 ,rho=0.6262626262626263 ,epsilon=0.00017171725454545453 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.888888888888889 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.3535353535353536 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.16161616161616163].
2023-08-22 03:16:41,222 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5252525252525253 ,rho=0.6262626262626263 ,epsilon=0.00017171725454545453 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.888888888888889 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.3535353535353536 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.16161616161616163].
2023-08-22 03:16:41,786 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.05050505050505051 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.16161616161616163].
2023-08-22 03:16:41,787 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.05050505050505051 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.16161616161616163].
2023-08-22 03:16:51,219 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.0, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.8282828282828284 ,epsilon=2.020211818181818e-05 ,centered=False ,beta_1=0.8383838383838385 ,beta_2=0.19191919191919193 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:16:51,220 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.0, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.8282828282828284 ,epsilon=2.020211818181818e-05 ,centered=False ,beta_1=0.8383838383838385 ,beta_2=0.19191919191919193 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:17:02,402 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:17:02,403 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:17:03,455 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:17:03,455 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:17:06,213 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:17:06,214 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:17:16,739 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0.6262626262626263 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.797979797979798 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.6767676767676768 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.2727272727272727 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:17:16,740 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0.6262626262626263 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.797979797979798 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.6767676767676768 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.2727272727272727 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:17:23,058 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:17:23,058 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:17:23,530 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.16161616161616163 ,rho=0.393939393939394 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.29292929292929293 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.16161616161616163].
2023-08-22 03:17:23,531 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.16161616161616163 ,rho=0.393939393939394 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.29292929292929293 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.16161616161616163].
2023-08-22 03:17:26,083 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:17:26,083 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:17:42,566 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:17:42,567 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:17:43,514 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:17:43,515 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:17:46,094 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6666666666666667, momentum=0.7373737373737375 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.12121212121212122 ,rho=0.37373737373737376 ,epsilon=0.0005353535818181818 ,centered=False ,beta_1=0.13131313131313133 ,beta_2=0.12121212121212122 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.8181818181818182 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.16161616161616163].
2023-08-22 03:17:46,094 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6666666666666667, momentum=0.7373737373737375 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.12121212121212122 ,rho=0.37373737373737376 ,epsilon=0.0005353535818181818 ,centered=False ,beta_1=0.13131313131313133 ,beta_2=0.12121212121212122 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.8181818181818182 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.16161616161616163].
2023-08-22 03:17:49,490 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:17:49,491 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:18:02,923 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:18:02,923 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:18:03,859 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:18:03,859 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:18:09,750 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:18:09,751 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:18:11,768 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:18:11,768 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:18:31,177 INFO: Applying selection operators for generation 49.
2023-08-22 03:18:31,178 INFO: Applying genetic operators for generation 49.
2023-08-22 03:18:31,180 INFO: Evaluating fitness for for generation 49.
2023-08-22 03:18:31,180 INFO: Will evaluate fitness for 21 individuals.
2023-08-22 03:18:31,742 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:18:31,743 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:18:31,755 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:18:31,756 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:18:31,758 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:18:31,758 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:18:31,758 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.14141414141414144 ,rho=0.11111111111111112 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.9191919191919192 ,beta_2=0.23232323232323235 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.494949494949495 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.16161616161616163].
2023-08-22 03:18:31,759 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.14141414141414144 ,rho=0.11111111111111112 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.9191919191919192 ,beta_2=0.23232323232323235 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.494949494949495 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.16161616161616163].
2023-08-22 03:18:51,512 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.10101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.10101010101010102 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.9797979797979799 ,beta_2=0.393939393939394 ,learning_rate_power=-0.3535353535353535 ,initial_accumulator_value=0.9797979797979799 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:18:51,512 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.10101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.10101010101010102 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.9797979797979799 ,beta_2=0.393939393939394 ,learning_rate_power=-0.3535353535353535 ,initial_accumulator_value=0.9797979797979799 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:18:52,127 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:18:52,127 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:18:52,788 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:18:52,789 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:18:55,830 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:18:55,830 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:19:12,312 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:19:12,312 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:19:13,387 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:19:13,387 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:19:15,806 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:19:15,806 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:19:17,387 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.16161616161616163 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9292929292929294 ,rho=0.06060606060606061 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.09090909090909091 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7777777777777778 ,beta=0.5858585858585859].
2023-08-22 03:19:17,387 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.16161616161616163 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9292929292929294 ,rho=0.06060606060606061 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.09090909090909091 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7777777777777778 ,beta=0.5858585858585859].
2023-08-22 03:19:33,134 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0.3535353535353536 ,nesterov=True ,amsgrad=False ,weight_decay=0.0027280000000000004 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.9494949494949496 ,epsilon=0.0009191919272727272 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.5252525252525253 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9797979797979799 ,beta=0.16161616161616163].
2023-08-22 03:19:33,134 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0.3535353535353536 ,nesterov=True ,amsgrad=False ,weight_decay=0.0027280000000000004 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.9494949494949496 ,epsilon=0.0009191919272727272 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.5252525252525253 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9797979797979799 ,beta=0.16161616161616163].
2023-08-22 03:19:33,754 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:19:33,755 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:19:36,385 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:19:36,385 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:19:42,724 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:19:42,725 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:19:54,130 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:19:54,131 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:19:56,555 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:19:56,555 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:19:58,090 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:19:58,091 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:20:15,611 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.9797979797979799, momentum=0.30303030303030304 ,nesterov=False ,amsgrad=True ,weight_decay=0.005354000000000001 ,use_ema=True ,ema_momentum=1.0 ,rho=0.6060606060606061 ,epsilon=0.0008282828454545454 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.010101010101010102 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.7171717171717172 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:20:15,611 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.9797979797979799, momentum=0.30303030303030304 ,nesterov=False ,amsgrad=True ,weight_decay=0.005354000000000001 ,use_ema=True ,ema_momentum=1.0 ,rho=0.6060606060606061 ,epsilon=0.0008282828454545454 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.010101010101010102 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.7171717171717172 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:20:16,495 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:20:16,495 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:20:40,837 INFO: Applying selection operators for generation 50.
2023-08-22 03:20:40,837 INFO: Applying genetic operators for generation 50.
2023-08-22 03:20:40,840 INFO: Evaluating fitness for for generation 50.
2023-08-22 03:20:40,841 INFO: Will evaluate fitness for 36 individuals.
2023-08-22 03:20:41,430 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:20:41,430 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:20:41,431 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8585858585858587 ,rho=0.6464646464646465 ,epsilon=0.0006060606454545455 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6666666666666667 ,beta=0.4444444444444445].
2023-08-22 03:20:41,431 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8585858585858587 ,rho=0.6464646464646465 ,epsilon=0.0006060606454545455 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6666666666666667 ,beta=0.4444444444444445].
2023-08-22 03:20:41,436 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.33333333333333337, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6060606060606061 ,epsilon=0.0005656566090909091 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5757575757575758 ,beta=0.16161616161616163].
2023-08-22 03:20:41,436 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.33333333333333337, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6060606060606061 ,epsilon=0.0005656566090909091 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5757575757575758 ,beta=0.16161616161616163].
2023-08-22 03:20:41,444 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:20:41,444 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:21:01,542 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.08080808080808081 ,rho=0.010101010101010102 ,epsilon=0.0002727273454545454 ,centered=False ,beta_1=0.6464646464646465 ,beta_2=0.32323232323232326 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.16161616161616163].
2023-08-22 03:21:01,542 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.08080808080808081 ,rho=0.010101010101010102 ,epsilon=0.0002727273454545454 ,centered=False ,beta_1=0.6464646464646465 ,beta_2=0.32323232323232326 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.16161616161616163].
2023-08-22 03:21:01,611 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:21:01,611 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:21:07,305 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.3434343434343434 ,initial_accumulator_value=0.04040404040404041 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:21:07,305 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.3434343434343434 ,initial_accumulator_value=0.04040404040404041 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:21:07,347 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.8787878787878789 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.2828282828282829 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.30303030303030304 ,l1_regularization_strength=0.4444444444444445 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.18181818181818182].
2023-08-22 03:21:07,347 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.8787878787878789 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.2828282828282829 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.30303030303030304 ,l1_regularization_strength=0.4444444444444445 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.18181818181818182].
2023-08-22 03:21:22,872 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.3434343434343435, momentum=0.8484848484848485 ,nesterov=False ,amsgrad=True ,weight_decay=0.009899000000000002 ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.3434343434343435 ,epsilon=0.0009696969727272727 ,centered=False ,beta_1=0.5353535353535354 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.16161616161616163].
2023-08-22 03:21:22,872 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.3434343434343435, momentum=0.8484848484848485 ,nesterov=False ,amsgrad=True ,weight_decay=0.009899000000000002 ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.3434343434343435 ,epsilon=0.0009696969727272727 ,centered=False ,beta_1=0.5353535353535354 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.16161616161616163].
2023-08-22 03:21:27,443 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:21:27,444 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:21:27,558 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:21:27,558 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:21:29,340 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:21:29,340 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:21:47,554 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:21:47,554 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:21:47,603 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:21:47,604 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:21:48,494 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:21:48,495 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:21:50,564 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:21:50,565 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:22:07,512 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:22:07,513 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:22:07,604 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:22:07,604 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:22:08,795 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7373737373737375, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0029300000000000007 ,use_ema=True ,ema_momentum=0.7676767676767677 ,rho=0.9494949494949496 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.31313131313131315 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.7474747474747475 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6666666666666667 ,beta=0.19191919191919193].
2023-08-22 03:22:08,795 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7373737373737375, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0029300000000000007 ,use_ema=True ,ema_momentum=0.7676767676767677 ,rho=0.9494949494949496 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.31313131313131315 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.7474747474747475 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6666666666666667 ,beta=0.19191919191919193].
2023-08-22 03:22:11,049 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.08080808080808081 ,rho=0.30303030303030304 ,epsilon=0.000676767709090909 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.16161616161616155 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:22:11,049 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.08080808080808081 ,rho=0.30303030303030304 ,epsilon=0.000676767709090909 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.16161616161616155 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:22:28,075 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:22:28,076 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:22:28,308 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:22:28,309 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:22:35,547 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:22:35,548 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:22:35,710 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.25252525252525254, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=1e-06 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00023232330909090908 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.010101010101010055 ,initial_accumulator_value=0.33333333333333337 ,l1_regularization_strength=0.9797979797979799 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.16161616161616163].
2023-08-22 03:22:35,710 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.25252525252525254, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=1e-06 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00023232330909090908 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.010101010101010055 ,initial_accumulator_value=0.33333333333333337 ,l1_regularization_strength=0.9797979797979799 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.16161616161616163].
2023-08-22 03:22:48,144 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.06060606060606061, momentum=0.4545454545454546 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0006060606454545455 ,centered=False ,beta_1=0.09090909090909091 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.393939393939394].
2023-08-22 03:22:48,144 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.06060606060606061, momentum=0.4545454545454546 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0006060606454545455 ,centered=False ,beta_1=0.09090909090909091 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.393939393939394].
2023-08-22 03:22:48,458 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:22:48,459 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:22:55,940 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:22:55,941 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:23:02,369 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4444444444444445, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0024250000000000005 ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0009696969727272727 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.303030303030303 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.16161616161616163].
2023-08-22 03:23:02,370 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4444444444444445, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0024250000000000005 ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0009696969727272727 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.303030303030303 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.16161616161616163].
2023-08-22 03:23:08,541 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:23:08,541 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:23:13,390 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:23:13,391 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:23:17,178 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8080808080808082 ,rho=0.21212121212121213 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.7272727272727273 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.16161616161616163].
2023-08-22 03:23:17,178 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8080808080808082 ,rho=0.21212121212121213 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.7272727272727273 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.16161616161616163].
2023-08-22 03:23:28,469 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6666666666666667 ,rho=0.32323232323232326 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.6161616161616162 ,beta_2=0.17171717171717174 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:23:28,469 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6666666666666667 ,rho=0.32323232323232326 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.6161616161616162 ,beta_2=0.17171717171717174 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:23:29,549 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.020202020202020204, momentum=0.31313131313131315 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.5151515151515152 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.37373737373737376 ,learning_rate_power=-0.33333333333333326 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.16161616161616163].
2023-08-22 03:23:29,550 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.020202020202020204, momentum=0.31313131313131315 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.5151515151515152 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.37373737373737376 ,learning_rate_power=-0.33333333333333326 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.16161616161616163].
2023-08-22 03:23:33,281 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:23:33,282 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:23:37,676 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:23:37,676 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:23:55,485 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.20202020202020204 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.05050505050505051 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.16161616161616163].
2023-08-22 03:23:55,486 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.20202020202020204 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.05050505050505051 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.16161616161616163].
2023-08-22 03:24:14,011 INFO: Applying selection operators for generation 51.
2023-08-22 03:24:14,012 INFO: Applying genetic operators for generation 51.
2023-08-22 03:24:14,014 INFO: Evaluating fitness for for generation 51.
2023-08-22 03:24:14,014 INFO: Will evaluate fitness for 26 individuals.
2023-08-22 03:24:14,568 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:24:14,568 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:24:14,583 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:24:14,583 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:24:14,608 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:24:14,609 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:24:14,610 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:24:14,611 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:24:34,481 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:24:34,481 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:24:34,577 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:24:34,577 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:24:34,653 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:24:34,654 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:24:34,743 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:24:34,744 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:24:54,418 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:24:54,418 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:24:54,569 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:24:54,569 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:24:54,622 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.25252525252525254 ,rho=0.4545454545454546 ,epsilon=0.0007979798181818182 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.04040404040404041 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.6464646464646465 ,l1_regularization_strength=0.8787878787878789 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.5555555555555556].
2023-08-22 03:24:54,623 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.25252525252525254 ,rho=0.4545454545454546 ,epsilon=0.0007979798181818182 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.04040404040404041 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.6464646464646465 ,l1_regularization_strength=0.8787878787878789 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.5555555555555556].
2023-08-22 03:24:55,654 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:24:55,655 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:25:14,316 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:25:14,317 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:25:15,607 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:25:15,608 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:25:16,004 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:25:16,004 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:25:20,079 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.4444444444444445 ,epsilon=0.0006666667 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.4040404040404041 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8989898989898991 ,beta=0.6464646464646465].
2023-08-22 03:25:20,080 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.4444444444444445 ,epsilon=0.0006666667 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.4040404040404041 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8989898989898991 ,beta=0.6464646464646465].
2023-08-22 03:25:34,092 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:25:34,092 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:25:35,921 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9494949494949496, momentum=0.3434343434343435 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.07070707070707072].
2023-08-22 03:25:35,922 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9494949494949496, momentum=0.3434343434343435 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.07070707070707072].
2023-08-22 03:25:36,271 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:25:36,271 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:25:45,639 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.20202020202020204, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.98989898989899 ,rho=0.5353535353535354 ,epsilon=0.0009494949545454545 ,centered=False ,beta_1=0.8686868686868687 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.23232323232323235 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.32323232323232326].
2023-08-22 03:25:45,640 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.20202020202020204, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.98989898989899 ,rho=0.5353535353535354 ,epsilon=0.0009494949545454545 ,centered=False ,beta_1=0.8686868686868687 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.23232323232323235 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.32323232323232326].
2023-08-22 03:25:54,581 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.38383838383838387, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3434343434343435 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.16161616161616163].
2023-08-22 03:25:54,581 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.38383838383838387, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3434343434343435 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.16161616161616163].
2023-08-22 03:25:56,095 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.008384 ,use_ema=False ,ema_momentum=0.7070707070707072 ,rho=0.33333333333333337 ,epsilon=0.00026262633636363634 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.7171717171717172 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.9494949494949496].
2023-08-22 03:25:56,095 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.008384 ,use_ema=False ,ema_momentum=0.7070707070707072 ,rho=0.33333333333333337 ,epsilon=0.00026262633636363634 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.7171717171717172 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.9494949494949496].
2023-08-22 03:25:57,022 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:25:57,022 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:26:04,021 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:26:04,022 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:26:14,591 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:26:14,591 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:26:34,326 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:26:34,326 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:26:53,246 INFO: Applying selection operators for generation 52.
2023-08-22 03:26:53,247 INFO: Applying genetic operators for generation 52.
2023-08-22 03:26:53,250 INFO: Evaluating fitness for for generation 52.
2023-08-22 03:26:53,250 INFO: Will evaluate fitness for 28 individuals.
2023-08-22 03:26:53,794 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:26:53,794 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:26:53,822 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8585858585858587 ,rho=0.18181818181818182 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.18181818181818182 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.050505050505050386 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.07070707070707072].
2023-08-22 03:26:53,823 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8585858585858587 ,rho=0.18181818181818182 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.18181818181818182 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.050505050505050386 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.07070707070707072].
2023-08-22 03:26:53,851 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:26:53,851 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:26:53,867 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.37373737373737376 ,rho=0.6262626262626263 ,epsilon=0.0007171717454545454 ,centered=True ,beta_1=0.4747474747474748 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7474747474747474 ,initial_accumulator_value=0.696969696969697 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.16161616161616163].
2023-08-22 03:26:53,867 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.37373737373737376 ,rho=0.6262626262626263 ,epsilon=0.0007171717454545454 ,centered=True ,beta_1=0.4747474747474748 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7474747474747474 ,initial_accumulator_value=0.696969696969697 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.16161616161616163].
2023-08-22 03:27:13,616 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6262626262626263, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.005556000000000001 ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.38383838383838387 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:27:13,616 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6262626262626263, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.005556000000000001 ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.38383838383838387 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:27:13,661 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:27:13,661 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:27:14,234 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:27:14,234 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:27:19,684 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.8787878787878789 ,epsilon=0.0008181818363636363 ,centered=False ,beta_1=0.29292929292929293 ,beta_2=0.4040404040404041 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.16161616161616163].
2023-08-22 03:27:19,684 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.8787878787878789 ,epsilon=0.0008181818363636363 ,centered=False ,beta_1=0.29292929292929293 ,beta_2=0.4040404040404041 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.16161616161616163].
2023-08-22 03:27:33,517 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.8787878787878789 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:27:33,517 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.8787878787878789 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:27:34,010 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:27:34,010 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:27:34,519 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:27:34,519 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:27:44,715 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.15151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.005960000000000001 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.48484848484848486 ,epsilon=0.0007777778 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.595959595959596 ,learning_rate_power=-0.5454545454545454 ,initial_accumulator_value=0.27272727272727276 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:27:44,715 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.15151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.005960000000000001 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.48484848484848486 ,epsilon=0.0007777778 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.595959595959596 ,learning_rate_power=-0.5454545454545454 ,initial_accumulator_value=0.27272727272727276 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:27:54,334 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:27:54,334 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:27:55,832 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.23232323232323235, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5656565656565657 ,rho=0.9797979797979799 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.8989898989898991 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.16161616161616163].
2023-08-22 03:27:55,832 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.23232323232323235, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5656565656565657 ,rho=0.9797979797979799 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.8989898989898991 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.16161616161616163].
2023-08-22 03:28:00,115 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:28:00,115 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:28:10,655 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0.12121212121212122 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7070707070707072 ,rho=0.4747474747474748 ,epsilon=0.0007676767909090908 ,centered=False ,beta_1=0.5858585858585859 ,beta_2=0.696969696969697 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.696969696969697 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.16161616161616163].
2023-08-22 03:28:10,655 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0.12121212121212122 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7070707070707072 ,rho=0.4747474747474748 ,epsilon=0.0007676767909090908 ,centered=False ,beta_1=0.5858585858585859 ,beta_2=0.696969696969697 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.696969696969697 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.16161616161616163].
2023-08-22 03:28:14,717 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:28:14,717 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:28:20,220 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.8787878787878789 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0006868687181818181 ,centered=False ,beta_1=0.8282828282828284 ,beta_2=0.5454545454545455 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.4040404040404041 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.888888888888889].
2023-08-22 03:28:20,220 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.8787878787878789 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0006868687181818181 ,centered=False ,beta_1=0.8282828282828284 ,beta_2=0.5454545454545455 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.4040404040404041 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.888888888888889].
2023-08-22 03:28:21,556 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:28:21,556 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:28:35,906 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:28:35,906 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:28:36,362 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.22222222222222224, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.6262626262626263 ,epsilon=0.001 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.20202020202020204 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.16161616161616163].
2023-08-22 03:28:36,363 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.22222222222222224, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.6262626262626263 ,epsilon=0.001 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.20202020202020204 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.16161616161616163].
2023-08-22 03:28:40,195 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:28:40,195 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:28:41,876 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.8484848484848485 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.43434343434343436 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.19191919191919193 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8686868686868687 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.26262626262626265].
2023-08-22 03:28:41,876 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.8484848484848485 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.43434343434343436 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.19191919191919193 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8686868686868687 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.26262626262626265].
2023-08-22 03:28:56,095 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:28:56,096 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:29:00,303 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0.494949494949495 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.06060606060606061 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.98989898989899 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.4545454545454546].
2023-08-22 03:29:00,304 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0.494949494949495 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.06060606060606061 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.98989898989899 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.4545454545454546].
2023-08-22 03:29:01,772 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:29:01,772 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:29:21,886 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.15151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.15151515151515152 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.7474747474747474 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.6767676767676768].
2023-08-22 03:29:21,887 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.15151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.15151515151515152 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.7474747474747474 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.6767676767676768].
2023-08-22 03:29:23,150 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9797979797979799, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.37373737373737376 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.8080808080808082 ,beta_2=0.37373737373737376 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.23232323232323235 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:29:23,150 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9797979797979799, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.37373737373737376 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.8080808080808082 ,beta_2=0.37373737373737376 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.23232323232323235 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:29:47,870 INFO: Applying selection operators for generation 53.
2023-08-22 03:29:47,871 INFO: Applying genetic operators for generation 53.
2023-08-22 03:29:47,873 INFO: Evaluating fitness for for generation 53.
2023-08-22 03:29:47,873 INFO: Will evaluate fitness for 31 individuals.
2023-08-22 03:29:48,430 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0.3535353535353536 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0004747475272727272 ,centered=False ,beta_1=0.6262626262626263 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:29:48,430 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0.3535353535353536 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0004747475272727272 ,centered=False ,beta_1=0.6262626262626263 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:29:48,454 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.595959595959596 ,nesterov=True ,amsgrad=False ,weight_decay=0.0065660000000000015 ,use_ema=True ,ema_momentum=0.5757575757575758 ,rho=0.31313131313131315 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.27272727272727276].
2023-08-22 03:29:48,454 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.595959595959596 ,nesterov=True ,amsgrad=False ,weight_decay=0.0065660000000000015 ,use_ema=True ,ema_momentum=0.5757575757575758 ,rho=0.31313131313131315 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.27272727272727276].
2023-08-22 03:29:48,468 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5454545454545455, momentum=0.6060606060606061 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.9090909090909092 ,epsilon=0.0006868687181818181 ,centered=False ,beta_1=0.6161616161616162 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.010101010101010102 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.15151515151515152 ,beta=0.8282828282828284].
2023-08-22 03:29:48,468 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5454545454545455, momentum=0.6060606060606061 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.9090909090909092 ,epsilon=0.0006868687181818181 ,centered=False ,beta_1=0.6161616161616162 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.010101010101010102 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.15151515151515152 ,beta=0.8282828282828284].
2023-08-22 03:29:48,474 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:29:48,475 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:30:08,421 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:30:08,421 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:30:15,168 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9393939393939394, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6464646464646465 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.4141414141414142 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.4646464646464647].
2023-08-22 03:30:15,169 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9393939393939394, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6464646464646465 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.4141414141414142 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.4646464646464647].
2023-08-22 03:30:16,538 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:30:16,538 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:30:26,655 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:30:26,656 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:30:29,305 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:30:29,305 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:30:35,177 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:30:35,177 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:30:37,008 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:30:37,009 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:30:47,220 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:30:47,220 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:30:49,520 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:30:49,521 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:30:55,506 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.9292929292929294, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.27272727272727276 ,l1_regularization_strength=0.4545454545454546 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:30:55,506 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.9292929292929294, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.27272727272727276 ,l1_regularization_strength=0.4545454545454546 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:30:57,436 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:30:57,436 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:31:07,268 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.7171717171717172 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.38383838383838387 ,beta=0.16161616161616163].
2023-08-22 03:31:07,269 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.7171717171717172 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.38383838383838387 ,beta=0.16161616161616163].
2023-08-22 03:31:09,621 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9292929292929294, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.33333333333333337 ,epsilon=0.0009191919272727272 ,centered=False ,beta_1=0.4646464646464647 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.6767676767676768 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6262626262626263 ,beta=0.16161616161616163].
2023-08-22 03:31:09,622 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9292929292929294, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.33333333333333337 ,epsilon=0.0009191919272727272 ,centered=False ,beta_1=0.4646464646464647 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.6767676767676768 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6262626262626263 ,beta=0.16161616161616163].
2023-08-22 03:31:17,780 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.31313131313131315, momentum=0.5353535353535354 ,nesterov=False ,amsgrad=False ,weight_decay=0.009596 ,use_ema=True ,ema_momentum=0.8282828282828284 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.797979797979798 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.16161616161616163].
2023-08-22 03:31:17,781 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.31313131313131315, momentum=0.5353535353535354 ,nesterov=False ,amsgrad=False ,weight_decay=0.009596 ,use_ema=True ,ema_momentum=0.8282828282828284 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.797979797979798 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.16161616161616163].
2023-08-22 03:31:22,328 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:31:22,328 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:31:26,563 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:31:26,564 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:31:34,661 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:31:34,661 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:31:39,669 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:31:39,669 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:31:42,537 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:31:42,537 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:31:46,470 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:31:46,470 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:31:54,652 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:31:54,652 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:32:00,322 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:32:00,323 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:32:03,567 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:32:03,568 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:32:06,999 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:32:06,999 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:32:15,431 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:32:15,431 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:32:20,633 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:32:20,634 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:32:23,896 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:32:23,896 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:32:43,467 INFO: Applying selection operators for generation 54.
2023-08-22 03:32:43,468 INFO: Applying genetic operators for generation 54.
2023-08-22 03:32:43,470 INFO: Evaluating fitness for for generation 54.
2023-08-22 03:32:43,470 INFO: Will evaluate fitness for 24 individuals.
2023-08-22 03:32:44,039 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:32:44,040 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:32:44,060 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:32:44,060 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:32:44,062 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:32:44,062 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:32:44,066 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:32:44,066 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:33:03,784 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:33:03,784 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:33:03,896 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:33:03,896 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:33:04,242 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:33:04,242 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:33:05,366 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:33:05,367 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:33:23,643 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0014150000000000002 ,use_ema=False ,ema_momentum=0.48484848484848486 ,rho=0.6262626262626263 ,epsilon=0.0008181818363636363 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.43434343434343425 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:33:23,643 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0014150000000000002 ,use_ema=False ,ema_momentum=0.48484848484848486 ,rho=0.6262626262626263 ,epsilon=0.0008181818363636363 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.43434343434343425 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:33:23,880 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:33:23,881 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:33:25,114 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.5555555555555556 ,nesterov=True ,amsgrad=False ,weight_decay=0.007879 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.17171717171717174 ,l1_regularization_strength=0.6060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.19191919191919193].
2023-08-22 03:33:25,115 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.5555555555555556 ,nesterov=True ,amsgrad=False ,weight_decay=0.007879 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.17171717171717174 ,l1_regularization_strength=0.6060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.19191919191919193].
2023-08-22 03:33:25,853 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:33:25,853 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:33:44,499 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6666666666666667, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.06060606060606061 ,epsilon=0.0006464646818181818 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.4545454545454545 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5151515151515152 ,beta=0.98989898989899].
2023-08-22 03:33:44,499 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6666666666666667, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.06060606060606061 ,epsilon=0.0006464646818181818 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.4545454545454545 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5151515151515152 ,beta=0.98989898989899].
2023-08-22 03:33:46,256 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.696969696969697, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0009797979818181818 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:33:46,256 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.696969696969697, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0009797979818181818 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:33:49,991 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:33:49,992 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:33:51,668 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:33:51,668 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:34:09,601 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.6060606060606061, momentum=0.23232323232323235 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.29292929292929293 ,rho=0.6262626262626263 ,epsilon=0.0009191919272727272 ,centered=False ,beta_1=0.8585858585858587 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6767676767676768 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:34:09,601 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.6060606060606061, momentum=0.23232323232323235 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.29292929292929293 ,rho=0.6262626262626263 ,epsilon=0.0009191919272727272 ,centered=False ,beta_1=0.8585858585858587 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6767676767676768 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:34:10,177 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:34:10,177 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:34:12,010 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6767676767676768, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5858585858585859 ,rho=0.6262626262626263 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.11111111111111112 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.050505050505050386 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.16161616161616163].
2023-08-22 03:34:12,010 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6767676767676768, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5858585858585859 ,rho=0.6262626262626263 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.11111111111111112 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.050505050505050386 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.16161616161616163].
2023-08-22 03:34:13,445 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:34:13,446 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:34:30,238 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.3434343434343435, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.8686868686868687 ,epsilon=0.0004949495454545454 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.12121212121212122 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.04040404040404041 ,l1_regularization_strength=0.4040404040404041 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.30303030303030304 ,beta=0.16161616161616163].
2023-08-22 03:34:30,238 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.3434343434343435, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.8686868686868687 ,epsilon=0.0004949495454545454 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.12121212121212122 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.04040404040404041 ,l1_regularization_strength=0.4040404040404041 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.30303030303030304 ,beta=0.16161616161616163].
2023-08-22 03:34:33,630 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:34:33,631 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:34:34,953 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0033340000000000006 ,use_ema=True ,ema_momentum=0.7575757575757577 ,rho=0.7373737373737375 ,epsilon=0.0006464646818181818 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.797979797979798 ,l1_regularization_strength=0.9797979797979799 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.16161616161616163].
2023-08-22 03:34:34,953 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0033340000000000006 ,use_ema=True ,ema_momentum=0.7575757575757577 ,rho=0.7373737373737375 ,epsilon=0.0006464646818181818 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.797979797979798 ,l1_regularization_strength=0.9797979797979799 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.16161616161616163].
2023-08-22 03:34:38,131 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7474747474747475 ,rho=0.787878787878788 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.16161616161616163].
2023-08-22 03:34:38,131 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7474747474747475 ,rho=0.787878787878788 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.16161616161616163].
2023-08-22 03:35:01,188 INFO: Applying selection operators for generation 55.
2023-08-22 03:35:01,189 INFO: Applying genetic operators for generation 55.
2023-08-22 03:35:01,191 INFO: Evaluating fitness for for generation 55.
2023-08-22 03:35:01,191 INFO: Will evaluate fitness for 28 individuals.
2023-08-22 03:35:01,742 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:35:01,742 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:35:01,799 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:35:01,799 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:35:01,800 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:35:01,800 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:35:01,823 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.007475000000000002 ,use_ema=True ,ema_momentum=0.36363636363636365 ,rho=0.7171717171717172 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.8484848484848485 ,beta_2=0.4040404040404041 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.21212121212121213 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.12121212121212122].
2023-08-22 03:35:01,823 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.007475000000000002 ,use_ema=True ,ema_momentum=0.36363636363636365 ,rho=0.7171717171717172 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.8484848484848485 ,beta_2=0.4040404040404041 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.21212121212121213 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.12121212121212122].
2023-08-22 03:35:22,180 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:35:22,180 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:35:22,379 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:35:22,379 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:35:22,484 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:35:22,484 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:35:27,951 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:35:27,951 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:35:42,342 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:35:42,342 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:35:42,435 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6464646464646465, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.4040404040404041 ,epsilon=0.0008282828454545454 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.48484848484848486 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.5757575757575758 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.686868686868687].
2023-08-22 03:35:42,435 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6464646464646465, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.4040404040404041 ,epsilon=0.0008282828454545454 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.48484848484848486 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.5757575757575758 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.686868686868687].
2023-08-22 03:35:42,505 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:35:42,506 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:35:48,202 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.030303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8989898989898991 ,rho=0.6262626262626263 ,epsilon=0.0005757576181818182 ,centered=False ,beta_1=0.22222222222222224 ,beta_2=0.7373737373737375 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.17171717171717174 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.16161616161616163].
2023-08-22 03:35:48,202 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.030303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8989898989898991 ,rho=0.6262626262626263 ,epsilon=0.0005757576181818182 ,centered=False ,beta_1=0.22222222222222224 ,beta_2=0.7373737373737375 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.17171717171717174 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.16161616161616163].
2023-08-22 03:36:02,337 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.98989898989899 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.303030303030303 ,initial_accumulator_value=0.3535353535353536 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.16161616161616163].
2023-08-22 03:36:02,338 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.98989898989899 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.303030303030303 ,initial_accumulator_value=0.3535353535353536 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.16161616161616163].
2023-08-22 03:36:02,451 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:36:02,451 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:36:08,410 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00018181826363636362 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.98989898989899 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.13131313131313133 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.16161616161616163].
2023-08-22 03:36:08,410 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00018181826363636362 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.98989898989899 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.13131313131313133 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.16161616161616163].
2023-08-22 03:36:15,092 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:36:15,092 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:36:22,410 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6666666666666667, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0007080000000000002 ,use_ema=True ,ema_momentum=0.21212121212121213 ,rho=0.6262626262626263 ,epsilon=0.0005252525727272728 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.6767676767676768 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.9191919191919192].
2023-08-22 03:36:22,411 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6666666666666667, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0007080000000000002 ,use_ema=True ,ema_momentum=0.21212121212121213 ,rho=0.6262626262626263 ,epsilon=0.0005252525727272728 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.6767676767676768 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.9191919191919192].
2023-08-22 03:36:27,542 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:36:27,542 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:36:34,748 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:36:34,749 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:36:35,575 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:36:35,575 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:36:48,253 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:36:48,253 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:36:49,470 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:36:49,471 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:36:55,259 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:36:55,259 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:36:55,895 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.31313131313131315 ,rho=0.6262626262626263 ,epsilon=0.0008080808272727272 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.46464646464646464 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.010101010101010102].
2023-08-22 03:36:55,896 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.31313131313131315 ,rho=0.6262626262626263 ,epsilon=0.0008080808272727272 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.46464646464646464 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.010101010101010102].
2023-08-22 03:37:08,244 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:37:08,244 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:37:09,517 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:37:09,518 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:37:28,102 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:37:28,102 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:37:29,505 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:37:29,505 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:37:48,942 INFO: Applying selection operators for generation 56.
2023-08-22 03:37:48,942 INFO: Applying genetic operators for generation 56.
2023-08-22 03:37:48,944 INFO: Evaluating fitness for for generation 56.
2023-08-22 03:37:48,944 INFO: Will evaluate fitness for 30 individuals.
2023-08-22 03:37:49,512 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:37:49,512 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:37:49,540 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:37:49,541 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:37:49,542 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.43434343434343436, momentum=0.3535353535353536 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.7070707070707072 ,epsilon=0.0005252525727272728 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=1.0 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.16161616161616163].
2023-08-22 03:37:49,542 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.43434343434343436, momentum=0.3535353535353536 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.7070707070707072 ,epsilon=0.0005252525727272728 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=1.0 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.16161616161616163].
2023-08-22 03:37:49,558 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6464646464646465, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.003839000000000001 ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.030303030303030304 ,epsilon=0.0008787878909090909 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.9393939393939394].
2023-08-22 03:37:49,558 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6464646464646465, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.003839000000000001 ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.030303030303030304 ,epsilon=0.0008787878909090909 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.9393939393939394].
2023-08-22 03:38:10,566 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:38:10,567 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:38:10,864 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.05050505050505051, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0007080000000000002 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.4444444444444445 ,epsilon=0.0008181818363636363 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.16161616161616163].
2023-08-22 03:38:10,864 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.05050505050505051, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0007080000000000002 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.4444444444444445 ,epsilon=0.0008181818363636363 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.16161616161616163].
2023-08-22 03:38:13,040 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6464646464646465, momentum=0.8484848484848485 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.4646464646464647 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8989898989898991 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.4141414141414142 ,l1_regularization_strength=0.8787878787878789 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.07070707070707072].
2023-08-22 03:38:13,040 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6464646464646465, momentum=0.8484848484848485 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.4646464646464647 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8989898989898991 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.4141414141414142 ,l1_regularization_strength=0.8787878787878789 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.07070707070707072].
2023-08-22 03:38:15,361 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:38:15,361 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:38:31,101 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:38:31,101 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:38:33,435 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:38:33,435 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:38:35,532 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:38:35,532 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:38:36,656 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:38:36,656 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:38:51,383 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:38:51,383 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:38:53,958 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:38:53,959 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:38:55,458 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7373737373737375 ,rho=0.787878787878788 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.36363636363636354 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.16161616161616163].
2023-08-22 03:38:55,458 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7373737373737375 ,rho=0.787878787878788 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.36363636363636354 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.16161616161616163].
2023-08-22 03:38:56,531 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:38:56,532 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:39:11,574 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:39:11,575 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:39:14,280 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:39:14,281 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:39:15,337 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:39:15,337 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:39:16,455 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.4545454545454546 ,epsilon=0.0009696969727272727 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.3535353535353536].
2023-08-22 03:39:16,456 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.4545454545454546 ,epsilon=0.0009696969727272727 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.3535353535353536].
2023-08-22 03:39:32,888 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:39:32,889 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:39:34,514 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:39:34,514 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:39:36,069 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:39:36,069 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:39:42,871 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:39:42,872 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:39:53,453 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:39:53,453 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:39:55,617 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:39:55,618 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:39:56,108 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:39:56,108 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:40:13,628 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:40:13,628 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:40:15,857 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:40:15,857 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:40:15,996 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:40:15,996 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:40:35,356 INFO: Applying selection operators for generation 57.
2023-08-22 03:40:35,357 INFO: Applying genetic operators for generation 57.
2023-08-22 03:40:35,360 INFO: Evaluating fitness for for generation 57.
2023-08-22 03:40:35,360 INFO: Will evaluate fitness for 34 individuals.
2023-08-22 03:40:35,955 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:40:35,956 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:40:35,958 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:40:35,959 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:40:35,961 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:40:35,962 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:40:35,979 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.24242424242424243 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.4040404040404041 ,rho=0.393939393939394 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.6464646464646465 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.9292929292929294].
2023-08-22 03:40:35,979 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.24242424242424243 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.4040404040404041 ,rho=0.393939393939394 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.6464646464646465 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.9292929292929294].
2023-08-22 03:40:55,760 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.005455000000000001 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0008383838545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.393939393939394 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.888888888888889].
2023-08-22 03:40:55,760 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.005455000000000001 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0008383838545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.393939393939394 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.888888888888889].
2023-08-22 03:40:55,822 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:40:55,822 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:40:56,029 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:40:56,030 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:40:56,901 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:40:56,902 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:41:15,646 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:41:15,646 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:41:16,925 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.18181818181818182 ,epsilon=0.00040404046363636356 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.06060606060606055 ,initial_accumulator_value=0.22222222222222224 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.8181818181818182].
2023-08-22 03:41:16,925 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.18181818181818182 ,epsilon=0.00040404046363636356 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.06060606060606055 ,initial_accumulator_value=0.22222222222222224 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.8181818181818182].
2023-08-22 03:41:17,445 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:41:17,445 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:41:21,680 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:41:21,680 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:41:35,418 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.12121212121212122, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.98989898989899 ,rho=0.6262626262626263 ,epsilon=0.0004848485363636363 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.9494949494949496 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.30303030303030304 ,l1_regularization_strength=0.48484848484848486 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.32323232323232326].
2023-08-22 03:41:35,418 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.12121212121212122, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.98989898989899 ,rho=0.6262626262626263 ,epsilon=0.0004848485363636363 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.9494949494949496 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.30303030303030304 ,l1_regularization_strength=0.48484848484848486 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.32323232323232326].
2023-08-22 03:41:37,838 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:41:37,838 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:41:41,654 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:41:41,655 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:41:42,236 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:41:42,237 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:41:58,360 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:41:58,360 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:42:01,367 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:42:01,367 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:42:01,755 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:42:01,755 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:42:02,541 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:42:02,542 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:42:18,654 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.6262626262626263 ,epsilon=0.001 ,centered=False ,beta_1=0.5252525252525253 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=1.0 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.5252525252525253].
2023-08-22 03:42:18,654 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.6262626262626263 ,epsilon=0.001 ,centered=False ,beta_1=0.5252525252525253 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=1.0 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.5252525252525253].
2023-08-22 03:42:21,340 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:42:21,340 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:42:22,349 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:42:22,349 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:42:22,765 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:42:22,765 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:42:41,473 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:42:41,474 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:42:42,342 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.030303030303030304 ,rho=0.25252525252525254 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.8181818181818182 ,beta_2=0.4545454545454546 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.16161616161616163].
2023-08-22 03:42:42,342 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.030303030303030304 ,rho=0.25252525252525254 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.8181818181818182 ,beta_2=0.4545454545454546 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.16161616161616163].
2023-08-22 03:42:44,048 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.4444444444444445, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.009899000000000002 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.7070707070707072 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4545454545454546 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.46464646464646464 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:42:44,049 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.4444444444444445, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.009899000000000002 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.7070707070707072 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4545454545454546 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.46464646464646464 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:42:44,840 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.007374000000000001 ,use_ema=True ,ema_momentum=0.98989898989899 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.36363636363636365 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.7373737373737375 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.36363636363636365].
2023-08-22 03:42:44,840 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.007374000000000001 ,use_ema=True ,ema_momentum=0.98989898989899 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.36363636363636365 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.7373737373737375 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.36363636363636365].
2023-08-22 03:43:01,502 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0.27272727272727276 ,nesterov=True ,amsgrad=False ,weight_decay=0.008889000000000001 ,use_ema=True ,ema_momentum=0.12121212121212122 ,rho=0.10101010101010102 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6464646464646465 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.16161616161616163].
2023-08-22 03:43:01,503 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0.27272727272727276 ,nesterov=True ,amsgrad=False ,weight_decay=0.008889000000000001 ,use_ema=True ,ema_momentum=0.12121212121212122 ,rho=0.10101010101010102 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6464646464646465 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.16161616161616163].
2023-08-22 03:43:07,669 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:43:07,670 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:43:24,858 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.8080808080808082, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6060606060606061 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.010101010101010055 ,initial_accumulator_value=0.19191919191919193 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.5151515151515152].
2023-08-22 03:43:24,858 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.8080808080808082, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6060606060606061 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.010101010101010055 ,initial_accumulator_value=0.19191919191919193 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.5151515151515152].
2023-08-22 03:43:26,979 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.30303030303030304 ,rho=0.12121212121212122 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.15151515151515152 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.25252525252525254 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.10101010101010102].
2023-08-22 03:43:26,979 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.30303030303030304 ,rho=0.12121212121212122 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.15151515151515152 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.25252525252525254 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.10101010101010102].
2023-08-22 03:43:27,430 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:43:27,430 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:43:50,003 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:43:50,004 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:44:09,118 INFO: Applying selection operators for generation 58.
2023-08-22 03:44:09,118 INFO: Applying genetic operators for generation 58.
2023-08-22 03:44:09,121 INFO: Evaluating fitness for for generation 58.
2023-08-22 03:44:09,121 INFO: Will evaluate fitness for 35 individuals.
2023-08-22 03:44:09,669 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:44:09,670 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:44:09,703 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6060606060606061 ,rho=0.42424242424242425 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8989898989898991 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.686868686868687].
2023-08-22 03:44:09,703 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6060606060606061 ,rho=0.42424242424242425 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8989898989898991 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.686868686868687].
2023-08-22 03:44:09,793 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.30303030303030304 ,nesterov=True ,amsgrad=False ,weight_decay=0.0047480000000000005 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0009191919272727272 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.7575757575757577].
2023-08-22 03:44:09,793 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.30303030303030304 ,nesterov=True ,amsgrad=False ,weight_decay=0.0047480000000000005 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0009191919272727272 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.7575757575757577].
2023-08-22 03:44:09,869 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:44:09,870 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:44:30,221 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4747474747474748 ,rho=0.9191919191919192 ,epsilon=0.0005555556 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.696969696969697 ,initial_accumulator_value=0.04040404040404041 ,l1_regularization_strength=0.595959595959596 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.16161616161616163].
2023-08-22 03:44:30,221 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4747474747474748 ,rho=0.9191919191919192 ,epsilon=0.0005555556 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.696969696969697 ,initial_accumulator_value=0.04040404040404041 ,l1_regularization_strength=0.595959595959596 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.16161616161616163].
2023-08-22 03:44:30,272 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:44:30,273 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:44:30,629 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:44:30,629 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:44:35,038 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:44:35,038 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:44:50,213 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:44:50,214 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:44:50,864 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:44:50,865 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:44:54,982 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:44:54,983 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:44:56,656 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.09090909090909091 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0006565656909090909 ,centered=False ,beta_1=0.30303030303030304 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.9090909090909092 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.030303030303030304 ,beta=0.8282828282828284].
2023-08-22 03:44:56,657 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.09090909090909091 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0006565656909090909 ,centered=False ,beta_1=0.30303030303030304 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.9090909090909092 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.030303030303030304 ,beta=0.8282828282828284].
2023-08-22 03:45:10,759 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.98989898989899, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.007475000000000002 ,use_ema=False ,ema_momentum=0.9292929292929294 ,rho=0.25252525252525254 ,epsilon=0.0001919192727272727 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.17171717171717174 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8282828282828284 ,beta=0.4545454545454546].
2023-08-22 03:45:10,759 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.98989898989899, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.007475000000000002 ,use_ema=False ,ema_momentum=0.9292929292929294 ,rho=0.25252525252525254 ,epsilon=0.0001919192727272727 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.17171717171717174 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8282828282828284 ,beta=0.4545454545454546].
2023-08-22 03:45:11,133 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:45:11,133 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:45:14,898 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:45:14,898 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:45:18,007 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:45:18,007 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:45:31,392 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6666666666666667 ,nesterov=True ,amsgrad=False ,weight_decay=0.004950000000000001 ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.32323232323232326 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.5252525252525253 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7474747474747474 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.26262626262626265 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:45:31,392 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6666666666666667 ,nesterov=True ,amsgrad=False ,weight_decay=0.004950000000000001 ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.32323232323232326 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.5252525252525253 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7474747474747474 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.26262626262626265 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:45:35,610 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:45:35,610 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:45:36,266 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.6565656565656566, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.7373737373737375 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6262626262626263 ,beta=0.9696969696969697].
2023-08-22 03:45:36,266 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.6565656565656566, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.7373737373737375 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6262626262626263 ,beta=0.9696969696969697].
2023-08-22 03:45:38,509 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.4141414141414142 ,nesterov=False ,amsgrad=False ,weight_decay=0.004344000000000001 ,use_ema=True ,ema_momentum=0.7171717171717172 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.48484848484848486 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.787878787878788].
2023-08-22 03:45:38,509 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.4141414141414142 ,nesterov=False ,amsgrad=False ,weight_decay=0.004344000000000001 ,use_ema=True ,ema_momentum=0.7171717171717172 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.48484848484848486 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.787878787878788].
2023-08-22 03:45:55,750 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:45:55,750 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:45:58,483 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6464646464646465, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6262626262626263 ,rho=0.4646464646464647 ,epsilon=0.0004747475272727272 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-1.0 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7272727272727273 ,beta=0.696969696969697].
2023-08-22 03:45:58,483 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6464646464646465, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6262626262626263 ,rho=0.4646464646464647 ,epsilon=0.0004747475272727272 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-1.0 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7272727272727273 ,beta=0.696969696969697].
2023-08-22 03:45:59,615 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:45:59,615 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:46:02,153 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:46:02,153 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:46:15,731 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:46:15,731 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:46:19,941 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9191919191919192 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.08080808080808081 ,l1_regularization_strength=0.8787878787878789 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.16161616161616163].
2023-08-22 03:46:19,942 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9191919191919192 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.08080808080808081 ,l1_regularization_strength=0.8787878787878789 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.16161616161616163].
2023-08-22 03:46:22,287 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7474747474747475 ,rho=0.6262626262626263 ,epsilon=0.00018181826363636362 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.9191919191919192 ,initial_accumulator_value=0.7171717171717172 ,l1_regularization_strength=0.7676767676767677 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.25252525252525254].
2023-08-22 03:46:22,287 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7474747474747475 ,rho=0.6262626262626263 ,epsilon=0.00018181826363636362 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.9191919191919192 ,initial_accumulator_value=0.7171717171717172 ,l1_regularization_strength=0.7676767676767677 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.25252525252525254].
2023-08-22 03:46:24,951 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:46:24,952 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:46:35,783 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:46:35,783 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:46:43,849 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:46:43,849 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:46:45,255 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.17171717171717174, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.5757575757575758 ,epsilon=0.0006969697272727273 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.37373737373737376 ,learning_rate_power=-0.8787878787878788 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:46:45,255 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.17171717171717174, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.5757575757575758 ,epsilon=0.0006969697272727273 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.37373737373737376 ,learning_rate_power=-0.8787878787878788 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:46:48,822 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.008586 ,use_ema=True ,ema_momentum=0.25252525252525254 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.8787878787878788 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.27272727272727276].
2023-08-22 03:46:48,823 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.008586 ,use_ema=True ,ema_momentum=0.25252525252525254 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.8787878787878788 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.27272727272727276].
2023-08-22 03:46:56,496 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:46:56,496 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:47:04,177 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:47:04,178 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:47:09,737 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:47:09,738 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:47:28,993 INFO: Applying selection operators for generation 59.
2023-08-22 03:47:28,994 INFO: Applying genetic operators for generation 59.
2023-08-22 03:47:28,996 INFO: Evaluating fitness for for generation 59.
2023-08-22 03:47:28,996 INFO: Will evaluate fitness for 26 individuals.
2023-08-22 03:47:29,574 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:47:29,574 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:47:29,695 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:47:29,695 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:47:29,711 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:47:29,711 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:47:29,745 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:47:29,745 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:47:49,431 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:47:49,432 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:47:49,669 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:47:49,669 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:47:49,714 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:47:49,715 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:47:49,843 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:47:49,843 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:48:09,309 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.7474747474747475, momentum=0.4545454545454546 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.23232323232323235 ,rho=0.6262626262626263 ,epsilon=0.0007171717454545454 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.37373737373737376 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.11111111111111112 ,beta=0.5252525252525253].
2023-08-22 03:48:09,309 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.7474747474747475, momentum=0.4545454545454546 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.23232323232323235 ,rho=0.6262626262626263 ,epsilon=0.0007171717454545454 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.797979797979798 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.37373737373737376 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.11111111111111112 ,beta=0.5252525252525253].
2023-08-22 03:48:09,708 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:48:09,708 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:48:10,938 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:48:10,939 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:48:11,072 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:48:11,073 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:48:30,260 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:48:30,260 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:48:31,267 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:48:31,267 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:48:31,388 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:48:31,388 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:48:36,922 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.11111111111111112, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.005354000000000001 ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.9393939393939394 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.4747474747474748].
2023-08-22 03:48:36,922 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.11111111111111112, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.005354000000000001 ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.9393939393939394 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.4747474747474748].
2023-08-22 03:48:50,137 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:48:50,137 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:48:51,521 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:48:51,522 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:48:51,537 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:48:51,537 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:49:03,449 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.9797979797979799, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0005959596363636363 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.696969696969697 ,learning_rate_power=-0.9696969696969697 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.31313131313131315 ,beta=0.9292929292929294].
2023-08-22 03:49:03,450 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.9797979797979799, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0005959596363636363 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.696969696969697 ,learning_rate_power=-0.9696969696969697 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.31313131313131315 ,beta=0.9292929292929294].
2023-08-22 03:49:09,977 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:49:09,977 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:49:11,747 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:49:11,748 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:49:11,872 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:49:11,872 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:49:28,480 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:49:28,480 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:49:29,875 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:49:29,875 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:49:50,179 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:49:50,180 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:50:09,329 INFO: Applying selection operators for generation 60.
2023-08-22 03:50:09,330 INFO: Applying genetic operators for generation 60.
2023-08-22 03:50:09,332 INFO: Evaluating fitness for for generation 60.
2023-08-22 03:50:09,332 INFO: Will evaluate fitness for 35 individuals.
2023-08-22 03:50:09,908 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:50:09,909 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:50:09,916 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:50:09,916 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:50:09,928 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:50:09,928 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:50:09,959 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:50:09,960 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:50:29,638 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:50:29,639 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:50:29,656 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:50:29,656 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:50:30,078 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:50:30,078 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:50:30,251 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9797979797979799 ,rho=0.31313131313131315 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.02020202020202011 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.696969696969697].
2023-08-22 03:50:30,251 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9797979797979799 ,rho=0.31313131313131315 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.02020202020202011 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.696969696969697].
2023-08-22 03:50:49,132 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:50:49,132 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:50:49,222 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:50:49,222 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:50:50,261 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:50:50,261 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:50:50,341 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9393939393939394, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4747474747474748 ,rho=0.6262626262626263 ,epsilon=0.0002020202818181818 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.06060606060606061 ,l1_regularization_strength=0.010101010101010102 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.5050505050505051].
2023-08-22 03:50:50,341 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9393939393939394, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4747474747474748 ,rho=0.6262626262626263 ,epsilon=0.0002020202818181818 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.06060606060606061 ,l1_regularization_strength=0.010101010101010102 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.5050505050505051].
2023-08-22 03:51:09,408 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:51:09,409 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:51:09,552 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:51:09,552 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:51:10,433 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:51:10,434 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:51:16,107 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.7474747474747474 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6666666666666667 ,beta=0.16161616161616163].
2023-08-22 03:51:16,107 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.7474747474747474 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6666666666666667 ,beta=0.16161616161616163].
2023-08-22 03:51:29,333 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:51:29,333 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:51:30,690 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:51:30,690 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:51:31,555 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:51:31,555 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:51:35,504 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:51:35,505 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:51:49,192 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.98989898989899 ,rho=0.9292929292929294 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.7474747474747475 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.16161616161616163].
2023-08-22 03:51:49,193 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.98989898989899 ,rho=0.9292929292929294 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.7474747474747475 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.16161616161616163].
2023-08-22 03:51:51,206 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9191919191919192 ,rho=0.6262626262626263 ,epsilon=0.0009393939454545454 ,centered=False ,beta_1=0.5858585858585859 ,beta_2=0.888888888888889 ,learning_rate_power=-0.10101010101010088 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9696969696969697 ,beta=0.07070707070707072].
2023-08-22 03:51:51,206 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9191919191919192 ,rho=0.6262626262626263 ,epsilon=0.0009393939454545454 ,centered=False ,beta_1=0.5858585858585859 ,beta_2=0.888888888888889 ,learning_rate_power=-0.10101010101010088 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9696969696969697 ,beta=0.07070707070707072].
2023-08-22 03:51:51,872 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:51:51,872 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:51:55,596 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:51:55,596 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:52:07,402 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:52:07,402 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:52:12,311 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:52:12,311 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:52:16,432 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7777777777777778 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=6.060615454545454e-05 ,centered=False ,beta_1=0.43434343434343436 ,beta_2=0.7171717171717172 ,learning_rate_power=-0.31313131313131304 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.07070707070707072].
2023-08-22 03:52:16,432 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7777777777777778 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=6.060615454545454e-05 ,centered=False ,beta_1=0.43434343434343436 ,beta_2=0.7171717171717172 ,learning_rate_power=-0.31313131313131304 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.07070707070707072].
2023-08-22 03:52:17,790 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:52:17,790 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:52:28,164 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:52:28,164 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:52:32,611 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.26262626262626265 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.0 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.7171717171717172 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.16161616161616163].
2023-08-22 03:52:32,611 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.26262626262626265 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.0 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.7171717171717172 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.16161616161616163].
2023-08-22 03:52:38,131 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:52:38,131 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:52:42,683 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:52:42,684 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:52:48,038 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:52:48,038 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:52:53,647 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:52:53,648 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:53:02,734 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8585858585858587 ,rho=0.6262626262626263 ,epsilon=0.0002121212909090909 ,centered=False ,beta_1=0.8383838383838385 ,beta_2=0.10101010101010102 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.5656565656565657 ,l1_regularization_strength=0.8080808080808082 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.8181818181818182].
2023-08-22 03:53:02,734 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8585858585858587 ,rho=0.6262626262626263 ,epsilon=0.0002121212909090909 ,centered=False ,beta_1=0.8383838383838385 ,beta_2=0.10101010101010102 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.5656565656565657 ,l1_regularization_strength=0.8080808080808082 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.8181818181818182].
2023-08-22 03:53:27,561 INFO: Applying selection operators for generation 61.
2023-08-22 03:53:27,561 INFO: Applying genetic operators for generation 61.
2023-08-22 03:53:27,564 INFO: Evaluating fitness for for generation 61.
2023-08-22 03:53:27,564 INFO: Will evaluate fitness for 25 individuals.
2023-08-22 03:53:28,092 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:53:28,092 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:53:28,139 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:53:28,139 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:53:28,164 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:53:28,165 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:53:28,165 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.43434343434343436 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7676767676767677 ,rho=0.16161616161616163 ,epsilon=0.0008585858727272726 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.5454545454545455 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8585858585858587 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.16161616161616163].
2023-08-22 03:53:28,165 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.43434343434343436 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7676767676767677 ,rho=0.16161616161616163 ,epsilon=0.0008585858727272726 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.5454545454545455 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8585858585858587 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.16161616161616163].
2023-08-22 03:53:47,898 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:53:47,898 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:53:48,305 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:53:48,305 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:53:48,663 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:53:48,663 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:53:55,208 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:53:55,208 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:54:08,346 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.17171717171717174, momentum=0.16161616161616163 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.9696969696969697 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.5757575757575758 ,beta_2=0.8989898989898991 ,learning_rate_power=-0.8888888888888888 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.07070707070707072].
2023-08-22 03:54:08,347 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.17171717171717174, momentum=0.16161616161616163 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.9696969696969697 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.5757575757575758 ,beta_2=0.8989898989898991 ,learning_rate_power=-0.8888888888888888 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.07070707070707072].
2023-08-22 03:54:08,575 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:54:08,575 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:54:08,945 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:54:08,945 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:54:15,437 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.5050505050505051 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.696969696969697 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.16161616161616163].
2023-08-22 03:54:15,437 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.5050505050505051 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.696969696969697 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.16161616161616163].
2023-08-22 03:54:27,657 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:54:27,657 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:54:29,042 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:54:29,042 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:54:29,605 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0.010101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8585858585858587 ,rho=0.04040404040404041 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.8383838383838385 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=1.0 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.20202020202020204].
2023-08-22 03:54:29,605 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0.010101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8585858585858587 ,rho=0.04040404040404041 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.8383838383838385 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=1.0 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.20202020202020204].
2023-08-22 03:54:33,733 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.18181818181818182, momentum=0.9595959595959597 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.22222222222222224 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.19191919191919193 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:54:33,733 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.18181818181818182, momentum=0.9595959595959597 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.22222222222222224 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.19191919191919193 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:54:47,382 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:54:47,382 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:54:49,290 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.303030303030303 ,initial_accumulator_value=0.5656565656565657 ,l1_regularization_strength=0.33333333333333337 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.7373737373737375].
2023-08-22 03:54:49,290 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.303030303030303 ,initial_accumulator_value=0.5656565656565657 ,l1_regularization_strength=0.33333333333333337 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.7373737373737375].
2023-08-22 03:54:56,777 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:54:56,777 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:55:00,090 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:55:00,090 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:55:07,174 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:55:07,175 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:55:16,892 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:55:16,893 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:55:17,121 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.09090909090909091 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.22222222222222224 ,rho=0.6262626262626263 ,epsilon=0.0006666667 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:55:17,122 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.09090909090909091 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.22222222222222224 ,rho=0.6262626262626263 ,epsilon=0.0006666667 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:55:20,081 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.009394000000000001 ,use_ema=True ,ema_momentum=0.4141414141414142 ,rho=0.7171717171717172 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.38383838383838387 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4444444444444445 ,l1_regularization_strength=0.4747474747474748 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.10101010101010102 ,beta=0.16161616161616163].
2023-08-22 03:55:20,081 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.009394000000000001 ,use_ema=True ,ema_momentum=0.4141414141414142 ,rho=0.7171717171717172 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.38383838383838387 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4444444444444445 ,l1_regularization_strength=0.4747474747474748 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.10101010101010102 ,beta=0.16161616161616163].
2023-08-22 03:55:26,897 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.08080808080808081, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.005758000000000001 ,use_ema=True ,ema_momentum=0.15151515151515152 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.22222222222222224 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.36363636363636354 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.10101010101010102 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.38383838383838387 ,beta=0.16161616161616163].
2023-08-22 03:55:26,897 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.08080808080808081, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.005758000000000001 ,use_ema=True ,ema_momentum=0.15151515151515152 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.22222222222222224 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.36363636363636354 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.10101010101010102 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.38383838383838387 ,beta=0.16161616161616163].
2023-08-22 03:56:00,498 INFO: Applying selection operators for generation 62.
2023-08-22 03:56:00,498 INFO: Applying genetic operators for generation 62.
2023-08-22 03:56:00,501 INFO: Evaluating fitness for for generation 62.
2023-08-22 03:56:00,501 INFO: Will evaluate fitness for 27 individuals.
2023-08-22 03:56:01,036 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6767676767676768, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5656565656565657 ,rho=0.7272727272727273 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.16161616161616163].
2023-08-22 03:56:01,036 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6767676767676768, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5656565656565657 ,rho=0.7272727272727273 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.16161616161616163].
2023-08-22 03:56:01,074 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.05050505050505051, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.17171717171717174 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.393939393939394 ,beta_2=0.23232323232323235 ,learning_rate_power=-0.31313131313131304 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.25252525252525254].
2023-08-22 03:56:01,074 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.05050505050505051, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.17171717171717174 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.393939393939394 ,beta_2=0.23232323232323235 ,learning_rate_power=-0.31313131313131304 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.25252525252525254].
2023-08-22 03:56:01,091 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:56:01,091 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:56:01,097 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.16161616161616163 ,rho=0.696969696969697 ,epsilon=0.0005757576181818182 ,centered=False ,beta_1=0.36363636363636365 ,beta_2=0.37373737373737376 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.7676767676767677].
2023-08-22 03:56:01,097 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.16161616161616163 ,rho=0.696969696969697 ,epsilon=0.0005757576181818182 ,centered=False ,beta_1=0.36363636363636365 ,beta_2=0.37373737373737376 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.7676767676767677].
2023-08-22 03:56:20,938 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:56:20,939 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:56:22,060 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:56:22,060 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:56:26,812 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.13131313131313133 ,rho=0.7575757575757577 ,epsilon=0.0007474747727272727 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.9090909090909092 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.4141414141414142 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.16161616161616163].
2023-08-22 03:56:26,812 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.13131313131313133 ,rho=0.7575757575757577 ,epsilon=0.0007474747727272727 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.9090909090909092 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.4141414141414142 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.16161616161616163].
2023-08-22 03:56:27,366 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:56:27,367 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:56:40,899 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:56:40,900 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:56:42,427 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00043434349090909084 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.8585858585858587 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:56:42,427 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00043434349090909084 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.8585858585858587 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:56:47,772 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:56:47,772 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:56:52,015 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9696969696969697 ,rho=0.36363636363636365 ,epsilon=0.0006666667 ,centered=False ,beta_1=0.686868686868687 ,beta_2=0.6060606060606061 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.16161616161616163].
2023-08-22 03:56:52,015 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9696969696969697 ,rho=0.36363636363636365 ,epsilon=0.0006666667 ,centered=False ,beta_1=0.686868686868687 ,beta_2=0.6060606060606061 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.16161616161616163].
2023-08-22 03:57:01,609 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:57:01,609 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:57:08,353 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:57:08,353 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:57:09,394 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.4545454545454546 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.787878787878788 ,beta_2=0.4545454545454546 ,learning_rate_power=-0.09090909090909083 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:57:09,394 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.4545454545454546 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.787878787878788 ,beta_2=0.4545454545454546 ,learning_rate_power=-0.09090909090909083 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:57:18,029 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:57:18,029 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:57:21,788 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:57:21,789 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:57:27,387 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:57:27,387 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:57:28,720 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.43434343434343436, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.01 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.16161616161616163 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.16161616161616163].
2023-08-22 03:57:28,720 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.43434343434343436, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.01 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.16161616161616163 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.16161616161616163].
2023-08-22 03:57:38,605 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6767676767676768 ,epsilon=0.0008383838545454545 ,centered=False ,beta_1=0.05050505050505051 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.05050505050505051 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:57:38,605 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6767676767676768 ,epsilon=0.0008383838545454545 ,centered=False ,beta_1=0.05050505050505051 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.05050505050505051 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:57:41,884 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5151515151515152 ,rho=0.31313131313131315 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.5656565656565657 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.11111111111111112 ,beta=0.5454545454545455].
2023-08-22 03:57:41,885 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5151515151515152 ,rho=0.31313131313131315 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.5656565656565657 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.11111111111111112 ,beta=0.5454545454545455].
2023-08-22 03:57:47,796 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.21212121212121213 ,epsilon=9.09091818181818e-05 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6262626262626263 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.32323232323232326].
2023-08-22 03:57:47,796 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.21212121212121213 ,epsilon=9.09091818181818e-05 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6262626262626263 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.32323232323232326].
2023-08-22 03:57:55,616 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:57:55,617 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:58:04,687 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:58:04,688 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:58:07,568 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:58:07,568 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:58:14,629 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0.2828282828282829 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.888888888888889 ,rho=0.6262626262626263 ,epsilon=4.040413636363636e-05 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.8484848484848485 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.16161616161616163].
2023-08-22 03:58:14,629 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0.2828282828282829 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.888888888888889 ,rho=0.6262626262626263 ,epsilon=4.040413636363636e-05 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.8484848484848485 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.16161616161616163].
2023-08-22 03:58:27,450 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.393939393939394, momentum=0.0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.31313131313131304 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.06060606060606061].
2023-08-22 03:58:27,450 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.393939393939394, momentum=0.0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.31313131313131304 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.06060606060606061].
2023-08-22 03:58:47,264 INFO: Applying selection operators for generation 63.
2023-08-22 03:58:47,264 INFO: Applying genetic operators for generation 63.
2023-08-22 03:58:47,267 INFO: Evaluating fitness for for generation 63.
2023-08-22 03:58:47,267 INFO: Will evaluate fitness for 30 individuals.
2023-08-22 03:58:47,817 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:58:47,817 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:58:47,851 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.20202020202020204, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.008990000000000001 ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.48484848484848486 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.22222222222222224 ,learning_rate_power=-0.33333333333333326 ,initial_accumulator_value=0.7171717171717172 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.16161616161616163].
2023-08-22 03:58:47,852 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.20202020202020204, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.008990000000000001 ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.48484848484848486 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.22222222222222224 ,learning_rate_power=-0.33333333333333326 ,initial_accumulator_value=0.7171717171717172 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.16161616161616163].
2023-08-22 03:58:47,855 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=1.0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.030303030303030304 ,rho=0.6262626262626263 ,epsilon=0.00017171725454545453 ,centered=False ,beta_1=0.6767676767676768 ,beta_2=0.8585858585858587 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.020202020202020204].
2023-08-22 03:58:47,855 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=1.0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.030303030303030304 ,rho=0.6262626262626263 ,epsilon=0.00017171725454545453 ,centered=False ,beta_1=0.6767676767676768 ,beta_2=0.8585858585858587 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.020202020202020204].
2023-08-22 03:58:47,866 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:58:47,867 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:59:07,721 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:59:07,722 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:59:07,777 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:59:07,777 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:59:08,331 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:59:08,332 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:59:14,284 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:59:14,284 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:59:27,620 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:59:27,620 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:59:27,733 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:59:27,734 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:59:28,680 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.494949494949495 ,rho=0.07070707070707072 ,epsilon=0.0006161616545454546 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.11111111111111112 ,beta=0.16161616161616163].
2023-08-22 03:59:28,680 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.494949494949495 ,rho=0.07070707070707072 ,epsilon=0.0006161616545454546 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.11111111111111112 ,beta=0.16161616161616163].
2023-08-22 03:59:34,506 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:59:34,506 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:59:47,731 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.10101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.18181818181818182 ,rho=0.16161616161616163 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.31313131313131315 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.26262626262626265 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.12121212121212122].
2023-08-22 03:59:47,732 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.10101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.18181818181818182 ,rho=0.16161616161616163 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.31313131313131315 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.26262626262626265 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.12121212121212122].
2023-08-22 03:59:48,267 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.8787878787878789 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.15151515151515152 ,rho=0.9494949494949496 ,epsilon=0.0008585858727272726 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.16161616161616163].
2023-08-22 03:59:48,267 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.8787878787878789 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.15151515151515152 ,rho=0.9494949494949496 ,epsilon=0.0008585858727272726 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.16161616161616163].
2023-08-22 03:59:54,752 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:59:54,753 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:59:55,312 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 03:59:55,312 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:00:13,388 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:00:13,388 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:00:15,062 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.888888888888889, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.006263000000000001 ,use_ema=False ,ema_momentum=0.37373737373737376 ,rho=0.8787878787878789 ,epsilon=0.0005959596363636363 ,centered=True ,beta_1=0.6565656565656566 ,beta_2=0.24242424242424243 ,learning_rate_power=-0.3939393939393939 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.42424242424242425 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8585858585858587 ,beta=0.0].
2023-08-22 04:00:15,062 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.888888888888889, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.006263000000000001 ,use_ema=False ,ema_momentum=0.37373737373737376 ,rho=0.8787878787878789 ,epsilon=0.0005959596363636363 ,centered=True ,beta_1=0.6565656565656566 ,beta_2=0.24242424242424243 ,learning_rate_power=-0.3939393939393939 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.42424242424242425 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8585858585858587 ,beta=0.0].
2023-08-22 04:00:15,656 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:00:15,656 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:00:15,881 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:00:15,881 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:00:33,477 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:00:33,477 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:00:36,230 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7171717171717172, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.08080808080808081 ,rho=0.6262626262626263 ,epsilon=1.010110909090909e-05 ,centered=False ,beta_1=0.5252525252525253 ,beta_2=0.8989898989898991 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5757575757575758 ,beta=0.16161616161616163].
2023-08-22 04:00:36,230 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7171717171717172, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.08080808080808081 ,rho=0.6262626262626263 ,epsilon=1.010110909090909e-05 ,centered=False ,beta_1=0.5252525252525253 ,beta_2=0.8989898989898991 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5757575757575758 ,beta=0.16161616161616163].
2023-08-22 04:00:37,390 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:00:37,390 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:00:40,031 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:00:40,031 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:00:53,556 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:00:53,557 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:00:58,054 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:00:58,055 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:00:59,910 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:00:59,910 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:01:13,478 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.7676767676767677 ,rho=0.9797979797979799 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.030303030303030304 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8989898989898991 ,beta=0.16161616161616163].
2023-08-22 04:01:13,478 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.7676767676767677 ,rho=0.9797979797979799 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.030303030303030304 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8989898989898991 ,beta=0.16161616161616163].
2023-08-22 04:01:18,467 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.0, momentum=0.393939393939394 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6565656565656566 ,epsilon=0.0002727273454545454 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.22222222222222224 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.33333333333333337 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.11111111111111112 ,beta=0.16161616161616163].
2023-08-22 04:01:18,467 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.0, momentum=0.393939393939394 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6565656565656566 ,epsilon=0.0002727273454545454 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.22222222222222224 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.33333333333333337 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.11111111111111112 ,beta=0.16161616161616163].
2023-08-22 04:01:20,271 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:01:20,271 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:01:44,165 INFO: Applying selection operators for generation 64.
2023-08-22 04:01:44,165 INFO: Applying genetic operators for generation 64.
2023-08-22 04:01:44,168 INFO: Evaluating fitness for for generation 64.
2023-08-22 04:01:44,168 INFO: Will evaluate fitness for 32 individuals.
2023-08-22 04:01:44,716 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.9696969696969697 ,beta_2=0.7070707070707072 ,learning_rate_power=-0.6868686868686869 ,initial_accumulator_value=0.686868686868687 ,l1_regularization_strength=0.010101010101010102 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.16161616161616163].
2023-08-22 04:01:44,716 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.9696969696969697 ,beta_2=0.7070707070707072 ,learning_rate_power=-0.6868686868686869 ,initial_accumulator_value=0.686868686868687 ,l1_regularization_strength=0.010101010101010102 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.16161616161616163].
2023-08-22 04:01:44,730 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.8989898989898991 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.33333333333333337 ,rho=0.6161616161616162 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.98989898989899 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:01:44,731 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.8989898989898991 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.33333333333333337 ,rho=0.6161616161616162 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.98989898989899 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:01:44,767 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:01:44,767 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:01:44,789 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.001213 ,use_ema=True ,ema_momentum=0.6161616161616162 ,rho=0.6262626262626263 ,epsilon=0.0007373737636363636 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.686868686868687 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:01:44,789 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.001213 ,use_ema=True ,ema_momentum=0.6161616161616162 ,rho=0.6262626262626263 ,epsilon=0.0007373737636363636 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.686868686868687 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:02:04,480 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:02:04,481 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:02:05,423 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.393939393939394, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0033340000000000006 ,use_ema=True ,ema_momentum=0.42424242424242425 ,rho=0.4444444444444445 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.36363636363636354 ,initial_accumulator_value=0.4747474747474748 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.16161616161616163].
2023-08-22 04:02:05,423 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.393939393939394, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0033340000000000006 ,use_ema=True ,ema_momentum=0.42424242424242425 ,rho=0.4444444444444445 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.36363636363636354 ,initial_accumulator_value=0.4747474747474748 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.16161616161616163].
2023-08-22 04:02:11,205 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:02:11,205 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:02:13,653 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.07070707070707072 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7373737373737373 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8989898989898991 ,beta=0.16161616161616163].
2023-08-22 04:02:13,654 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.07070707070707072 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7373737373737373 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8989898989898991 ,beta=0.16161616161616163].
2023-08-22 04:02:24,226 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:02:24,226 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:02:32,336 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=1.0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.13131313131313127 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.16161616161616163].
2023-08-22 04:02:32,336 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=1.0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.13131313131313127 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.16161616161616163].
2023-08-22 04:02:32,382 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.6262626262626263 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.25252525252525254 ,l1_regularization_strength=0.8585858585858587 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:02:32,383 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.6262626262626263 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.25252525252525254 ,l1_regularization_strength=0.8585858585858587 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:02:34,109 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.002829000000000001 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.797979797979798 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.050505050505050386 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.08080808080808081].
2023-08-22 04:02:34,109 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.002829000000000001 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.797979797979798 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.050505050505050386 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.08080808080808081].
2023-08-22 04:02:44,671 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:02:44,672 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:02:51,971 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:02:51,972 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:02:52,305 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:02:52,305 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:02:54,981 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:02:54,981 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:03:04,733 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7777777777777778, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0027280000000000004 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.32323232323232326 ,epsilon=0.00010101019090909089 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:03:04,733 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7777777777777778, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0027280000000000004 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.32323232323232326 ,epsilon=0.00010101019090909089 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:03:12,244 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:03:12,244 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:03:12,310 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:03:12,310 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:03:15,248 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:03:15,249 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:03:31,324 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:03:31,324 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:03:32,513 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.14141414141414144 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4040404040404041 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:03:32,514 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.14141414141414144 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4040404040404041 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:03:32,978 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.6767676767676768, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.003738000000000001 ,use_ema=True ,ema_momentum=0.5757575757575758 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.43434343434343436 ,beta_2=0.4646464646464647 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.48484848484848486].
2023-08-22 04:03:32,978 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.6767676767676768, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.003738000000000001 ,use_ema=True ,ema_momentum=0.5757575757575758 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.43434343434343436 ,beta_2=0.4646464646464647 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.48484848484848486].
2023-08-22 04:03:36,563 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.37373737373737376 ,learning_rate_power=-0.6464646464646464 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6262626262626263 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.5858585858585859].
2023-08-22 04:03:36,563 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.37373737373737376 ,learning_rate_power=-0.6464646464646464 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6262626262626263 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.5858585858585859].
2023-08-22 04:03:51,171 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:03:51,172 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:03:59,179 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:03:59,179 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:03:59,649 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:03:59,650 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:04:03,099 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:04:03,100 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:04:11,698 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:04:11,699 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:04:19,680 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:04:19,680 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:04:20,286 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:04:20,286 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:04:23,392 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:04:23,393 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:04:42,929 INFO: Applying selection operators for generation 65.
2023-08-22 04:04:42,930 INFO: Applying genetic operators for generation 65.
2023-08-22 04:04:42,932 INFO: Evaluating fitness for for generation 65.
2023-08-22 04:04:42,932 INFO: Will evaluate fitness for 30 individuals.
2023-08-22 04:04:43,502 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:04:43,503 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:04:43,517 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:04:43,517 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:04:43,530 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:04:43,530 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:04:43,545 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0004050000000000001 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.12121212121212122 ,beta=0.16161616161616163].
2023-08-22 04:04:43,545 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0004050000000000001 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.12121212121212122 ,beta=0.16161616161616163].
2023-08-22 04:05:03,236 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:05:03,237 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:05:03,582 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6666666666666667 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.13131313131313133 ,rho=0.3535353535353536 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.2828282828282829 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.16161616161616163].
2023-08-22 04:05:03,582 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6666666666666667 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.13131313131313133 ,rho=0.3535353535353536 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.2828282828282829 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.16161616161616163].
2023-08-22 04:05:03,628 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:05:03,628 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:05:04,943 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:05:04,943 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:05:23,129 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:05:23,130 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:05:23,715 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.7272727272727273, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.9595959595959597 ,learning_rate_power=-0.36363636363636354 ,initial_accumulator_value=0.12121212121212122 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.16161616161616163].
2023-08-22 04:05:23,715 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.7272727272727273, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.9595959595959597 ,learning_rate_power=-0.36363636363636354 ,initial_accumulator_value=0.12121212121212122 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.16161616161616163].
2023-08-22 04:05:25,104 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:05:25,104 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:05:32,043 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.17171717171717174, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.11111111111111112 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.797979797979798 ,beta_2=0.20202020202020204 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.6767676767676768 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8585858585858587 ,beta=0.8585858585858587].
2023-08-22 04:05:32,043 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.17171717171717174, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.11111111111111112 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.797979797979798 ,beta_2=0.20202020202020204 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.6767676767676768 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8585858585858587 ,beta=0.8585858585858587].
2023-08-22 04:05:42,950 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:05:42,950 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:05:43,274 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:05:43,274 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:05:45,169 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:05:45,169 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:05:51,792 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:05:51,793 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:06:03,501 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:06:03,501 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:06:03,731 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:06:03,732 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:06:05,085 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:06:05,085 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:06:12,194 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:06:12,194 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:06:23,376 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:06:23,376 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:06:24,079 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:06:24,079 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:06:25,784 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:06:25,785 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:06:32,423 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.36363636363636365 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.5252525252525253 ,learning_rate_power=-0.404040404040404 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:06:32,424 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.36363636363636365 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.5252525252525253 ,learning_rate_power=-0.404040404040404 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:06:43,183 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:06:43,183 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:06:44,249 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:06:44,249 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:06:45,953 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.9595959595959597 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8989898989898991 ,rho=0.9494949494949496 ,epsilon=0.0007979798181818182 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.4444444444444445 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6666666666666667 ,beta=0.16161616161616163].
2023-08-22 04:06:45,953 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.9595959595959597 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8989898989898991 ,rho=0.9494949494949496 ,epsilon=0.0007979798181818182 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.4444444444444445 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6666666666666667 ,beta=0.16161616161616163].
2023-08-22 04:07:03,047 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4040404040404041, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.8383838383838385 ,epsilon=0.0002727273454545454 ,centered=False ,beta_1=0.32323232323232326 ,beta_2=0.6464646464646465 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8989898989898991 ,beta=0.16161616161616163].
2023-08-22 04:07:03,048 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4040404040404041, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.8383838383838385 ,epsilon=0.0002727273454545454 ,centered=False ,beta_1=0.32323232323232326 ,beta_2=0.6464646464646465 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8989898989898991 ,beta=0.16161616161616163].
2023-08-22 04:07:05,379 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.7676767676767677].
2023-08-22 04:07:05,379 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.7676767676767677].
2023-08-22 04:07:12,081 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.7676767676767677 ,beta_2=0.3434343434343435 ,learning_rate_power=-0.050505050505050386 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.6767676767676768 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.9090909090909092].
2023-08-22 04:07:12,082 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.7676767676767677 ,beta_2=0.3434343434343435 ,learning_rate_power=-0.050505050505050386 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.6767676767676768 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.9090909090909092].
2023-08-22 04:07:31,283 INFO: Applying selection operators for generation 66.
2023-08-22 04:07:31,284 INFO: Applying genetic operators for generation 66.
2023-08-22 04:07:31,286 INFO: Evaluating fitness for for generation 66.
2023-08-22 04:07:31,286 INFO: Will evaluate fitness for 23 individuals.
2023-08-22 04:07:31,865 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:07:31,865 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:07:31,886 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.25252525252525254 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.8686868686868687 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:07:31,887 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.25252525252525254 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.8686868686868687 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:07:31,902 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:07:31,902 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:07:31,902 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:07:31,902 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:07:51,588 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:07:51,588 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:07:51,824 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.5050505050505051, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.23232323232323235 ,beta_2=0.8585858585858587 ,learning_rate_power=-1.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.16161616161616163].
2023-08-22 04:07:51,825 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.5050505050505051, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.23232323232323235 ,beta_2=0.8585858585858587 ,learning_rate_power=-1.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.16161616161616163].
2023-08-22 04:07:52,095 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:07:52,096 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:07:52,296 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:07:52,296 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:08:11,206 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:08:11,206 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:08:12,185 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:08:12,185 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:08:12,329 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:08:12,329 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:08:12,575 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:08:12,575 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:08:31,213 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:08:31,214 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:08:31,907 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.6262626262626263 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7676767676767676 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.696969696969697].
2023-08-22 04:08:31,908 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.6262626262626263 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7676767676767676 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.696969696969697].
2023-08-22 04:08:32,717 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:08:32,717 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:08:33,387 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.18181818181818182 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.20202020202020204 ,beta_2=0.18181818181818182 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5151515151515152 ,beta=0.10101010101010102].
2023-08-22 04:08:33,387 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.18181818181818182 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.20202020202020204 ,beta_2=0.18181818181818182 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5151515151515152 ,beta=0.10101010101010102].
2023-08-22 04:08:51,065 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:08:51,066 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:08:52,888 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:08:52,888 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:09:00,512 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.030303030303030304 ,epsilon=0.0006363636727272727 ,centered=True ,beta_1=0.8484848484848485 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.16161616161616163].
2023-08-22 04:09:00,513 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.030303030303030304 ,epsilon=0.0006363636727272727 ,centered=True ,beta_1=0.8484848484848485 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.16161616161616163].
2023-08-22 04:09:11,833 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5555555555555556 ,rho=0.020202020202020204 ,epsilon=0.00017171725454545453 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.15151515151515152 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.030303030303030304 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.7676767676767677].
2023-08-22 04:09:11,833 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5555555555555556 ,rho=0.020202020202020204 ,epsilon=0.00017171725454545453 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.15151515151515152 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.030303030303030304 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.7676767676767677].
2023-08-22 04:09:12,753 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.888888888888889 ,epsilon=0.0005959596363636363 ,centered=False ,beta_1=0.42424242424242425 ,beta_2=0.4646464646464647 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:09:12,753 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.888888888888889 ,epsilon=0.0005959596363636363 ,centered=False ,beta_1=0.42424242424242425 ,beta_2=0.4646464646464647 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:09:14,399 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:09:14,399 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:09:26,578 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:09:26,578 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:09:46,146 INFO: Applying selection operators for generation 67.
2023-08-22 04:09:46,147 INFO: Applying genetic operators for generation 67.
2023-08-22 04:09:46,149 INFO: Evaluating fitness for for generation 67.
2023-08-22 04:09:46,149 INFO: Will evaluate fitness for 28 individuals.
2023-08-22 04:09:46,717 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.09090909090909091, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4444444444444445 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.6161616161616162 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.29292929292929293 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.16161616161616163].
2023-08-22 04:09:46,717 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.09090909090909091, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4444444444444445 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.6161616161616162 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.29292929292929293 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.16161616161616163].
2023-08-22 04:09:46,748 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:09:46,748 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:09:46,755 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0.07070707070707072 ,nesterov=True ,amsgrad=False ,weight_decay=0.007576000000000001 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=1e-10 ,centered=True ,beta_1=0.686868686868687 ,beta_2=0.13131313131313133 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.04040404040404041 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.15151515151515152 ,beta=0.16161616161616163].
2023-08-22 04:09:46,756 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0.07070707070707072 ,nesterov=True ,amsgrad=False ,weight_decay=0.007576000000000001 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=1e-10 ,centered=True ,beta_1=0.686868686868687 ,beta_2=0.13131313131313133 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.04040404040404041 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.15151515151515152 ,beta=0.16161616161616163].
2023-08-22 04:09:46,756 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:09:46,757 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:10:06,806 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:10:06,806 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:10:06,924 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:10:06,924 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:10:12,145 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9595959595959597, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.030303030303030304 ,rho=0.6262626262626263 ,epsilon=0.00010101019090909089 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.9191919191919192 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.6666666666666667 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.42424242424242425].
2023-08-22 04:10:12,145 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9595959595959597, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.030303030303030304 ,rho=0.6262626262626263 ,epsilon=0.00010101019090909089 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.9191919191919192 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.6666666666666667 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.42424242424242425].
2023-08-22 04:10:13,616 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:10:13,616 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:10:27,114 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:10:27,114 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:10:27,892 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:10:27,892 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:10:33,508 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:10:33,508 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:10:38,483 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.4141414141414142, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.0 ,rho=0.6363636363636365 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.18181818181818182 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.16161616161616163].
2023-08-22 04:10:38,483 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.4141414141414142, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.0 ,rho=0.6363636363636365 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.18181818181818182 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.16161616161616163].
2023-08-22 04:10:48,244 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:10:48,244 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:10:48,562 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:10:48,562 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:10:54,253 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:10:54,253 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:11:08,502 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.5050505050505051 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.08080808080808081 ,rho=0.25252525252525254 ,epsilon=0.00032323239090909086 ,centered=False ,beta_1=0.16161616161616163 ,beta_2=0.31313131313131315 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.8686868686868687].
2023-08-22 04:11:08,502 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.5050505050505051 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.08080808080808081 ,rho=0.25252525252525254 ,epsilon=0.00032323239090909086 ,centered=False ,beta_1=0.16161616161616163 ,beta_2=0.31313131313131315 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.8686868686868687].
2023-08-22 04:11:08,814 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:11:08,814 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:11:14,198 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.37373737373737376, momentum=0.6161616161616162 ,nesterov=False ,amsgrad=False ,weight_decay=0.0076770000000000015 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.30303030303030304 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.6161616161616162 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.8484848484848485 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.07070707070707072].
2023-08-22 04:11:14,198 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.37373737373737376, momentum=0.6161616161616162 ,nesterov=False ,amsgrad=False ,weight_decay=0.0076770000000000015 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.30303030303030304 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.6161616161616162 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.8484848484848485 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.07070707070707072].
2023-08-22 04:11:20,815 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0002020202818181818 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.9090909090909092 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.787878787878788 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.16161616161616163].
2023-08-22 04:11:20,816 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0002020202818181818 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.9090909090909092 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.787878787878788 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.16161616161616163].
2023-08-22 04:11:29,082 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:11:29,082 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:11:35,354 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:11:35,354 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:11:40,992 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:11:40,993 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:11:47,141 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.5050505050505051, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.33333333333333337 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.09090909090909083 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.010101010101010102 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.16161616161616163].
2023-08-22 04:11:47,141 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.5050505050505051, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.33333333333333337 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.09090909090909083 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.010101010101010102 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.16161616161616163].
2023-08-22 04:11:49,504 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:11:49,504 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:11:56,440 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:11:56,440 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:12:04,941 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:12:04,941 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:12:10,853 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:12:10,853 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:12:16,867 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.15151515151515152, momentum=0.7171717171717172 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7171717171717172 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.8282828282828284 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.16161616161616163].
2023-08-22 04:12:16,867 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.15151515151515152, momentum=0.7171717171717172 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7171717171717172 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.8282828282828284 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.16161616161616163].
2023-08-22 04:12:42,815 INFO: Applying selection operators for generation 68.
2023-08-22 04:12:42,815 INFO: Applying genetic operators for generation 68.
2023-08-22 04:12:42,818 INFO: Evaluating fitness for for generation 68.
2023-08-22 04:12:42,818 INFO: Will evaluate fitness for 26 individuals.
2023-08-22 04:12:43,397 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0025260000000000005 ,use_ema=True ,ema_momentum=0.07070707070707072 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:12:43,398 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0025260000000000005 ,use_ema=True ,ema_momentum=0.07070707070707072 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:12:43,399 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.9696969696969697 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.30303030303030304 ,rho=0.7272727272727273 ,epsilon=6.060615454545454e-05 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.5454545454545455 ,learning_rate_power=-0.010101010101010055 ,initial_accumulator_value=0.21212121212121213 ,l1_regularization_strength=0.48484848484848486 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:12:43,399 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.9696969696969697 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.30303030303030304 ,rho=0.7272727272727273 ,epsilon=6.060615454545454e-05 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.5454545454545455 ,learning_rate_power=-0.010101010101010055 ,initial_accumulator_value=0.21212121212121213 ,l1_regularization_strength=0.48484848484848486 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:12:43,399 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:12:43,399 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:12:43,423 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:12:43,423 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:13:02,410 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:13:02,410 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:13:02,442 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:13:02,442 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:13:03,166 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:13:03,166 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:13:03,644 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.07070707070707072, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.008182 ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.42424242424242425 ,epsilon=7.070716363636363e-05 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.9797979797979798 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.20202020202020204].
2023-08-22 04:13:03,644 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.07070707070707072, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.008182 ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.42424242424242425 ,epsilon=7.070716363636363e-05 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.9797979797979798 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.20202020202020204].
2023-08-22 04:13:22,632 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:13:22,633 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:13:22,930 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.16161616161616163].
2023-08-22 04:13:22,930 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.16161616161616163].
2023-08-22 04:13:24,007 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:13:24,008 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:13:29,535 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:13:29,535 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:13:43,645 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.595959595959596, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.6666666666666667 ,epsilon=0.000454545509090909 ,centered=False ,beta_1=0.07070707070707072 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.8282828282828283 ,initial_accumulator_value=0.6767676767676768 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.07070707070707072].
2023-08-22 04:13:43,645 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.595959595959596, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.6666666666666667 ,epsilon=0.000454545509090909 ,centered=False ,beta_1=0.07070707070707072 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.8282828282828283 ,initial_accumulator_value=0.6767676767676768 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.07070707070707072].
2023-08-22 04:13:44,016 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:13:44,016 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:13:49,987 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.29292929292929293, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.2828282828282829 ,epsilon=0.00024242431818181817 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.36363636363636365 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.16161616161616163].
2023-08-22 04:13:49,987 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.29292929292929293, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.2828282828282829 ,epsilon=0.00024242431818181817 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.36363636363636365 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.16161616161616163].
2023-08-22 04:14:03,862 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:14:03,862 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:14:04,051 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:14:04,052 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:14:08,831 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.9393939393939394, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4545454545454546 ,l1_regularization_strength=0.6262626262626263 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.9191919191919192].
2023-08-22 04:14:08,831 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.9393939393939394, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4545454545454546 ,l1_regularization_strength=0.6262626262626263 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.9191919191919192].
2023-08-22 04:14:10,048 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:14:10,049 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:14:23,638 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:14:23,638 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:14:24,015 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.494949494949495, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.007273000000000001 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0003333334 ,centered=True ,beta_1=0.6666666666666667 ,beta_2=0.6060606060606061 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8282828282828284 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:14:24,015 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.494949494949495, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.007273000000000001 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0003333334 ,centered=True ,beta_1=0.6666666666666667 ,beta_2=0.6060606060606061 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8282828282828284 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:14:28,560 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:14:28,560 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:14:30,336 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.004243000000000001 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.010101010101010102 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.06060606060606061 ,l1_regularization_strength=0.3434343434343435 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5151515151515152 ,beta=0.888888888888889].
2023-08-22 04:14:30,336 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.004243000000000001 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.010101010101010102 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.06060606060606061 ,l1_regularization_strength=0.3434343434343435 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5151515151515152 ,beta=0.888888888888889].
2023-08-22 04:14:44,254 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:14:44,254 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:14:48,977 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:14:48,977 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:15:08,866 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:15:08,866 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:15:28,963 INFO: Applying selection operators for generation 69.
2023-08-22 04:15:28,963 INFO: Applying genetic operators for generation 69.
2023-08-22 04:15:28,966 INFO: Evaluating fitness for for generation 69.
2023-08-22 04:15:28,967 INFO: Will evaluate fitness for 34 individuals.
2023-08-22 04:15:29,535 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0009393939454545454 ,centered=False ,beta_1=0.6262626262626263 ,beta_2=0.9090909090909092 ,learning_rate_power=-1.0 ,initial_accumulator_value=0.6060606060606061 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.08080808080808081].
2023-08-22 04:15:29,535 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0009393939454545454 ,centered=False ,beta_1=0.6262626262626263 ,beta_2=0.9090909090909092 ,learning_rate_power=-1.0 ,initial_accumulator_value=0.6060606060606061 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.08080808080808081].
2023-08-22 04:15:29,541 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:15:29,542 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:15:29,596 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:15:29,596 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:15:29,601 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:15:29,601 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:15:49,696 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.9393939393939394 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.16161616161616163].
2023-08-22 04:15:49,697 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.9393939393939394 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.16161616161616163].
2023-08-22 04:15:50,072 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:15:50,072 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:15:50,418 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:15:50,419 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:15:53,957 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:15:53,957 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:16:10,331 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:16:10,331 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:16:10,712 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:16:10,712 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:16:13,988 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:16:13,988 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:16:16,376 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:16:16,376 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:16:30,558 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:16:30,558 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:16:30,958 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:16:30,958 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:16:33,940 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0.8787878787878789 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.494949494949495 ,rho=0.09090909090909091 ,epsilon=0.00024242431818181817 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.32323232323232326].
2023-08-22 04:16:33,940 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0.8787878787878789 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.494949494949495 ,rho=0.09090909090909091 ,epsilon=0.00024242431818181817 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.32323232323232326].
2023-08-22 04:16:36,357 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:16:36,357 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:16:50,955 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.37373737373737376 ,rho=0.06060606060606061 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.36363636363636365 ,learning_rate_power=-0.8080808080808081 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.5858585858585859].
2023-08-22 04:16:50,956 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.37373737373737376 ,rho=0.06060606060606061 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.36363636363636365 ,learning_rate_power=-0.8080808080808081 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.5858585858585859].
2023-08-22 04:16:51,135 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.13131313131313133 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.8787878787878789 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.08080808080808081 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.4545454545454546].
2023-08-22 04:16:51,136 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.13131313131313133 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.8787878787878789 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.08080808080808081 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.4545454545454546].
2023-08-22 04:16:56,350 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.23232323232323235, momentum=0.8383838383838385 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.05050505050505051 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.18181818181818182].
2023-08-22 04:16:56,351 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.23232323232323235, momentum=0.8383838383838385 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.05050505050505051 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.18181818181818182].
2023-08-22 04:17:12,285 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.08080808080808081, momentum=0.4747474747474748 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.6262626262626263 ,epsilon=9.09091818181818e-05 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.5757575757575758 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7474747474747475 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.8989898989898991].
2023-08-22 04:17:12,286 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.08080808080808081, momentum=0.4747474747474748 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.6262626262626263 ,epsilon=9.09091818181818e-05 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.5757575757575758 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7474747474747475 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.8989898989898991].
2023-08-22 04:17:14,921 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.6767676767676768, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.24242424242424243 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.19191919191919193 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.16161616161616163].
2023-08-22 04:17:14,921 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.6767676767676768, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.24242424242424243 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.19191919191919193 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.16161616161616163].
2023-08-22 04:17:19,582 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:17:19,583 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:17:23,859 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.005354000000000001 ,use_ema=True ,ema_momentum=0.22222222222222224 ,rho=0.6262626262626263 ,epsilon=0.0006969697272727273 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.16161616161616163].
2023-08-22 04:17:23,860 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.005354000000000001 ,use_ema=True ,ema_momentum=0.22222222222222224 ,rho=0.6262626262626263 ,epsilon=0.0006969697272727273 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.16161616161616163].
2023-08-22 04:17:33,234 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:17:33,234 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:17:39,352 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:17:39,352 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:17:40,130 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:17:40,130 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:17:51,635 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:17:51,635 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:17:53,167 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5252525252525253, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.08080808080808081 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.8181818181818181 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.16161616161616163].
2023-08-22 04:17:53,167 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5252525252525253, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.08080808080808081 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.8181818181818181 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.16161616161616163].
2023-08-22 04:17:59,644 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:17:59,644 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:18:00,527 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.8383838383838385, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.000454545509090909 ,centered=False ,beta_1=0.6363636363636365 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.43434343434343436 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.04040404040404041].
2023-08-22 04:18:00,527 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.8383838383838385, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.000454545509090909 ,centered=False ,beta_1=0.6363636363636365 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.43434343434343436 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.04040404040404041].
2023-08-22 04:18:11,668 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:18:11,668 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:18:19,893 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:18:19,893 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:18:27,659 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4545454545454546 ,rho=0.18181818181818182 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.13131313131313133 ,learning_rate_power=-0.7272727272727273 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7575757575757577 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:18:27,660 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4545454545454546 ,rho=0.18181818181818182 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.13131313131313133 ,learning_rate_power=-0.7272727272727273 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7575757575757577 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:18:31,620 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4040404040404041, momentum=0.12121212121212122 ,nesterov=False ,amsgrad=False ,weight_decay=0.005556000000000001 ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.8383838383838383 ,initial_accumulator_value=0.06060606060606061 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:18:31,620 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4040404040404041, momentum=0.12121212121212122 ,nesterov=False ,amsgrad=False ,weight_decay=0.005556000000000001 ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.8383838383838383 ,initial_accumulator_value=0.06060606060606061 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:19:10,070 INFO: Applying selection operators for generation 70.
2023-08-22 04:19:10,071 INFO: Applying genetic operators for generation 70.
2023-08-22 04:19:10,073 INFO: Evaluating fitness for for generation 70.
2023-08-22 04:19:10,073 INFO: Will evaluate fitness for 32 individuals.
2023-08-22 04:19:10,629 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:19:10,629 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:19:10,648 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.004849000000000001 ,use_ema=True ,ema_momentum=0.7070707070707072 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.16161616161616163].
2023-08-22 04:19:10,648 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.004849000000000001 ,use_ema=True ,ema_momentum=0.7070707070707072 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.16161616161616163].
2023-08-22 04:19:10,698 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:19:10,698 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:19:10,712 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:19:10,713 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:19:30,687 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.33333333333333337, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.04040404040404041 ,rho=0.6262626262626263 ,epsilon=0.0006969697272727273 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.696969696969697 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.7474747474747475].
2023-08-22 04:19:30,688 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.33333333333333337, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.04040404040404041 ,rho=0.6262626262626263 ,epsilon=0.0006969697272727273 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.696969696969697 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.7474747474747475].
2023-08-22 04:19:31,193 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:19:31,194 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:19:31,198 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:19:31,198 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:19:31,657 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:19:31,657 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:19:50,652 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:19:50,652 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:19:51,043 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:19:51,043 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:19:51,368 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:19:51,368 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:19:51,954 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:19:51,954 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:20:10,558 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:20:10,558 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:20:10,850 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.686868686868687, momentum=0.787878787878788 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.16161616161616163].
2023-08-22 04:20:10,850 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.686868686868687, momentum=0.787878787878788 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.16161616161616163].
2023-08-22 04:20:11,463 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:20:11,464 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:20:12,138 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:20:12,139 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:20:30,551 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:20:30,552 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:20:32,369 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0036370000000000005 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.7171717171717172 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.16161616161616163].
2023-08-22 04:20:32,369 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0036370000000000005 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.7171717171717172 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.16161616161616163].
2023-08-22 04:20:33,046 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.004647000000000001 ,use_ema=False ,ema_momentum=0.6363636363636365 ,rho=0.5252525252525253 ,epsilon=0.00015151523636363636 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4040404040404041 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:20:33,046 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.004647000000000001 ,use_ema=False ,ema_momentum=0.6363636363636365 ,rho=0.5252525252525253 ,epsilon=0.00015151523636363636 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4040404040404041 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:20:36,550 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:20:36,550 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:20:51,318 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:20:51,318 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:20:54,097 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:20:54,097 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:20:57,379 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:20:57,379 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:21:00,497 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:21:00,497 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:21:11,603 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:21:11,603 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:21:14,472 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.18181818181818182, momentum=0.14141414141414144 ,nesterov=True ,amsgrad=False ,weight_decay=0.0031320000000000007 ,use_ema=True ,ema_momentum=0.27272727272727276 ,rho=0.5454545454545455 ,epsilon=0.0006262626636363636 ,centered=False ,beta_1=0.25252525252525254 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.8282828282828283 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.16161616161616163].
2023-08-22 04:21:14,473 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.18181818181818182, momentum=0.14141414141414144 ,nesterov=True ,amsgrad=False ,weight_decay=0.0031320000000000007 ,use_ema=True ,ema_momentum=0.27272727272727276 ,rho=0.5454545454545455 ,epsilon=0.0006262626636363636 ,centered=False ,beta_1=0.25252525252525254 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.8282828282828283 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.16161616161616163].
2023-08-22 04:21:17,373 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.17171717171717174 ,rho=0.26262626262626265 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.30303030303030304 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.30303030303030304 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.8282828282828284].
2023-08-22 04:21:17,373 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.17171717171717174 ,rho=0.26262626262626265 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.30303030303030304 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.30303030303030304 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.8282828282828284].
2023-08-22 04:21:20,744 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:21:20,744 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:21:31,576 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:21:31,576 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:21:41,102 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:21:41,103 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:21:41,291 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00026262633636363634 ,centered=False ,beta_1=0.6262626262626263 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.19191919191919193 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8282828282828284 ,beta=0.16161616161616163].
2023-08-22 04:21:41,291 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00026262633636363634 ,centered=False ,beta_1=0.6262626262626263 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.19191919191919193 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8282828282828284 ,beta=0.16161616161616163].
2023-08-22 04:21:43,057 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9393939393939394, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.003738000000000001 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0004242424818181818 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8686868686868687 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.16161616161616163].
2023-08-22 04:21:43,057 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9393939393939394, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.003738000000000001 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0004242424818181818 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8686868686868687 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.16161616161616163].
2023-08-22 04:22:06,968 INFO: Applying selection operators for generation 71.
2023-08-22 04:22:06,968 INFO: Applying genetic operators for generation 71.
2023-08-22 04:22:06,971 INFO: Evaluating fitness for for generation 71.
2023-08-22 04:22:06,971 INFO: Will evaluate fitness for 28 individuals.
2023-08-22 04:22:07,522 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:22:07,523 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:22:07,525 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.07070707070707072 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.10101010101010102 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.7777777777777778 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.14141414141414144].
2023-08-22 04:22:07,525 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.07070707070707072 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.10101010101010102 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.7777777777777778 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.14141414141414144].
2023-08-22 04:22:07,567 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:22:07,568 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:22:07,582 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6565656565656566, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.08080808080808081 ,rho=0.6262626262626263 ,epsilon=0.0009393939454545454 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.1717171717171716 ,initial_accumulator_value=0.9494949494949496 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.16161616161616163].
2023-08-22 04:22:07,582 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6565656565656566, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.08080808080808081 ,rho=0.6262626262626263 ,epsilon=0.0009393939454545454 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.1717171717171716 ,initial_accumulator_value=0.9494949494949496 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.16161616161616163].
2023-08-22 04:22:28,191 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.38383838383838387, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.595959595959596 ,rho=0.7171717171717172 ,epsilon=0.0007575757818181818 ,centered=False ,beta_1=0.7373737373737375 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.26262626262626254 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.6161616161616162].
2023-08-22 04:22:28,191 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.38383838383838387, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.595959595959596 ,rho=0.7171717171717172 ,epsilon=0.0007575757818181818 ,centered=False ,beta_1=0.7373737373737375 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.26262626262626254 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.6161616161616162].
2023-08-22 04:22:28,323 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:22:28,323 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:22:33,722 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:22:33,723 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:22:35,289 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.005354000000000001 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7575757575757577 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.31313131313131315].
2023-08-22 04:22:35,289 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.005354000000000001 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7575757575757577 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.31313131313131315].
2023-08-22 04:22:48,907 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.7474747474747475, momentum=0.9595959595959597 ,nesterov=False ,amsgrad=False ,weight_decay=0.00010200000000000001 ,use_ema=False ,ema_momentum=0.4444444444444445 ,rho=0.6262626262626263 ,epsilon=0.0006363636727272727 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.30303030303030304 ,learning_rate_power=-0.06060606060606055 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.787878787878788 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:22:48,907 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.7474747474747475, momentum=0.9595959595959597 ,nesterov=False ,amsgrad=False ,weight_decay=0.00010200000000000001 ,use_ema=False ,ema_momentum=0.4444444444444445 ,rho=0.6262626262626263 ,epsilon=0.0006363636727272727 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.30303030303030304 ,learning_rate_power=-0.06060606060606055 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.787878787878788 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:22:54,192 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:22:54,192 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:22:55,109 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:22:55,110 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:22:56,675 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:22:56,675 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:23:14,202 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:23:14,202 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:23:15,294 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:23:15,294 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:23:15,381 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:23:15,381 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:23:16,875 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.5757575757575758 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00046464651818181813 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.5757575757575758 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.31313131313131315].
2023-08-22 04:23:16,875 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.5757575757575758 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00046464651818181813 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.5757575757575758 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.31313131313131315].
2023-08-22 04:23:34,219 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:23:34,219 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:23:35,284 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:23:35,284 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:23:35,635 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.6767676767676768, momentum=0.787878787878788 ,nesterov=True ,amsgrad=False ,weight_decay=0.0026270000000000004 ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.19191919191919193 ,beta_2=0.43434343434343436 ,learning_rate_power=0.0 ,initial_accumulator_value=0.22222222222222224 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.17171717171717174].
2023-08-22 04:23:35,635 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.6767676767676768, momentum=0.787878787878788 ,nesterov=True ,amsgrad=False ,weight_decay=0.0026270000000000004 ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.19191919191919193 ,beta_2=0.43434343434343436 ,learning_rate_power=0.0 ,initial_accumulator_value=0.22222222222222224 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.17171717171717174].
2023-08-22 04:23:43,667 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:23:43,667 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:23:54,065 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:23:54,065 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:23:55,473 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9292929292929294, momentum=0.7272727272727273 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4040404040404041 ,rho=0.6262626262626263 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.09090909090909091 ,beta_2=0.8282828282828284 ,learning_rate_power=-0.4949494949494949 ,initial_accumulator_value=0.25252525252525254 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:23:55,474 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9292929292929294, momentum=0.7272727272727273 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4040404040404041 ,rho=0.6262626262626263 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.09090909090909091 ,beta_2=0.8282828282828284 ,learning_rate_power=-0.4949494949494949 ,initial_accumulator_value=0.25252525252525254 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:24:03,174 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:24:03,175 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:24:03,904 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0006464646818181818 ,centered=False ,beta_1=0.4040404040404041 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7272727272727273 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.9292929292929294].
2023-08-22 04:24:03,904 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0006464646818181818 ,centered=False ,beta_1=0.4040404040404041 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7272727272727273 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.9292929292929294].
2023-08-22 04:24:14,719 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8484848484848485, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.696969696969697 ,rho=0.5454545454545455 ,epsilon=0.0003333334 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.5656565656565657 ,learning_rate_power=-0.26262626262626254 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.13131313131313133 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.16161616161616163].
2023-08-22 04:24:14,719 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8484848484848485, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.696969696969697 ,rho=0.5454545454545455 ,epsilon=0.0003333334 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.5656565656565657 ,learning_rate_power=-0.26262626262626254 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.13131313131313133 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.16161616161616163].
2023-08-22 04:24:23,674 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:24:23,674 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:24:41,218 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:24:41,218 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:24:43,748 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5353535353535354, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.6262626262626263 ,epsilon=0.00015151523636363636 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.9292929292929294 ,learning_rate_power=-0.8585858585858586 ,initial_accumulator_value=0.4545454545454546 ,l1_regularization_strength=0.13131313131313133 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.16161616161616163].
2023-08-22 04:24:43,748 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5353535353535354, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.6262626262626263 ,epsilon=0.00015151523636363636 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.9292929292929294 ,learning_rate_power=-0.8585858585858586 ,initial_accumulator_value=0.4545454545454546 ,l1_regularization_strength=0.13131313131313133 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.16161616161616163].
2023-08-22 04:25:02,798 INFO: Applying selection operators for generation 72.
2023-08-22 04:25:02,799 INFO: Applying genetic operators for generation 72.
2023-08-22 04:25:02,801 INFO: Evaluating fitness for for generation 72.
2023-08-22 04:25:02,801 INFO: Will evaluate fitness for 36 individuals.
2023-08-22 04:25:03,349 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.5656565656565657, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0011120000000000001 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.04040404040404041 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.20202020202020204 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.13131313131313133 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.595959595959596].
2023-08-22 04:25:03,350 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.5656565656565657, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0011120000000000001 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.04040404040404041 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.20202020202020204 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.13131313131313133 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.595959595959596].
2023-08-22 04:25:03,385 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.5656565656565657, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7474747474747475 ,rho=0.6262626262626263 ,epsilon=2.020211818181818e-05 ,centered=False ,beta_1=0.9494949494949496 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.16161616161616163].
2023-08-22 04:25:03,385 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.5656565656565657, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7474747474747475 ,rho=0.6262626262626263 ,epsilon=2.020211818181818e-05 ,centered=False ,beta_1=0.9494949494949496 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.16161616161616163].
2023-08-22 04:25:03,406 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:25:03,407 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:25:03,425 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:25:03,425 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:25:23,316 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:25:23,316 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:25:23,565 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.19191919191919193 ,rho=0.12121212121212122 ,epsilon=0.00024242431818181817 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.5252525252525252 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.43434343434343436].
2023-08-22 04:25:23,565 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.19191919191919193 ,rho=0.12121212121212122 ,epsilon=0.00024242431818181817 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.5252525252525252 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.43434343434343436].
2023-08-22 04:25:31,434 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:25:31,434 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:25:44,213 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:25:44,213 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:25:47,600 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:25:47,601 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:25:50,653 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:25:50,653 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:25:52,285 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:25:52,285 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:26:04,551 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:26:04,551 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:26:07,994 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.7474747474747475, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.11111111111111112 ,rho=0.4444444444444445 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.31313131313131315 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.15151515151515152 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.16161616161616163].
2023-08-22 04:26:07,994 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.7474747474747475, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.11111111111111112 ,rho=0.4444444444444445 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.31313131313131315 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.15151515151515152 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.16161616161616163].
2023-08-22 04:26:10,918 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:26:10,918 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:26:12,402 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:26:12,403 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:26:24,782 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:26:24,782 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:26:32,397 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:26:32,398 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:26:32,970 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:26:32,970 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:26:36,093 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.4141414141414142, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.09090909090909091 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5151515151515152 ,beta=0.6767676767676768].
2023-08-22 04:26:36,094 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.4141414141414142, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.09090909090909091 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5151515151515152 ,beta=0.6767676767676768].
2023-08-22 04:26:44,906 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:26:44,907 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:26:52,204 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:26:52,205 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:26:53,413 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:26:53,414 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:26:56,653 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:26:56,653 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:27:05,004 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:27:05,004 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:27:12,822 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:27:12,823 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:27:13,725 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:27:13,726 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:27:17,095 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:27:17,096 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:27:25,909 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:27:25,909 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:27:32,913 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:27:32,914 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:27:34,060 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:27:34,060 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:27:37,487 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.5656565656565657, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.18181818181818182 ,rho=0.07070707070707072 ,epsilon=7.070716363636363e-05 ,centered=True ,beta_1=0.797979797979798 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.2929292929292928 ,initial_accumulator_value=0.98989898989899 ,l1_regularization_strength=0.16161616161616163 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.16161616161616163].
2023-08-22 04:27:37,487 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.5656565656565657, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.18181818181818182 ,rho=0.07070707070707072 ,epsilon=7.070716363636363e-05 ,centered=True ,beta_1=0.797979797979798 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.2929292929292928 ,initial_accumulator_value=0.98989898989899 ,l1_regularization_strength=0.16161616161616163 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.16161616161616163].
2023-08-22 04:27:46,108 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0005555556 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.23232323232323235].
2023-08-22 04:27:46,109 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0005555556 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.23232323232323235].
2023-08-22 04:27:52,702 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:27:52,702 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:27:55,040 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.15151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.005556000000000001 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.29292929292929293 ,beta_2=0.5656565656565657 ,learning_rate_power=-0.696969696969697 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.7575757575757577].
2023-08-22 04:27:55,040 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.15151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.005556000000000001 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.29292929292929293 ,beta_2=0.5656565656565657 ,learning_rate_power=-0.696969696969697 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.7575757575757577].
2023-08-22 04:28:06,068 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:28:06,068 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:28:26,363 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:28:26,363 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:28:45,600 INFO: Applying selection operators for generation 73.
2023-08-22 04:28:45,600 INFO: Applying genetic operators for generation 73.
2023-08-22 04:28:45,603 INFO: Evaluating fitness for for generation 73.
2023-08-22 04:28:45,603 INFO: Will evaluate fitness for 34 individuals.
2023-08-22 04:28:46,171 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.29292929292929293, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.595959595959596 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.8484848484848485 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.7171717171717172].
2023-08-22 04:28:46,171 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.29292929292929293, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.595959595959596 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.8484848484848485 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.7171717171717172].
2023-08-22 04:28:46,182 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:28:46,182 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:28:46,201 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:28:46,201 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:28:46,224 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:28:46,224 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:29:04,400 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:29:04,400 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:29:05,981 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:29:05,981 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:29:06,366 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.797979797979798 ,beta_2=0.0 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.30303030303030304].
2023-08-22 04:29:06,366 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.797979797979798 ,beta_2=0.0 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.30303030303030304].
2023-08-22 04:29:06,392 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.23232323232323235 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.19191919191919193 ,rho=0.595959595959596 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.5050505050505051].
2023-08-22 04:29:06,392 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.23232323232323235 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.19191919191919193 ,rho=0.595959595959596 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.5050505050505051].
2023-08-22 04:29:24,924 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:29:24,924 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:29:26,615 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:29:26,616 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:29:27,049 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.787878787878788, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0014150000000000002 ,use_ema=True ,ema_momentum=0.7070707070707072 ,rho=0.6262626262626263 ,epsilon=0.0005858586272727272 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.5050505050505051 ,learning_rate_power=-0.010101010101010055 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.494949494949495].
2023-08-22 04:29:27,049 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.787878787878788, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0014150000000000002 ,use_ema=True ,ema_momentum=0.7070707070707072 ,rho=0.6262626262626263 ,epsilon=0.0005858586272727272 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.5050505050505051 ,learning_rate_power=-0.010101010101010055 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.494949494949495].
2023-08-22 04:29:33,603 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:29:33,603 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:29:44,819 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:29:44,820 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:29:46,763 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:29:46,763 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:29:53,799 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:29:53,800 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:29:56,062 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:29:56,062 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:30:04,713 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.4545454545454546 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7777777777777778 ,rho=0.6262626262626263 ,epsilon=0.0006969697272727273 ,centered=False ,beta_1=0.42424242424242425 ,beta_2=0.36363636363636365 ,learning_rate_power=-0.3232323232323232 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.16161616161616163].
2023-08-22 04:30:04,713 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.4545454545454546 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7777777777777778 ,rho=0.6262626262626263 ,epsilon=0.0006969697272727273 ,centered=False ,beta_1=0.42424242424242425 ,beta_2=0.36363636363636365 ,learning_rate_power=-0.3232323232323232 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.16161616161616163].
2023-08-22 04:30:06,885 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:30:06,885 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:30:14,902 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.007576000000000001 ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.18181818181818182 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.3535353535353536 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.6464646464646465].
2023-08-22 04:30:14,903 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.007576000000000001 ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.18181818181818182 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.3535353535353536 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.6464646464646465].
2023-08-22 04:30:16,321 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:30:16,321 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:30:26,939 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:30:26,939 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:30:32,116 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:30:32,116 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:30:36,723 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.494949494949495, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0032330000000000006 ,use_ema=True ,ema_momentum=0.5252525252525253 ,rho=0.6262626262626263 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.8383838383838385 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.02020202020202011 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9696969696969697 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.04040404040404041].
2023-08-22 04:30:36,723 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.494949494949495, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0032330000000000006 ,use_ema=True ,ema_momentum=0.5252525252525253 ,rho=0.6262626262626263 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.8383838383838385 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.02020202020202011 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9696969696969697 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.04040404040404041].
2023-08-22 04:30:41,843 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:30:41,843 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:30:47,740 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:30:47,741 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:30:52,841 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:30:52,957 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:31:02,214 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:31:02,214 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:31:04,541 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.08080808080808081 ,rho=0.6262626262626263 ,epsilon=9.09091818181818e-05 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.16161616161616163].
2023-08-22 04:31:04,542 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.08080808080808081 ,rho=0.6262626262626263 ,epsilon=9.09091818181818e-05 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.16161616161616163].
2023-08-22 04:31:07,881 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:31:07,881 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:31:13,079 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.24242424242424243, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.3535353535353536 ,epsilon=0.0002121212909090909 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.07070707070707072].
2023-08-22 04:31:13,080 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.24242424242424243, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.3535353535353536 ,epsilon=0.0002121212909090909 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.07070707070707072].
2023-08-22 04:31:22,486 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:31:22,486 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:31:27,920 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4040404040404041, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0047480000000000005 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.5858585858585859 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.14141414141414144 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.6565656565656566 ,l1_regularization_strength=0.13131313131313133 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.16161616161616163].
2023-08-22 04:31:27,920 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4040404040404041, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0047480000000000005 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.5858585858585859 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.14141414141414144 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.6565656565656566 ,l1_regularization_strength=0.13131313131313133 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.16161616161616163].
2023-08-22 04:31:40,044 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0.6161616161616162 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.4444444444444445 ,rho=0.8989898989898991 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:31:40,045 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0.6161616161616162 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.4444444444444445 ,rho=0.8989898989898991 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:31:43,716 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9494949494949496, momentum=0.3535353535353536 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.4545454545454546 ,epsilon=0.00025252532727272723 ,centered=False ,beta_1=0.9696969696969697 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.9696969696969697 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:31:43,717 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9494949494949496, momentum=0.3535353535353536 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.4545454545454546 ,epsilon=0.00025252532727272723 ,centered=False ,beta_1=0.9696969696969697 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.9696969696969697 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:32:09,219 INFO: Applying selection operators for generation 74.
2023-08-22 04:32:09,220 INFO: Applying genetic operators for generation 74.
2023-08-22 04:32:09,223 INFO: Evaluating fitness for for generation 74.
2023-08-22 04:32:09,224 INFO: Will evaluate fitness for 30 individuals.
2023-08-22 04:32:09,785 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.7575757575757577 ,epsilon=0.0007676767909090908 ,centered=False ,beta_1=0.8484848484848485 ,beta_2=0.9393939393939394 ,learning_rate_power=-0.9696969696969697 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.27272727272727276 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.32323232323232326].
2023-08-22 04:32:09,786 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.7575757575757577 ,epsilon=0.0007676767909090908 ,centered=False ,beta_1=0.8484848484848485 ,beta_2=0.9393939393939394 ,learning_rate_power=-0.9696969696969697 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.27272727272727276 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.32323232323232326].
2023-08-22 04:32:09,793 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.25252525252525254, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.005455000000000001 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.7272727272727273 ,epsilon=6.060615454545454e-05 ,centered=False ,beta_1=0.7272727272727273 ,beta_2=0.686868686868687 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.16161616161616163].
2023-08-22 04:32:09,793 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.25252525252525254, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.005455000000000001 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.7272727272727273 ,epsilon=6.060615454545454e-05 ,centered=False ,beta_1=0.7272727272727273 ,beta_2=0.686868686868687 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.16161616161616163].
2023-08-22 04:32:09,817 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:32:09,817 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:32:09,821 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:32:09,821 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:32:29,997 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0004050000000000001 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.38383838383838387 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.4141414141414142 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.4444444444444445].
2023-08-22 04:32:29,997 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0004050000000000001 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.38383838383838387 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.4141414141414142 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.4444444444444445].
2023-08-22 04:32:30,282 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:32:30,283 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:32:35,677 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:32:35,677 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:32:37,152 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:32:37,152 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:32:50,606 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:32:50,606 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:32:55,897 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:32:55,898 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:32:57,647 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:32:57,648 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:32:58,055 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0.6060606060606061 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=1.0 ,epsilon=0.0009191919272727272 ,centered=False ,beta_1=0.8989898989898991 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.696969696969697 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.16161616161616163].
2023-08-22 04:32:58,055 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0.6060606060606061 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=1.0 ,epsilon=0.0009191919272727272 ,centered=False ,beta_1=0.8989898989898991 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.696969696969697 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.16161616161616163].
2023-08-22 04:33:10,859 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:33:10,860 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:33:15,785 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:33:15,785 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:33:18,658 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:33:18,658 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:33:24,774 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.32323232323232326, momentum=0.26262626262626265 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.42424242424242425 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.7777777777777778 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:33:24,775 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.32323232323232326, momentum=0.26262626262626265 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.42424242424242425 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.7777777777777778 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:33:32,134 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.38383838383838387, momentum=0.4646464646464647 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.4545454545454546 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.7070707070707072 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.36363636363636365 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.4040404040404041].
2023-08-22 04:33:32,135 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.38383838383838387, momentum=0.4646464646464647 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.4545454545454546 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.7070707070707072 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.36363636363636365 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.4040404040404041].
2023-08-22 04:33:35,645 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:33:35,645 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:33:39,296 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9292929292929294, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.8585858585858587 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.4141414141414142 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.16161616161616163].
2023-08-22 04:33:39,296 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9292929292929294, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.8585858585858587 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.4141414141414142 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.16161616161616163].
2023-08-22 04:33:44,886 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:33:44,886 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:33:51,893 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.696969696969697 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.29292929292929293 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.6464646464646465].
2023-08-22 04:33:51,894 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.696969696969697 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.29292929292929293 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.6464646464646465].
2023-08-22 04:33:55,496 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.9494949494949496, momentum=0.030303030303030304 ,nesterov=False ,amsgrad=False ,weight_decay=0.005354000000000001 ,use_ema=False ,ema_momentum=0.4646464646464647 ,rho=0.8181818181818182 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.31313131313131315 ,learning_rate_power=-0.33333333333333326 ,initial_accumulator_value=0.21212121212121213 ,l1_regularization_strength=0.7575757575757577 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6767676767676768].
2023-08-22 04:33:55,496 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.9494949494949496, momentum=0.030303030303030304 ,nesterov=False ,amsgrad=False ,weight_decay=0.005354000000000001 ,use_ema=False ,ema_momentum=0.4646464646464647 ,rho=0.8181818181818182 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.31313131313131315 ,learning_rate_power=-0.33333333333333326 ,initial_accumulator_value=0.21212121212121213 ,l1_regularization_strength=0.7575757575757577 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6767676767676768].
2023-08-22 04:33:59,733 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.393939393939394, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.01 ,use_ema=True ,ema_momentum=0.7676767676767677 ,rho=0.4040404040404041 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.11111111111111112 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.8989898989898991 ,l1_regularization_strength=0.16161616161616163 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.09090909090909091].
2023-08-22 04:33:59,734 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.393939393939394, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.01 ,use_ema=True ,ema_momentum=0.7676767676767677 ,rho=0.4040404040404041 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.11111111111111112 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.8989898989898991 ,l1_regularization_strength=0.16161616161616163 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.09090909090909091].
2023-08-22 04:34:05,000 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:34:05,000 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:34:10,539 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.020202020202020204 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6060606060606061 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.22222222222222224 ,l1_regularization_strength=0.8585858585858587 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.5454545454545455].
2023-08-22 04:34:10,539 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.020202020202020204 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6060606060606061 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.22222222222222224 ,l1_regularization_strength=0.8585858585858587 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.5454545454545455].
2023-08-22 04:34:22,328 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0.010101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.15151515151515152 ,epsilon=0.00010101019090909089 ,centered=False ,beta_1=0.8787878787878789 ,beta_2=0.3434343434343435 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.08080808080808081 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.010101010101010102].
2023-08-22 04:34:22,328 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0.010101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.15151515151515152 ,epsilon=0.00010101019090909089 ,centered=False ,beta_1=0.8787878787878789 ,beta_2=0.3434343434343435 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.08080808080808081 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.010101010101010102].
2023-08-22 04:34:25,844 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:34:25,844 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:34:37,341 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:34:37,342 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:34:45,932 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.6363636363636365, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.006162000000000001 ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0006666667 ,centered=False ,beta_1=0.19191919191919193 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.2727272727272727 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.6060606060606061].
2023-08-22 04:34:45,932 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.6363636363636365, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.006162000000000001 ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0006666667 ,centered=False ,beta_1=0.19191919191919193 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.2727272727272727 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.6060606060606061].
2023-08-22 04:34:48,365 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:34:48,365 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:35:10,880 INFO: Applying selection operators for generation 75.
2023-08-22 04:35:10,881 INFO: Applying genetic operators for generation 75.
2023-08-22 04:35:10,883 INFO: Evaluating fitness for for generation 75.
2023-08-22 04:35:10,883 INFO: Will evaluate fitness for 29 individuals.
2023-08-22 04:35:11,436 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.48484848484848486, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.11111111111111112 ,rho=0.19191919191919193 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.38383838383838387 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.8282828282828284 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.9797979797979799].
2023-08-22 04:35:11,437 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.48484848484848486, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.11111111111111112 ,rho=0.19191919191919193 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.38383838383838387 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.8282828282828284 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.9797979797979799].
2023-08-22 04:35:11,438 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0005757576181818182 ,centered=False ,beta_1=0.42424242424242425 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.36363636363636354 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.7171717171717172].
2023-08-22 04:35:11,438 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0005757576181818182 ,centered=False ,beta_1=0.42424242424242425 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.36363636363636354 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.7171717171717172].
2023-08-22 04:35:11,475 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:35:11,475 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:35:11,477 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.36363636363636365 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.31313131313131315 ,beta=0.16161616161616163].
2023-08-22 04:35:11,478 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.36363636363636365 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.31313131313131315 ,beta=0.16161616161616163].
2023-08-22 04:35:30,967 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:35:30,967 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:35:32,808 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.000506 ,use_ema=True ,ema_momentum=0.787878787878788 ,rho=0.6262626262626263 ,epsilon=0.0007979798181818182 ,centered=False ,beta_1=0.6666666666666667 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.3232323232323232 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.22222222222222224].
2023-08-22 04:35:32,808 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.000506 ,use_ema=True ,ema_momentum=0.787878787878788 ,rho=0.6262626262626263 ,epsilon=0.0007979798181818182 ,centered=False ,beta_1=0.6666666666666667 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.3232323232323232 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.22222222222222224].
2023-08-22 04:35:38,141 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:35:38,142 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:35:38,368 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:35:38,368 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:35:52,172 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:35:52,172 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:35:58,363 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:35:58,363 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:35:58,957 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.010101010101010102 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.05050505050505051 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.16161616161616163].
2023-08-22 04:35:58,957 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.010101010101010102 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.05050505050505051 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.16161616161616163].
2023-08-22 04:36:01,391 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:36:01,391 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:36:12,612 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:36:12,613 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:36:16,657 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:36:16,657 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:36:19,170 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:36:19,170 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:36:21,752 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.008687 ,use_ema=True ,ema_momentum=0.43434343434343436 ,rho=0.8989898989898991 ,epsilon=0.0004949495454545454 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.08080808080808081 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.16161616161616163].
2023-08-22 04:36:21,753 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.008687 ,use_ema=True ,ema_momentum=0.43434343434343436 ,rho=0.8989898989898991 ,epsilon=0.0004949495454545454 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.08080808080808081 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.16161616161616163].
2023-08-22 04:36:32,868 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:36:32,868 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:36:36,571 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:36:36,572 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:36:39,271 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.595959595959596 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7070707070707072 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.9797979797979799 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.16161616161616163].
2023-08-22 04:36:39,271 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.595959595959596 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7070707070707072 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.9797979797979799 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.16161616161616163].
2023-08-22 04:36:50,475 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:36:50,476 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:36:53,194 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:36:53,194 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:36:56,483 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:36:56,484 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:36:59,373 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:36:59,374 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:37:11,855 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:37:11,855 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:37:13,486 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.16161616161616163 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.8383838383838383 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.16161616161616163].
2023-08-22 04:37:13,487 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.16161616161616163 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.8383838383838383 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.16161616161616163].
2023-08-22 04:37:16,404 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00018181826363636362 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.31313131313131304 ,initial_accumulator_value=0.686868686868687 ,l1_regularization_strength=0.7676767676767677 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.27272727272727276].
2023-08-22 04:37:16,404 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00018181826363636362 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.31313131313131304 ,initial_accumulator_value=0.686868686868687 ,l1_regularization_strength=0.7676767676767677 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.27272727272727276].
2023-08-22 04:37:19,422 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:37:19,423 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:37:32,554 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:37:32,554 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:37:37,163 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:37:37,163 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:37:56,429 INFO: Applying selection operators for generation 76.
2023-08-22 04:37:56,429 INFO: Applying genetic operators for generation 76.
2023-08-22 04:37:56,432 INFO: Evaluating fitness for for generation 76.
2023-08-22 04:37:56,432 INFO: Will evaluate fitness for 21 individuals.
2023-08-22 04:37:56,969 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:37:56,969 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:37:57,013 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:37:57,014 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:37:57,016 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:37:57,016 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:37:57,027 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.6262626262626263 ,epsilon=0.0007575757818181818 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.5454545454545455 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.14141414141414144].
2023-08-22 04:37:57,027 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.6262626262626263 ,epsilon=0.0007575757818181818 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.5454545454545455 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.14141414141414144].
2023-08-22 04:38:14,862 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.05050505050505051 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.18181818181818182 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.5555555555555556 ,learning_rate_power=-0.3434343434343434 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6666666666666667 ,beta=0.5757575757575758].
2023-08-22 04:38:14,862 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.05050505050505051 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.18181818181818182 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.5555555555555556 ,learning_rate_power=-0.3434343434343434 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6666666666666667 ,beta=0.5757575757575758].
2023-08-22 04:38:16,715 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:38:16,715 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:38:17,406 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:38:17,406 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:38:17,620 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:38:17,620 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:38:35,134 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7373737373737375, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5252525252525253 ,rho=0.6262626262626263 ,epsilon=0.0002222223 ,centered=False ,beta_1=0.5252525252525253 ,beta_2=0.7575757575757577 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.16161616161616163].
2023-08-22 04:38:35,134 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7373737373737375, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5252525252525253 ,rho=0.6262626262626263 ,epsilon=0.0002222223 ,centered=False ,beta_1=0.5252525252525253 ,beta_2=0.7575757575757577 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.16161616161616163].
2023-08-22 04:38:36,569 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:38:36,569 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:38:37,464 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:38:37,464 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:38:37,472 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:38:37,472 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:38:56,456 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:38:56,456 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:38:57,343 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:38:57,343 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:38:57,562 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:38:57,562 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:39:02,503 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7373737373737375 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0005656566090909091 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.20202020202020204].
2023-08-22 04:39:02,503 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7373737373737375 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0005656566090909091 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.20202020202020204].
2023-08-22 04:39:17,082 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:39:17,083 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:39:17,185 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.23232323232323235 ,rho=0.6262626262626263 ,epsilon=0.00032323239090909086 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.8989898989898991 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8282828282828284 ,beta=0.16161616161616163].
2023-08-22 04:39:17,185 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.23232323232323235 ,rho=0.6262626262626263 ,epsilon=0.00032323239090909086 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.8989898989898991 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8282828282828284 ,beta=0.16161616161616163].
2023-08-22 04:39:18,881 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.3535353535353536, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.4444444444444445 ,epsilon=0.0001919192727272727 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.25252525252525254 ,l1_regularization_strength=0.43434343434343436 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.11111111111111112 ,beta=0.16161616161616163].
2023-08-22 04:39:18,881 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.3535353535353536, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.4444444444444445 ,epsilon=0.0001919192727272727 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.25252525252525254 ,l1_regularization_strength=0.43434343434343436 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.11111111111111112 ,beta=0.16161616161616163].
2023-08-22 04:39:35,343 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.07070707070707072, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.22222222222222224 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.4747474747474748 ,beta_2=0.696969696969697 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.595959595959596 ,l1_regularization_strength=0.5050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.787878787878788].
2023-08-22 04:39:35,343 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.07070707070707072, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.22222222222222224 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.4747474747474748 ,beta_2=0.696969696969697 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.595959595959596 ,l1_regularization_strength=0.5050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.787878787878788].
2023-08-22 04:39:37,088 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:39:37,088 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:39:56,231 INFO: Applying selection operators for generation 77.
2023-08-22 04:39:56,231 INFO: Applying genetic operators for generation 77.
2023-08-22 04:39:56,235 INFO: Evaluating fitness for for generation 77.
2023-08-22 04:39:56,235 INFO: Will evaluate fitness for 34 individuals.
2023-08-22 04:39:56,811 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7171717171717172 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.38383838383838387 ,rho=0.7777777777777778 ,epsilon=0.0005656566090909091 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.31313131313131315 ,beta=0.16161616161616163].
2023-08-22 04:39:56,812 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7171717171717172 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.38383838383838387 ,rho=0.7777777777777778 ,epsilon=0.0005656566090909091 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.31313131313131315 ,beta=0.16161616161616163].
2023-08-22 04:39:56,814 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:39:56,815 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:39:56,826 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:39:56,826 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:39:56,848 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.7575757575757577 ,rho=0.797979797979798 ,epsilon=7.070716363636363e-05 ,centered=False ,beta_1=0.5656565656565657 ,beta_2=0.14141414141414144 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.10101010101010102 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.9090909090909092].
2023-08-22 04:39:56,848 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.7575757575757577 ,rho=0.797979797979798 ,epsilon=7.070716363636363e-05 ,centered=False ,beta_1=0.5656565656565657 ,beta_2=0.14141414141414144 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.10101010101010102 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.9090909090909092].
2023-08-22 04:40:16,546 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.32323232323232326 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7474747474747475 ,rho=0.6262626262626263 ,epsilon=0.0005656566090909091 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.23232323232323226 ,initial_accumulator_value=0.11111111111111112 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.10101010101010102 ,beta=0.5454545454545455].
2023-08-22 04:40:16,546 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.32323232323232326 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7474747474747475 ,rho=0.6262626262626263 ,epsilon=0.0005656566090909091 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.23232323232323226 ,initial_accumulator_value=0.11111111111111112 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.10101010101010102 ,beta=0.5454545454545455].
2023-08-22 04:40:17,084 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:40:17,084 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:40:24,059 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:40:24,059 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:40:37,462 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.4747474747474748 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.9393939393939394].
2023-08-22 04:40:37,462 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.4747474747474748 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.9393939393939394].
2023-08-22 04:40:39,368 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:40:39,368 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:40:44,459 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:40:44,459 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:40:44,922 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:40:44,922 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:40:59,040 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3434343434343435 ,rho=0.3434343434343435 ,epsilon=0.0008383838545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.6262626262626263 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:40:59,041 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3434343434343435 ,rho=0.3434343434343435 ,epsilon=0.0008383838545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.6262626262626263 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:40:59,739 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4646464646464647, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6666666666666667 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.16161616161616163].
2023-08-22 04:40:59,739 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4646464646464647, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6666666666666667 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.16161616161616163].
2023-08-22 04:41:04,327 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:41:04,327 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:41:04,836 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.20202020202020204, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.16161616161616163 ,rho=0.6262626262626263 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.010101010101010055 ,initial_accumulator_value=0.06060606060606061 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:41:04,836 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.20202020202020204, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.16161616161616163 ,rho=0.6262626262626263 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.010101010101010055 ,initial_accumulator_value=0.06060606060606061 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:41:25,033 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:41:25,034 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:41:25,846 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.8383838383838385, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.5050505050505051 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.43434343434343436 ,beta_2=0.15151515151515152 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.696969696969697 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.23232323232323235].
2023-08-22 04:41:25,846 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.8383838383838385, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.5050505050505051 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.43434343434343436 ,beta_2=0.15151515151515152 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.696969696969697 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.23232323232323235].
2023-08-22 04:41:27,363 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:41:27,364 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:41:31,209 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.003940000000000001 ,use_ema=False ,ema_momentum=0.27272727272727276 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.010101010101010102 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.9595959595959597 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.09090909090909091].
2023-08-22 04:41:31,209 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.003940000000000001 ,use_ema=False ,ema_momentum=0.27272727272727276 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.010101010101010102 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.9595959595959597 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.09090909090909091].
2023-08-22 04:41:45,122 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:41:45,123 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:41:48,543 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:41:48,543 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:41:50,293 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9191919191919192 ,rho=0.6262626262626263 ,epsilon=0.0009696969727272727 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5252525252525253 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.4646464646464647].
2023-08-22 04:41:50,293 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9191919191919192 ,rho=0.6262626262626263 ,epsilon=0.0009696969727272727 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5252525252525253 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.4646464646464647].
2023-08-22 04:42:05,163 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:42:05,163 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:42:08,842 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:42:08,842 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:42:10,613 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:42:10,614 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:42:17,373 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.08080808080808081 ,nesterov=False ,amsgrad=False ,weight_decay=0.0023240000000000005 ,use_ema=True ,ema_momentum=0.2828282828282829 ,rho=0.6262626262626263 ,epsilon=0.00043434349090909084 ,centered=False ,beta_1=0.36363636363636365 ,beta_2=0.48484848484848486 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.25252525252525254].
2023-08-22 04:42:17,373 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.08080808080808081 ,nesterov=False ,amsgrad=False ,weight_decay=0.0023240000000000005 ,use_ema=True ,ema_momentum=0.2828282828282829 ,rho=0.6262626262626263 ,epsilon=0.00043434349090909084 ,centered=False ,beta_1=0.36363636363636365 ,beta_2=0.48484848484848486 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.25252525252525254].
2023-08-22 04:42:25,194 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.0, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.6767676767676768 ,beta_2=0.37373737373737376 ,learning_rate_power=-0.2727272727272727 ,initial_accumulator_value=0.030303030303030304 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:42:25,194 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.0, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.6767676767676768 ,beta_2=0.37373737373737376 ,learning_rate_power=-0.2727272727272727 ,initial_accumulator_value=0.030303030303030304 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:42:29,041 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.797979797979798, momentum=0.7272727272727273 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9595959595959597 ,rho=0.6262626262626263 ,epsilon=0.00023232330909090908 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.30303030303030304].
2023-08-22 04:42:29,041 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.797979797979798, momentum=0.7272727272727273 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9595959595959597 ,rho=0.6262626262626263 ,epsilon=0.00023232330909090908 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.30303030303030304].
2023-08-22 04:42:30,978 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:42:30,978 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:42:46,140 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0004050000000000001 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.7373737373737375 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.10101010101010102 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.04040404040404033 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.15151515151515152 ,beta=0.11111111111111112].
2023-08-22 04:42:46,140 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0004050000000000001 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.7373737373737375 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.10101010101010102 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.04040404040404033 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.15151515151515152 ,beta=0.11111111111111112].
2023-08-22 04:42:46,361 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:42:46,361 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:42:55,343 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0004747475272727272 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:42:55,343 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0004747475272727272 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:43:06,396 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:43:06,396 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:43:23,144 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.9595959595959597, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.888888888888889 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.8484848484848485 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.16161616161616163].
2023-08-22 04:43:23,144 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.9595959595959597, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.888888888888889 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.8484848484848485 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.16161616161616163].
2023-08-22 04:43:48,865 INFO: Applying selection operators for generation 78.
2023-08-22 04:43:48,865 INFO: Applying genetic operators for generation 78.
2023-08-22 04:43:48,868 INFO: Evaluating fitness for for generation 78.
2023-08-22 04:43:48,868 INFO: Will evaluate fitness for 32 individuals.
2023-08-22 04:43:49,414 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:43:49,414 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:43:49,463 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:43:49,463 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:43:49,474 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.3434343434343435 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5656565656565657 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.9292929292929294 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:43:49,474 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.3434343434343435 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5656565656565657 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.9292929292929294 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:43:49,480 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:43:49,480 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:44:09,349 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:44:09,349 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:44:09,671 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:44:09,671 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:44:10,071 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:44:10,072 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:44:16,766 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0.14141414141414144 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7070707070707072 ,rho=0.6262626262626263 ,epsilon=0.0006363636727272727 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.13131313131313133 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4747474747474748 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.5555555555555556].
2023-08-22 04:44:16,766 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0.14141414141414144 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7070707070707072 ,rho=0.6262626262626263 ,epsilon=0.0006363636727272727 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.13131313131313133 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4747474747474748 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.5555555555555556].
2023-08-22 04:44:29,873 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:44:29,873 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:44:29,920 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:44:29,920 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:44:30,370 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:44:30,371 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:44:44,108 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:44:44,109 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:44:49,931 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:44:49,931 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:44:50,513 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:44:50,514 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:44:51,328 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:44:51,329 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:45:04,136 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:45:04,136 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:45:09,925 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.36363636363636365, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.33333333333333337 ,rho=0.6262626262626263 ,epsilon=0.0006868687181818181 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.16161616161616163].
2023-08-22 04:45:09,925 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.36363636363636365, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.33333333333333337 ,rho=0.6262626262626263 ,epsilon=0.0006868687181818181 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.16161616161616163].
2023-08-22 04:45:10,759 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:45:10,759 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:45:11,728 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0006666667 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.22222222222222224 ,learning_rate_power=-0.06060606060606055 ,initial_accumulator_value=0.13131313131313133 ,l1_regularization_strength=0.8585858585858587 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.7575757575757577].
2023-08-22 04:45:11,728 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0006666667 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.22222222222222224 ,learning_rate_power=-0.06060606060606055 ,initial_accumulator_value=0.13131313131313133 ,l1_regularization_strength=0.8585858585858587 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.7575757575757577].
2023-08-22 04:45:24,949 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:45:24,950 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:45:32,122 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:45:32,122 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:45:37,480 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:45:37,480 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:45:39,256 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:45:39,256 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:45:45,066 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=6.060615454545454e-05 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.7474747474747475 ,l1_regularization_strength=0.4747474747474748 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.16161616161616163].
2023-08-22 04:45:45,066 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=6.060615454545454e-05 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.7474747474747475 ,l1_regularization_strength=0.4747474747474748 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.16161616161616163].
2023-08-22 04:45:52,622 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.9797979797979799, momentum=0.9595959595959597 ,nesterov=False ,amsgrad=True ,weight_decay=0.0021220000000000006 ,use_ema=True ,ema_momentum=0.42424242424242425 ,rho=0.6262626262626263 ,epsilon=0.0005252525727272728 ,centered=True ,beta_1=0.8989898989898991 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.9797979797979798 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.30303030303030304 ,beta=0.16161616161616163].
2023-08-22 04:45:52,622 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.9797979797979799, momentum=0.9595959595959597 ,nesterov=False ,amsgrad=True ,weight_decay=0.0021220000000000006 ,use_ema=True ,ema_momentum=0.42424242424242425 ,rho=0.6262626262626263 ,epsilon=0.0005252525727272728 ,centered=True ,beta_1=0.8989898989898991 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.9797979797979798 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.30303030303030304 ,beta=0.16161616161616163].
2023-08-22 04:45:57,367 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:45:57,368 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:45:59,603 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:45:59,603 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:46:04,989 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5858585858585859 ,rho=0.5353535353535354 ,epsilon=0.0009292929363636363 ,centered=True ,beta_1=0.8282828282828284 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.4545454545454546 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.5252525252525253].
2023-08-22 04:46:04,990 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5858585858585859 ,rho=0.5353535353535354 ,epsilon=0.0009292929363636363 ,centered=True ,beta_1=0.8282828282828284 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.4545454545454546 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.5252525252525253].
2023-08-22 04:46:18,244 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:46:18,244 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:46:19,781 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:46:19,782 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:46:22,098 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:46:22,099 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:46:32,588 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:46:32,588 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:46:52,984 INFO: Applying selection operators for generation 79.
2023-08-22 04:46:52,984 INFO: Applying genetic operators for generation 79.
2023-08-22 04:46:52,988 INFO: Evaluating fitness for for generation 79.
2023-08-22 04:46:52,988 INFO: Will evaluate fitness for 23 individuals.
2023-08-22 04:46:53,572 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:46:53,572 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:46:53,579 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.8181818181818182 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.31313131313131315 ,beta_2=0.5252525252525253 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.4747474747474748 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.30303030303030304].
2023-08-22 04:46:53,579 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.8181818181818182 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.31313131313131315 ,beta_2=0.5252525252525253 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.4747474747474748 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.30303030303030304].
2023-08-22 04:46:53,579 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.18181818181818182, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.09090909090909091 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.8989898989898991 ,beta_2=0.5757575757575758 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.17171717171717174 ,l1_regularization_strength=0.5252525252525253 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.16161616161616163].
2023-08-22 04:46:53,580 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.18181818181818182, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.09090909090909091 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.8989898989898991 ,beta_2=0.5757575757575758 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.17171717171717174 ,l1_regularization_strength=0.5252525252525253 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.16161616161616163].
2023-08-22 04:46:53,585 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.595959595959596, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0045460000000000006 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.43434343434343436 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.16161616161616163].
2023-08-22 04:46:53,585 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.595959595959596, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0045460000000000006 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.43434343434343436 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.16161616161616163].
2023-08-22 04:47:14,579 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0004050000000000001 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.23232323232323235 ,epsilon=0.0007171717454545454 ,centered=False ,beta_1=0.2828282828282829 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.16161616161616163].
2023-08-22 04:47:14,579 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0004050000000000001 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.23232323232323235 ,epsilon=0.0007171717454545454 ,centered=False ,beta_1=0.2828282828282829 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.16161616161616163].
2023-08-22 04:47:14,968 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:47:14,969 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:47:19,522 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:47:19,523 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:47:35,464 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:47:35,465 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:47:35,908 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.9696969696969697 ,epsilon=0.0009292929363636363 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.7474747474747475].
2023-08-22 04:47:35,909 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.9696969696969697 ,epsilon=0.0009292929363636363 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.7474747474747475].
2023-08-22 04:47:39,541 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.000454545509090909 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.07070707070707072].
2023-08-22 04:47:39,541 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.000454545509090909 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.07070707070707072].
2023-08-22 04:47:42,329 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.5858585858585859 ,rho=0.9292929292929294 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.31313131313131315 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.696969696969697 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.16161616161616163].
2023-08-22 04:47:42,329 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.5858585858585859 ,rho=0.9292929292929294 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.31313131313131315 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.696969696969697 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.16161616161616163].
2023-08-22 04:47:55,927 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.009394000000000001 ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.4141414141414142 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.7777777777777778 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.686868686868687 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6666666666666667 ,beta=0.16161616161616163].
2023-08-22 04:47:55,928 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.009394000000000001 ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.4141414141414142 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.7777777777777778 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.686868686868687 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6666666666666667 ,beta=0.16161616161616163].
2023-08-22 04:48:01,930 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=1e-06 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0006868687181818181 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.24242424242424243].
2023-08-22 04:48:01,931 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=1e-06 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0006868687181818181 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.24242424242424243].
2023-08-22 04:48:02,847 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:48:02,847 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:48:05,888 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:48:05,889 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:48:23,771 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:48:23,771 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:48:25,048 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0005151515636363636 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.686868686868687].
2023-08-22 04:48:25,048 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0005151515636363636 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.686868686868687].
2023-08-22 04:48:25,838 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.030303030303030304 ,learning_rate_power=-1.0 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.09090909090909091].
2023-08-22 04:48:25,839 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.030303030303030304 ,learning_rate_power=-1.0 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.09090909090909091].
2023-08-22 04:48:30,796 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.19191919191919193 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.06060606060606061 ,l1_regularization_strength=0.7676767676767677 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.8282828282828284].
2023-08-22 04:48:30,797 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.19191919191919193 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.06060606060606061 ,l1_regularization_strength=0.7676767676767677 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.8282828282828284].
2023-08-22 04:48:43,960 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6363636363636365, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0016170000000000002 ,use_ema=True ,ema_momentum=0.08080808080808081 ,rho=0.09090909090909091 ,epsilon=0.0009797979818181818 ,centered=False ,beta_1=0.05050505050505051 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.31313131313131304 ,initial_accumulator_value=0.18181818181818182 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.4040404040404041].
2023-08-22 04:48:43,960 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6363636363636365, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0016170000000000002 ,use_ema=True ,ema_momentum=0.08080808080808081 ,rho=0.09090909090909091 ,epsilon=0.0009797979818181818 ,centered=False ,beta_1=0.05050505050505051 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.31313131313131304 ,initial_accumulator_value=0.18181818181818182 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.4040404040404041].
2023-08-22 04:48:53,679 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.8282828282828284, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.001314 ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.6262626262626263 ,epsilon=0.001 ,centered=True ,beta_1=0.5757575757575758 ,beta_2=0.19191919191919193 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.4545454545454546 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.9797979797979799].
2023-08-22 04:48:53,680 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.8282828282828284, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.001314 ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.6262626262626263 ,epsilon=0.001 ,centered=True ,beta_1=0.5757575757575758 ,beta_2=0.19191919191919193 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.4545454545454546 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.9797979797979799].
2023-08-22 04:48:58,479 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:48:58,479 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:49:10,181 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.38383838383838387, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8282828282828284 ,rho=0.6262626262626263 ,epsilon=0.0003838384454545454 ,centered=False ,beta_1=0.9292929292929294 ,beta_2=0.5454545454545455 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.6666666666666667 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.48484848484848486].
2023-08-22 04:49:10,181 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.38383838383838387, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8282828282828284 ,rho=0.6262626262626263 ,epsilon=0.0003838384454545454 ,centered=False ,beta_1=0.9292929292929294 ,beta_2=0.5454545454545455 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.6666666666666667 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.48484848484848486].
2023-08-22 04:49:27,226 INFO: Applying selection operators for generation 80.
2023-08-22 04:49:27,226 INFO: Applying genetic operators for generation 80.
2023-08-22 04:49:27,229 INFO: Evaluating fitness for for generation 80.
2023-08-22 04:49:27,229 INFO: Will evaluate fitness for 37 individuals.
2023-08-22 04:49:27,806 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:49:27,806 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:49:27,821 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:49:27,821 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:49:27,832 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:49:27,833 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:49:27,845 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:49:27,845 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:49:47,555 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:49:47,556 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:49:47,587 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.43434343434343436, momentum=0.5555555555555556 ,nesterov=True ,amsgrad=True ,weight_decay=0.0036370000000000005 ,use_ema=False ,ema_momentum=0.7676767676767677 ,rho=0.6767676767676768 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.6767676767676768 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.31313131313131304 ,initial_accumulator_value=0.37373737373737376 ,l1_regularization_strength=0.7474747474747475 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.16161616161616163].
2023-08-22 04:49:47,587 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.43434343434343436, momentum=0.5555555555555556 ,nesterov=True ,amsgrad=True ,weight_decay=0.0036370000000000005 ,use_ema=False ,ema_momentum=0.7676767676767677 ,rho=0.6767676767676768 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.6767676767676768 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.31313131313131304 ,initial_accumulator_value=0.37373737373737376 ,l1_regularization_strength=0.7474747474747475 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.16161616161616163].
2023-08-22 04:49:47,798 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:49:47,798 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:49:47,941 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:49:47,941 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:50:07,455 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.005758000000000001 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.25252525252525254 ,epsilon=0.00010101019090909089 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.9797979797979798 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5151515151515152 ,beta=0.16161616161616163].
2023-08-22 04:50:07,455 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.005758000000000001 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.25252525252525254 ,epsilon=0.00010101019090909089 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.9797979797979798 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5151515151515152 ,beta=0.16161616161616163].
2023-08-22 04:50:07,833 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:50:07,833 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:50:08,013 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:50:08,014 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:50:14,180 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.43434343434343436, momentum=0.8282828282828284 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.18181818181818182 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.4545454545454546 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.3737373737373737 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:50:14,181 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.43434343434343436, momentum=0.8282828282828284 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.18181818181818182 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.4545454545454546 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.3737373737373737 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:50:28,181 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:50:28,181 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:50:29,236 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:50:29,236 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:50:35,003 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:50:35,003 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:50:36,360 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0008888889 ,centered=False ,beta_1=0.8181818181818182 ,beta_2=0.4646464646464647 ,learning_rate_power=-0.8787878787878788 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.6767676767676768].
2023-08-22 04:50:36,361 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0008888889 ,centered=False ,beta_1=0.8181818181818182 ,beta_2=0.4646464646464647 ,learning_rate_power=-0.8787878787878788 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.6767676767676768].
2023-08-22 04:50:49,189 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:50:49,190 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:50:49,524 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.04040404040404041, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.27272727272727276 ,rho=0.5050505050505051 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.4747474747474748 ,beta_2=0.37373737373737376 ,learning_rate_power=-0.4949494949494949 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.37373737373737376 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:50:49,524 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.04040404040404041, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.27272727272727276 ,rho=0.5050505050505051 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.4747474747474748 ,beta_2=0.37373737373737376 ,learning_rate_power=-0.4949494949494949 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.37373737373737376 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:50:55,012 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:50:55,013 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:51:04,840 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.8282828282828284, momentum=0.8484848484848485 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0006262626636363636 ,centered=False ,beta_1=0.393939393939394 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.4646464646464647 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.23232323232323235].
2023-08-22 04:51:04,840 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.8282828282828284, momentum=0.8484848484848485 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0006262626636363636 ,centered=False ,beta_1=0.393939393939394 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.4646464646464647 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.23232323232323235].
2023-08-22 04:51:09,549 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6363636363636365 ,rho=0.0 ,epsilon=0.0008686868818181818 ,centered=True ,beta_1=0.8181818181818182 ,beta_2=0.98989898989899 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.20202020202020204 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.5757575757575758].
2023-08-22 04:51:09,549 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6363636363636365 ,rho=0.0 ,epsilon=0.0008686868818181818 ,centered=True ,beta_1=0.8181818181818182 ,beta_2=0.98989898989899 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.20202020202020204 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.5757575757575758].
2023-08-22 04:51:14,887 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.7272727272727273 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.05050505050505051 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.8484848484848485 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:51:14,887 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.7272727272727273 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.05050505050505051 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.8484848484848485 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:51:16,124 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:51:16,125 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:51:31,650 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:51:31,650 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:51:36,383 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5858585858585859, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.008384 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4444444444444445 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.16161616161616163].
2023-08-22 04:51:36,383 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5858585858585859, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.008384 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4444444444444445 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.16161616161616163].
2023-08-22 04:51:37,723 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:51:37,723 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:51:42,394 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:51:42,394 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:51:51,786 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:51:51,787 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:51:57,895 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8181818181818182, momentum=0.595959595959596 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.8585858585858587 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:51:57,896 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8181818181818182, momentum=0.595959595959596 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.8585858585858587 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:51:59,354 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.6464646464646465, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7272727272727273 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4747474747474748 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5656565656565657 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.48484848484848486].
2023-08-22 04:51:59,354 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.6464646464646465, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7272727272727273 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4747474747474748 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5656565656565657 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.48484848484848486].
2023-08-22 04:52:02,256 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:52:02,256 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:52:12,579 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:52:12,580 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:52:17,512 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.0 ,rho=0.3434343434343435 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.09090909090909091 ,beta_2=0.9090909090909092 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.20202020202020204 ,l1_regularization_strength=0.6161616161616162 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.16161616161616163].
2023-08-22 04:52:17,512 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.0 ,rho=0.3434343434343435 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.09090909090909091 ,beta_2=0.9090909090909092 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.20202020202020204 ,l1_regularization_strength=0.6161616161616162 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.16161616161616163].
2023-08-22 04:52:17,839 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:52:17,839 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:52:23,034 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:52:23,034 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:52:32,719 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:52:32,719 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:52:39,160 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9191919191919192, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.030303030303030304 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.08080808080808081 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:52:39,160 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9191919191919192, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.030303030303030304 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.08080808080808081 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:52:58,868 INFO: Applying selection operators for generation 81.
2023-08-22 04:52:58,868 INFO: Applying genetic operators for generation 81.
2023-08-22 04:52:58,871 INFO: Evaluating fitness for for generation 81.
2023-08-22 04:52:58,871 INFO: Will evaluate fitness for 22 individuals.
2023-08-22 04:52:59,479 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.5858585858585859, momentum=0.43434343434343436 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.26262626262626265 ,rho=0.6262626262626263 ,epsilon=0.0004848485363636363 ,centered=False ,beta_1=0.7272727272727273 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.9797979797979799 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.16161616161616163].
2023-08-22 04:52:59,480 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.5858585858585859, momentum=0.43434343434343436 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.26262626262626265 ,rho=0.6262626262626263 ,epsilon=0.0004848485363636363 ,centered=False ,beta_1=0.7272727272727273 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.9797979797979799 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.16161616161616163].
2023-08-22 04:52:59,483 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6363636363636365 ,rho=0.6262626262626263 ,epsilon=0.0008282828454545454 ,centered=False ,beta_1=0.5656565656565657 ,beta_2=0.9191919191919192 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.31313131313131315 ,l1_regularization_strength=0.8989898989898991 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.6666666666666667].
2023-08-22 04:52:59,483 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6363636363636365 ,rho=0.6262626262626263 ,epsilon=0.0008282828454545454 ,centered=False ,beta_1=0.5656565656565657 ,beta_2=0.9191919191919192 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.31313131313131315 ,l1_regularization_strength=0.8989898989898991 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.6666666666666667].
2023-08-22 04:52:59,483 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:52:59,483 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:52:59,485 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:52:59,486 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:53:19,618 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:53:19,618 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:53:20,320 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.030303030303030304 ,epsilon=0.0006464646818181818 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.08080808080808081 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.24242424242424243].
2023-08-22 04:53:20,320 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.030303030303030304 ,epsilon=0.0006464646818181818 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.08080808080808081 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.24242424242424243].
2023-08-22 04:53:26,884 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.797979797979798, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.030303030303030304 ,epsilon=0.0008585858727272726 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.15151515151515152 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.9494949494949496 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.7373737373737375].
2023-08-22 04:53:26,884 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.797979797979798, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.030303030303030304 ,epsilon=0.0008585858727272726 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.15151515151515152 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.9494949494949496 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.7373737373737375].
2023-08-22 04:53:27,091 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:53:27,091 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:53:39,767 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=1.0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.686868686868687 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.5555555555555556 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8282828282828284 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.09090909090909091].
2023-08-22 04:53:39,767 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=1.0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.686868686868687 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.5555555555555556 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8282828282828284 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.09090909090909091].
2023-08-22 04:53:47,031 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:53:47,032 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:53:47,272 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:53:47,273 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:53:55,314 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.5555555555555556 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.48484848484848486 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7777777777777778 ,beta=0.16161616161616163].
2023-08-22 04:53:55,315 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.5555555555555556 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.48484848484848486 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7777777777777778 ,beta=0.16161616161616163].
2023-08-22 04:54:07,704 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.42424242424242425, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.7777777777777778 ,rho=0.7070707070707072 ,epsilon=0.0008181818363636363 ,centered=False ,beta_1=0.5050505050505051 ,beta_2=0.5252525252525253 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.12121212121212122 ,l1_regularization_strength=0.7474747474747475 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.9696969696969697].
2023-08-22 04:54:07,704 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.42424242424242425, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.7777777777777778 ,rho=0.7070707070707072 ,epsilon=0.0008181818363636363 ,centered=False ,beta_1=0.5050505050505051 ,beta_2=0.5252525252525253 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.12121212121212122 ,l1_regularization_strength=0.7474747474747475 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.9696969696969697].
2023-08-22 04:54:07,927 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:54:07,927 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:54:08,168 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:54:08,168 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:54:14,884 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9090909090909092, momentum=0.6666666666666667 ,nesterov=True ,amsgrad=False ,weight_decay=0.007071000000000001 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0007373737636363636 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.18181818181818182 ,learning_rate_power=-0.24242424242424232 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.787878787878788 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.16161616161616163].
2023-08-22 04:54:14,885 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9090909090909092, momentum=0.6666666666666667 ,nesterov=True ,amsgrad=False ,weight_decay=0.007071000000000001 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0007373737636363636 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.18181818181818182 ,learning_rate_power=-0.24242424242424232 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.787878787878788 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.16161616161616163].
2023-08-22 04:54:28,078 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0.7171717171717172 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5757575757575758 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.9393939393939394 ,l1_regularization_strength=0.10101010101010102 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.16161616161616163].
2023-08-22 04:54:28,078 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0.7171717171717172 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5757575757575758 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.9393939393939394 ,l1_regularization_strength=0.10101010101010102 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.16161616161616163].
2023-08-22 04:54:28,330 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.787878787878788, momentum=0.8585858585858587 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.9797979797979799 ,epsilon=0.0008787878909090909 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.18181818181818182 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.7474747474747475].
2023-08-22 04:54:28,331 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.787878787878788, momentum=0.8585858585858587 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.9797979797979799 ,epsilon=0.0008787878909090909 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.18181818181818182 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.7474747474747475].
2023-08-22 04:54:34,234 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:54:34,234 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:54:50,593 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.7575757575757577, momentum=0.4141414141414142 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.42424242424242425 ,beta_2=0.7070707070707072 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.6767676767676768 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.16161616161616163].
2023-08-22 04:54:50,594 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.7575757575757577, momentum=0.4141414141414142 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.42424242424242425 ,beta_2=0.7070707070707072 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.6767676767676768 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.16161616161616163].
2023-08-22 04:54:54,619 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:54:54,619 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:54:55,531 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:54:55,532 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:55:14,825 INFO: Applying selection operators for generation 82.
2023-08-22 04:55:14,825 INFO: Applying genetic operators for generation 82.
2023-08-22 04:55:14,828 INFO: Evaluating fitness for for generation 82.
2023-08-22 04:55:14,828 INFO: Will evaluate fitness for 28 individuals.
2023-08-22 04:55:15,375 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:55:15,375 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:55:15,408 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5858585858585859, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0045460000000000006 ,use_ema=False ,ema_momentum=0.7676767676767677 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.16161616161616163 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.13131313131313133].
2023-08-22 04:55:15,409 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5858585858585859, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0045460000000000006 ,use_ema=False ,ema_momentum=0.7676767676767677 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.16161616161616163 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.13131313131313133].
2023-08-22 04:55:15,421 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:55:15,421 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:55:15,440 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:55:15,440 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:55:35,108 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:55:35,109 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:55:35,417 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.26262626262626265, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.5353535353535354 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:55:35,417 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.26262626262626265, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.5353535353535354 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:55:36,036 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:55:36,036 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:55:36,986 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:55:36,987 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:55:55,773 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.16161616161616163 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0008888889 ,centered=False ,beta_1=0.18181818181818182 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7777777777777778 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8989898989898991 ,beta=0.6666666666666667].
2023-08-22 04:55:55,773 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.16161616161616163 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0008888889 ,centered=False ,beta_1=0.18181818181818182 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7777777777777778 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8989898989898991 ,beta=0.6666666666666667].
2023-08-22 04:55:55,906 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.09090909090909091, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.007475000000000002 ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6767676767676768 ,epsilon=0.0009898989909090908 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.9090909090909092 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:55:55,906 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.09090909090909091, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.007475000000000002 ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6767676767676768 ,epsilon=0.0009898989909090908 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.9090909090909092 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:55:56,060 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:55:56,060 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:55:57,433 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:55:57,433 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:56:16,175 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:56:16,175 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:56:17,903 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:56:17,903 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:56:22,785 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.27272727272727276 ,epsilon=0.0005252525727272728 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.12121212121212122 ,l1_regularization_strength=0.2828282828282829 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.9696969696969697].
2023-08-22 04:56:22,785 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.27272727272727276 ,epsilon=0.0005252525727272728 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.12121212121212122 ,l1_regularization_strength=0.2828282828282829 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.9696969696969697].
2023-08-22 04:56:24,160 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:56:24,160 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:56:36,079 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:56:36,079 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:56:38,093 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:56:38,093 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:56:45,686 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:56:45,686 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:56:50,098 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:56:50,098 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:56:56,133 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.38383838383838387, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0009292929363636363 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8989898989898991 ,beta=0.797979797979798].
2023-08-22 04:56:56,133 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.38383838383838387, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0009292929363636363 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8989898989898991 ,beta=0.797979797979798].
2023-08-22 04:56:58,463 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:56:58,463 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:57:06,144 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:57:06,144 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:57:10,003 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:57:10,003 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:57:19,721 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.31313131313131315, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.003839000000000001 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.797979797979798 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.5656565656565657 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.20202020202020204].
2023-08-22 04:57:19,721 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.31313131313131315, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.003839000000000001 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.797979797979798 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.5656565656565657 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.20202020202020204].
2023-08-22 04:57:24,612 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:57:24,612 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:57:44,582 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.787878787878788 ,rho=0.8989898989898991 ,epsilon=0.0007676767909090908 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.030303030303030304 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9191919191919192 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.8989898989898991].
2023-08-22 04:57:44,582 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.787878787878788 ,rho=0.8989898989898991 ,epsilon=0.0007676767909090908 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.030303030303030304 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9191919191919192 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.8989898989898991].
2023-08-22 04:57:47,631 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00014141422727272727 ,centered=False ,beta_1=0.9696969696969697 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.3535353535353535 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7676767676767677 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.4141414141414142].
2023-08-22 04:57:47,632 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00014141422727272727 ,centered=False ,beta_1=0.9696969696969697 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.3535353535353535 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7676767676767677 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.4141414141414142].
2023-08-22 04:58:26,631 INFO: Applying selection operators for generation 83.
2023-08-22 04:58:26,631 INFO: Applying genetic operators for generation 83.
2023-08-22 04:58:26,635 INFO: Evaluating fitness for for generation 83.
2023-08-22 04:58:26,635 INFO: Will evaluate fitness for 39 individuals.
2023-08-22 04:58:27,222 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:58:27,222 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:58:27,223 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8585858585858587 ,rho=0.7171717171717172 ,epsilon=2.020211818181818e-05 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.4545454545454545 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.5050505050505051].
2023-08-22 04:58:27,223 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8585858585858587 ,rho=0.7171717171717172 ,epsilon=2.020211818181818e-05 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.4545454545454545 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.5050505050505051].
2023-08-22 04:58:27,258 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.8989898989898991, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.888888888888889 ,epsilon=0.0007878788090909091 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.29292929292929293 ,learning_rate_power=-0.08080808080808077 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.16161616161616163].
2023-08-22 04:58:27,258 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.8989898989898991, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.888888888888889 ,epsilon=0.0007878788090909091 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.29292929292929293 ,learning_rate_power=-0.08080808080808077 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.16161616161616163].
2023-08-22 04:58:27,266 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.20202020202020204, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.11111111111111112 ,rho=0.5555555555555556 ,epsilon=0.0007777778 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.08080808080808081 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=1.0 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.595959595959596].
2023-08-22 04:58:27,267 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.20202020202020204, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.11111111111111112 ,rho=0.5555555555555556 ,epsilon=0.0007777778 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.08080808080808081 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=1.0 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.595959595959596].
2023-08-22 04:58:47,311 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:58:47,311 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:58:53,847 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.8181818181818182, momentum=0.3434343434343435 ,nesterov=True ,amsgrad=False ,weight_decay=0.0019200000000000003 ,use_ema=False ,ema_momentum=0.7272727272727273 ,rho=0.14141414141414144 ,epsilon=0.0005858586272727272 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8989898989898991 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.9393939393939394].
2023-08-22 04:58:53,847 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.8181818181818182, momentum=0.3434343434343435 ,nesterov=True ,amsgrad=False ,weight_decay=0.0019200000000000003 ,use_ema=False ,ema_momentum=0.7272727272727273 ,rho=0.14141414141414144 ,epsilon=0.0005858586272727272 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8989898989898991 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.9393939393939394].
2023-08-22 04:58:54,741 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:58:54,742 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:58:55,008 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.33333333333333337 ,epsilon=0.0004242424818181818 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8585858585858587 ,beta=0.5454545454545455].
2023-08-22 04:58:55,008 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.33333333333333337 ,epsilon=0.0004242424818181818 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8585858585858587 ,beta=0.5454545454545455].
2023-08-22 04:59:07,458 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7070707070707072 ,rho=0.23232323232323235 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.48484848484848486 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.19191919191919193 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.494949494949495].
2023-08-22 04:59:07,458 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7070707070707072 ,rho=0.23232323232323235 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.48484848484848486 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.19191919191919193 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.494949494949495].
2023-08-22 04:59:15,923 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:59:15,923 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:59:20,110 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:59:20,110 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:59:23,175 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.393939393939394, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9595959595959597 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.13131313131313133 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.8080808080808082 ,l1_regularization_strength=0.30303030303030304 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.16161616161616163].
2023-08-22 04:59:23,176 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.393939393939394, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9595959595959597 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.13131313131313133 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.8080808080808082 ,l1_regularization_strength=0.30303030303030304 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.16161616161616163].
2023-08-22 04:59:36,319 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.33333333333333337, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.11111111111111105 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.4040404040404041 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:59:36,320 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.33333333333333337, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.11111111111111105 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.4040404040404041 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:59:36,962 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:59:36,962 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:59:40,088 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:59:40,088 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:59:43,266 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.07070707070707072, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.13131313131313133 ,epsilon=4.040413636363636e-05 ,centered=True ,beta_1=0.8686868686868687 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.8181818181818181 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.16161616161616163].
2023-08-22 04:59:43,267 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.07070707070707072, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.13131313131313133 ,epsilon=4.040413636363636e-05 ,centered=True ,beta_1=0.8686868686868687 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.8181818181818181 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.16161616161616163].
2023-08-22 04:59:57,304 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6464646464646465 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.36363636363636365 ,epsilon=8.080817272727271e-05 ,centered=True ,beta_1=0.8181818181818182 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.09090909090909083 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.4747474747474748 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.16161616161616163].
2023-08-22 04:59:57,304 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6464646464646465 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.36363636363636365 ,epsilon=8.080817272727271e-05 ,centered=True ,beta_1=0.8181818181818182 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.09090909090909083 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.4747474747474748 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.16161616161616163].
2023-08-22 04:59:57,347 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 04:59:57,347 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:00:00,060 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:00:00,060 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:00:11,087 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:00:11,087 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:00:17,586 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:00:17,586 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:00:20,882 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6666666666666667 ,epsilon=0.0005959596363636363 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.02020202020202011 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9797979797979799 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.16161616161616163].
2023-08-22 05:00:20,882 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6666666666666667 ,epsilon=0.0005959596363636363 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.02020202020202011 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9797979797979799 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.16161616161616163].
2023-08-22 05:00:25,218 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:00:25,218 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:00:31,151 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:00:31,151 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:00:37,929 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:00:37,930 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:00:45,613 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:00:45,613 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:00:51,981 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:00:51,982 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:00:59,051 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0009393939454545454 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.5858585858585859].
2023-08-22 05:00:59,051 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0009393939454545454 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.5858585858585859].
2023-08-22 05:01:04,057 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:01:04,057 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:01:05,815 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.3535353535353536 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.10101010101010102 ,rho=0.5252525252525253 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.5454545454545454 ,initial_accumulator_value=0.37373737373737376 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.23232323232323235].
2023-08-22 05:01:05,815 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.3535353535353536 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.10101010101010102 ,rho=0.5252525252525253 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.5454545454545454 ,initial_accumulator_value=0.37373737373737376 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.23232323232323235].
2023-08-22 05:01:12,077 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:01:12,078 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:01:24,026 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.7171717171717172, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.25252525252525254 ,rho=0.6666666666666667 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.25252525252525254 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.98989898989899].
2023-08-22 05:01:24,026 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.7171717171717172, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.25252525252525254 ,rho=0.6666666666666667 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.25252525252525254 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.98989898989899].
2023-08-22 05:01:25,846 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:01:25,846 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:01:27,135 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0.6363636363636365 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8383838383838385 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.16161616161616163].
2023-08-22 05:01:27,135 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0.6363636363636365 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8383838383838385 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.16161616161616163].
2023-08-22 05:01:32,110 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5454545454545455, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6464646464646465 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.797979797979798 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.16161616161616163].
2023-08-22 05:01:32,110 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5454545454545455, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6464646464646465 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.797979797979798 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.16161616161616163].
2023-08-22 05:01:43,970 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0006969697272727273 ,centered=False ,beta_1=0.8686868686868687 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7676767676767677 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4646464646464647 ,beta=0.16161616161616163].
2023-08-22 05:01:43,971 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0006969697272727273 ,centered=False ,beta_1=0.8686868686868687 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7676767676767677 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4646464646464647 ,beta=0.16161616161616163].
2023-08-22 05:01:46,009 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:01:46,010 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:02:06,112 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.32323232323232326, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.05050505050505051 ,rho=0.12121212121212122 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.8484848484848485 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9696969696969697 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.10101010101010102].
2023-08-22 05:02:06,113 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.32323232323232326, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.05050505050505051 ,rho=0.12121212121212122 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.8484848484848485 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9696969696969697 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.10101010101010102].
2023-08-22 05:02:34,053 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.48484848484848486, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.17171717171717174 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.43434343434343436 ,learning_rate_power=-0.3939393939393939 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:02:34,054 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.48484848484848486, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.17171717171717174 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.43434343434343436 ,learning_rate_power=-0.3939393939393939 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:03:00,851 INFO: Applying selection operators for generation 84.
2023-08-22 05:03:00,851 INFO: Applying genetic operators for generation 84.
2023-08-22 05:03:00,853 INFO: Evaluating fitness for for generation 84.
2023-08-22 05:03:00,853 INFO: Will evaluate fitness for 30 individuals.
2023-08-22 05:03:01,434 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:03:01,434 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:03:01,442 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4141414141414142 ,rho=0.15151515151515152 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:03:01,442 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4141414141414142 ,rho=0.15151515151515152 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:03:01,474 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:03:01,474 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:03:01,489 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8383838383838385, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4747474747474748 ,rho=0.4040404040404041 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.404040404040404 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.8181818181818182].
2023-08-22 05:03:01,490 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8383838383838385, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4747474747474748 ,rho=0.4040404040404041 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.404040404040404 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.8181818181818182].
2023-08-22 05:03:21,259 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:03:21,259 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:03:21,546 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:03:21,546 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:03:29,585 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:03:29,586 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:03:30,088 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7171717171717172 ,rho=0.4747474747474748 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.3939393939393939 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:03:30,088 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7171717171717172 ,rho=0.4747474747474748 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.3939393939393939 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:03:41,493 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:03:41,493 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:03:42,065 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:03:42,065 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:03:49,769 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:03:49,769 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:03:58,139 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:03:58,139 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:04:01,366 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:04:01,366 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:04:02,229 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:04:02,229 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:04:10,023 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.007879 ,use_ema=False ,ema_momentum=0.37373737373737376 ,rho=0.09090909090909091 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.6464646464646465 ,l1_regularization_strength=0.31313131313131315 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.16161616161616163].
2023-08-22 05:04:10,024 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.007879 ,use_ema=False ,ema_momentum=0.37373737373737376 ,rho=0.09090909090909091 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.6464646464646465 ,l1_regularization_strength=0.31313131313131315 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.16161616161616163].
2023-08-22 05:04:19,468 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:04:19,469 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:04:21,216 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:04:21,217 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:04:22,289 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:04:22,289 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:04:38,221 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.29292929292929293, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8585858585858587 ,rho=0.38383838383838387 ,epsilon=0.0008787878909090909 ,centered=False ,beta_1=1.0 ,beta_2=0.19191919191919193 ,learning_rate_power=-0.4949494949494949 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.6767676767676768].
2023-08-22 05:04:38,221 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.29292929292929293, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8585858585858587 ,rho=0.38383838383838387 ,epsilon=0.0008787878909090909 ,centered=False ,beta_1=1.0 ,beta_2=0.19191919191919193 ,learning_rate_power=-0.4949494949494949 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.6767676767676768].
2023-08-22 05:04:39,974 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:04:39,974 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:04:42,035 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:04:42,035 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:04:42,310 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:04:42,310 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:05:00,299 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:05:00,299 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:05:02,151 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:05:02,151 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:05:02,213 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.30303030303030304 ,rho=0.3535353535353536 ,epsilon=7.070716363636363e-05 ,centered=False ,beta_1=0.38383838383838387 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.16161616161616163].
2023-08-22 05:05:02,213 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.30303030303030304 ,rho=0.3535353535353536 ,epsilon=7.070716363636363e-05 ,centered=False ,beta_1=0.38383838383838387 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.16161616161616163].
2023-08-22 05:05:05,598 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.26262626262626265, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.005556000000000001 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:05:05,598 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.26262626262626265, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.005556000000000001 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:05:20,565 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:05:20,566 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:05:22,115 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:05:22,115 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:05:30,090 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6363636363636365, momentum=0.0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.33333333333333337].
2023-08-22 05:05:30,090 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6363636363636365, momentum=0.0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.33333333333333337].
2023-08-22 05:05:40,718 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:05:40,718 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:06:01,053 INFO: Applying selection operators for generation 85.
2023-08-22 05:06:01,054 INFO: Applying genetic operators for generation 85.
2023-08-22 05:06:01,056 INFO: Evaluating fitness for for generation 85.
2023-08-22 05:06:01,056 INFO: Will evaluate fitness for 27 individuals.
2023-08-22 05:06:01,695 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:06:01,695 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:06:01,707 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.3434343434343435, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.009192 ,use_ema=True ,ema_momentum=0.9595959595959597 ,rho=0.6464646464646465 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.98989898989899 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.888888888888889 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9696969696969697 ,beta=0.010101010101010102].
2023-08-22 05:06:01,708 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.3434343434343435, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.009192 ,use_ema=True ,ema_momentum=0.9595959595959597 ,rho=0.6464646464646465 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.98989898989899 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.888888888888889 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9696969696969697 ,beta=0.010101010101010102].
2023-08-22 05:06:01,718 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:06:01,719 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:06:01,724 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:06:01,724 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:06:21,548 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:06:21,549 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:06:21,862 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:06:21,863 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:06:21,865 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:06:21,866 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:06:29,867 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.09090909090909091, momentum=0.25252525252525254 ,nesterov=True ,amsgrad=False ,weight_decay=0.008586 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0007575757818181818 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4545454545454546 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.16161616161616163].
2023-08-22 05:06:29,867 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.09090909090909091, momentum=0.25252525252525254 ,nesterov=True ,amsgrad=False ,weight_decay=0.008586 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0007575757818181818 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4545454545454546 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.16161616161616163].
2023-08-22 05:06:42,016 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0.06060606060606061 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.010101010101010102 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.888888888888889 ,beta_2=0.686868686868687 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.16161616161616163].
2023-08-22 05:06:42,016 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0.06060606060606061 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.010101010101010102 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.888888888888889 ,beta_2=0.686868686868687 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.16161616161616163].
2023-08-22 05:06:42,110 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:06:42,110 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:06:42,666 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:06:42,666 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:06:58,452 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:06:58,453 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:07:02,123 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:07:02,124 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:07:02,957 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:07:02,957 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:07:09,391 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:07:09,391 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:07:19,366 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:07:19,366 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:07:22,077 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9393939393939394, momentum=0.23232323232323235 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.15151515151515152 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.25252525252525254 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.16161616161616163].
2023-08-22 05:07:22,077 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9393939393939394, momentum=0.23232323232323235 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.15151515151515152 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.25252525252525254 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.16161616161616163].
2023-08-22 05:07:23,172 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:07:23,173 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:07:30,580 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.7171717171717172, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.007172000000000001 ,use_ema=True ,ema_momentum=0.8989898989898991 ,rho=0.6262626262626263 ,epsilon=0.0008888889 ,centered=False ,beta_1=0.8686868686868687 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.16161616161616163].
2023-08-22 05:07:30,580 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.7171717171717172, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.007172000000000001 ,use_ema=True ,ema_momentum=0.8989898989898991 ,rho=0.6262626262626263 ,epsilon=0.0008888889 ,centered=False ,beta_1=0.8686868686868687 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.16161616161616163].
2023-08-22 05:07:39,594 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:07:39,594 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:07:42,009 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.23232323232323235 ,rho=0.8080808080808082 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.16161616161616163].
2023-08-22 05:07:42,009 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.23232323232323235 ,rho=0.8080808080808082 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.16161616161616163].
2023-08-22 05:07:43,360 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.98989898989899, momentum=0.5858585858585859 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.98989898989899 ,beta_2=0.4646464646464647 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.2828282828282829 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.31313131313131315 ,beta=0.16161616161616163].
2023-08-22 05:07:43,360 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.98989898989899, momentum=0.5858585858585859 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.98989898989899 ,beta_2=0.4646464646464647 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.2828282828282829 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.31313131313131315 ,beta=0.16161616161616163].
2023-08-22 05:07:49,844 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:07:49,844 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:07:59,581 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:07:59,581 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:08:09,142 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:08:09,142 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:08:10,189 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6464646464646465 ,rho=0.6464646464646465 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.8888888888888888 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.38383838383838387 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8787878787878789 ,beta=0.16161616161616163].
2023-08-22 05:08:10,190 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6464646464646465 ,rho=0.6464646464646465 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.8888888888888888 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.38383838383838387 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8787878787878789 ,beta=0.16161616161616163].
2023-08-22 05:08:29,831 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:08:29,831 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:08:48,927 INFO: Applying selection operators for generation 86.
2023-08-22 05:08:48,927 INFO: Applying genetic operators for generation 86.
2023-08-22 05:08:48,930 INFO: Evaluating fitness for for generation 86.
2023-08-22 05:08:48,930 INFO: Will evaluate fitness for 32 individuals.
2023-08-22 05:08:49,479 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.696969696969697 ,rho=0.7070707070707072 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5656565656565657 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.16161616161616163].
2023-08-22 05:08:49,480 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.696969696969697 ,rho=0.7070707070707072 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5656565656565657 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.16161616161616163].
2023-08-22 05:08:49,517 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:08:49,517 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:08:49,557 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.008687 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.10101010101010102 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5757575757575758 ,beta=0.797979797979798].
2023-08-22 05:08:49,557 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.008687 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.10101010101010102 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5757575757575758 ,beta=0.797979797979798].
2023-08-22 05:08:49,563 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:08:49,563 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:09:09,396 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:09:09,396 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:09:09,685 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:09:09,685 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:09:12,069 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8383838383838385, momentum=0.38383838383838387 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.27272727272727276 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:09:12,069 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8383838383838385, momentum=0.38383838383838387 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.27272727272727276 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:09:15,688 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.4040404040404041, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.23232323232323235 ,rho=0.6262626262626263 ,epsilon=0.0006868687181818181 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.9393939393939394].
2023-08-22 05:09:15,689 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.4040404040404041, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.23232323232323235 ,rho=0.6262626262626263 ,epsilon=0.0006868687181818181 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.9393939393939394].
2023-08-22 05:09:29,284 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:09:29,285 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:09:30,734 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:09:30,735 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:09:39,709 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.004142000000000001 ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.6262626262626263 ,epsilon=0.0004949495454545454 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.8686868686868687 ,l1_regularization_strength=0.30303030303030304 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.16161616161616163].
2023-08-22 05:09:39,709 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.004142000000000001 ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.6262626262626263 ,epsilon=0.0004949495454545454 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.8686868686868687 ,l1_regularization_strength=0.30303030303030304 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.16161616161616163].
2023-08-22 05:09:44,732 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:09:44,733 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:09:50,100 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:09:50,100 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:09:51,058 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:09:51,058 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:10:04,970 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:10:04,971 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:10:10,286 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.30303030303030304 ,rho=0.25252525252525254 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=1.0 ,beta_2=0.13131313131313133 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:10:10,286 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.30303030303030304 ,rho=0.25252525252525254 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=1.0 ,beta_2=0.13131313131313133 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:10:11,314 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:10:11,315 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:10:24,274 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.5656565656565657, momentum=0.7070707070707072 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.05050505050505051 ,rho=0.6262626262626263 ,epsilon=0.0001919192727272727 ,centered=False ,beta_1=0.8282828282828284 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.9696969696969697 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.20202020202020204].
2023-08-22 05:10:24,274 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.5656565656565657, momentum=0.7070707070707072 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.05050505050505051 ,rho=0.6262626262626263 ,epsilon=0.0001919192727272727 ,centered=False ,beta_1=0.8282828282828284 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.9696969696969697 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.20202020202020204].
2023-08-22 05:10:25,078 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:10:25,078 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:10:31,714 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=1.010110909090909e-05 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.4444444444444445 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.16161616161616163].
2023-08-22 05:10:31,714 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=1.010110909090909e-05 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.4444444444444445 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.16161616161616163].
2023-08-22 05:10:37,615 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00015151523636363636 ,centered=False ,beta_1=0.9292929292929294 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.3434343434343434 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:10:37,615 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00015151523636363636 ,centered=False ,beta_1=0.9292929292929294 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.3434343434343434 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:10:45,062 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:10:45,063 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:11:01,377 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:11:01,378 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:11:04,472 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:11:04,473 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:11:05,180 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.8989898989898991, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8080808080808082 ,rho=0.98989898989899 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.9292929292929293 ,initial_accumulator_value=0.8282828282828284 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.16161616161616163].
2023-08-22 05:11:05,181 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.8989898989898991, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8080808080808082 ,rho=0.98989898989899 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.9292929292929293 ,initial_accumulator_value=0.8282828282828284 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.16161616161616163].
2023-08-22 05:11:09,388 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:11:09,389 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:11:21,908 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:11:21,908 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:11:24,386 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:11:24,386 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:11:29,862 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:11:29,862 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:11:33,330 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.23232323232323235 ,nesterov=False ,amsgrad=True ,weight_decay=0.0032330000000000006 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6464646464646465 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.030303030303030304 ,beta=0.16161616161616163].
2023-08-22 05:11:33,330 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.23232323232323235 ,nesterov=False ,amsgrad=True ,weight_decay=0.0032330000000000006 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6464646464646465 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.030303030303030304 ,beta=0.16161616161616163].
2023-08-22 05:11:42,350 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:11:42,351 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:12:02,505 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:12:02,505 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:12:21,832 INFO: Applying selection operators for generation 87.
2023-08-22 05:12:21,833 INFO: Applying genetic operators for generation 87.
2023-08-22 05:12:21,836 INFO: Evaluating fitness for for generation 87.
2023-08-22 05:12:21,836 INFO: Will evaluate fitness for 30 individuals.
2023-08-22 05:12:22,384 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8181818181818182 ,rho=0.6262626262626263 ,epsilon=0.0006262626636363636 ,centered=False ,beta_1=0.37373737373737376 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.2929292929292928 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.16161616161616163].
2023-08-22 05:12:22,384 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8181818181818182 ,rho=0.6262626262626263 ,epsilon=0.0006262626636363636 ,centered=False ,beta_1=0.37373737373737376 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.2929292929292928 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.16161616161616163].
2023-08-22 05:12:22,394 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:12:22,394 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:12:22,430 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.7070707070707072, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.696969696969697 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.9696969696969697 ,initial_accumulator_value=0.494949494949495 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.16161616161616163].
2023-08-22 05:12:22,430 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.7070707070707072, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.696969696969697 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.9696969696969697 ,initial_accumulator_value=0.494949494949495 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.16161616161616163].
2023-08-22 05:12:22,459 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.8383838383838385, momentum=0.38383838383838387 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6464646464646465 ,rho=0.27272727272727276 ,epsilon=0.0002828283545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.9595959595959597 ,l1_regularization_strength=0.7676767676767677 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.32323232323232326].
2023-08-22 05:12:22,459 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.8383838383838385, momentum=0.38383838383838387 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6464646464646465 ,rho=0.27272727272727276 ,epsilon=0.0002828283545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.9595959595959597 ,l1_regularization_strength=0.7676767676767677 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.32323232323232326].
2023-08-22 05:12:43,469 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:12:43,470 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:12:48,760 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.42424242424242425 ,epsilon=0.0008585858727272726 ,centered=True ,beta_1=0.19191919191919193 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.8282828282828284 ,l1_regularization_strength=0.696969696969697 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.7373737373737375].
2023-08-22 05:12:48,761 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.42424242424242425 ,epsilon=0.0008585858727272726 ,centered=True ,beta_1=0.19191919191919193 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.8282828282828284 ,l1_regularization_strength=0.696969696969697 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.7373737373737375].
2023-08-22 05:12:49,822 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.98989898989899 ,nesterov=True ,amsgrad=False ,weight_decay=0.005556000000000001 ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0009898989909090908 ,centered=True ,beta_1=0.27272727272727276 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.696969696969697 ,l1_regularization_strength=0.8080808080808082 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.3535353535353536].
2023-08-22 05:12:49,822 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.98989898989899 ,nesterov=True ,amsgrad=False ,weight_decay=0.005556000000000001 ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0009898989909090908 ,centered=True ,beta_1=0.27272727272727276 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.696969696969697 ,l1_regularization_strength=0.8080808080808082 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.3535353535353536].
2023-08-22 05:12:50,601 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:12:50,601 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:13:03,997 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:13:03,997 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:13:07,070 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:13:07,071 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:13:10,765 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:13:10,765 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:13:17,376 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.787878787878788 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.36363636363636365 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.16161616161616163].
2023-08-22 05:13:17,376 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.787878787878788 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.36363636363636365 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.16161616161616163].
2023-08-22 05:13:24,338 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5050505050505051, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.29292929292929293 ,rho=0.6262626262626263 ,epsilon=0.0007070707363636364 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.020202020202020204 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.16161616161616163].
2023-08-22 05:13:24,338 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5050505050505051, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.29292929292929293 ,rho=0.6262626262626263 ,epsilon=0.0007070707363636364 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.020202020202020204 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.16161616161616163].
2023-08-22 05:13:27,050 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:13:27,050 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:13:31,849 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:13:31,849 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:13:36,685 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:13:36,685 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:13:47,088 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:13:47,088 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:13:52,202 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.37373737373737376, momentum=0.18181818181818182 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.36363636363636365 ,rho=0.9393939393939394 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.16161616161616163].
2023-08-22 05:13:52,202 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.37373737373737376, momentum=0.18181818181818182 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.36363636363636365 ,rho=0.9393939393939394 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.16161616161616163].
2023-08-22 05:13:53,331 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:13:53,331 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:13:57,688 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4040404040404041, momentum=0.26262626262626265 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8282828282828284 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.4141414141414142 ,beta_2=0.22222222222222224 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.9797979797979799 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.16161616161616163].
2023-08-22 05:13:57,689 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4040404040404041, momentum=0.26262626262626265 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8282828282828284 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.4141414141414142 ,beta_2=0.22222222222222224 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.9797979797979799 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.16161616161616163].
2023-08-22 05:14:07,711 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.5454545454545455 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.797979797979798 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.36363636363636365 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:14:07,711 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.5454545454545455 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.797979797979798 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.36363636363636365 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:14:13,640 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:14:13,641 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:14:18,012 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.494949494949495, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.24242424242424243 ,rho=0.8989898989898991 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.8686868686868687 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.6262626262626263 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.32323232323232326].
2023-08-22 05:14:18,012 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.494949494949495, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.24242424242424243 ,rho=0.8989898989898991 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.8686868686868687 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.6262626262626263 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.32323232323232326].
2023-08-22 05:14:19,022 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:14:19,023 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:14:35,086 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:14:35,086 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:14:35,106 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:14:35,106 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:14:38,104 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:14:38,105 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:14:54,807 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.11111111111111112, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.0 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.7070707070707072 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.8484848484848485 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.10101010101010102].
2023-08-22 05:14:54,807 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.11111111111111112, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.0 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.7070707070707072 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.8484848484848485 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.10101010101010102].
2023-08-22 05:14:55,322 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0008383838545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:14:55,322 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0008383838545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:14:58,052 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:14:58,052 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:15:21,822 INFO: Applying selection operators for generation 88.
2023-08-22 05:15:21,822 INFO: Applying genetic operators for generation 88.
2023-08-22 05:15:21,825 INFO: Evaluating fitness for for generation 88.
2023-08-22 05:15:21,825 INFO: Will evaluate fitness for 28 individuals.
2023-08-22 05:15:22,410 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:15:22,410 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:15:22,419 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:15:22,419 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:15:22,441 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.8989898989898991 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.14141414141414144 ,beta_2=0.04040404040404041 ,learning_rate_power=-0.04040404040404033 ,initial_accumulator_value=0.5858585858585859 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.6565656565656566].
2023-08-22 05:15:22,441 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.8989898989898991 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.14141414141414144 ,beta_2=0.04040404040404041 ,learning_rate_power=-0.04040404040404033 ,initial_accumulator_value=0.5858585858585859 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.6565656565656566].
2023-08-22 05:15:22,459 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:15:22,459 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:15:42,457 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:15:42,457 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:15:42,528 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0009100000000000001 ,use_ema=True ,ema_momentum=0.7373737373737375 ,rho=0.24242424242424243 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.4141414141414142 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.9595959595959597 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.494949494949495].
2023-08-22 05:15:42,528 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0009100000000000001 ,use_ema=True ,ema_momentum=0.7373737373737375 ,rho=0.24242424242424243 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.4141414141414142 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.9595959595959597 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.494949494949495].
2023-08-22 05:15:43,053 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.33333333333333337, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.5252525252525253 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.16161616161616163].
2023-08-22 05:15:43,053 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.33333333333333337, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.5252525252525253 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.16161616161616163].
2023-08-22 05:15:43,093 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:15:43,094 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:16:01,272 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:16:01,272 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:16:01,289 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:16:01,290 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:16:02,487 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:16:02,487 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:16:03,415 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:16:03,415 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:16:21,337 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.595959595959596 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.22222222222222224 ,rho=0.6262626262626263 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.9292929292929294 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.8888888888888888 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:16:21,337 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.595959595959596 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.22222222222222224 ,rho=0.6262626262626263 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.9292929292929294 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.8888888888888888 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:16:22,249 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:16:22,250 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:16:22,368 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:16:22,368 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:16:23,627 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:16:23,628 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:16:42,310 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:16:42,310 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:16:42,461 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:16:42,461 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:16:43,816 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:16:43,816 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:16:48,097 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:16:48,097 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:17:02,559 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0.7676767676767677 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.010101010101010102 ,epsilon=3.030312727272727e-05 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.16161616161616163].
2023-08-22 05:17:02,559 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0.7676767676767677 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.010101010101010102 ,epsilon=3.030312727272727e-05 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.16161616161616163].
2023-08-22 05:17:03,113 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:17:03,113 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:17:03,961 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:17:03,961 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:17:08,019 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9797979797979799, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.0 ,rho=0.6262626262626263 ,epsilon=0.00015151523636363636 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.23232323232323226 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.16161616161616163].
2023-08-22 05:17:08,020 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9797979797979799, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.0 ,rho=0.6262626262626263 ,epsilon=0.00015151523636363636 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.23232323232323226 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.16161616161616163].
2023-08-22 05:17:23,221 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:17:23,221 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:17:25,166 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:17:25,166 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:17:43,203 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:17:43,203 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:17:50,710 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0008383838545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:17:50,710 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0008383838545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:18:10,075 INFO: Applying selection operators for generation 89.
2023-08-22 05:18:10,075 INFO: Applying genetic operators for generation 89.
2023-08-22 05:18:10,078 INFO: Evaluating fitness for for generation 89.
2023-08-22 05:18:10,078 INFO: Will evaluate fitness for 25 individuals.
2023-08-22 05:18:10,632 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.5252525252525253, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.24242424242424243 ,beta_2=0.9494949494949496 ,learning_rate_power=-0.9393939393939394 ,initial_accumulator_value=0.4545454545454546 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.48484848484848486].
2023-08-22 05:18:10,632 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.5252525252525253, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.24242424242424243 ,beta_2=0.9494949494949496 ,learning_rate_power=-0.9393939393939394 ,initial_accumulator_value=0.4545454545454546 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.48484848484848486].
2023-08-22 05:18:10,664 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:18:10,664 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:18:10,674 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:18:10,674 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:18:10,684 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:18:10,685 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:18:30,715 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5252525252525253, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.9090909090909092 ,epsilon=0.0007777778 ,centered=False ,beta_1=0.38383838383838387 ,beta_2=1.0 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.5353535353535354 ,l1_regularization_strength=0.7575757575757577 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7272727272727273 ,beta=0.16161616161616163].
2023-08-22 05:18:30,715 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5252525252525253, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.9090909090909092 ,epsilon=0.0007777778 ,centered=False ,beta_1=0.38383838383838387 ,beta_2=1.0 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.5353535353535354 ,l1_regularization_strength=0.7575757575757577 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7272727272727273 ,beta=0.16161616161616163].
2023-08-22 05:18:30,799 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4444444444444445 ,rho=0.38383838383838387 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.22222222222222224 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.5353535353535352 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:18:30,799 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4444444444444445 ,rho=0.38383838383838387 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.22222222222222224 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.5353535353535352 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:18:36,543 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:18:36,544 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:18:56,423 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:18:56,424 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:18:56,516 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:18:56,517 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:18:58,205 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.27272727272727276].
2023-08-22 05:18:58,205 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.27272727272727276].
2023-08-22 05:19:00,936 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:19:00,937 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:19:16,578 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.16161616161616163].
2023-08-22 05:19:16,579 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.16161616161616163].
2023-08-22 05:19:16,596 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.37373737373737376 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.98989898989899 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5656565656565657 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.7676767676767677].
2023-08-22 05:19:16,596 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.37373737373737376 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.98989898989899 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5656565656565657 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.7676767676767677].
2023-08-22 05:19:17,611 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:19:17,612 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:19:21,247 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.09090909090909091, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6464646464646465 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9696969696969697 ,beta=0.5555555555555556].
2023-08-22 05:19:21,247 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.09090909090909091, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6464646464646465 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9696969696969697 ,beta=0.5555555555555556].
2023-08-22 05:19:36,388 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.16161616161616163].
2023-08-22 05:19:36,388 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.16161616161616163].
2023-08-22 05:19:38,005 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7070707070707072 ,rho=0.08080808080808081 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.8282828282828283 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.686868686868687 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:19:38,005 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7070707070707072 ,rho=0.08080808080808081 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.8282828282828283 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.686868686868687 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:19:49,192 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.16161616161616163].
2023-08-22 05:19:49,192 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.16161616161616163].
2023-08-22 05:19:57,580 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.27272727272727276].
2023-08-22 05:19:57,580 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.27272727272727276].
2023-08-22 05:19:57,660 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.23232323232323235, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=0.0030310000000000007 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.22222222222222224 ,beta_2=1.0 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.16161616161616163].
2023-08-22 05:19:57,660 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.23232323232323235, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=0.0030310000000000007 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.22222222222222224 ,beta_2=1.0 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.16161616161616163].
2023-08-22 05:20:01,925 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.27272727272727276].
2023-08-22 05:20:01,925 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.27272727272727276].
2023-08-22 05:20:09,298 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:20:09,298 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:20:16,067 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0036370000000000005 ,use_ema=True ,ema_momentum=0.7777777777777778 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6262626262626263 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.8080808080808082].
2023-08-22 05:20:16,067 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0036370000000000005 ,use_ema=True ,ema_momentum=0.7777777777777778 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6262626262626263 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.8080808080808082].
2023-08-22 05:20:27,557 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:20:27,557 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:20:43,263 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.19191919191919193 ,nesterov=True ,amsgrad=False ,weight_decay=0.0015160000000000002 ,use_ema=True ,ema_momentum=0.31313131313131315 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.30303030303030304].
2023-08-22 05:20:43,263 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.19191919191919193 ,nesterov=True ,amsgrad=False ,weight_decay=0.0015160000000000002 ,use_ema=True ,ema_momentum=0.31313131313131315 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.30303030303030304].
2023-08-22 05:21:03,955 INFO: Applying selection operators for generation 90.
2023-08-22 05:21:03,955 INFO: Applying genetic operators for generation 90.
2023-08-22 05:21:03,958 INFO: Evaluating fitness for for generation 90.
2023-08-22 05:21:03,958 INFO: Will evaluate fitness for 33 individuals.
2023-08-22 05:21:04,558 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.8484848484848485, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00043434349090909084 ,centered=False ,beta_1=0.7373737373737375 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7676767676767677 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=0.010101010101010102].
2023-08-22 05:21:04,558 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.8484848484848485, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00043434349090909084 ,centered=False ,beta_1=0.7373737373737375 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7676767676767677 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=0.010101010101010102].
2023-08-22 05:21:04,567 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.36363636363636365, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.17171717171717174 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.29292929292929293 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.27272727272727276].
2023-08-22 05:21:04,567 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.36363636363636365, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.17171717171717174 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.29292929292929293 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.27272727272727276].
2023-08-22 05:21:04,578 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.08080808080808081, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.17171717171717174 ,rho=0.010101010101010102 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.26262626262626265 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.27272727272727276].
2023-08-22 05:21:04,578 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.08080808080808081, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.17171717171717174 ,rho=0.010101010101010102 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.26262626262626265 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.27272727272727276].
2023-08-22 05:21:04,579 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:21:04,579 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:21:22,850 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:21:22,851 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:21:23,013 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9494949494949496 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5757575757575758 ,rho=0.17171717171717174 ,epsilon=0.0005555556 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8282828282828284 ,beta=0.27272727272727276].
2023-08-22 05:21:23,013 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9494949494949496 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5757575757575758 ,rho=0.17171717171717174 ,epsilon=0.0005555556 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8282828282828284 ,beta=0.27272727272727276].
2023-08-22 05:21:32,304 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:21:32,304 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:21:32,692 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:21:32,692 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:21:41,023 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5050505050505051, momentum=0.787878787878788 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.020202020202020204 ,rho=0.48484848484848486 ,epsilon=0.0006262626636363636 ,centered=True ,beta_1=0.19191919191919193 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.6565656565656566 ,l1_regularization_strength=0.010101010101010102 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.27272727272727276].
2023-08-22 05:21:41,023 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5050505050505051, momentum=0.787878787878788 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.020202020202020204 ,rho=0.48484848484848486 ,epsilon=0.0006262626636363636 ,centered=True ,beta_1=0.19191919191919193 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.6565656565656566 ,l1_regularization_strength=0.010101010101010102 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.27272727272727276].
2023-08-22 05:21:49,068 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:21:49,068 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:21:50,877 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:21:50,877 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:21:51,936 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:21:51,936 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:22:09,264 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:22:09,264 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:22:09,321 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.27272727272727276 ,rho=0.14141414141414144 ,epsilon=0.0009696969727272727 ,centered=False ,beta_1=0.15151515151515152 ,beta_2=0.9494949494949496 ,learning_rate_power=-0.9393939393939394 ,initial_accumulator_value=0.13131313131313133 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.16161616161616163].
2023-08-22 05:22:09,321 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.27272727272727276 ,rho=0.14141414141414144 ,epsilon=0.0009696969727272727 ,centered=False ,beta_1=0.15151515151515152 ,beta_2=0.9494949494949496 ,learning_rate_power=-0.9393939393939394 ,initial_accumulator_value=0.13131313131313133 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.16161616161616163].
2023-08-22 05:22:09,649 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.5858585858585859, momentum=0.05050505050505051 ,nesterov=False ,amsgrad=False ,weight_decay=0.0045460000000000006 ,use_ema=False ,ema_momentum=0.09090909090909091 ,rho=0.6262626262626263 ,epsilon=9.09091818181818e-05 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7272727272727273 ,beta=0.27272727272727276].
2023-08-22 05:22:09,649 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.5858585858585859, momentum=0.05050505050505051 ,nesterov=False ,amsgrad=False ,weight_decay=0.0045460000000000006 ,use_ema=False ,ema_momentum=0.09090909090909091 ,rho=0.6262626262626263 ,epsilon=9.09091818181818e-05 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7272727272727273 ,beta=0.27272727272727276].
2023-08-22 05:22:10,368 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:22:10,368 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:22:27,654 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:22:27,655 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:22:30,467 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:22:30,467 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:22:37,379 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.06060606060606061, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.006970000000000001 ,use_ema=True ,ema_momentum=0.10101010101010102 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.9797979797979799 ,beta_2=0.9090909090909092 ,learning_rate_power=-0.4242424242424242 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.12121212121212122 ,beta=0.787878787878788].
2023-08-22 05:22:37,379 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.06060606060606061, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.006970000000000001 ,use_ema=True ,ema_momentum=0.10101010101010102 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.9797979797979799 ,beta_2=0.9090909090909092 ,learning_rate_power=-0.4242424242424242 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.12121212121212122 ,beta=0.787878787878788].
2023-08-22 05:22:39,463 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:22:39,464 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:22:47,287 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:22:47,287 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:22:48,943 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:22:48,943 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:22:56,240 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:22:56,240 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:22:59,001 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:22:59,001 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:23:05,982 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:23:05,982 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:23:07,299 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:23:07,299 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:23:14,565 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.004344000000000001 ,use_ema=True ,ema_momentum=0.9191919191919192 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.5252525252525253].
2023-08-22 05:23:14,565 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.004344000000000001 ,use_ema=True ,ema_momentum=0.9191919191919192 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.5252525252525253].
2023-08-22 05:23:24,448 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:23:24,448 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:23:25,650 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:23:25,650 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:23:34,891 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:23:34,891 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:23:44,564 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.787878787878788 ,rho=0.6262626262626263 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.30303030303030304 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.11111111111111112 ,beta=0.6060606060606061].
2023-08-22 05:23:44,564 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.787878787878788 ,rho=0.6262626262626263 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.30303030303030304 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.11111111111111112 ,beta=0.6060606060606061].
2023-08-22 05:23:44,682 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:23:44,682 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:23:55,558 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:23:55,558 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:24:13,160 INFO: Applying selection operators for generation 91.
2023-08-22 05:24:13,161 INFO: Applying genetic operators for generation 91.
2023-08-22 05:24:13,163 INFO: Evaluating fitness for for generation 91.
2023-08-22 05:24:13,163 INFO: Will evaluate fitness for 26 individuals.
2023-08-22 05:24:13,771 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:24:13,771 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:24:13,827 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:24:13,827 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:24:13,827 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:24:13,828 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:24:13,839 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:24:13,840 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:24:31,948 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:24:31,949 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:24:32,091 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:24:32,091 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:24:32,422 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:24:32,422 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:24:33,076 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:24:33,077 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:24:50,128 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:24:50,128 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:24:50,836 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:24:50,836 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:24:51,397 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:24:51,397 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:24:51,793 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.05050505050505051 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.888888888888889 ,rho=0.6262626262626263 ,epsilon=0.0008181818363636363 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.686868686868687 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.5757575757575758].
2023-08-22 05:24:51,794 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.05050505050505051 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.888888888888889 ,rho=0.6262626262626263 ,epsilon=0.0008181818363636363 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.686868686868687 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.5757575757575758].
2023-08-22 05:25:08,200 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.020202020202020204, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.5858585858585859 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.8080808080808082 ,beta_2=0.9292929292929294 ,learning_rate_power=-0.3939393939393939 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8787878787878789 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5757575757575758 ,beta=0.8989898989898991].
2023-08-22 05:25:08,201 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.020202020202020204, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.5858585858585859 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.8080808080808082 ,beta_2=0.9292929292929294 ,learning_rate_power=-0.3939393939393939 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8787878787878789 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5757575757575758 ,beta=0.8989898989898991].
2023-08-22 05:25:09,224 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:25:09,224 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:25:09,657 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7777777777777778 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.10101010101010102 ,beta_2=0.12121212121212122 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.595959595959596 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.27272727272727276].
2023-08-22 05:25:09,658 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7777777777777778 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.10101010101010102 ,beta_2=0.12121212121212122 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.595959595959596 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.27272727272727276].
2023-08-22 05:25:17,693 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.42424242424242425, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.6262626262626263 ,epsilon=0.00010101019090909089 ,centered=False ,beta_1=0.20202020202020204 ,beta_2=0.20202020202020204 ,learning_rate_power=-0.9292929292929293 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:25:17,693 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.42424242424242425, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.6262626262626263 ,epsilon=0.00010101019090909089 ,centered=False ,beta_1=0.20202020202020204 ,beta_2=0.20202020202020204 ,learning_rate_power=-0.9292929292929293 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.16161616161616163].
2023-08-22 05:25:26,538 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:25:26,539 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:25:28,695 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:25:28,695 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:25:28,836 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.5050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8282828282828284 ,rho=0.14141414141414144 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.494949494949495 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.9595959595959597].
2023-08-22 05:25:28,837 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.5050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8282828282828284 ,rho=0.14141414141414144 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.494949494949495 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.9595959595959597].
2023-08-22 05:25:44,272 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:25:44,272 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:25:44,866 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:25:44,867 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:25:47,477 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:25:47,477 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:25:57,339 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:25:57,339 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:26:02,760 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:26:02,761 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:26:03,179 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.5555555555555556, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.11111111111111112 ,rho=0.6262626262626263 ,epsilon=0.0008383838545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.13131313131313133 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6060606060606061].
2023-08-22 05:26:03,179 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.5555555555555556, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.11111111111111112 ,rho=0.6262626262626263 ,epsilon=0.0008383838545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.13131313131313133 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6060606060606061].
2023-08-22 05:26:21,211 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:26:21,211 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:26:38,559 INFO: Applying selection operators for generation 92.
2023-08-22 05:26:38,559 INFO: Applying genetic operators for generation 92.
2023-08-22 05:26:38,562 INFO: Evaluating fitness for for generation 92.
2023-08-22 05:26:38,562 INFO: Will evaluate fitness for 28 individuals.
2023-08-22 05:26:39,141 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:26:39,141 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:26:39,141 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:26:39,141 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:26:39,169 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00040404046363636356 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.07070707070707072].
2023-08-22 05:26:39,169 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00040404046363636356 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.07070707070707072].
2023-08-22 05:26:39,192 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:26:39,192 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:26:57,563 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:26:57,563 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:26:58,116 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:26:58,116 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:26:58,369 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.8686868686868687 ,nesterov=True ,amsgrad=False ,weight_decay=0.0026270000000000004 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6666666666666667 ,epsilon=0.0008888889 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.5151515151515151 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.9696969696969697].
2023-08-22 05:26:58,370 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.8686868686868687 ,nesterov=True ,amsgrad=False ,weight_decay=0.0026270000000000004 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6666666666666667 ,epsilon=0.0008888889 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.5151515151515151 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.9696969696969697].
2023-08-22 05:27:07,382 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.595959595959596, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.002829000000000001 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.22222222222222224 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.696969696969697 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.8484848484848485].
2023-08-22 05:27:07,382 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.595959595959596, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.002829000000000001 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.22222222222222224 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.696969696969697 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.8484848484848485].
2023-08-22 05:27:15,777 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.05050505050505051, momentum=0.12121212121212122 ,nesterov=False ,amsgrad=False ,weight_decay=0.001213 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.04040404040404041 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.38383838383838387 ,beta=0.27272727272727276].
2023-08-22 05:27:15,777 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.05050505050505051, momentum=0.12121212121212122 ,nesterov=False ,amsgrad=False ,weight_decay=0.001213 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.04040404040404041 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.38383838383838387 ,beta=0.27272727272727276].
2023-08-22 05:27:16,442 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:27:16,443 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:27:25,156 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:27:25,156 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:27:26,418 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.98989898989899 ,rho=0.6262626262626263 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.9292929292929294 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.08080808080808081 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.27272727272727276].
2023-08-22 05:27:26,418 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.98989898989899 ,rho=0.6262626262626263 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.9292929292929294 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.08080808080808081 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.27272727272727276].
2023-08-22 05:27:34,638 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:27:34,639 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:27:43,721 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:27:43,722 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:27:44,611 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:27:44,611 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:27:52,899 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.06060606060606061 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.16161616161616163 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.8787878787878788 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.4545454545454546].
2023-08-22 05:27:52,900 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.06060606060606061 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.16161616161616163 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.8787878787878788 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.4545454545454546].
2023-08-22 05:27:58,555 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:27:58,555 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:28:02,170 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:28:02,171 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:28:03,171 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:28:03,171 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:28:17,428 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:28:17,428 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:28:18,868 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.30303030303030304 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5555555555555556 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.8181818181818181 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.4646464646464647 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7777777777777778 ,beta=0.27272727272727276].
2023-08-22 05:28:18,868 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.30303030303030304 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5555555555555556 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.8181818181818181 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.4646464646464647 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7777777777777778 ,beta=0.27272727272727276].
2023-08-22 05:28:20,722 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.36363636363636365, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8282828282828284 ,rho=0.030303030303030304 ,epsilon=0.0004747475272727272 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.4444444444444445].
2023-08-22 05:28:20,722 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.36363636363636365, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8282828282828284 ,rho=0.030303030303030304 ,epsilon=0.0004747475272727272 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.4444444444444445].
2023-08-22 05:28:21,670 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:28:21,670 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:28:36,034 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:28:36,034 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:28:40,116 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.6161616161616162, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=0.005152000000000001 ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00035353541818181815 ,centered=False ,beta_1=0.7777777777777778 ,beta_2=0.6666666666666667 ,learning_rate_power=0.0 ,initial_accumulator_value=0.8181818181818182 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.8484848484848485].
2023-08-22 05:28:40,116 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.6161616161616162, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=0.005152000000000001 ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00035353541818181815 ,centered=False ,beta_1=0.7777777777777778 ,beta_2=0.6666666666666667 ,learning_rate_power=0.0 ,initial_accumulator_value=0.8181818181818182 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.8484848484848485].
2023-08-22 05:28:44,702 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:28:44,703 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:28:59,014 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.7575757575757577, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0006161616545454546 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8282828282828284 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5151515151515152 ,beta=0.27272727272727276].
2023-08-22 05:28:59,014 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.7575757575757577, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.0006161616545454546 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8282828282828284 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5151515151515152 ,beta=0.27272727272727276].
2023-08-22 05:29:03,588 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:29:03,588 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:29:25,541 INFO: Applying selection operators for generation 93.
2023-08-22 05:29:25,542 INFO: Applying genetic operators for generation 93.
2023-08-22 05:29:25,545 INFO: Evaluating fitness for for generation 93.
2023-08-22 05:29:25,545 INFO: Will evaluate fitness for 37 individuals.
2023-08-22 05:29:26,143 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:29:26,143 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:29:26,164 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.7070707070707072 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.2828282828282829 ,rho=0.22222222222222224 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.7272727272727273 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8585858585858587 ,beta=0.6666666666666667].
2023-08-22 05:29:26,164 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.7070707070707072 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.2828282828282829 ,rho=0.22222222222222224 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.7272727272727273 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8585858585858587 ,beta=0.6666666666666667].
2023-08-22 05:29:26,216 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.12121212121212122, momentum=0.31313131313131315 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9797979797979799 ,rho=0.787878787878788 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.31313131313131315 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=1.0].
2023-08-22 05:29:26,216 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.12121212121212122, momentum=0.31313131313131315 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9797979797979799 ,rho=0.787878787878788 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.31313131313131315 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=1.0].
2023-08-22 05:29:26,267 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:29:26,267 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:29:44,330 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:29:44,330 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:29:44,812 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:29:44,813 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:29:52,448 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:29:52,448 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:29:52,848 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:29:52,848 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:30:02,460 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.686868686868687, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.0009494949545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.303030303030303 ,initial_accumulator_value=0.4545454545454546 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.7676767676767677].
2023-08-22 05:30:02,461 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.686868686868687, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.0009494949545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.303030303030303 ,initial_accumulator_value=0.4545454545454546 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.7676767676767677].
2023-08-22 05:30:03,321 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.05050505050505051, momentum=0.23232323232323235 ,nesterov=False ,amsgrad=True ,weight_decay=0.004849000000000001 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.6262626262626263 ,epsilon=0.00040404046363636356 ,centered=False ,beta_1=0.5757575757575758 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:30:03,322 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.05050505050505051, momentum=0.23232323232323235 ,nesterov=False ,amsgrad=True ,weight_decay=0.004849000000000001 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.6262626262626263 ,epsilon=0.00040404046363636356 ,centered=False ,beta_1=0.5757575757575758 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:30:10,963 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.6666666666666667, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=0.002829000000000001 ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4747474747474748 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.23232323232323226 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.27272727272727276].
2023-08-22 05:30:10,963 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.6666666666666667, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=0.002829000000000001 ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4747474747474748 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.23232323232323226 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.27272727272727276].
2023-08-22 05:30:11,225 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:30:11,225 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:30:19,828 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:30:19,828 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:30:29,823 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8989898989898991 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.393939393939394].
2023-08-22 05:30:29,823 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8989898989898991 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.393939393939394].
2023-08-22 05:30:30,017 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:30:30,017 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:30:33,277 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.38383838383838387, momentum=0.9292929292929294 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.18181818181818182 ,rho=0.030303030303030304 ,epsilon=0.0006262626636363636 ,centered=False ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:30:33,278 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.38383838383838387, momentum=0.9292929292929294 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.18181818181818182 ,rho=0.030303030303030304 ,epsilon=0.0006262626636363636 ,centered=False ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:30:38,815 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:30:38,815 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:30:48,400 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:30:48,400 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:30:57,239 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:30:57,239 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:31:00,947 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:31:00,947 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:31:06,821 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:31:06,822 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:31:14,892 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:31:14,893 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:31:15,535 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:31:15,536 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:31:19,581 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:31:19,581 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:31:26,137 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:31:26,137 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:31:33,741 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:31:33,741 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:31:34,272 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.05050505050505051, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0047480000000000005 ,use_ema=False ,ema_momentum=0.16161616161616163 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.7777777777777778 ,beta_2=0.8787878787878789 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4040404040404041 ,l1_regularization_strength=0.686868686868687 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.27272727272727276].
2023-08-22 05:31:34,272 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.05050505050505051, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0047480000000000005 ,use_ema=False ,ema_momentum=0.16161616161616163 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.7777777777777778 ,beta_2=0.8787878787878789 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4040404040404041 ,l1_regularization_strength=0.686868686868687 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.27272727272727276].
2023-08-22 05:31:38,190 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:31:38,190 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:31:44,751 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:31:44,751 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:31:51,896 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:31:51,896 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:31:56,804 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.5151515151515152, momentum=0.7171717171717172 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.030303030303030304 ,epsilon=7.070716363636363e-05 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.04040404040404041 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.36363636363636365 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.6060606060606061].
2023-08-22 05:31:56,804 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.5151515151515152, momentum=0.7171717171717172 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.030303030303030304 ,epsilon=7.070716363636363e-05 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.04040404040404041 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.36363636363636365 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.6060606060606061].
2023-08-22 05:32:01,684 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:32:01,684 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6161616161616162 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:32:03,244 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:32:03,244 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:32:09,962 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:32:09,963 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:32:20,392 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.7272727272727273, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.0005959596363636363 ,centered=True ,beta_1=0.6464646464646465 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.2828282828282829 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.10101010101010102].
2023-08-22 05:32:20,392 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.7272727272727273, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.0005959596363636363 ,centered=True ,beta_1=0.6464646464646465 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.2828282828282829 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.10101010101010102].
2023-08-22 05:32:27,825 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0.7676767676767677 ,nesterov=False ,amsgrad=False ,weight_decay=0.004849000000000001 ,use_ema=True ,ema_momentum=0.5353535353535354 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.4141414141414142 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7272727272727273 ,beta=0.11111111111111112].
2023-08-22 05:32:27,825 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0.7676767676767677 ,nesterov=False ,amsgrad=False ,weight_decay=0.004849000000000001 ,use_ema=True ,ema_momentum=0.5353535353535354 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.4141414141414142 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7272727272727273 ,beta=0.11111111111111112].
2023-08-22 05:32:38,664 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:32:38,664 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:32:56,406 INFO: Applying selection operators for generation 94.
2023-08-22 05:32:56,406 INFO: Applying genetic operators for generation 94.
2023-08-22 05:32:56,409 INFO: Evaluating fitness for for generation 94.
2023-08-22 05:32:56,409 INFO: Will evaluate fitness for 29 individuals.
2023-08-22 05:32:57,012 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:32:57,013 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:32:57,103 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8181818181818182 ,rho=0.888888888888889 ,epsilon=0.00023232330909090908 ,centered=True ,beta_1=0.8181818181818182 ,beta_2=0.36363636363636365 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:32:57,104 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8181818181818182 ,rho=0.888888888888889 ,epsilon=0.00023232330909090908 ,centered=True ,beta_1=0.8181818181818182 ,beta_2=0.36363636363636365 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:32:57,156 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.797979797979798 ,nesterov=True ,amsgrad=True ,weight_decay=0.008889000000000001 ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.30303030303030304 ,epsilon=0.0009090909181818181 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.26262626262626265].
2023-08-22 05:32:57,156 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.797979797979798 ,nesterov=True ,amsgrad=True ,weight_decay=0.008889000000000001 ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.30303030303030304 ,epsilon=0.0009090909181818181 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.26262626262626265].
2023-08-22 05:32:57,158 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:32:57,158 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:33:15,246 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:33:15,246 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:33:15,541 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:33:15,542 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:33:15,637 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.6363636363636365, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=0.004344000000000001 ,use_ema=False ,ema_momentum=0.9696969696969697 ,rho=0.030303030303030304 ,epsilon=2.020211818181818e-05 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.7474747474747475 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.7676767676767677].
2023-08-22 05:33:15,637 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.6363636363636365, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=0.004344000000000001 ,use_ema=False ,ema_momentum=0.9696969696969697 ,rho=0.030303030303030304 ,epsilon=2.020211818181818e-05 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.7474747474747475 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.7676767676767677].
2023-08-22 05:33:25,275 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:33:25,275 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:33:33,503 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:33:33,503 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:33:34,653 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:33:34,653 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:33:34,795 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6161616161616162, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.9393939393939394].
2023-08-22 05:33:34,796 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6161616161616162, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.9393939393939394].
2023-08-22 05:33:43,922 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:33:43,922 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:33:51,718 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:33:51,719 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:33:53,318 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.31313131313131315 ,rho=0.030303030303030304 ,epsilon=0.00014141422727272727 ,centered=False ,beta_1=0.11111111111111112 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.9696969696969697 ,l1_regularization_strength=0.42424242424242425 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.020202020202020204].
2023-08-22 05:33:53,319 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.31313131313131315 ,rho=0.030303030303030304 ,epsilon=0.00014141422727272727 ,centered=False ,beta_1=0.11111111111111112 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.9696969696969697 ,l1_regularization_strength=0.42424242424242425 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.020202020202020204].
2023-08-22 05:34:02,555 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:34:02,555 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:34:02,606 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:34:02,606 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:34:09,924 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:34:09,924 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:34:11,838 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.23232323232323235, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9292929292929294 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.6666666666666667 ,beta_2=0.696969696969697 ,learning_rate_power=0.0 ,initial_accumulator_value=0.11111111111111112 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.38383838383838387 ,beta=0.27272727272727276].
2023-08-22 05:34:11,839 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.23232323232323235, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9292929292929294 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.6666666666666667 ,beta_2=0.696969696969697 ,learning_rate_power=0.0 ,initial_accumulator_value=0.11111111111111112 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.38383838383838387 ,beta=0.27272727272727276].
2023-08-22 05:34:21,099 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:34:21,099 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:34:21,937 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.006263000000000001 ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=2.020211818181818e-05 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.07070707070707072 ,learning_rate_power=0.0 ,initial_accumulator_value=0.797979797979798 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5757575757575758 ,beta=0.8383838383838385].
2023-08-22 05:34:21,937 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.006263000000000001 ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=2.020211818181818e-05 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.07070707070707072 ,learning_rate_power=0.0 ,initial_accumulator_value=0.797979797979798 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5757575757575758 ,beta=0.8383838383838385].
2023-08-22 05:34:28,973 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:34:28,973 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:34:38,317 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.9292929292929294 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.30303030303030304 ,beta=0.27272727272727276].
2023-08-22 05:34:38,317 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.9292929292929294 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.30303030303030304 ,beta=0.27272727272727276].
2023-08-22 05:34:39,567 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9797979797979799 ,rho=0.9292929292929294 ,epsilon=0.000454545509090909 ,centered=False ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.05050505050505051 ,l1_regularization_strength=0.595959595959596 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.2828282828282829].
2023-08-22 05:34:39,567 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9797979797979799 ,rho=0.9292929292929294 ,epsilon=0.000454545509090909 ,centered=False ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.05050505050505051 ,l1_regularization_strength=0.595959595959596 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.2828282828282829].
2023-08-22 05:34:41,046 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.21212121212121213, momentum=0.43434343434343436 ,nesterov=False ,amsgrad=True ,weight_decay=0.00010200000000000001 ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.19191919191919193 ,epsilon=0.0002929293636363636 ,centered=True ,beta_1=0.14141414141414144 ,beta_2=0.9090909090909092 ,learning_rate_power=-0.4545454545454545 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.2828282828282829].
2023-08-22 05:34:41,046 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.21212121212121213, momentum=0.43434343434343436 ,nesterov=False ,amsgrad=True ,weight_decay=0.00010200000000000001 ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.19191919191919193 ,epsilon=0.0002929293636363636 ,centered=True ,beta_1=0.14141414141414144 ,beta_2=0.9090909090909092 ,learning_rate_power=-0.4545454545454545 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.2828282828282829].
2023-08-22 05:34:47,328 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:34:47,328 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:34:57,357 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.32323232323232326, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7474747474747475 ,rho=0.030303030303030304 ,epsilon=0.0009595959636363636 ,centered=False ,beta_1=0.31313131313131315 ,beta_2=0.888888888888889 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.27272727272727276].
2023-08-22 05:34:57,357 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.32323232323232326, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7474747474747475 ,rho=0.030303030303030304 ,epsilon=0.0009595959636363636 ,centered=False ,beta_1=0.31313131313131315 ,beta_2=0.888888888888889 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.27272727272727276].
2023-08-22 05:35:05,611 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:35:05,611 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:35:05,759 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=1.0, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.48484848484848486 ,rho=0.030303030303030304 ,epsilon=0.0009595959636363636 ,centered=True ,beta_1=0.04040404040404041 ,beta_2=0.22222222222222224 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5151515151515152 ,beta=0.9393939393939394].
2023-08-22 05:35:05,759 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=1.0, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.48484848484848486 ,rho=0.030303030303030304 ,epsilon=0.0009595959636363636 ,centered=True ,beta_1=0.04040404040404041 ,beta_2=0.22222222222222224 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5151515151515152 ,beta=0.9393939393939394].
2023-08-22 05:35:16,741 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:35:16,742 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:35:34,553 INFO: Applying selection operators for generation 95.
2023-08-22 05:35:34,553 INFO: Applying genetic operators for generation 95.
2023-08-22 05:35:34,556 INFO: Evaluating fitness for for generation 95.
2023-08-22 05:35:34,556 INFO: Will evaluate fitness for 31 individuals.
2023-08-22 05:35:35,134 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:35:35,134 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:35:35,172 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0021220000000000006 ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.8787878787878789 ,epsilon=0.0007676767909090908 ,centered=False ,beta_1=0.7777777777777778 ,beta_2=0.9090909090909092 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.595959595959596 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.27272727272727276].
2023-08-22 05:35:35,172 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0021220000000000006 ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.8787878787878789 ,epsilon=0.0007676767909090908 ,centered=False ,beta_1=0.7777777777777778 ,beta_2=0.9090909090909092 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.595959595959596 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.27272727272727276].
2023-08-22 05:35:35,278 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:35:35,279 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:35:35,302 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:35:35,303 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:35:53,728 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.16161616161616163, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.7171717171717172 ,epsilon=0.0009898989909090908 ,centered=False ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.13131313131313133].
2023-08-22 05:35:53,728 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.16161616161616163, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.7171717171717172 ,epsilon=0.0009898989909090908 ,centered=False ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.13131313131313133].
2023-08-22 05:35:53,816 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:35:53,816 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:35:53,891 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:35:53,892 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:35:53,914 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:35:53,914 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:36:12,229 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:36:12,230 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:36:12,522 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.12121212121212122, momentum=0.9292929292929294 ,nesterov=False ,amsgrad=False ,weight_decay=0.002829000000000001 ,use_ema=True ,ema_momentum=0.7777777777777778 ,rho=0.43434343434343436 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.6464646464646464 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.27272727272727276 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:36:12,522 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.12121212121212122, momentum=0.9292929292929294 ,nesterov=False ,amsgrad=False ,weight_decay=0.002829000000000001 ,use_ema=True ,ema_momentum=0.7777777777777778 ,rho=0.43434343434343436 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.6464646464646464 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.27272727272727276 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:36:13,023 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:36:13,023 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:36:20,730 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.9696969696969697, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.48484848484848486 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.21212121212121213 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.38383838383838387 ,beta=0.27272727272727276].
2023-08-22 05:36:20,730 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.9696969696969697, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.48484848484848486 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.21212121212121213 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.38383838383838387 ,beta=0.27272727272727276].
2023-08-22 05:36:30,747 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.8787878787878789, momentum=0.9292929292929294 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.787878787878788 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.09090909090909091 ,beta_2=0.18181818181818182 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.5151515151515152].
2023-08-22 05:36:30,747 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.8787878787878789, momentum=0.9292929292929294 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.787878787878788 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.09090909090909091 ,beta_2=0.18181818181818182 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.5151515151515152].
2023-08-22 05:36:31,514 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:36:31,515 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:36:32,819 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:36:32,819 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:36:39,314 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:36:39,315 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:36:50,160 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:36:50,161 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:36:51,716 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:36:51,716 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:36:57,391 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:36:57,391 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:36:57,904 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:36:57,905 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:37:08,461 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:37:08,462 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:37:10,427 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.686868686868687, momentum=0.9494949494949496 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.8080808080808082 ,epsilon=0.00024242431818181817 ,centered=False ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.7272727272727273 ,initial_accumulator_value=0.6666666666666667 ,l1_regularization_strength=0.23232323232323235 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5151515151515152 ,beta=0.31313131313131315].
2023-08-22 05:37:10,428 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.686868686868687, momentum=0.9494949494949496 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.8080808080808082 ,epsilon=0.00024242431818181817 ,centered=False ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.7272727272727273 ,initial_accumulator_value=0.6666666666666667 ,l1_regularization_strength=0.23232323232323235 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5151515151515152 ,beta=0.31313131313131315].
2023-08-22 05:37:16,705 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.05050505050505051, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.0008080808272727272 ,centered=True ,beta_1=0.09090909090909091 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4141414141414142 ,l1_regularization_strength=0.42424242424242425 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.27272727272727276].
2023-08-22 05:37:16,705 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.05050505050505051, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.0008080808272727272 ,centered=True ,beta_1=0.09090909090909091 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4141414141414142 ,l1_regularization_strength=0.42424242424242425 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.27272727272727276].
2023-08-22 05:37:17,293 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.05050505050505051, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.004647000000000001 ,use_ema=False ,ema_momentum=0.21212121212121213 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.26262626262626254 ,initial_accumulator_value=0.6161616161616162 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.27272727272727276].
2023-08-22 05:37:17,293 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.05050505050505051, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.004647000000000001 ,use_ema=False ,ema_momentum=0.21212121212121213 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.26262626262626254 ,initial_accumulator_value=0.6161616161616162 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.27272727272727276].
2023-08-22 05:37:26,608 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.05050505050505051, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8080808080808082 ,rho=0.5454545454545455 ,epsilon=0.0008383838545454545 ,centered=True ,beta_1=0.20202020202020204 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.5353535353535352 ,initial_accumulator_value=0.9393939393939394 ,l1_regularization_strength=0.4040404040404041 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.26262626262626265].
2023-08-22 05:37:26,608 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.05050505050505051, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8080808080808082 ,rho=0.5454545454545455 ,epsilon=0.0008383838545454545 ,centered=True ,beta_1=0.20202020202020204 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.5353535353535352 ,initial_accumulator_value=0.9393939393939394 ,l1_regularization_strength=0.4040404040404041 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.26262626262626265].
2023-08-22 05:37:39,304 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:37:39,304 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:37:45,092 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:37:45,093 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:37:55,476 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:37:55,476 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:37:57,931 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:37:57,932 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:38:03,699 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:38:03,700 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:38:04,170 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.4646464646464647, momentum=0.9292929292929294 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.9494949494949496 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.27272727272727276].
2023-08-22 05:38:04,170 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.4646464646464647, momentum=0.9292929292929294 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.9494949494949496 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.27272727272727276].
2023-08-22 05:38:31,116 INFO: Applying selection operators for generation 96.
2023-08-22 05:38:31,117 INFO: Applying genetic operators for generation 96.
2023-08-22 05:38:31,119 INFO: Evaluating fitness for for generation 96.
2023-08-22 05:38:31,119 INFO: Will evaluate fitness for 32 individuals.
2023-08-22 05:38:31,686 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:38:31,687 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:38:31,692 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:38:31,692 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:38:31,805 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:38:31,805 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:38:31,835 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:38:31,836 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:38:49,859 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:38:49,859 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:38:50,042 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.14141414141414144 ,epsilon=0.0005656566090909091 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.11111111111111112 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.27272727272727276].
2023-08-22 05:38:50,043 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.14141414141414144 ,epsilon=0.0005656566090909091 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.11111111111111112 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.27272727272727276].
2023-08-22 05:38:50,223 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:38:50,223 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:38:50,437 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:38:50,438 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:39:08,062 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.5353535353535354, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.31313131313131315 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5656565656565657 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:39:08,062 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.5353535353535354, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.31313131313131315 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5656565656565657 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:39:08,416 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.888888888888889, momentum=0.48484848484848486 ,nesterov=True ,amsgrad=True ,weight_decay=0.0025260000000000005 ,use_ema=True ,ema_momentum=0.05050505050505051 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5858585858585859 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.27272727272727276].
2023-08-22 05:39:08,416 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.888888888888889, momentum=0.48484848484848486 ,nesterov=True ,amsgrad=True ,weight_decay=0.0025260000000000005 ,use_ema=True ,ema_momentum=0.05050505050505051 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5858585858585859 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.27272727272727276].
2023-08-22 05:39:08,975 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=0.005455000000000001 ,use_ema=True ,ema_momentum=0.9191919191919192 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.8282828282828284 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9191919191919192 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.7272727272727273].
2023-08-22 05:39:08,975 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=0.005455000000000001 ,use_ema=True ,ema_momentum=0.9191919191919192 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.8282828282828284 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9191919191919192 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.7272727272727273].
2023-08-22 05:39:09,250 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:39:09,251 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:39:26,135 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:39:26,135 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:39:27,890 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:39:27,890 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:39:38,741 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:39:38,741 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:39:38,846 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:39:38,847 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:39:44,276 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:39:44,276 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:39:46,674 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:39:46,674 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:39:57,329 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.26262626262626265, momentum=0.33333333333333337 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.26262626262626265 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.4040404040404041 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.5555555555555556].
2023-08-22 05:39:57,329 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.26262626262626265, momentum=0.33333333333333337 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.26262626262626265 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.4040404040404041 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.5555555555555556].
2023-08-22 05:39:57,458 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:39:57,459 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:40:03,338 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:40:03,338 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:40:05,177 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.6767676767676768 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.09090909090909091 ,rho=0.7373737373737375 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.13131313131313133 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:40:05,177 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.6767676767676768 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.09090909090909091 ,rho=0.7373737373737375 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.13131313131313133 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:40:16,863 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:40:16,863 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:40:17,461 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:40:17,461 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:40:21,793 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:40:21,794 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:40:32,384 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.595959595959596, momentum=0.9292929292929294 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.9292929292929294 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.24242424242424243 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7777777777777778 ,beta=0.27272727272727276].
2023-08-22 05:40:32,384 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.595959595959596, momentum=0.9292929292929294 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.9292929292929294 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.24242424242424243 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7777777777777778 ,beta=0.27272727272727276].
2023-08-22 05:40:35,509 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:40:35,510 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:40:35,889 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:40:35,889 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:40:40,065 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=False ,amsgrad=True ,weight_decay=0.003839000000000001 ,use_ema=True ,ema_momentum=0.6464646464646465 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.8080808080808082 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.30303030303030304 ,beta=0.8686868686868687].
2023-08-22 05:40:40,066 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=False ,amsgrad=True ,weight_decay=0.003839000000000001 ,use_ema=True ,ema_momentum=0.6464646464646465 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.8080808080808082 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.30303030303030304 ,beta=0.8686868686868687].
2023-08-22 05:40:50,698 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:40:50,698 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:40:54,236 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:40:54,236 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:40:54,256 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.7777777777777778, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.9696969696969697 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.98989898989899 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.6767676767676768 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.7171717171717172].
2023-08-22 05:40:54,256 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.7777777777777778, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.9696969696969697 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.98989898989899 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.6767676767676768 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.7171717171717172].
2023-08-22 05:41:12,865 INFO: Applying selection operators for generation 97.
2023-08-22 05:41:12,866 INFO: Applying genetic operators for generation 97.
2023-08-22 05:41:12,868 INFO: Evaluating fitness for for generation 97.
2023-08-22 05:41:12,868 INFO: Will evaluate fitness for 33 individuals.
2023-08-22 05:41:13,422 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.4444444444444445, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4040404040404041 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.5555555555555556 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:41:13,423 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.4444444444444445, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4040404040404041 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.5555555555555556 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:41:13,551 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.05050505050505051, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.6464646464646465 ,beta_2=0.5353535353535354 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.27272727272727276].
2023-08-22 05:41:13,552 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.05050505050505051, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.6464646464646465 ,beta_2=0.5353535353535354 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.27272727272727276].
2023-08-22 05:41:13,582 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:41:13,582 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:41:13,597 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.9191919191919192, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.18181818181818182 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.7777777777777778 ,beta_2=0.5050505050505051 ,learning_rate_power=-0.2727272727272727 ,initial_accumulator_value=0.19191919191919193 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.27272727272727276].
2023-08-22 05:41:13,598 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.9191919191919192, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.18181818181818182 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.7777777777777778 ,beta_2=0.5050505050505051 ,learning_rate_power=-0.2727272727272727 ,initial_accumulator_value=0.19191919191919193 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.27272727272727276].
2023-08-22 05:41:32,165 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.9393939393939394, momentum=0.5555555555555556 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.5656565656565657 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.8383838383838385 ,beta_2=0.13131313131313133 ,learning_rate_power=-0.8484848484848485 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.6767676767676768].
2023-08-22 05:41:32,166 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.9393939393939394, momentum=0.5555555555555556 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.5656565656565657 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.8383838383838385 ,beta_2=0.13131313131313133 ,learning_rate_power=-0.8484848484848485 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.6767676767676768].
2023-08-22 05:41:41,347 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:41:41,348 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:41:41,578 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.494949494949495, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.003839000000000001 ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.5353535353535354 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.030303030303030304 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.4646464646464647].
2023-08-22 05:41:41,578 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.494949494949495, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.003839000000000001 ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.5353535353535354 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.030303030303030304 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.4646464646464647].
2023-08-22 05:41:59,894 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.11111111111111112, momentum=0.9292929292929294 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.32323232323232326 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.8585858585858586 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.2828282828282829 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.5252525252525253].
2023-08-22 05:41:59,895 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.11111111111111112, momentum=0.9292929292929294 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.32323232323232326 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.8585858585858586 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.2828282828282829 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.5252525252525253].
2023-08-22 05:42:00,605 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:42:00,605 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:42:00,792 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:42:00,793 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:42:01,884 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.2828282828282829, momentum=0.9292929292929294 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7272727272727273 ,rho=0.22222222222222224 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.8282828282828284 ,beta_2=0.38383838383838387 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:42:01,884 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.2828282828282829, momentum=0.9292929292929294 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7272727272727273 ,rho=0.22222222222222224 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.8282828282828284 ,beta_2=0.38383838383838387 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:42:18,892 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:42:18,892 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:42:19,291 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:42:19,291 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:42:27,295 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:42:27,295 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:42:32,195 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:42:32,196 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:42:37,210 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.05050505050505051, momentum=0.9090909090909092 ,nesterov=True ,amsgrad=False ,weight_decay=0.009192 ,use_ema=True ,ema_momentum=0.888888888888889 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.3939393939393939 ,initial_accumulator_value=0.08080808080808081 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.15151515151515152 ,beta=0.27272727272727276].
2023-08-22 05:42:37,211 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.05050505050505051, momentum=0.9090909090909092 ,nesterov=True ,amsgrad=False ,weight_decay=0.009192 ,use_ema=True ,ema_momentum=0.888888888888889 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.3939393939393939 ,initial_accumulator_value=0.08080808080808081 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.15151515151515152 ,beta=0.27272727272727276].
2023-08-22 05:42:37,780 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:42:37,781 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:42:45,771 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:42:45,771 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:42:50,885 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:42:51,185 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:42:57,213 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:42:57,213 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:43:05,219 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:43:05,219 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:43:05,799 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:43:05,799 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:43:09,881 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:43:09,881 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:43:15,925 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:43:15,925 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:43:23,863 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:43:23,863 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:43:23,950 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:43:23,950 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:43:28,505 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:43:28,505 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:43:34,576 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:43:34,576 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:43:43,247 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5050505050505051 ,beta_2=0.7777777777777778 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.030303030303030304 ,beta=0.27272727272727276].
2023-08-22 05:43:43,247 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5050505050505051 ,beta_2=0.7777777777777778 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.030303030303030304 ,beta=0.27272727272727276].
2023-08-22 05:43:47,211 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:43:47,211 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:43:53,081 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:43:53,081 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:44:00,933 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:44:00,933 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:44:06,576 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:44:06,576 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:44:24,590 INFO: Applying selection operators for generation 98.
2023-08-22 05:44:24,591 INFO: Applying genetic operators for generation 98.
2023-08-22 05:44:24,593 INFO: Evaluating fitness for for generation 98.
2023-08-22 05:44:24,593 INFO: Will evaluate fitness for 34 individuals.
2023-08-22 05:44:25,166 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:44:25,166 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:44:25,292 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:44:25,292 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:44:25,324 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:44:25,324 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:44:25,330 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:44:25,330 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:44:43,341 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:44:43,341 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:44:43,788 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:44:43,788 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:44:43,843 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:44:43,843 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:44:43,937 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:44:43,937 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:45:01,447 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.4545454545454546 ,epsilon=0.0009595959636363636 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.8181818181818182 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.43434343434343436 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7777777777777778].
2023-08-22 05:45:01,448 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.4545454545454546 ,epsilon=0.0009595959636363636 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.8181818181818182 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.43434343434343436 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7777777777777778].
2023-08-22 05:45:02,239 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:45:02,239 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:45:02,518 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:45:02,519 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:45:02,865 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:45:02,865 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:45:19,864 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.05050505050505051, momentum=0.26262626262626265 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8787878787878789 ,rho=0.6464646464646465 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.020202020202020204 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.27272727272727276].
2023-08-22 05:45:19,865 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.05050505050505051, momentum=0.26262626262626265 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8787878787878789 ,rho=0.6464646464646465 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.020202020202020204 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.27272727272727276].
2023-08-22 05:45:20,722 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:45:20,723 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:45:21,012 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:45:21,013 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:45:21,524 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.05050505050505051, momentum=0.13131313131313133 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.19191919191919193 ,epsilon=0.0006868687181818181 ,centered=True ,beta_1=0.10101010101010102 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.5454545454545454 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.27272727272727276].
2023-08-22 05:45:21,524 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.05050505050505051, momentum=0.13131313131313133 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.19191919191919193 ,epsilon=0.0006868687181818181 ,centered=True ,beta_1=0.10101010101010102 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.5454545454545454 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.27272727272727276].
2023-08-22 05:45:40,158 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:45:40,159 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:45:41,295 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:45:41,296 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:45:47,792 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.030303030303030304 ,nesterov=False ,amsgrad=True ,weight_decay=0.008182 ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.030303030303030304 ,epsilon=0.00031313138181818175 ,centered=False ,beta_1=0.7777777777777778 ,beta_2=0.4646464646464647 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.27272727272727276 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.27272727272727276].
2023-08-22 05:45:47,792 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.030303030303030304 ,nesterov=False ,amsgrad=True ,weight_decay=0.008182 ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.030303030303030304 ,epsilon=0.00031313138181818175 ,centered=False ,beta_1=0.7777777777777778 ,beta_2=0.4646464646464647 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.27272727272727276 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.27272727272727276].
2023-08-22 05:45:49,483 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:45:49,483 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:45:58,886 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:45:58,886 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:46:00,052 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:46:00,052 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:46:08,087 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:46:08,087 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:46:14,965 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:46:14,965 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:46:17,480 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:46:17,480 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:46:18,692 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.9797979797979799, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.15151515151515152 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.22222222222222224 ,beta_2=0.43434343434343436 ,learning_rate_power=-0.04040404040404033 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.27272727272727276].
2023-08-22 05:46:18,693 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.9797979797979799, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.15151515151515152 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.22222222222222224 ,beta_2=0.43434343434343436 ,learning_rate_power=-0.04040404040404033 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.27272727272727276].
2023-08-22 05:46:26,596 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:46:26,596 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:46:33,205 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:46:33,205 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:46:35,992 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.7171717171717172, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0056570000000000014 ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.8989898989898991 ,epsilon=8.080817272727271e-05 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.10101010101010102 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.22222222222222224].
2023-08-22 05:46:35,992 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.7171717171717172, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0056570000000000014 ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.8989898989898991 ,epsilon=8.080817272727271e-05 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.10101010101010102 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.22222222222222224].
2023-08-22 05:46:37,179 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:46:37,180 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:46:44,970 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:46:44,970 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:46:55,661 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:46:55,661 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:47:04,244 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.2828282828282829 ,nesterov=False ,amsgrad=True ,weight_decay=0.003738000000000001 ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.8181818181818182 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.6363636363636365 ,beta_2=0.18181818181818182 ,learning_rate_power=0.0 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.21212121212121213].
2023-08-22 05:47:04,245 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.2828282828282829 ,nesterov=False ,amsgrad=True ,weight_decay=0.003738000000000001 ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.8181818181818182 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.6363636363636365 ,beta_2=0.18181818181818182 ,learning_rate_power=0.0 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.21212121212121213].
2023-08-22 05:47:05,267 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:47:05,267 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:47:31,364 INFO: Applying selection operators for generation 99.
2023-08-22 05:47:31,365 INFO: Applying genetic operators for generation 99.
2023-08-22 05:47:31,368 INFO: Evaluating fitness for for generation 99.
2023-08-22 05:47:31,368 INFO: Will evaluate fitness for 30 individuals.
2023-08-22 05:47:31,945 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.19191919191919193, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.5757575757575758 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.4444444444444445 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.6464646464646465].
2023-08-22 05:47:31,945 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.19191919191919193, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.5757575757575758 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.4444444444444445 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.6464646464646465].
2023-08-22 05:47:31,958 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.5656565656565657, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.15151515151515152 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.98989898989899 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.5555555555555556 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8787878787878789 ,beta=0.27272727272727276].
2023-08-22 05:47:31,958 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.5656565656565657, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.15151515151515152 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.98989898989899 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.5555555555555556 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8787878787878789 ,beta=0.27272727272727276].
2023-08-22 05:47:32,042 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:47:32,042 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:47:32,078 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.0002929293636363636 ,centered=False ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.25252525252525254 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.27272727272727276].
2023-08-22 05:47:32,079 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.0002929293636363636 ,centered=False ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.25252525252525254 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.27272727272727276].
2023-08-22 05:47:50,029 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.26262626262626265, momentum=0.9292929292929294 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.6565656565656566 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.8585858585858587 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.27272727272727276].
2023-08-22 05:47:50,029 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.26262626262626265, momentum=0.9292929292929294 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.6565656565656566 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.8585858585858587 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.27272727272727276].
2023-08-22 05:47:50,405 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:47:50,405 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:47:50,600 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:47:50,600 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:47:51,505 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:47:51,506 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:48:08,966 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:48:08,966 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:48:08,990 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:48:08,990 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:48:10,044 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:48:10,045 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:48:27,375 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:48:27,375 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:48:27,539 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:48:27,540 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:48:28,606 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:48:28,606 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:48:37,161 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:48:37,162 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:48:45,982 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=0.005152000000000001 ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.8787878787878789 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.17171717171717174 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.27272727272727276].
2023-08-22 05:48:45,983 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=0.005152000000000001 ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.8787878787878789 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.17171717171717174 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.27272727272727276].
2023-08-22 05:48:46,532 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.686868686868687, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.7373737373737375 ,epsilon=0.0006363636727272727 ,centered=False ,beta_1=0.5757575757575758 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.9090909090909092 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.9292929292929294].
2023-08-22 05:48:46,532 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.686868686868687, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.7373737373737375 ,epsilon=0.0006363636727272727 ,centered=False ,beta_1=0.5757575757575758 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.9090909090909092 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.9292929292929294].
2023-08-22 05:48:47,150 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.05050505050505051, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.13131313131313133 ,epsilon=0.0007575757818181818 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.7272727272727273 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:48:47,150 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.05050505050505051, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.13131313131313133 ,epsilon=0.0007575757818181818 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.7272727272727273 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:48:55,473 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.43434343434343436 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.36363636363636365 ,beta_2=0.0 ,learning_rate_power=-1.0 ,initial_accumulator_value=1.0 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.27272727272727276].
2023-08-22 05:48:55,474 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.43434343434343436 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.36363636363636365 ,beta_2=0.0 ,learning_rate_power=-1.0 ,initial_accumulator_value=1.0 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.27272727272727276].
2023-08-22 05:49:05,286 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:49:05,287 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:49:13,326 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:49:13,327 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:49:17,011 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:49:17,011 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:49:17,322 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.9090909090909092, momentum=0.9292929292929294 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.0006969697272727273 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.27272727272727276].
2023-08-22 05:49:17,322 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.9090909090909092, momentum=0.9292929292929294 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.0006969697272727273 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.27272727272727276].
2023-08-22 05:49:23,874 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.6666666666666667 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.010101010101010102 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.7777777777777778 ,beta_2=0.7474747474747475 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.9696969696969697].
2023-08-22 05:49:23,875 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.6666666666666667 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.010101010101010102 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.7777777777777778 ,beta_2=0.7474747474747475 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.9696969696969697].
2023-08-22 05:49:31,590 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:49:31,590 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:49:36,439 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:49:36,439 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:49:46,439 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:49:46,439 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:49:51,146 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.5757575757575758 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.18181818181818182 ,beta_2=0.7070707070707072 ,learning_rate_power=-0.1717171717171716 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.7373737373737375].
2023-08-22 05:49:51,146 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.5757575757575758 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.18181818181818182 ,beta_2=0.7070707070707072 ,learning_rate_power=-0.1717171717171716 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.7373737373737375].
2023-08-22 05:49:55,194 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:49:55,194 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:50:04,844 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:50:04,844 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:50:22,550 INFO: Applying selection operators for generation 100.
2023-08-22 05:50:22,550 INFO: Applying genetic operators for generation 100.
2023-08-22 05:50:22,553 INFO: Evaluating fitness for for generation 100.
2023-08-22 05:50:22,553 INFO: Will evaluate fitness for 28 individuals.
2023-08-22 05:50:23,132 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:50:23,132 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:50:23,159 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.05050505050505051, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.43434343434343436 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.010101010101010102 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.3535353535353536 ,l1_regularization_strength=0.595959595959596 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:50:23,159 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.05050505050505051, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.43434343434343436 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.010101010101010102 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.3535353535353536 ,l1_regularization_strength=0.595959595959596 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:50:23,219 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.24242424242424243 ,rho=0.030303030303030304 ,epsilon=1e-10 ,centered=True ,beta_1=0.9292929292929294 ,beta_2=0.29292929292929293 ,learning_rate_power=-0.8585858585858586 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.48484848484848486 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.11111111111111112].
2023-08-22 05:50:23,219 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.24242424242424243 ,rho=0.030303030303030304 ,epsilon=1e-10 ,centered=True ,beta_1=0.9292929292929294 ,beta_2=0.29292929292929293 ,learning_rate_power=-0.8585858585858586 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.48484848484848486 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.11111111111111112].
2023-08-22 05:50:23,241 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:50:23,241 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:50:40,831 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.7171717171717172, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5050505050505051 ,rho=0.8181818181818182 ,epsilon=0.0007474747727272727 ,centered=False ,beta_1=0.7777777777777778 ,beta_2=0.010101010101010102 ,learning_rate_power=0.0 ,initial_accumulator_value=0.29292929292929293 ,l1_regularization_strength=0.9393939393939394 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.12121212121212122].
2023-08-22 05:50:40,831 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.7171717171717172, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5050505050505051 ,rho=0.8181818181818182 ,epsilon=0.0007474747727272727 ,centered=False ,beta_1=0.7777777777777778 ,beta_2=0.010101010101010102 ,learning_rate_power=0.0 ,initial_accumulator_value=0.29292929292929293 ,l1_regularization_strength=0.9393939393939394 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.12121212121212122].
2023-08-22 05:50:41,848 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:50:41,848 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:50:42,090 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.05050505050505051, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.7676767676767677 ,epsilon=0.00025252532727272723 ,centered=False ,beta_1=0.10101010101010102 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.48484848484848486 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5151515151515152 ,beta=0.27272727272727276].
2023-08-22 05:50:42,091 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.05050505050505051, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.7676767676767677 ,epsilon=0.00025252532727272723 ,centered=False ,beta_1=0.10101010101010102 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.48484848484848486 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5151515151515152 ,beta=0.27272727272727276].
2023-08-22 05:50:51,435 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:50:51,435 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:50:59,948 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:50:59,948 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:51:00,367 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:51:00,367 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:51:10,833 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:51:10,833 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:51:18,396 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:51:18,396 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:51:18,800 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:51:18,801 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:51:28,901 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:51:28,902 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:51:29,366 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:51:29,366 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:51:36,750 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:51:36,750 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:51:38,194 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:51:38,194 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:51:47,011 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:51:47,012 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:51:47,822 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.31313131313131315 ,epsilon=0.001 ,centered=True ,beta_1=0.9292929292929294 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.9292929292929294 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:51:47,822 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.31313131313131315 ,epsilon=0.001 ,centered=True ,beta_1=0.9292929292929294 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.9292929292929294 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:51:55,068 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5252525252525253 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.7373737373737375 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.27272727272727276].
2023-08-22 05:51:55,069 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5252525252525253 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.7373737373737375 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.27272727272727276].
2023-08-22 05:51:56,950 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.686868686868687, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.15151515151515152 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.27272727272727276 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.08080808080808081 ,l1_regularization_strength=0.6767676767676768 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.33333333333333337].
2023-08-22 05:51:56,950 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.686868686868687, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.15151515151515152 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.27272727272727276 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.08080808080808081 ,l1_regularization_strength=0.6767676767676768 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.33333333333333337].
2023-08-22 05:52:05,118 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:52:05,119 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:52:06,201 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.7070707070707072 ,rho=0.030303030303030304 ,epsilon=3.030312727272727e-05 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.8484848484848485 ,initial_accumulator_value=0.5858585858585859 ,l1_regularization_strength=0.48484848484848486 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.010101010101010102 ,beta=0.5757575757575758].
2023-08-22 05:52:06,201 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.7070707070707072 ,rho=0.030303030303030304 ,epsilon=3.030312727272727e-05 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.8484848484848485 ,initial_accumulator_value=0.5858585858585859 ,l1_regularization_strength=0.48484848484848486 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.010101010101010102 ,beta=0.5757575757575758].
2023-08-22 05:52:15,570 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:52:15,570 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:52:22,900 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.05050505050505051, momentum=0.686868686868687 ,nesterov=True ,amsgrad=True ,weight_decay=0.004849000000000001 ,use_ema=False ,ema_momentum=0.6666666666666667 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.6060606060606061 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:52:22,901 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.05050505050505051, momentum=0.686868686868687 ,nesterov=True ,amsgrad=True ,weight_decay=0.004849000000000001 ,use_ema=False ,ema_momentum=0.6666666666666667 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.6060606060606061 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:52:23,367 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:52:23,367 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:52:34,100 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:52:34,101 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:52:51,921 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:52:51,922 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.05050505050505051, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.5151515151515152 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.27272727272727276].
2023-08-22 05:53:10,186 INFO: Saving the results to the folder specified in the arguments.
2023-08-22 05:53:10,274 INFO: Closing the multiprocessing pool.
2023-08-22 05:53:10,274 INFO: Experiment finished.

2023-08-23 05:32:26,801 INFO: Starting experiment with the arguments logged below.
2023-08-23 05:32:26,802 INFO: Namespace(results_path='/mnt/lustre/users/mbornman1/evoopt-cnn/experiments/fashionmnist_pop50_gen100_alexnet_tou10_cxp70_mut30_gmp50_alexnet_epo10_bat1024_sed1', cpu_count=4, seed=1, dataset='fashion_mnist', pop_size=50, ngen=100, model='alexnet', epochs=10, batch_size=1024, tournsize=10, cxpb=0.7, mutpb=0.3, gene_mut_prob=0.5)
2023-08-23 05:32:26,802 INFO: Setting the random number generator seed for this experiment.
2023-08-23 05:32:26,802 INFO: Initializing the multiprocessing pool.
2023-08-23 05:32:26,928 INFO: Running the evolutionary algorithm with the given hyper-parameters. This may take a while. Statistics for every generation will be printed below.
2023-08-23 05:32:26,928 INFO: Setting up DEAP toolbox.
2023-08-23 05:32:26,928 INFO: Registering individual initialization method.
2023-08-23 05:32:26,928 INFO: Registering population initialization method.
2023-08-23 05:32:26,929 INFO: Registering the selection method.
2023-08-23 05:32:26,929 INFO: Registering the evaluation method.
2023-08-23 05:32:26,929 INFO: Registering the genetic operators.
2023-08-23 05:32:26,929 INFO: Setting up the hall of fame and stats we want to keep track of.
2023-08-23 05:32:26,929 INFO: Initializing the initial population.
2023-08-23 05:32:26,943 INFO: Running the evolutionary algorithm.
2023-08-23 05:32:26,943 INFO: Evaluating fitness for the initial generation of individuals.
2023-08-23 05:32:26,943 INFO: Will evaluate fitness for 50 individuals.
2023-08-23 05:32:29,771 DEBUG: Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
2023-08-23 05:32:29,771 DEBUG: Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
2023-08-23 05:32:29,771 DEBUG: Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
2023-08-23 05:32:29,771 DEBUG: Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
2023-08-23 05:32:30,052 DEBUG: Creating converter from 7 to 5
2023-08-23 05:32:30,052 DEBUG: Creating converter from 7 to 5
2023-08-23 05:32:30,052 DEBUG: Creating converter from 7 to 5
2023-08-23 05:32:30,052 DEBUG: Creating converter from 7 to 5
2023-08-23 05:32:30,053 DEBUG: Creating converter from 5 to 7
2023-08-23 05:32:30,053 DEBUG: Creating converter from 5 to 7
2023-08-23 05:32:30,053 DEBUG: Creating converter from 5 to 7
2023-08-23 05:32:30,053 DEBUG: Creating converter from 7 to 5
2023-08-23 05:32:30,053 DEBUG: Creating converter from 5 to 7
2023-08-23 05:32:30,053 DEBUG: Creating converter from 7 to 5
2023-08-23 05:32:30,053 DEBUG: Creating converter from 7 to 5
2023-08-23 05:32:30,053 DEBUG: Creating converter from 5 to 7
2023-08-23 05:32:30,053 DEBUG: Creating converter from 7 to 5
2023-08-23 05:32:30,053 DEBUG: Creating converter from 5 to 7
2023-08-23 05:32:30,053 DEBUG: Creating converter from 5 to 7
2023-08-23 05:32:30,053 DEBUG: Creating converter from 5 to 7
2023-08-23 05:32:36,145 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.006364000000000001 ,use_ema=False ,ema_momentum=0.8383838383838385 ,rho=0.48484848484848486 ,epsilon=0.00026262633636363634 ,centered=True ,beta_1=0.6262626262626263 ,beta_2=0.030303030303030304 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.5555555555555556 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.9797979797979799 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.0].
2023-08-23 05:32:36,146 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.006364000000000001 ,use_ema=False ,ema_momentum=0.8383838383838385 ,rho=0.48484848484848486 ,epsilon=0.00026262633636363634 ,centered=True ,beta_1=0.6262626262626263 ,beta_2=0.030303030303030304 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.5555555555555556 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.9797979797979799 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.0].
2023-08-23 05:32:36,147 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.5858585858585859, momentum=0.8989898989898991 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.494949494949495 ,rho=0.43434343434343436 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.33333333333333337 ,beta_2=0.13131313131313133 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.9393939393939394 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.26262626262626265 ,l2_shrinkage_regularization_strength=0.7777777777777778 ,beta=0.5555555555555556].
2023-08-23 05:32:36,147 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.5858585858585859, momentum=0.8989898989898991 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.494949494949495 ,rho=0.43434343434343436 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.33333333333333337 ,beta_2=0.13131313131313133 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.9393939393939394 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.26262626262626265 ,l2_shrinkage_regularization_strength=0.7777777777777778 ,beta=0.5555555555555556].
2023-08-23 05:32:36,151 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.11111111111111112, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0047480000000000005 ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.05050505050505051 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.8282828282828284 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.6464646464646465 ,l1_regularization_strength=0.29292929292929293 ,l2_regularization_strength=0.010101010101010102 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.25252525252525254].
2023-08-23 05:32:36,151 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.11111111111111112, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0047480000000000005 ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.05050505050505051 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.8282828282828284 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.6464646464646465 ,l1_regularization_strength=0.29292929292929293 ,l2_regularization_strength=0.010101010101010102 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.25252525252525254].
2023-08-23 05:32:36,181 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.37373737373737376, momentum=0.6464646464646465 ,nesterov=True ,amsgrad=False ,weight_decay=0.007879 ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.20202020202020204 ,epsilon=0.00025252532727272723 ,centered=False ,beta_1=0.7272727272727273 ,beta_2=0.17171717171717174 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.27272727272727276 ,l2_regularization_strength=0.3434343434343435 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.12121212121212122].
2023-08-23 05:32:36,181 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.37373737373737376, momentum=0.6464646464646465 ,nesterov=True ,amsgrad=False ,weight_decay=0.007879 ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.20202020202020204 ,epsilon=0.00025252532727272723 ,centered=False ,beta_1=0.7272727272727273 ,beta_2=0.17171717171717174 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.27272727272727276 ,l2_regularization_strength=0.3434343434343435 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.12121212121212122].
2023-08-23 05:33:01,755 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.3434343434343435, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8383838383838385 ,rho=0.696969696969697 ,epsilon=1.010110909090909e-05 ,centered=False ,beta_1=0.8787878787878789 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.4545454545454545 ,initial_accumulator_value=0.9292929292929294 ,l1_regularization_strength=0.030303030303030304 ,l2_regularization_strength=0.6767676767676768 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.9797979797979799].
2023-08-23 05:33:01,755 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.3434343434343435, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8383838383838385 ,rho=0.696969696969697 ,epsilon=1.010110909090909e-05 ,centered=False ,beta_1=0.8787878787878789 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.4545454545454545 ,initial_accumulator_value=0.9292929292929294 ,l1_regularization_strength=0.030303030303030304 ,l2_regularization_strength=0.6767676767676768 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.9797979797979799].
2023-08-23 05:33:02,772 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-23 05:33:02,772 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-23 05:33:02,807 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:33:02,807 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:33:06,081 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.7070707070707072, momentum=0.4444444444444445 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.17171717171717174 ,rho=0.21212121212121213 ,epsilon=0.0002121212909090909 ,centered=True ,beta_1=0.3434343434343435 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.6464646464646465 ,l2_regularization_strength=0.32323232323232326 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.43434343434343436].
2023-08-23 05:33:06,081 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.7070707070707072, momentum=0.4444444444444445 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.17171717171717174 ,rho=0.21212121212121213 ,epsilon=0.0002121212909090909 ,centered=True ,beta_1=0.3434343434343435 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.6464646464646465 ,l2_regularization_strength=0.32323232323232326 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.43434343434343436].
2023-08-23 05:33:21,903 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.5050505050505051, momentum=0.8686868686868687 ,nesterov=False ,amsgrad=True ,weight_decay=0.009495 ,use_ema=True ,ema_momentum=0.27272727272727276 ,rho=0.06060606060606061 ,epsilon=0.0003939394545454545 ,centered=True ,beta_1=0.09090909090909091 ,beta_2=0.393939393939394 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.9595959595959597 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.5353535353535354 ,l2_shrinkage_regularization_strength=0.7272727272727273 ,beta=0.32323232323232326].
2023-08-23 05:33:21,903 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.5050505050505051, momentum=0.8686868686868687 ,nesterov=False ,amsgrad=True ,weight_decay=0.009495 ,use_ema=True ,ema_momentum=0.27272727272727276 ,rho=0.06060606060606061 ,epsilon=0.0003939394545454545 ,centered=True ,beta_1=0.09090909090909091 ,beta_2=0.393939393939394 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.9595959595959597 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.5353535353535354 ,l2_shrinkage_regularization_strength=0.7272727272727273 ,beta=0.32323232323232326].
2023-08-23 05:33:23,221 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.6363636363636365, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.37373737373737376 ,rho=0.020202020202020204 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.23232323232323235 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.37373737373737376 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.9595959595959597 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.9292929292929294].
2023-08-23 05:33:23,221 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.6363636363636365, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.37373737373737376 ,rho=0.020202020202020204 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.23232323232323235 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.37373737373737376 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.9595959595959597 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.9292929292929294].
2023-08-23 05:33:23,506 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.6262626262626263, momentum=0.4545454545454546 ,nesterov=False ,amsgrad=True ,weight_decay=0.006869000000000001 ,use_ema=False ,ema_momentum=0.7676767676767677 ,rho=0.030303030303030304 ,epsilon=0.0002929293636363636 ,centered=True ,beta_1=0.7070707070707072 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.7676767676767676 ,initial_accumulator_value=0.11111111111111112 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.32323232323232326 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.8686868686868687].
2023-08-23 05:33:23,506 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.6262626262626263, momentum=0.4545454545454546 ,nesterov=False ,amsgrad=True ,weight_decay=0.006869000000000001 ,use_ema=False ,ema_momentum=0.7676767676767677 ,rho=0.030303030303030304 ,epsilon=0.0002929293636363636 ,centered=True ,beta_1=0.7070707070707072 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.7676767676767676 ,initial_accumulator_value=0.11111111111111112 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.32323232323232326 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.8686868686868687].
2023-08-23 05:33:32,263 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.14141414141414144, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.05050505050505051 ,rho=0.5252525252525253 ,epsilon=9.09091818181818e-05 ,centered=False ,beta_1=0.18181818181818182 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.787878787878788 ,l2_regularization_strength=0.7575757575757577 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.09090909090909091].
2023-08-23 05:33:32,263 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.14141414141414144, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.05050505050505051 ,rho=0.5252525252525253 ,epsilon=9.09091818181818e-05 ,centered=False ,beta_1=0.18181818181818182 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.787878787878788 ,l2_regularization_strength=0.7575757575757577 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.09090909090909091].
2023-08-23 05:33:42,126 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.25252525252525254 ,rho=0.4444444444444445 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.7373737373737375 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.6363636363636365 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.8585858585858587].
2023-08-23 05:33:42,126 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.25252525252525254 ,rho=0.4444444444444445 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.7373737373737375 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.6363636363636365 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.8585858585858587].
2023-08-23 05:33:44,157 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.6464646464646465, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.007576000000000001 ,use_ema=False ,ema_momentum=0.7575757575757577 ,rho=0.04040404040404041 ,epsilon=0.0006161616545454546 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.46464646464646464 ,initial_accumulator_value=0.8585858585858587 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.4646464646464647 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.8989898989898991].
2023-08-23 05:33:44,157 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.6464646464646465, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.007576000000000001 ,use_ema=False ,ema_momentum=0.7575757575757577 ,rho=0.04040404040404041 ,epsilon=0.0006161616545454546 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.46464646464646464 ,initial_accumulator_value=0.8585858585858587 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.4646464646464647 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.8989898989898991].
2023-08-23 05:33:49,369 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.10101010101010102, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=False ,weight_decay=0.0031320000000000007 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.23232323232323235 ,epsilon=0.00044444449999999996 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.6767676767676768 ,l2_regularization_strength=0.21212121212121213 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.3434343434343435].
2023-08-23 05:33:49,370 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.10101010101010102, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=False ,weight_decay=0.0031320000000000007 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.23232323232323235 ,epsilon=0.00044444449999999996 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.6767676767676768 ,l2_regularization_strength=0.21212121212121213 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.3434343434343435].
2023-08-23 05:33:52,771 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-23 05:33:52,771 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-23 05:34:02,344 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-23 05:34:02,345 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-23 05:34:10,039 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.9393939393939394, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.009697 ,use_ema=False ,ema_momentum=0.6060606060606061 ,rho=0.19191919191919193 ,epsilon=0.00012121220909090907 ,centered=False ,beta_1=0.09090909090909091 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.22222222222222224 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=1.0 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.18181818181818182].
2023-08-23 05:34:10,039 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.9393939393939394, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.009697 ,use_ema=False ,ema_momentum=0.6060606060606061 ,rho=0.19191919191919193 ,epsilon=0.00012121220909090907 ,centered=False ,beta_1=0.09090909090909091 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.22222222222222224 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=1.0 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.18181818181818182].
2023-08-23 05:34:12,500 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.8787878787878789, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.006364000000000001 ,use_ema=True ,ema_momentum=0.9191919191919192 ,rho=0.5252525252525253 ,epsilon=0.00043434349090909084 ,centered=False ,beta_1=0.8282828282828284 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.9393939393939394 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.9797979797979799 ,l2_regularization_strength=0.6565656565656566 ,l2_shrinkage_regularization_strength=0.8282828282828284 ,beta=0.4747474747474748].
2023-08-23 05:34:12,500 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.8787878787878789, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.006364000000000001 ,use_ema=True ,ema_momentum=0.9191919191919192 ,rho=0.5252525252525253 ,epsilon=0.00043434349090909084 ,centered=False ,beta_1=0.8282828282828284 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.9393939393939394 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.9797979797979799 ,l2_regularization_strength=0.6565656565656566 ,l2_shrinkage_regularization_strength=0.8282828282828284 ,beta=0.4747474747474748].
2023-08-23 05:34:13,317 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.8484848484848485, momentum=0.37373737373737376 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6767676767676768 ,rho=0.5656565656565657 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.2222222222222222 ,initial_accumulator_value=0.31313131313131315 ,l1_regularization_strength=0.33333333333333337 ,l2_regularization_strength=0.26262626262626265 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.36363636363636365].
2023-08-23 05:34:13,317 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.8484848484848485, momentum=0.37373737373737376 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6767676767676768 ,rho=0.5656565656565657 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.2222222222222222 ,initial_accumulator_value=0.31313131313131315 ,l1_regularization_strength=0.33333333333333337 ,l2_regularization_strength=0.26262626262626265 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.36363636363636365].
2023-08-23 05:34:23,977 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.26262626262626265, momentum=0.8383838383838385 ,nesterov=True ,amsgrad=True ,weight_decay=0.00010200000000000001 ,use_ema=False ,ema_momentum=0.5757575757575758 ,rho=0.5050505050505051 ,epsilon=0.00040404046363636356 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.08080808080808081 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.14141414141414144 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.27272727272727276].
2023-08-23 05:34:23,977 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.26262626262626265, momentum=0.8383838383838385 ,nesterov=True ,amsgrad=True ,weight_decay=0.00010200000000000001 ,use_ema=False ,ema_momentum=0.5757575757575758 ,rho=0.5050505050505051 ,epsilon=0.00040404046363636356 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.08080808080808081 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.14141414141414144 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.27272727272727276].
2023-08-23 05:34:31,005 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.393939393939394, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.8686868686868687 ,epsilon=0.0007070707363636364 ,centered=True ,beta_1=0.22222222222222224 ,beta_2=0.38383838383838387 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.686868686868687 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.06060606060606061 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.8585858585858587].
2023-08-23 05:34:31,005 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.393939393939394, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.8686868686868687 ,epsilon=0.0007070707363636364 ,centered=True ,beta_1=0.22222222222222224 ,beta_2=0.38383838383838387 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.686868686868687 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.06060606060606061 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.8585858585858587].
2023-08-23 05:34:34,895 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.6565656565656566, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.008889000000000001 ,use_ema=False ,ema_momentum=0.21212121212121213 ,rho=0.8989898989898991 ,epsilon=0.0008989899090909091 ,centered=False ,beta_1=0.7676767676767677 ,beta_2=0.10101010101010102 ,learning_rate_power=-0.8484848484848485 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.7373737373737375 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.22222222222222224].
2023-08-23 05:34:34,895 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.6565656565656566, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.008889000000000001 ,use_ema=False ,ema_momentum=0.21212121212121213 ,rho=0.8989898989898991 ,epsilon=0.0008989899090909091 ,centered=False ,beta_1=0.7676767676767677 ,beta_2=0.10101010101010102 ,learning_rate_power=-0.8484848484848485 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.7373737373737375 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.22222222222222224].
2023-08-23 05:34:35,726 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.696969696969697, momentum=0.25252525252525254 ,nesterov=False ,amsgrad=False ,weight_decay=0.008788 ,use_ema=True ,ema_momentum=0.696969696969697 ,rho=0.4545454545454546 ,epsilon=0.0006262626636363636 ,centered=False ,beta_1=0.15151515151515152 ,beta_2=0.98989898989899 ,learning_rate_power=-0.7373737373737373 ,initial_accumulator_value=0.7373737373737375 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.26262626262626265 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.13131313131313133].
2023-08-23 05:34:35,726 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.696969696969697, momentum=0.25252525252525254 ,nesterov=False ,amsgrad=False ,weight_decay=0.008788 ,use_ema=True ,ema_momentum=0.696969696969697 ,rho=0.4545454545454546 ,epsilon=0.0006262626636363636 ,centered=False ,beta_1=0.15151515151515152 ,beta_2=0.98989898989899 ,learning_rate_power=-0.7373737373737373 ,initial_accumulator_value=0.7373737373737375 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.26262626262626265 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.13131313131313133].
2023-08-23 05:34:45,528 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.8484848484848485, momentum=0.4545454545454546 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4646464646464647 ,rho=0.10101010101010102 ,epsilon=0.00035353541818181815 ,centered=True ,beta_1=0.9696969696969697 ,beta_2=0.5757575757575758 ,learning_rate_power=-0.8888888888888888 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.7373737373737375 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.29292929292929293].
2023-08-23 05:34:45,528 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.8484848484848485, momentum=0.4545454545454546 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4646464646464647 ,rho=0.10101010101010102 ,epsilon=0.00035353541818181815 ,centered=True ,beta_1=0.9696969696969697 ,beta_2=0.5757575757575758 ,learning_rate_power=-0.8888888888888888 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.7373737373737375 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.29292929292929293].
2023-08-23 05:34:51,770 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.32323232323232326, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.007071000000000001 ,use_ema=False ,ema_momentum=0.686868686868687 ,rho=0.5858585858585859 ,epsilon=1.010110909090909e-05 ,centered=False ,beta_1=0.43434343434343436 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.030303030303030304 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.7373737373737375].
2023-08-23 05:34:51,770 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.32323232323232326, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.007071000000000001 ,use_ema=False ,ema_momentum=0.686868686868687 ,rho=0.5858585858585859 ,epsilon=1.010110909090909e-05 ,centered=False ,beta_1=0.43434343434343436 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.030303030303030304 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.7373737373737375].
2023-08-23 05:34:55,457 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.32323232323232326, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.008788 ,use_ema=False ,ema_momentum=0.494949494949495 ,rho=0.6565656565656566 ,epsilon=0.0002121212909090909 ,centered=True ,beta_1=0.6767676767676768 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.8080808080808082 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.3434343434343435 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.10101010101010102].
2023-08-23 05:34:55,457 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.32323232323232326, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.008788 ,use_ema=False ,ema_momentum=0.494949494949495 ,rho=0.6565656565656566 ,epsilon=0.0002121212909090909 ,centered=True ,beta_1=0.6767676767676768 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.8080808080808082 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.3434343434343435 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.10101010101010102].
2023-08-23 05:34:57,085 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.15151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0009100000000000001 ,use_ema=False ,ema_momentum=0.5555555555555556 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.9797979797979799 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.5757575757575758].
2023-08-23 05:34:57,085 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.15151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0009100000000000001 ,use_ema=False ,ema_momentum=0.5555555555555556 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.9797979797979799 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.5757575757575758].
2023-08-23 05:35:07,389 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.393939393939394, momentum=0.05050505050505051 ,nesterov=True ,amsgrad=False ,weight_decay=0.007475000000000002 ,use_ema=True ,ema_momentum=0.42424242424242425 ,rho=0.12121212121212122 ,epsilon=0.0006969697272727273 ,centered=True ,beta_1=0.31313131313131315 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.9797979797979798 ,initial_accumulator_value=0.31313131313131315 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.09090909090909091 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.7070707070707072].
2023-08-23 05:35:07,389 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.393939393939394, momentum=0.05050505050505051 ,nesterov=True ,amsgrad=False ,weight_decay=0.007475000000000002 ,use_ema=True ,ema_momentum=0.42424242424242425 ,rho=0.12121212121212122 ,epsilon=0.0006969697272727273 ,centered=True ,beta_1=0.31313131313131315 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.9797979797979798 ,initial_accumulator_value=0.31313131313131315 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.09090909090909091 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.7070707070707072].
2023-08-23 05:35:13,064 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.7272727272727273 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.4040404040404041].
2023-08-23 05:35:13,064 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.7272727272727273 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.4040404040404041].
2023-08-23 05:35:15,881 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=1.0, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.004849000000000001 ,use_ema=False ,ema_momentum=0.21212121212121213 ,rho=0.4141414141414142 ,epsilon=0.0005656566090909091 ,centered=True ,beta_1=0.797979797979798 ,beta_2=0.6262626262626263 ,learning_rate_power=-0.7272727272727273 ,initial_accumulator_value=0.15151515151515152 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.7676767676767677 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.5252525252525253].
2023-08-23 05:35:15,881 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=1.0, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.004849000000000001 ,use_ema=False ,ema_momentum=0.21212121212121213 ,rho=0.4141414141414142 ,epsilon=0.0005656566090909091 ,centered=True ,beta_1=0.797979797979798 ,beta_2=0.6262626262626263 ,learning_rate_power=-0.7272727272727273 ,initial_accumulator_value=0.15151515151515152 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.7676767676767677 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.5252525252525253].
2023-08-23 05:35:16,523 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.393939393939394, momentum=0.696969696969697 ,nesterov=False ,amsgrad=False ,weight_decay=0.0014150000000000002 ,use_ema=False ,ema_momentum=0.26262626262626265 ,rho=0.7171717171717172 ,epsilon=1e-10 ,centered=False ,beta_1=0.8181818181818182 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.9494949494949496 ,l1_regularization_strength=0.9393939393939394 ,l2_regularization_strength=0.6565656565656566 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.595959595959596].
2023-08-23 05:35:16,524 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.393939393939394, momentum=0.696969696969697 ,nesterov=False ,amsgrad=False ,weight_decay=0.0014150000000000002 ,use_ema=False ,ema_momentum=0.26262626262626265 ,rho=0.7171717171717172 ,epsilon=1e-10 ,centered=False ,beta_1=0.8181818181818182 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.9494949494949496 ,l1_regularization_strength=0.9393939393939394 ,l2_regularization_strength=0.6565656565656566 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.595959595959596].
2023-08-23 05:35:32,726 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.9595959595959597, momentum=0.9191919191919192 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6767676767676768 ,rho=0.0 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.5454545454545455 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.7474747474747475 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.8989898989898991].
2023-08-23 05:35:32,726 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.9595959595959597, momentum=0.9191919191919192 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6767676767676768 ,rho=0.0 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.5454545454545455 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.7474747474747475 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.8989898989898991].
2023-08-23 05:35:34,645 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.21212121212121213, momentum=0.38383838383838387 ,nesterov=False ,amsgrad=True ,weight_decay=0.005051000000000001 ,use_ema=True ,ema_momentum=0.6161616161616162 ,rho=0.33333333333333337 ,epsilon=0.0007878788090909091 ,centered=False ,beta_1=0.9191919191919192 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.31313131313131315 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.030303030303030304].
2023-08-23 05:35:34,645 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.21212121212121213, momentum=0.38383838383838387 ,nesterov=False ,amsgrad=True ,weight_decay=0.005051000000000001 ,use_ema=True ,ema_momentum=0.6161616161616162 ,rho=0.33333333333333337 ,epsilon=0.0007878788090909091 ,centered=False ,beta_1=0.9191919191919192 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.31313131313131315 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.030303030303030304].
2023-08-23 05:35:36,693 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.36363636363636365 ,nesterov=False ,amsgrad=True ,weight_decay=0.005758000000000001 ,use_ema=False ,ema_momentum=0.6363636363636365 ,rho=0.7575757575757577 ,epsilon=0.00014141422727272727 ,centered=True ,beta_1=0.10101010101010102 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.6161616161616162 ,l2_regularization_strength=0.4040404040404041 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.7474747474747475].
2023-08-23 05:35:36,693 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.36363636363636365 ,nesterov=False ,amsgrad=True ,weight_decay=0.005758000000000001 ,use_ema=False ,ema_momentum=0.6363636363636365 ,rho=0.7575757575757577 ,epsilon=0.00014141422727272727 ,centered=True ,beta_1=0.10101010101010102 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.6161616161616162 ,l2_regularization_strength=0.4040404040404041 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.7474747474747475].
2023-08-23 05:35:37,864 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.9191919191919192, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.26262626262626265 ,rho=0.5454545454545455 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.8181818181818182 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.3434343434343434 ,initial_accumulator_value=0.6060606060606061 ,l1_regularization_strength=0.6464646464646465 ,l2_regularization_strength=0.4747474747474748 ,l2_shrinkage_regularization_strength=0.12121212121212122 ,beta=0.4040404040404041].
2023-08-23 05:35:37,864 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.9191919191919192, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.26262626262626265 ,rho=0.5454545454545455 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.8181818181818182 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.3434343434343434 ,initial_accumulator_value=0.6060606060606061 ,l1_regularization_strength=0.6464646464646465 ,l2_regularization_strength=0.4747474747474748 ,l2_shrinkage_regularization_strength=0.12121212121212122 ,beta=0.4040404040404041].
2023-08-23 05:35:55,399 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.4040404040404041, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.7474747474747475 ,rho=0.9393939393939394 ,epsilon=0.00018181826363636362 ,centered=False ,beta_1=0.5858585858585859 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.17171717171717174 ,l1_regularization_strength=1.0 ,l2_regularization_strength=0.17171717171717174 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.5656565656565657].
2023-08-23 05:35:55,399 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.4040404040404041, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.7474747474747475 ,rho=0.9393939393939394 ,epsilon=0.00018181826363636362 ,centered=False ,beta_1=0.5858585858585859 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.17171717171717174 ,l1_regularization_strength=1.0 ,l2_regularization_strength=0.17171717171717174 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.5656565656565657].
2023-08-23 05:35:58,052 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.25252525252525254, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.00010200000000000001 ,use_ema=True ,ema_momentum=0.8585858585858587 ,rho=0.696969696969697 ,epsilon=7.070716363636363e-05 ,centered=False ,beta_1=0.32323232323232326 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.595959595959596 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.38383838383838387 ,l2_shrinkage_regularization_strength=0.010101010101010102 ,beta=0.04040404040404041].
2023-08-23 05:35:58,052 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.25252525252525254, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.00010200000000000001 ,use_ema=True ,ema_momentum=0.8585858585858587 ,rho=0.696969696969697 ,epsilon=7.070716363636363e-05 ,centered=False ,beta_1=0.32323232323232326 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.595959595959596 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.38383838383838387 ,l2_shrinkage_regularization_strength=0.010101010101010102 ,beta=0.04040404040404041].
2023-08-23 05:35:58,937 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.6363636363636365, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3434343434343435 ,rho=0.22222222222222224 ,epsilon=0.0009898989909090908 ,centered=True ,beta_1=1.0 ,beta_2=0.7777777777777778 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.4444444444444445 ,l1_regularization_strength=0.33333333333333337 ,l2_regularization_strength=0.9090909090909092 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.8787878787878789].
2023-08-23 05:35:58,937 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.6363636363636365, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3434343434343435 ,rho=0.22222222222222224 ,epsilon=0.0009898989909090908 ,centered=True ,beta_1=1.0 ,beta_2=0.7777777777777778 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.4444444444444445 ,l1_regularization_strength=0.33333333333333337 ,l2_regularization_strength=0.9090909090909092 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.8787878787878789].
2023-08-23 05:35:59,298 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.005051000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.4141414141414142 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.04040404040404041 ,l2_regularization_strength=0.494949494949495 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.9393939393939394].
2023-08-23 05:35:59,298 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.005051000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.4141414141414142 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.04040404040404041 ,l2_regularization_strength=0.494949494949495 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.9393939393939394].
2023-08-23 05:36:18,323 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.4040404040404041, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0014150000000000002 ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.31313131313131315 ,epsilon=0.0006464646818181818 ,centered=True ,beta_1=0.42424242424242425 ,beta_2=0.43434343434343436 ,learning_rate_power=-0.3434343434343434 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.7474747474747475 ,l2_regularization_strength=0.6161616161616162 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.16161616161616163].
2023-08-23 05:36:18,323 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.4040404040404041, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0014150000000000002 ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.31313131313131315 ,epsilon=0.0006464646818181818 ,centered=True ,beta_1=0.42424242424242425 ,beta_2=0.43434343434343436 ,learning_rate_power=-0.3434343434343434 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.7474747474747475 ,l2_regularization_strength=0.6161616161616162 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.16161616161616163].
2023-08-23 05:36:19,645 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.19191919191919193, momentum=0.595959595959596 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6565656565656566 ,rho=0.12121212121212122 ,epsilon=0.0009595959636363636 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.4545454545454546 ,learning_rate_power=-0.9191919191919192 ,initial_accumulator_value=0.8484848484848485 ,l1_regularization_strength=0.5656565656565657 ,l2_regularization_strength=0.020202020202020204 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.6464646464646465].
2023-08-23 05:36:19,646 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.19191919191919193, momentum=0.595959595959596 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6565656565656566 ,rho=0.12121212121212122 ,epsilon=0.0009595959636363636 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.4545454545454546 ,learning_rate_power=-0.9191919191919192 ,initial_accumulator_value=0.8484848484848485 ,l1_regularization_strength=0.5656565656565657 ,l2_regularization_strength=0.020202020202020204 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.6464646464646465].
2023-08-23 05:36:20,892 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.6767676767676768, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.030303030303030304 ,rho=0.6363636363636365 ,epsilon=0.0008181818363636363 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.42424242424242425].
2023-08-23 05:36:20,892 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.6767676767676768, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.030303030303030304 ,rho=0.6363636363636365 ,epsilon=0.0008181818363636363 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.42424242424242425].
2023-08-23 05:36:21,362 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.393939393939394, momentum=0.9696969696969697 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.08080808080808081 ,rho=0.13131313131313133 ,epsilon=0.0002929293636363636 ,centered=False ,beta_1=0.4141414141414142 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.8787878787878788 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.07070707070707072 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.020202020202020204].
2023-08-23 05:36:21,362 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.393939393939394, momentum=0.9696969696969697 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.08080808080808081 ,rho=0.13131313131313133 ,epsilon=0.0002929293636363636 ,centered=False ,beta_1=0.4141414141414142 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.8787878787878788 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.07070707070707072 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.020202020202020204].
2023-08-23 05:36:41,036 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.33333333333333337, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.5454545454545455 ,rho=0.7777777777777778 ,epsilon=0.0008989899090909091 ,centered=True ,beta_1=0.4545454545454546 ,beta_2=0.7070707070707072 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.686868686868687 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.5454545454545455].
2023-08-23 05:36:41,036 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.33333333333333337, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.5454545454545455 ,rho=0.7777777777777778 ,epsilon=0.0008989899090909091 ,centered=True ,beta_1=0.4545454545454546 ,beta_2=0.7070707070707072 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.686868686868687 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.5454545454545455].
2023-08-23 05:36:41,448 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.888888888888889, momentum=0.11111111111111112 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.42424242424242425 ,rho=0.3434343434343435 ,epsilon=8.080817272727271e-05 ,centered=True ,beta_1=0.8989898989898991 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.4747474747474748 ,l1_regularization_strength=0.595959595959596 ,l2_regularization_strength=0.6565656565656566 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.9494949494949496].
2023-08-23 05:36:41,448 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.888888888888889, momentum=0.11111111111111112 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.42424242424242425 ,rho=0.3434343434343435 ,epsilon=8.080817272727271e-05 ,centered=True ,beta_1=0.8989898989898991 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.4747474747474748 ,l1_regularization_strength=0.595959595959596 ,l2_regularization_strength=0.6565656565656566 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.9494949494949496].
2023-08-23 05:36:41,449 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.6767676767676768, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0025260000000000005 ,use_ema=False ,ema_momentum=0.6666666666666667 ,rho=0.4141414141414142 ,epsilon=0.00012121220909090907 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.26262626262626254 ,initial_accumulator_value=0.08080808080808081 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.38383838383838387 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.686868686868687].
2023-08-23 05:36:41,449 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.6767676767676768, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0025260000000000005 ,use_ema=False ,ema_momentum=0.6666666666666667 ,rho=0.4141414141414142 ,epsilon=0.00012121220909090907 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.26262626262626254 ,initial_accumulator_value=0.08080808080808081 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.38383838383838387 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.686868686868687].
2023-08-23 05:36:42,599 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8787878787878789, momentum=0.04040404040404041 ,nesterov=False ,amsgrad=False ,weight_decay=0.008485000000000001 ,use_ema=True ,ema_momentum=0.787878787878788 ,rho=0.888888888888889 ,epsilon=0.0002222223 ,centered=True ,beta_1=0.2828282828282829 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.48484848484848486 ,l2_shrinkage_regularization_strength=0.9696969696969697 ,beta=0.21212121212121213].
2023-08-23 05:36:42,600 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8787878787878789, momentum=0.04040404040404041 ,nesterov=False ,amsgrad=False ,weight_decay=0.008485000000000001 ,use_ema=True ,ema_momentum=0.787878787878788 ,rho=0.888888888888889 ,epsilon=0.0002222223 ,centered=True ,beta_1=0.2828282828282829 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.48484848484848486 ,l2_shrinkage_regularization_strength=0.9696969696969697 ,beta=0.21212121212121213].
2023-08-23 05:37:02,686 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.5353535353535354, momentum=0.38383838383838387 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.19191919191919193 ,rho=0.4040404040404041 ,epsilon=0.0009393939454545454 ,centered=False ,beta_1=0.4141414141414142 ,beta_2=0.7373737373737375 ,learning_rate_power=-0.9191919191919192 ,initial_accumulator_value=0.5757575757575758 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.6161616161616162 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.4646464646464647].
2023-08-23 05:37:02,686 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.5353535353535354, momentum=0.38383838383838387 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.19191919191919193 ,rho=0.4040404040404041 ,epsilon=0.0009393939454545454 ,centered=False ,beta_1=0.4141414141414142 ,beta_2=0.7373737373737375 ,learning_rate_power=-0.9191919191919192 ,initial_accumulator_value=0.5757575757575758 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.6161616161616162 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.4646464646464647].
2023-08-23 05:37:23,472 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.10101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0067680000000000014 ,use_ema=False ,ema_momentum=0.31313131313131315 ,rho=0.8989898989898991 ,epsilon=0.0007373737636363636 ,centered=False ,beta_1=0.4646464646464647 ,beta_2=0.8282828282828284 ,learning_rate_power=-0.5252525252525252 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.595959595959596 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.43434343434343436].
2023-08-23 05:37:23,473 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.10101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0067680000000000014 ,use_ema=False ,ema_momentum=0.31313131313131315 ,rho=0.8989898989898991 ,epsilon=0.0007373737636363636 ,centered=False ,beta_1=0.4646464646464647 ,beta_2=0.8282828282828284 ,learning_rate_power=-0.5252525252525252 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.595959595959596 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.43434343434343436].
2023-08-23 05:37:48,778 INFO: Applying selection operators for generation 1.
2023-08-23 05:37:48,779 INFO: Applying genetic operators for generation 1.
2023-08-23 05:37:48,782 INFO: Evaluating fitness for for generation 1.
2023-08-23 05:37:48,782 INFO: Will evaluate fitness for 36 individuals.
2023-08-23 05:37:49,325 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.6161616161616162 ,l2_regularization_strength=0.4040404040404041 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.7474747474747475].
2023-08-23 05:37:49,326 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.6161616161616162 ,l2_regularization_strength=0.4040404040404041 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.7474747474747475].
2023-08-23 05:37:49,330 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.010101010101010102, momentum=0.8282828282828284 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.22222222222222224 ,rho=0.29292929292929293 ,epsilon=0.0004242424818181818 ,centered=True ,beta_1=0.31313131313131315 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.3939393939393939 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.6363636363636365 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.15151515151515152].
2023-08-23 05:37:49,331 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.010101010101010102, momentum=0.8282828282828284 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.22222222222222224 ,rho=0.29292929292929293 ,epsilon=0.0004242424818181818 ,centered=True ,beta_1=0.31313131313131315 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.3939393939393939 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.6363636363636365 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.15151515151515152].
2023-08-23 05:37:49,331 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.19191919191919193, momentum=0.595959595959596 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6565656565656566 ,rho=0.12121212121212122 ,epsilon=0.0009595959636363636 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.4545454545454546 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.7474747474747475 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.8989898989898991].
2023-08-23 05:37:49,331 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.19191919191919193, momentum=0.595959595959596 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6565656565656566 ,rho=0.12121212121212122 ,epsilon=0.0009595959636363636 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.4545454545454546 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.7474747474747475 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.8989898989898991].
2023-08-23 05:37:49,347 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:37:49,347 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:38:09,730 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.36363636363636365 ,nesterov=False ,amsgrad=True ,weight_decay=0.005758000000000001 ,use_ema=False ,ema_momentum=0.6363636363636365 ,rho=0.7575757575757577 ,epsilon=0.00014141422727272727 ,centered=True ,beta_1=0.10101010101010102 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-23 05:38:09,731 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.36363636363636365 ,nesterov=False ,amsgrad=True ,weight_decay=0.005758000000000001 ,use_ema=False ,ema_momentum=0.6363636363636365 ,rho=0.7575757575757577 ,epsilon=0.00014141422727272727 ,centered=True ,beta_1=0.10101010101010102 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-23 05:38:10,296 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-23 05:38:10,296 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-23 05:38:11,153 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.9595959595959597, momentum=0.9191919191919192 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6767676767676768 ,rho=0.0 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.5454545454545455 ,learning_rate_power=-0.9191919191919192 ,initial_accumulator_value=0.8484848484848485 ,l1_regularization_strength=0.5656565656565657 ,l2_regularization_strength=0.020202020202020204 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.6464646464646465].
2023-08-23 05:38:11,154 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.9595959595959597, momentum=0.9191919191919192 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6767676767676768 ,rho=0.0 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.5454545454545455 ,learning_rate_power=-0.9191919191919192 ,initial_accumulator_value=0.8484848484848485 ,l1_regularization_strength=0.5656565656565657 ,l2_regularization_strength=0.020202020202020204 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.6464646464646465].
2023-08-23 05:38:11,855 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-23 05:38:11,855 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-23 05:38:31,241 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:38:31,241 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:38:31,638 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.7272727272727273 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.4040404040404041].
2023-08-23 05:38:31,638 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.7272727272727273 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.4040404040404041].
2023-08-23 05:38:32,849 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.19191919191919193 ,rho=0.6767676767676768 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.5050505050505051 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.8989898989898991 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.5454545454545455].
2023-08-23 05:38:32,849 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.19191919191919193 ,rho=0.6767676767676768 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.5050505050505051 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.8989898989898991 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.5454545454545455].
2023-08-23 05:38:37,748 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.19191919191919193, momentum=0.595959595959596 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6565656565656566 ,rho=0.12121212121212122 ,epsilon=0.0009595959636363636 ,centered=False ,beta_1=0.8282828282828284 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.9191919191919192 ,initial_accumulator_value=0.8484848484848485 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.020202020202020204 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.9292929292929294].
2023-08-23 05:38:37,748 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.19191919191919193, momentum=0.595959595959596 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6565656565656566 ,rho=0.12121212121212122 ,epsilon=0.0009595959636363636 ,centered=False ,beta_1=0.8282828282828284 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.9191919191919192 ,initial_accumulator_value=0.8484848484848485 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.020202020202020204 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.9292929292929294].
2023-08-23 05:38:51,514 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.5151515151515152, momentum=0.3535353535353536 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.00018181826363636362 ,centered=False ,beta_1=0.3535353535353536 ,beta_2=0.696969696969697 ,learning_rate_power=-0.8383838383838383 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.5454545454545455].
2023-08-23 05:38:51,514 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.5151515151515152, momentum=0.3535353535353536 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.00018181826363636362 ,centered=False ,beta_1=0.3535353535353536 ,beta_2=0.696969696969697 ,learning_rate_power=-0.8383838383838383 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.5454545454545455].
2023-08-23 05:38:52,821 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.16161616161616163 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.9090909090909092 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-23 05:38:52,821 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.16161616161616163 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.9090909090909092 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-23 05:38:54,063 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.5757575757575758].
2023-08-23 05:38:54,063 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.5757575757575758].
2023-08-23 05:38:59,816 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.06060606060606061].
2023-08-23 05:38:59,816 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.06060606060606061].
2023-08-23 05:39:15,860 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.4040404040404041].
2023-08-23 05:39:15,860 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.4040404040404041].
2023-08-23 05:39:15,913 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.15151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0009100000000000001 ,use_ema=False ,ema_momentum=0.5555555555555556 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.9797979797979799 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-23 05:39:15,913 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.15151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0009100000000000001 ,use_ema=False ,ema_momentum=0.5555555555555556 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.9797979797979799 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-23 05:39:18,642 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:39:18,642 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:39:20,989 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.030303030303030304 ,rho=0.4444444444444445 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.7373737373737375 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.6363636363636365 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.8585858585858587].
2023-08-23 05:39:20,990 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.030303030303030304 ,rho=0.4444444444444445 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.7373737373737375 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.6363636363636365 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.8585858585858587].
2023-08-23 05:39:35,711 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.15151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0009100000000000001 ,use_ema=False ,ema_momentum=0.3434343434343435 ,rho=0.8585858585858587 ,epsilon=0.0008686868818181818 ,centered=True ,beta_1=0.05050505050505051 ,beta_2=0.5050505050505051 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.5757575757575758].
2023-08-23 05:39:35,712 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.15151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0009100000000000001 ,use_ema=False ,ema_momentum=0.3434343434343435 ,rho=0.8585858585858587 ,epsilon=0.0008686868818181818 ,centered=True ,beta_1=0.05050505050505051 ,beta_2=0.5050505050505051 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.5757575757575758].
2023-08-23 05:39:36,111 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.36363636363636365 ,nesterov=False ,amsgrad=True ,weight_decay=0.005758000000000001 ,use_ema=False ,ema_momentum=0.6363636363636365 ,rho=0.7575757575757577 ,epsilon=0.00014141422727272727 ,centered=True ,beta_1=0.10101010101010102 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.6161616161616162 ,l2_regularization_strength=0.4040404040404041 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.7474747474747475].
2023-08-23 05:39:36,112 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.36363636363636365 ,nesterov=False ,amsgrad=True ,weight_decay=0.005758000000000001 ,use_ema=False ,ema_momentum=0.6363636363636365 ,rho=0.7575757575757577 ,epsilon=0.00014141422727272727 ,centered=True ,beta_1=0.10101010101010102 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.6161616161616162 ,l2_regularization_strength=0.4040404040404041 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.7474747474747475].
2023-08-23 05:39:39,894 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.25252525252525254, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.686868686868687 ,rho=0.12121212121212122 ,epsilon=0.0009595959636363636 ,centered=False ,beta_1=0.25252525252525254 ,beta_2=0.4545454545454546 ,learning_rate_power=-0.9191919191919192 ,initial_accumulator_value=0.22222222222222224 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.020202020202020204 ,l2_shrinkage_regularization_strength=0.6262626262626263 ,beta=0.38383838383838387].
2023-08-23 05:39:39,894 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.25252525252525254, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.686868686868687 ,rho=0.12121212121212122 ,epsilon=0.0009595959636363636 ,centered=False ,beta_1=0.25252525252525254 ,beta_2=0.4545454545454546 ,learning_rate_power=-0.9191919191919192 ,initial_accumulator_value=0.22222222222222224 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.020202020202020204 ,l2_shrinkage_regularization_strength=0.6262626262626263 ,beta=0.38383838383838387].
2023-08-23 05:39:42,083 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.6767676767676768, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.25252525252525254 ,rho=0.6363636363636365 ,epsilon=0.0008181818363636363 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.42424242424242425].
2023-08-23 05:39:42,083 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.6767676767676768, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.25252525252525254 ,rho=0.6363636363636365 ,epsilon=0.0008181818363636363 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.42424242424242425].
2023-08-23 05:39:56,857 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.5757575757575758 ,rho=0.5050505050505051 ,epsilon=0.00040404046363636356 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:39:56,858 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.5757575757575758 ,rho=0.5050505050505051 ,epsilon=0.00040404046363636356 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:39:57,619 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.4040404040404041].
2023-08-23 05:39:57,619 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.4040404040404041].
2023-08-23 05:40:00,365 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.5151515151515152, momentum=0.4646464646464647 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5050505050505051 ,rho=0.33333333333333337 ,epsilon=0.0007878788090909091 ,centered=False ,beta_1=0.21212121212121213 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.12121212121212122 ,beta=0.6161616161616162].
2023-08-23 05:40:00,365 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.5151515151515152, momentum=0.4646464646464647 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5050505050505051 ,rho=0.33333333333333337 ,epsilon=0.0007878788090909091 ,centered=False ,beta_1=0.21212121212121213 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.12121212121212122 ,beta=0.6161616161616162].
2023-08-23 05:40:01,620 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-23 05:40:01,620 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-23 05:40:17,253 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.7777777777777778 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.4747474747474748 ,rho=0.6565656565656566 ,epsilon=0.0004747475272727272 ,centered=False ,beta_1=0.8181818181818182 ,beta_2=0.696969696969697 ,learning_rate_power=-0.3535353535353535 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.18181818181818182].
2023-08-23 05:40:17,253 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.7777777777777778 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.4747474747474748 ,rho=0.6565656565656566 ,epsilon=0.0004747475272727272 ,centered=False ,beta_1=0.8181818181818182 ,beta_2=0.696969696969697 ,learning_rate_power=-0.3535353535353535 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.18181818181818182].
2023-08-23 05:40:18,189 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.26262626262626265, momentum=0.8383838383838385 ,nesterov=True ,amsgrad=True ,weight_decay=0.00010200000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.08080808080808081 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.14141414141414144 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.27272727272727276].
2023-08-23 05:40:18,190 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.26262626262626265, momentum=0.8383838383838385 ,nesterov=True ,amsgrad=True ,weight_decay=0.00010200000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.08080808080808081 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.14141414141414144 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.27272727272727276].
2023-08-23 05:40:22,151 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.21212121212121213, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.4040404040404041 ,epsilon=0.0002020202818181818 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.31313131313131315 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.030303030303030304].
2023-08-23 05:40:22,152 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.21212121212121213, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.4040404040404041 ,epsilon=0.0002020202818181818 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.31313131313131315 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.030303030303030304].
2023-08-23 05:40:22,166 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.15151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0009100000000000001 ,use_ema=False ,ema_momentum=0.5555555555555556 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.5757575757575758].
2023-08-23 05:40:22,166 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.15151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0009100000000000001 ,use_ema=False ,ema_momentum=0.5555555555555556 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.5757575757575758].
2023-08-23 05:40:38,348 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.26262626262626265, momentum=0.8383838383838385 ,nesterov=True ,amsgrad=True ,weight_decay=0.00010200000000000001 ,use_ema=False ,ema_momentum=0.5757575757575758 ,rho=0.5050505050505051 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.08080808080808081 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.14141414141414144 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.27272727272727276].
2023-08-23 05:40:38,348 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.26262626262626265, momentum=0.8383838383838385 ,nesterov=True ,amsgrad=True ,weight_decay=0.00010200000000000001 ,use_ema=False ,ema_momentum=0.5757575757575758 ,rho=0.5050505050505051 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.08080808080808081 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.14141414141414144 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.27272727272727276].
2023-08-23 05:40:40,014 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.7272727272727273 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:40:40,014 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.7272727272727273 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:40:41,596 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-23 05:40:41,596 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-23 05:40:42,033 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.9797979797979799 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.6767676767676768].
2023-08-23 05:40:42,034 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.9797979797979799 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.6767676767676768].
2023-08-23 05:41:02,231 INFO: Applying selection operators for generation 2.
2023-08-23 05:41:02,231 INFO: Applying genetic operators for generation 2.
2023-08-23 05:41:02,234 INFO: Evaluating fitness for for generation 2.
2023-08-23 05:41:02,235 INFO: Will evaluate fitness for 44 individuals.
2023-08-23 05:41:02,764 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:41:02,764 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:41:02,778 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.4040404040404041].
2023-08-23 05:41:02,778 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.4040404040404041].
2023-08-23 05:41:02,787 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.5454545454545455 ,rho=0.8383838383838385 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.686868686868687 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.686868686868687 ,l1_regularization_strength=0.5656565656565657 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-23 05:41:02,787 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.5454545454545455 ,rho=0.8383838383838385 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.686868686868687 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.686868686868687 ,l1_regularization_strength=0.5656565656565657 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-23 05:41:02,791 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-23 05:41:02,791 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-23 05:41:22,338 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.4040404040404041].
2023-08-23 05:41:22,338 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.4040404040404041].
2023-08-23 05:41:23,828 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.06060606060606061].
2023-08-23 05:41:23,828 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.06060606060606061].
2023-08-23 05:41:24,498 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.5757575757575758].
2023-08-23 05:41:24,499 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.5757575757575758].
2023-08-23 05:41:24,638 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.5757575757575758].
2023-08-23 05:41:24,639 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.5757575757575758].
2023-08-23 05:41:40,468 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.20202020202020204 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.33333333333333337 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.9090909090909092].
2023-08-23 05:41:40,468 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.20202020202020204 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.33333333333333337 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.9090909090909092].
2023-08-23 05:41:43,834 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9494949494949496, momentum=0.6666666666666667 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.010101010101010102 ,epsilon=0.0009292929363636363 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.7575757575757577 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.4545454545454546 ,l1_regularization_strength=0.888888888888889 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.06060606060606061].
2023-08-23 05:41:43,834 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9494949494949496, momentum=0.6666666666666667 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.010101010101010102 ,epsilon=0.0009292929363636363 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.7575757575757577 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.4545454545454546 ,l1_regularization_strength=0.888888888888889 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.06060606060606061].
2023-08-23 05:41:44,218 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:41:44,218 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:41:44,309 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:41:44,309 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:41:58,572 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:41:58,572 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:42:04,977 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.5858585858585859, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0047480000000000005 ,use_ema=False ,ema_momentum=0.494949494949495 ,rho=0.5757575757575758 ,epsilon=0.0009191919272727272 ,centered=False ,beta_1=0.9696969696969697 ,beta_2=0.12121212121212122 ,learning_rate_power=-0.4242424242424242 ,initial_accumulator_value=0.13131313131313133 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.5757575757575758].
2023-08-23 05:42:04,977 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.5858585858585859, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0047480000000000005 ,use_ema=False ,ema_momentum=0.494949494949495 ,rho=0.5757575757575758 ,epsilon=0.0009191919272727272 ,centered=False ,beta_1=0.9696969696969697 ,beta_2=0.12121212121212122 ,learning_rate_power=-0.4242424242424242 ,initial_accumulator_value=0.13131313131313133 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.5757575757575758].
2023-08-23 05:42:05,605 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.010101010101010102, momentum=0.8282828282828284 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.5757575757575758].
2023-08-23 05:42:05,606 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.010101010101010102, momentum=0.8282828282828284 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.5757575757575758].
2023-08-23 05:42:06,221 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.010101010101010102, momentum=0.8282828282828284 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.6363636363636365 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.15151515151515152].
2023-08-23 05:42:06,221 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.010101010101010102, momentum=0.8282828282828284 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.6363636363636365 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.15151515151515152].
2023-08-23 05:42:19,660 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9595959595959597 ,rho=0.06060606060606061 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.6464646464646465 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.4040404040404041].
2023-08-23 05:42:19,661 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9595959595959597 ,rho=0.06060606060606061 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.6464646464646465 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.4040404040404041].
2023-08-23 05:42:24,886 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-23 05:42:24,887 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-23 05:42:27,656 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.9797979797979799 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.5757575757575758].
2023-08-23 05:42:27,656 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.9797979797979799 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.5757575757575758].
2023-08-23 05:42:27,845 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.22222222222222224 ,rho=0.29292929292929293 ,epsilon=0.0004242424818181818 ,centered=True ,beta_1=0.31313131313131315 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.3939393939393939 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.6363636363636365 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.15151515151515152].
2023-08-23 05:42:27,845 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.22222222222222224 ,rho=0.29292929292929293 ,epsilon=0.0004242424818181818 ,centered=True ,beta_1=0.31313131313131315 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.3939393939393939 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.6363636363636365 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.15151515151515152].
2023-08-23 05:42:40,481 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.9797979797979799 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-23 05:42:40,481 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.9797979797979799 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-23 05:42:44,907 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.06060606060606061].
2023-08-23 05:42:44,907 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.06060606060606061].
2023-08-23 05:42:47,182 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.15151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0009100000000000001 ,use_ema=False ,ema_momentum=0.5555555555555556 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:42:47,183 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.15151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0009100000000000001 ,use_ema=False ,ema_momentum=0.5555555555555556 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:42:49,837 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.22222222222222224 ,rho=0.29292929292929293 ,epsilon=0.0004242424818181818 ,centered=True ,beta_1=0.31313131313131315 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.3939393939393939 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-23 05:42:49,837 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.22222222222222224 ,rho=0.29292929292929293 ,epsilon=0.0004242424818181818 ,centered=True ,beta_1=0.31313131313131315 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.3939393939393939 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-23 05:43:02,058 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4646464646464647 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.36363636363636365 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.10101010101010088 ,initial_accumulator_value=1.0 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=1.0].
2023-08-23 05:43:02,058 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4646464646464647 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.36363636363636365 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.10101010101010088 ,initial_accumulator_value=1.0 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=1.0].
2023-08-23 05:43:05,170 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.888888888888889, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.9494949494949496 ,epsilon=8.080817272727271e-05 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.13131313131313133].
2023-08-23 05:43:05,171 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.888888888888889, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.9494949494949496 ,epsilon=8.080817272727271e-05 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.13131313131313133].
2023-08-23 05:43:09,003 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.7373737373737375, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=0.0047480000000000005 ,use_ema=False ,ema_momentum=0.5555555555555556 ,rho=0.7070707070707072 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.020202020202020204 ,beta_2=0.5050505050505051 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.12121212121212122 ,l1_regularization_strength=0.6767676767676768 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.16161616161616163].
2023-08-23 05:43:09,003 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.7373737373737375, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=0.0047480000000000005 ,use_ema=False ,ema_momentum=0.5555555555555556 ,rho=0.7070707070707072 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.020202020202020204 ,beta_2=0.5050505050505051 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.12121212121212122 ,l1_regularization_strength=0.6767676767676768 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.16161616161616163].
2023-08-23 05:43:10,066 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.7272727272727273 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:43:10,066 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.7272727272727273 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:43:22,674 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.26262626262626265, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.5555555555555556 ,epsilon=0.0008181818363636363 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.42424242424242425].
2023-08-23 05:43:22,675 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.26262626262626265, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.5555555555555556 ,epsilon=0.0008181818363636363 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.42424242424242425].
2023-08-23 05:43:26,462 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:43:26,463 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:43:30,227 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.6767676767676768, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.25252525252525254 ,rho=0.6363636363636365 ,epsilon=0.0008181818363636363 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:43:30,228 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.6767676767676768, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.25252525252525254 ,rho=0.6363636363636365 ,epsilon=0.0008181818363636363 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:43:31,348 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0009100000000000001 ,use_ema=False ,ema_momentum=0.5555555555555556 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:43:31,349 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0009100000000000001 ,use_ema=False ,ema_momentum=0.5555555555555556 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:43:45,290 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0001313132181818182 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:43:45,290 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0001313132181818182 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:43:47,278 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-23 05:43:47,279 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-23 05:43:48,182 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.42424242424242425].
2023-08-23 05:43:48,182 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.42424242424242425].
2023-08-23 05:43:51,821 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.4040404040404041].
2023-08-23 05:43:51,821 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.4040404040404041].
2023-08-23 05:44:06,931 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.4545454545454546, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.797979797979798 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.4141414141414142 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.22222222222222224].
2023-08-23 05:44:06,931 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.4545454545454546, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.797979797979798 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.4141414141414142 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.22222222222222224].
2023-08-23 05:44:06,937 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:44:06,937 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:44:09,654 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8484848484848485, momentum=0.8585858585858587 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5555555555555556 ,rho=0.14141414141414144 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.9797979797979799 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.8686868686868687 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.6464646464646465].
2023-08-23 05:44:09,654 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8484848484848485, momentum=0.8585858585858587 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5555555555555556 ,rho=0.14141414141414144 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.9797979797979799 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.8686868686868687 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.6464646464646465].
2023-08-23 05:44:26,553 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0019200000000000003 ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.13131313131313127 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6666666666666667 ,beta=0.9393939393939394].
2023-08-23 05:44:26,553 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0019200000000000003 ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.13131313131313127 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6666666666666667 ,beta=0.9393939393939394].
2023-08-23 05:44:28,090 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=False ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.4040404040404041].
2023-08-23 05:44:28,090 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=False ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.4040404040404041].
2023-08-23 05:44:31,593 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.15151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.5757575757575758].
2023-08-23 05:44:31,594 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.15151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.5757575757575758].
2023-08-23 05:44:46,838 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5050505050505051 ,rho=0.7272727272727273 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.5757575757575758].
2023-08-23 05:44:46,838 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5050505050505051 ,rho=0.7272727272727273 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.5757575757575758].
2023-08-23 05:44:48,653 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:44:48,654 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:45:08,224 INFO: Applying selection operators for generation 3.
2023-08-23 05:45:08,224 INFO: Applying genetic operators for generation 3.
2023-08-23 05:45:08,228 INFO: Evaluating fitness for for generation 3.
2023-08-23 05:45:08,228 INFO: Will evaluate fitness for 41 individuals.
2023-08-23 05:45:08,757 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:45:08,757 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:45:08,772 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:45:08,772 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:45:08,774 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.6565656565656566 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-23 05:45:08,774 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.6565656565656566 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-23 05:45:08,782 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.5151515151515152, momentum=0.5151515151515152 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.7575757575757577 ,rho=0.7676767676767677 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.787878787878788 ,learning_rate_power=-0.8282828282828283 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.3535353535353536].
2023-08-23 05:45:08,782 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.5151515151515152, momentum=0.5151515151515152 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.7575757575757577 ,rho=0.7676767676767677 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.787878787878788 ,learning_rate_power=-0.8282828282828283 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.3535353535353536].
2023-08-23 05:45:28,500 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:45:28,500 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:45:28,998 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.5252525252525253 ,rho=0.29292929292929293 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.5050505050505051 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.5454545454545454 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.8484848484848485].
2023-08-23 05:45:28,999 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.5252525252525253 ,rho=0.29292929292929293 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.5050505050505051 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.5454545454545454 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.8484848484848485].
2023-08-23 05:45:29,199 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:45:29,199 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:45:29,328 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.09090909090909091 ,rho=0.6565656565656566 ,epsilon=0.0008787878909090909 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.010101010101010055 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.686868686868687].
2023-08-23 05:45:29,328 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.09090909090909091 ,rho=0.6565656565656566 ,epsilon=0.0008787878909090909 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.010101010101010055 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.686868686868687].
2023-08-23 05:45:48,633 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:45:48,633 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:45:48,771 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4444444444444445, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=0.0006070000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.7575757575757577 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.9292929292929294 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.6464646464646465].
2023-08-23 05:45:48,772 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4444444444444445, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=0.0006070000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.7575757575757577 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.9292929292929294 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.6464646464646465].
2023-08-23 05:45:50,775 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.33333333333333337, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.22222222222222224 ,rho=0.595959595959596 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.6464646464646465].
2023-08-23 05:45:50,776 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.33333333333333337, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.22222222222222224 ,rho=0.595959595959596 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.6464646464646465].
2023-08-23 05:45:51,488 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:45:51,488 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:46:08,621 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:46:08,622 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:46:10,561 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 05:46:10,562 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 05:46:11,016 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:46:11,016 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:46:12,885 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-23 05:46:12,885 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-23 05:46:28,411 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8787878787878789, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.36363636363636365 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.6464646464646465].
2023-08-23 05:46:28,411 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8787878787878789, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.36363636363636365 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.6464646464646465].
2023-08-23 05:46:30,707 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.10101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.2222222222222222 ,initial_accumulator_value=0.6565656565656566 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.06060606060606061].
2023-08-23 05:46:30,707 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.10101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.2222222222222222 ,initial_accumulator_value=0.6565656565656566 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.06060606060606061].
2023-08-23 05:46:31,041 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.11111111111111112, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.22222222222222224 ,rho=0.494949494949495 ,epsilon=0.0008282828454545454 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.9090909090909092 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.6363636363636365 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.9797979797979799].
2023-08-23 05:46:31,041 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.11111111111111112, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.22222222222222224 ,rho=0.494949494949495 ,epsilon=0.0008282828454545454 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.9090909090909092 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.6363636363636365 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.9797979797979799].
2023-08-23 05:46:32,691 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.9797979797979799 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:46:32,691 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.9797979797979799 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:46:49,928 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.04040404040404041 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.8181818181818182 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.010101010101010102 ,beta=0.06060606060606061].
2023-08-23 05:46:49,928 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.04040404040404041 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.8181818181818182 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.010101010101010102 ,beta=0.06060606060606061].
2023-08-23 05:46:50,477 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0001313132181818182 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.06060606060606061].
2023-08-23 05:46:50,478 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0001313132181818182 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.06060606060606061].
2023-08-23 05:46:52,411 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8282828282828284, momentum=0.8585858585858587 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.26262626262626265 ,rho=0.9494949494949496 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.9797979797979799 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.02020202020202011 ,initial_accumulator_value=0.6666666666666667 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.5151515151515152 ,beta=0.8585858585858587].
2023-08-23 05:46:52,411 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8282828282828284, momentum=0.8585858585858587 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.26262626262626265 ,rho=0.9494949494949496 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.9797979797979799 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.02020202020202011 ,initial_accumulator_value=0.6666666666666667 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.5151515151515152 ,beta=0.8585858585858587].
2023-08-23 05:46:53,829 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.29292929292929293 ,epsilon=0.0004242424818181818 ,centered=True ,beta_1=0.31313131313131315 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.3939393939393939 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:46:53,829 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.29292929292929293 ,epsilon=0.0004242424818181818 ,centered=True ,beta_1=0.31313131313131315 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.3939393939393939 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:47:10,308 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:47:10,308 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:47:12,011 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.5151515151515152, momentum=0.9595959595959597 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.29292929292929293 ,epsilon=0.0008888889 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-1.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.42424242424242425 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.06060606060606061].
2023-08-23 05:47:12,011 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.5151515151515152, momentum=0.9595959595959597 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.29292929292929293 ,epsilon=0.0008888889 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-1.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.42424242424242425 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.06060606060606061].
2023-08-23 05:47:14,314 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.9191919191919192 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.17171717171717174 ,rho=0.8282828282828284 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.4141414141414142 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.26262626262626254 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.37373737373737376 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.8686868686868687].
2023-08-23 05:47:14,314 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.9191919191919192 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.17171717171717174 ,rho=0.8282828282828284 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.4141414141414142 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.26262626262626254 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.37373737373737376 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.8686868686868687].
2023-08-23 05:47:15,186 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.06060606060606061].
2023-08-23 05:47:15,186 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.06060606060606061].
2023-08-23 05:47:31,976 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-23 05:47:31,976 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-23 05:47:34,224 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=0.007879 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.000676767709090909 ,centered=True ,beta_1=0.9696969696969697 ,beta_2=0.686868686868687 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.797979797979798 ,l1_regularization_strength=0.5050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.6464646464646465].
2023-08-23 05:47:34,225 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=0.007879 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.000676767709090909 ,centered=True ,beta_1=0.9696969696969697 ,beta_2=0.686868686868687 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.797979797979798 ,l1_regularization_strength=0.5050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.6464646464646465].
2023-08-23 05:47:35,209 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.06060606060606061].
2023-08-23 05:47:35,209 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.06060606060606061].
2023-08-23 05:47:36,366 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.9797979797979799 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-23 05:47:36,366 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.9797979797979799 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-23 05:47:51,944 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.48484848484848486 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:47:51,944 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.48484848484848486 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:47:54,771 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.9595959595959597, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.00010200000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00010101019090909089 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.9595959595959597 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.696969696969697].
2023-08-23 05:47:54,772 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.9595959595959597, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.00010200000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00010101019090909089 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.9595959595959597 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.696969696969697].
2023-08-23 05:47:56,143 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:47:56,143 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:47:56,890 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:47:56,891 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:48:11,841 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:48:11,842 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:48:16,392 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:48:16,392 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:48:32,659 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:48:32,659 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:48:35,641 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:48:35,641 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:48:52,126 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:48:52,126 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:49:11,125 INFO: Applying selection operators for generation 4.
2023-08-23 05:49:11,126 INFO: Applying genetic operators for generation 4.
2023-08-23 05:49:11,129 INFO: Evaluating fitness for for generation 4.
2023-08-23 05:49:11,129 INFO: Will evaluate fitness for 34 individuals.
2023-08-23 05:49:11,617 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=True ,weight_decay=0.007172000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.4545454545454546 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.23232323232323235 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.5050505050505051].
2023-08-23 05:49:11,617 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=True ,weight_decay=0.007172000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.4545454545454546 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.23232323232323235 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.5050505050505051].
2023-08-23 05:49:11,681 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:49:11,681 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:49:11,685 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 05:49:11,686 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 05:49:11,693 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:49:11,694 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:49:31,229 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.15151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.8181818181818182 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.595959595959596 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4646464646464647 ,beta=0.6464646464646465].
2023-08-23 05:49:31,229 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.15151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.8181818181818182 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.595959595959596 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4646464646464647 ,beta=0.6464646464646465].
2023-08-23 05:49:31,429 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=1.0 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 05:49:31,429 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=1.0 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 05:49:33,940 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.08080808080808081 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.30303030303030304 ,epsilon=0.0006565656909090909 ,centered=True ,beta_1=0.19191919191919193 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.9696969696969697 ,initial_accumulator_value=0.3434343434343435 ,l1_regularization_strength=0.42424242424242425 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.6464646464646465].
2023-08-23 05:49:33,940 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.08080808080808081 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.30303030303030304 ,epsilon=0.0006565656909090909 ,centered=True ,beta_1=0.19191919191919193 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.9696969696969697 ,initial_accumulator_value=0.3434343434343435 ,l1_regularization_strength=0.42424242424242425 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.6464646464646465].
2023-08-23 05:49:33,969 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:49:33,969 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:49:52,387 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.5050505050505051 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3434343434343435 ,rho=0.29292929292929293 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.595959595959596 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.6464646464646465].
2023-08-23 05:49:52,387 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.5050505050505051 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3434343434343435 ,rho=0.29292929292929293 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.595959595959596 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.6464646464646465].
2023-08-23 05:49:52,933 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:49:52,933 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:49:53,972 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:49:53,972 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:49:56,123 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 05:49:56,123 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 05:50:13,204 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:50:13,204 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:50:13,885 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.37373737373737376, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6363636363636365 ,rho=0.3434343434343435 ,epsilon=0.000454545509090909 ,centered=True ,beta_1=0.5050505050505051 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.5757575757575758 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.6464646464646465].
2023-08-23 05:50:13,886 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.37373737373737376, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6363636363636365 ,rho=0.3434343434343435 ,epsilon=0.000454545509090909 ,centered=True ,beta_1=0.5050505050505051 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.5757575757575758 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.6464646464646465].
2023-08-23 05:50:14,184 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.17171717171717174 ,epsilon=0.0002121212909090909 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.4949494949494949 ,initial_accumulator_value=0.36363636363636365 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8585858585858587 ,beta=0.5353535353535354].
2023-08-23 05:50:14,184 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.17171717171717174 ,epsilon=0.0002121212909090909 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.4949494949494949 ,initial_accumulator_value=0.36363636363636365 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8585858585858587 ,beta=0.5353535353535354].
2023-08-23 05:50:16,159 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.98989898989899, momentum=0.797979797979798 ,nesterov=True ,amsgrad=False ,weight_decay=0.0027280000000000004 ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.696969696969697 ,epsilon=1.010110909090909e-05 ,centered=False ,beta_1=0.8080808080808082 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.2929292929292928 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.6464646464646465].
2023-08-23 05:50:16,160 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.98989898989899, momentum=0.797979797979798 ,nesterov=True ,amsgrad=False ,weight_decay=0.0027280000000000004 ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.696969696969697 ,epsilon=1.010110909090909e-05 ,centered=False ,beta_1=0.8080808080808082 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.2929292929292928 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.6464646464646465].
2023-08-23 05:50:32,988 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.8181818181818182, momentum=0.38383838383838387 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.13131313131313133 ,rho=0.26262626262626265 ,epsilon=1.010110909090909e-05 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.595959595959596 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:50:32,988 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.8181818181818182, momentum=0.38383838383838387 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.13131313131313133 ,rho=0.26262626262626265 ,epsilon=1.010110909090909e-05 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.595959595959596 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:50:36,016 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.5252525252525253 ,rho=0.29292929292929293 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.5050505050505051 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.5454545454545454 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.8484848484848485].
2023-08-23 05:50:36,016 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.5252525252525253 ,rho=0.29292929292929293 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.5050505050505051 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.5454545454545454 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.8484848484848485].
2023-08-23 05:50:36,739 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=0.003940000000000001 ,use_ema=False ,ema_momentum=0.22222222222222224 ,rho=0.9595959595959597 ,epsilon=0.0003636364272727272 ,centered=False ,beta_1=0.11111111111111112 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.8383838383838383 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.8181818181818182].
2023-08-23 05:50:36,739 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=0.003940000000000001 ,use_ema=False ,ema_momentum=0.22222222222222224 ,rho=0.9595959595959597 ,epsilon=0.0003636364272727272 ,centered=False ,beta_1=0.11111111111111112 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.8383838383838383 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.8181818181818182].
2023-08-23 05:50:39,413 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:50:39,413 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:50:54,773 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.5252525252525253 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.5454545454545454 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.8484848484848485].
2023-08-23 05:50:54,773 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.5252525252525253 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.5454545454545454 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.8484848484848485].
2023-08-23 05:50:55,846 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=1.0, momentum=0.6464646464646465 ,nesterov=False ,amsgrad=False ,weight_decay=0.009091 ,use_ema=False ,ema_momentum=0.4646464646464647 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.3434343434343435 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5656565656565657 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8787878787878789 ,beta=0.6464646464646465].
2023-08-23 05:50:55,846 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=1.0, momentum=0.6464646464646465 ,nesterov=False ,amsgrad=False ,weight_decay=0.009091 ,use_ema=False ,ema_momentum=0.4646464646464647 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.3434343434343435 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5656565656565657 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8787878787878789 ,beta=0.6464646464646465].
2023-08-23 05:50:59,368 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.33333333333333337, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.48484848484848486 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.6464646464646465].
2023-08-23 05:50:59,368 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.33333333333333337, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.48484848484848486 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.6464646464646465].
2023-08-23 05:50:59,828 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.5151515151515152, momentum=0.26262626262626265 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.4646464646464647 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=1.0].
2023-08-23 05:50:59,828 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.5151515151515152, momentum=0.26262626262626265 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.4646464646464647 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=1.0].
2023-08-23 05:51:14,562 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.5151515151515152, momentum=0.6262626262626263 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.8585858585858587 ,epsilon=0.00044444449999999996 ,centered=False ,beta_1=0.5050505050505051 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.8686868686868687 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.8484848484848485].
2023-08-23 05:51:14,562 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.5151515151515152, momentum=0.6262626262626263 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.8585858585858587 ,epsilon=0.00044444449999999996 ,centered=False ,beta_1=0.5050505050505051 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.8686868686868687 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.8484848484848485].
2023-08-23 05:51:17,356 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8585858585858587, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.32323232323232326 ,rho=0.5555555555555556 ,epsilon=0.00035353541818181815 ,centered=True ,beta_1=0.8787878787878789 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.5454545454545454 ,initial_accumulator_value=0.5757575757575758 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.010101010101010102 ,beta=0.6464646464646465].
2023-08-23 05:51:17,356 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8585858585858587, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.32323232323232326 ,rho=0.5555555555555556 ,epsilon=0.00035353541818181815 ,centered=True ,beta_1=0.8787878787878789 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.5454545454545454 ,initial_accumulator_value=0.5757575757575758 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.010101010101010102 ,beta=0.6464646464646465].
2023-08-23 05:51:19,294 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7575757575757577, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.12121212121212122 ,rho=0.29292929292929293 ,epsilon=0.0003838384454545454 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.686868686868687 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.12121212121212122 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5151515151515152 ,beta=0.5050505050505051].
2023-08-23 05:51:19,295 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7575757575757577, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.12121212121212122 ,rho=0.29292929292929293 ,epsilon=0.0003838384454545454 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.686868686868687 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.12121212121212122 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5151515151515152 ,beta=0.5050505050505051].
2023-08-23 05:51:21,729 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:51:21,729 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:51:36,871 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.5252525252525253 ,rho=0.29292929292929293 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:51:36,872 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.5252525252525253 ,rho=0.29292929292929293 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:51:39,529 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8585858585858587, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.05050505050505051 ,rho=0.9797979797979799 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.18181818181818182 ,beta_2=0.29292929292929293 ,learning_rate_power=-0.16161616161616155 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.030303030303030304].
2023-08-23 05:51:39,529 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8585858585858587, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.05050505050505051 ,rho=0.9797979797979799 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.18181818181818182 ,beta_2=0.29292929292929293 ,learning_rate_power=-0.16161616161616155 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.030303030303030304].
2023-08-23 05:51:41,833 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.6565656565656566 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-23 05:51:41,834 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.6565656565656566 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-23 05:51:58,584 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:51:58,584 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:52:01,173 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:52:01,173 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:52:02,589 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:52:02,589 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:52:22,197 INFO: Applying selection operators for generation 5.
2023-08-23 05:52:22,197 INFO: Applying genetic operators for generation 5.
2023-08-23 05:52:22,200 INFO: Evaluating fitness for for generation 5.
2023-08-23 05:52:22,200 INFO: Will evaluate fitness for 38 individuals.
2023-08-23 05:52:22,757 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:52:22,758 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:52:22,782 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:52:22,782 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:52:22,789 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 05:52:22,790 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 05:52:22,806 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:52:22,806 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:52:42,490 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:52:42,490 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:52:42,514 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:52:42,515 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:52:42,525 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 05:52:42,526 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 05:52:42,632 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.17171717171717174 ,epsilon=0.0002121212909090909 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8585858585858587 ,beta=0.5353535353535354].
2023-08-23 05:52:42,633 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.17171717171717174 ,epsilon=0.0002121212909090909 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8585858585858587 ,beta=0.5353535353535354].
2023-08-23 05:53:02,284 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 05:53:02,284 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 05:53:02,688 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.5151515151515152, momentum=0.18181818181818182 ,nesterov=False ,amsgrad=False ,weight_decay=0.0035360000000000005 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.05050505050505051 ,epsilon=0.0005656566090909091 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.6060606060606061 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=1.0].
2023-08-23 05:53:02,689 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.5151515151515152, momentum=0.18181818181818182 ,nesterov=False ,amsgrad=False ,weight_decay=0.0035360000000000005 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.05050505050505051 ,epsilon=0.0005656566090909091 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.6060606060606061 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=1.0].
2023-08-23 05:53:03,168 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.16161616161616163 ,rho=0.6565656565656566 ,epsilon=0.0009797979818181818 ,centered=True ,beta_1=0.15151515151515152 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4646464646464647 ,beta=0.8686868686868687].
2023-08-23 05:53:03,169 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.16161616161616163 ,rho=0.6565656565656566 ,epsilon=0.0009797979818181818 ,centered=True ,beta_1=0.15151515151515152 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4646464646464647 ,beta=0.8686868686868687].
2023-08-23 05:53:05,189 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.4949494949494949 ,initial_accumulator_value=0.36363636363636365 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 05:53:05,189 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.4949494949494949 ,initial_accumulator_value=0.36363636363636365 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 05:53:22,204 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.11111111111111112, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.7272727272727273 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8282828282828284 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.6464646464646465].
2023-08-23 05:53:22,204 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.11111111111111112, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.7272727272727273 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8282828282828284 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.6464646464646465].
2023-08-23 05:53:22,653 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:53:22,653 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:53:25,038 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=1.0 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 05:53:25,038 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=1.0 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 05:53:25,846 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.31313131313131315, momentum=0.37373737373737376 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4444444444444445 ,rho=0.6565656565656566 ,epsilon=0.0004747475272727272 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.4444444444444445 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=1.0 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.7575757575757577].
2023-08-23 05:53:25,846 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.31313131313131315, momentum=0.37373737373737376 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4444444444444445 ,rho=0.6565656565656566 ,epsilon=0.0004747475272727272 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.4444444444444445 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=1.0 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.7575757575757577].
2023-08-23 05:53:42,716 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 05:53:42,717 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 05:53:42,730 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 05:53:42,730 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 05:53:44,762 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.797979797979798, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0005757576181818182 ,centered=True ,beta_1=0.4040404040404041 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.6464646464646465].
2023-08-23 05:53:44,762 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.797979797979798, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0005757576181818182 ,centered=True ,beta_1=0.4040404040404041 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.6464646464646465].
2023-08-23 05:53:46,714 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:53:46,714 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:54:02,585 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 05:54:02,585 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 05:54:02,694 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 05:54:02,694 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 05:54:07,197 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:54:07,197 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:54:07,816 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.5151515151515152, momentum=0.21212121212121213 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.31313131313131315 ,rho=0.6565656565656566 ,epsilon=0.0006565656909090909 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.494949494949495 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.6161616161616162 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.6464646464646465].
2023-08-23 05:54:07,816 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.5151515151515152, momentum=0.21212121212121213 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.31313131313131315 ,rho=0.6565656565656566 ,epsilon=0.0006565656909090909 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.494949494949495 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.6161616161616162 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.6464646464646465].
2023-08-23 05:54:23,046 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:54:23,046 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:54:23,164 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 05:54:23,165 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 05:54:27,033 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:54:27,033 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:54:30,637 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:54:30,637 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:54:43,010 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:54:43,010 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:54:43,698 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.13131313131313133, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6363636363636365 ,rho=0.6565656565656566 ,epsilon=0.00035353541818181815 ,centered=True ,beta_1=0.4040404040404041 ,beta_2=0.4040404040404041 ,learning_rate_power=-0.8484848484848485 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=1.0 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.17171717171717174].
2023-08-23 05:54:43,698 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.13131313131313133, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6363636363636365 ,rho=0.6565656565656566 ,epsilon=0.00035353541818181815 ,centered=True ,beta_1=0.4040404040404041 ,beta_2=0.4040404040404041 ,learning_rate_power=-0.8484848484848485 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=1.0 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.17171717171717174].
2023-08-23 05:54:46,706 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:54:46,706 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:54:51,248 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=0.00010200000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.21212121212121213 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.2727272727272727 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 05:54:51,248 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=0.00010200000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.21212121212121213 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.2727272727272727 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 05:55:03,075 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:55:03,076 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:55:05,685 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:55:05,686 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:55:06,413 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=1.0 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 05:55:06,414 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=1.0 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 05:55:14,443 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0008484848636363636 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=1.0 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.4545454545454546 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.6464646464646465].
2023-08-23 05:55:14,443 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0008484848636363636 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=1.0 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.4545454545454546 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.6464646464646465].
2023-08-23 05:55:23,420 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.888888888888889, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=0.0030310000000000007 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.9696969696969697 ,epsilon=0.0009191919272727272 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.3434343434343435 ,learning_rate_power=-0.2727272727272727 ,initial_accumulator_value=0.5656565656565657 ,l1_regularization_strength=0.8989898989898991 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.8484848484848485].
2023-08-23 05:55:23,420 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.888888888888889, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=0.0030310000000000007 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.9696969696969697 ,epsilon=0.0009191919272727272 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.3434343434343435 ,learning_rate_power=-0.2727272727272727 ,initial_accumulator_value=0.5656565656565657 ,l1_regularization_strength=0.8989898989898991 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.8484848484848485].
2023-08-23 05:55:44,900 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 05:55:44,901 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 05:56:03,835 INFO: Applying selection operators for generation 6.
2023-08-23 05:56:03,835 INFO: Applying genetic operators for generation 6.
2023-08-23 05:56:03,838 INFO: Evaluating fitness for for generation 6.
2023-08-23 05:56:03,838 INFO: Will evaluate fitness for 39 individuals.
2023-08-23 05:56:04,383 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 05:56:04,383 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 05:56:04,410 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:56:04,410 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:56:04,413 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.29292929292929293, momentum=0.26262626262626265 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8080808080808082 ,rho=0.3535353535353536 ,epsilon=0.0003939394545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.38383838383838387 ,learning_rate_power=-0.404040404040404 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.5858585858585859].
2023-08-23 05:56:04,413 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.29292929292929293, momentum=0.26262626262626265 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8080808080808082 ,rho=0.3535353535353536 ,epsilon=0.0003939394545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.38383838383838387 ,learning_rate_power=-0.404040404040404 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.5858585858585859].
2023-08-23 05:56:04,415 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 05:56:04,415 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 05:56:24,080 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 05:56:24,081 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 05:56:24,087 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4646464646464647 ,beta=0.20202020202020204].
2023-08-23 05:56:24,087 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4646464646464647 ,beta=0.20202020202020204].
2023-08-23 05:56:24,185 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 05:56:24,185 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 05:56:26,189 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.888888888888889, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.29292929292929293 ,rho=0.6565656565656566 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9797979797979799 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.8989898989898991].
2023-08-23 05:56:26,190 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.888888888888889, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.29292929292929293 ,rho=0.6565656565656566 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9797979797979799 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.8989898989898991].
2023-08-23 05:56:43,740 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.2828282828282829 ,rho=0.8080808080808082 ,epsilon=0.00032323239090909086 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.787878787878788 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6161616161616162 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 05:56:43,740 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.2828282828282829 ,rho=0.8080808080808082 ,epsilon=0.00032323239090909086 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.787878787878788 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6161616161616162 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 05:56:44,167 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5050505050505051, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.004041 ,use_ema=True ,ema_momentum=0.5151515151515152 ,rho=0.6565656565656566 ,epsilon=0.0007676767909090908 ,centered=False ,beta_1=0.6565656565656566 ,beta_2=0.5050505050505051 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.18181818181818182].
2023-08-23 05:56:44,167 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5050505050505051, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.004041 ,use_ema=True ,ema_momentum=0.5151515151515152 ,rho=0.6565656565656566 ,epsilon=0.0007676767909090908 ,centered=False ,beta_1=0.6565656565656566 ,beta_2=0.5050505050505051 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.18181818181818182].
2023-08-23 05:56:44,656 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:56:44,656 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:56:49,397 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 05:56:49,397 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 05:57:05,010 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 05:57:05,011 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 05:57:06,121 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=0.003940000000000001 ,use_ema=True ,ema_momentum=0.30303030303030304 ,rho=0.26262626262626265 ,epsilon=0.0007474747727272727 ,centered=False ,beta_1=0.393939393939394 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.9696969696969697 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.37373737373737376].
2023-08-23 05:57:06,122 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=0.003940000000000001 ,use_ema=True ,ema_momentum=0.30303030303030304 ,rho=0.26262626262626265 ,epsilon=0.0007474747727272727 ,centered=False ,beta_1=0.393939393939394 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.9696969696969697 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.37373737373737376].
2023-08-23 05:57:07,278 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.888888888888889, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.4545454545454546 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.6363636363636364 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.9595959595959597 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.6464646464646465].
2023-08-23 05:57:07,278 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.888888888888889, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.4545454545454546 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.6363636363636364 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.9595959595959597 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.6464646464646465].
2023-08-23 05:57:09,356 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 05:57:09,357 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 05:57:25,154 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 05:57:25,155 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 05:57:27,273 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 05:57:27,274 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 05:57:29,065 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 05:57:29,065 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 05:57:29,080 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 05:57:29,081 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 05:57:45,311 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 05:57:45,311 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 05:57:47,353 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=1.0 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 05:57:47,354 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=1.0 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 05:57:48,625 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.43434343434343436 ,beta_2=0.38383838383838387 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.26262626262626265 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5151515151515152 ,beta=0.6464646464646465].
2023-08-23 05:57:48,625 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.43434343434343436 ,beta_2=0.38383838383838387 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.26262626262626265 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5151515151515152 ,beta=0.6464646464646465].
2023-08-23 05:57:49,296 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6767676767676768 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5757575757575758 ,beta_2=0.08080808080808081 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.4444444444444445].
2023-08-23 05:57:49,296 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6767676767676768 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5757575757575758 ,beta_2=0.08080808080808081 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.4444444444444445].
2023-08-23 05:58:05,437 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:58:05,438 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:58:08,030 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 05:58:08,031 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 05:58:08,529 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=1.0 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 05:58:08,529 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=1.0 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 05:58:09,166 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8686868686868687, momentum=0.05050505050505051 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.5252525252525253 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5050505050505051 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.797979797979798 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8282828282828284].
2023-08-23 05:58:09,166 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8686868686868687, momentum=0.05050505050505051 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.5252525252525253 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5050505050505051 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.797979797979798 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8282828282828284].
2023-08-23 05:58:26,746 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8585858585858587 ,beta=0.5353535353535354].
2023-08-23 05:58:26,746 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8585858585858587 ,beta=0.5353535353535354].
2023-08-23 05:58:28,012 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:58:28,013 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:58:28,876 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 05:58:28,876 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 05:58:29,301 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:58:29,301 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:58:47,527 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:58:47,527 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:58:47,581 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.17171717171717174 ,epsilon=0.0002121212909090909 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 05:58:47,581 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.17171717171717174 ,epsilon=0.0002121212909090909 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 05:58:48,668 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:58:48,668 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 05:58:49,397 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4141414141414142, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=0.009697 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.19191919191919193 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.8585858585858587 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.4949494949494949 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 05:58:49,398 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4141414141414142, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=0.009697 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.19191919191919193 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.8585858585858587 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.4949494949494949 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 05:59:07,057 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.23232323232323235, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9090909090909092 ,epsilon=0.00035353541818181815 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=0.6464646464646465].
2023-08-23 05:59:07,057 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.23232323232323235, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9090909090909092 ,epsilon=0.00035353541818181815 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=0.6464646464646465].
2023-08-23 05:59:29,663 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9191919191919192, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.8787878787878789 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.8080808080808081 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.6464646464646465].
2023-08-23 05:59:29,663 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9191919191919192, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.8787878787878789 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.8080808080808081 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.6464646464646465].
2023-08-23 05:59:49,544 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.008687 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.5050505050505051 ,beta_2=0.010101010101010102 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.6464646464646465].
2023-08-23 05:59:49,544 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.008687 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.5050505050505051 ,beta_2=0.010101010101010102 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.6464646464646465].
2023-08-23 06:00:18,169 INFO: Applying selection operators for generation 7.
2023-08-23 06:00:18,170 INFO: Applying genetic operators for generation 7.
2023-08-23 06:00:18,173 INFO: Evaluating fitness for for generation 7.
2023-08-23 06:00:18,173 INFO: Will evaluate fitness for 37 individuals.
2023-08-23 06:00:18,727 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:00:18,727 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:00:18,807 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.8585858585858587 ,epsilon=0.00024242431818181817 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.8080808080808082].
2023-08-23 06:00:18,808 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.8585858585858587 ,epsilon=0.00024242431818181817 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.8080808080808082].
2023-08-23 06:00:18,886 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.16161616161616163 ,rho=0.14141414141414144 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.10101010101010102 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7373737373737375 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.6464646464646465].
2023-08-23 06:00:18,886 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.16161616161616163 ,rho=0.14141414141414144 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.10101010101010102 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7373737373737375 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.6464646464646465].
2023-08-23 06:00:18,898 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.9595959595959597, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.18181818181818182 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.13131313131313133 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.4545454545454546 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:00:18,898 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.9595959595959597, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.18181818181818182 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.13131313131313133 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.4545454545454546 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:00:37,297 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:00:37,298 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:00:39,313 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:00:39,313 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:00:40,887 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.23232323232323235, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=0.0004050000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5656565656565657 ,epsilon=0.000454545509090909 ,centered=True ,beta_1=0.07070707070707072 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.06060606060606061 ,l1_regularization_strength=0.19191919191919193 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.6464646464646465].
2023-08-23 06:00:40,887 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.23232323232323235, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=0.0004050000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5656565656565657 ,epsilon=0.000454545509090909 ,centered=True ,beta_1=0.07070707070707072 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.06060606060606061 ,l1_regularization_strength=0.19191919191919193 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.6464646464646465].
2023-08-23 06:00:41,080 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:00:41,081 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:00:57,505 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:00:57,505 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:00:59,444 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=1.0 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:00:59,444 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=1.0 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:01:01,388 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.0003636364272727272 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.6464646464646465].
2023-08-23 06:01:01,389 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.0003636364272727272 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.6464646464646465].
2023-08-23 06:01:04,450 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:01:04,450 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:01:18,024 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.07070707070707072, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.37373737373737376 ,rho=0.6565656565656566 ,epsilon=0.00010101019090909089 ,centered=True ,beta_1=0.11111111111111112 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.7171717171717172].
2023-08-23 06:01:18,025 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.07070707070707072, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.37373737373737376 ,rho=0.6565656565656566 ,epsilon=0.00010101019090909089 ,centered=True ,beta_1=0.11111111111111112 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.7171717171717172].
2023-08-23 06:01:18,928 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.23232323232323235, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=0.6464646464646465].
2023-08-23 06:01:18,928 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.23232323232323235, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=0.6464646464646465].
2023-08-23 06:01:24,446 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:01:24,447 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:01:24,950 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:01:24,950 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:01:38,499 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8080808080808082, momentum=0.4444444444444445 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.30303030303030304 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.33333333333333337 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.29292929292929293].
2023-08-23 06:01:38,499 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8080808080808082, momentum=0.4444444444444445 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.30303030303030304 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.33333333333333337 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.29292929292929293].
2023-08-23 06:01:40,726 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.7676767676767677 ,epsilon=0.0006868687181818181 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.4646464646464647 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:01:40,726 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.7676767676767677 ,epsilon=0.0006868687181818181 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.4646464646464647 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:01:44,539 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:01:44,539 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:01:44,958 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8585858585858587, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.24242424242424243 ,beta_2=0.48484848484848486 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4040404040404041 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.6464646464646465].
2023-08-23 06:01:44,959 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8585858585858587, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.24242424242424243 ,beta_2=0.48484848484848486 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4040404040404041 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.6464646464646465].
2023-08-23 06:01:59,511 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.37373737373737376, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=True ,weight_decay=0.0014150000000000002 ,use_ema=True ,ema_momentum=0.3434343434343435 ,rho=0.4444444444444445 ,epsilon=0.00035353541818181815 ,centered=True ,beta_1=0.9797979797979799 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.5151515151515151 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.6464646464646465].
2023-08-23 06:01:59,512 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.37373737373737376, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=True ,weight_decay=0.0014150000000000002 ,use_ema=True ,ema_momentum=0.3434343434343435 ,rho=0.4444444444444445 ,epsilon=0.00035353541818181815 ,centered=True ,beta_1=0.9797979797979799 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.5151515151515151 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.6464646464646465].
2023-08-23 06:02:00,887 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:02:00,887 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:02:04,970 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:02:04,971 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:02:05,490 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4646464646464647, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0003030303727272727 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.686868686868687 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:02:05,490 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4646464646464647, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0003030303727272727 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.686868686868687 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:02:20,633 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:02:20,634 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:02:23,313 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=1.0 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:02:23,313 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=1.0 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:02:25,230 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:02:25,230 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:02:27,688 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:02:27,688 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:02:40,854 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.23232323232323235, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=0.6464646464646465].
2023-08-23 06:02:40,855 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.23232323232323235, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=0.6464646464646465].
2023-08-23 06:02:43,926 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:02:43,926 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:02:45,458 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0004050000000000001 ,use_ema=True ,ema_momentum=0.8282828282828284 ,rho=0.07070707070707072 ,epsilon=0.000676767709090909 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.15151515151515152 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.04040404040404041 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9797979797979799 ,beta=0.6464646464646465].
2023-08-23 06:02:45,458 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0004050000000000001 ,use_ema=True ,ema_momentum=0.8282828282828284 ,rho=0.07070707070707072 ,epsilon=0.000676767709090909 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.15151515151515152 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.04040404040404041 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9797979797979799 ,beta=0.6464646464646465].
2023-08-23 06:02:48,322 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:02:48,324 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:03:01,183 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9090909090909092 ,epsilon=0.00035353541818181815 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:03:01,183 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9090909090909092 ,epsilon=0.00035353541818181815 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:03:04,749 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.09090909090909091, momentum=0.4646464646464647 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.42424242424242425 ,rho=0.6565656565656566 ,epsilon=7.070716363636363e-05 ,centered=True ,beta_1=0.5858585858585859 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.9292929292929293 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.38383838383838387 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.31313131313131315 ,beta=0.6464646464646465].
2023-08-23 06:03:04,750 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.09090909090909091, momentum=0.4646464646464647 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.42424242424242425 ,rho=0.6565656565656566 ,epsilon=7.070716363636363e-05 ,centered=True ,beta_1=0.5858585858585859 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.9292929292929293 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.38383838383838387 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.31313131313131315 ,beta=0.6464646464646465].
2023-08-23 06:03:08,481 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:03:08,482 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:03:09,684 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.42424242424242425, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9090909090909092 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.696969696969697 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.21212121212121213 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=0.6464646464646465].
2023-08-23 06:03:09,684 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.42424242424242425, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9090909090909092 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.696969696969697 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.21212121212121213 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=0.6464646464646465].
2023-08-23 06:03:21,413 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:03:21,413 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:03:40,368 INFO: Applying selection operators for generation 8.
2023-08-23 06:03:40,368 INFO: Applying genetic operators for generation 8.
2023-08-23 06:03:40,373 INFO: Evaluating fitness for for generation 8.
2023-08-23 06:03:40,373 INFO: Will evaluate fitness for 39 individuals.
2023-08-23 06:03:40,926 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.9797979797979799, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.0003636364272727272 ,centered=True ,beta_1=0.5151515151515152 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.9595959595959597 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.7676767676767677].
2023-08-23 06:03:40,927 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.9797979797979799, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.0003636364272727272 ,centered=True ,beta_1=0.5151515151515152 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.9595959595959597 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.7676767676767677].
2023-08-23 06:03:40,933 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.6464646464646465].
2023-08-23 06:03:40,933 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.6464646464646465].
2023-08-23 06:03:40,988 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=0.0014150000000000002 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.393939393939394 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.9191919191919192 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.5353535353535352 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.787878787878788 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.98989898989899].
2023-08-23 06:03:40,988 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=0.0014150000000000002 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.393939393939394 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.9191919191919192 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.5353535353535352 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.787878787878788 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.98989898989899].
2023-08-23 06:03:41,002 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.18181818181818182, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0020210000000000002 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.19191919191919193 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.06060606060606061 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.11111111111111112 ,beta=0.98989898989899].
2023-08-23 06:03:41,002 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.18181818181818182, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0020210000000000002 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.19191919191919193 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.06060606060606061 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.11111111111111112 ,beta=0.98989898989899].
2023-08-23 06:03:59,712 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0076770000000000015 ,use_ema=False ,ema_momentum=0.07070707070707072 ,rho=0.595959595959596 ,epsilon=0.00043434349090909084 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.6262626262626263 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.38383838383838387 ,beta=0.6464646464646465].
2023-08-23 06:03:59,712 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0076770000000000015 ,use_ema=False ,ema_momentum=0.07070707070707072 ,rho=0.595959595959596 ,epsilon=0.00043434349090909084 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.6262626262626263 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.38383838383838387 ,beta=0.6464646464646465].
2023-08-23 06:04:00,724 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.6464646464646465].
2023-08-23 06:04:00,724 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.6464646464646465].
2023-08-23 06:04:02,605 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.0003636364272727272 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.6464646464646465].
2023-08-23 06:04:02,605 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.0003636364272727272 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.6464646464646465].
2023-08-23 06:04:04,446 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5757575757575758, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.5858585858585859 ,l1_regularization_strength=0.4545454545454546 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.8484848484848485].
2023-08-23 06:04:04,446 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5757575757575758, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.5858585858585859 ,l1_regularization_strength=0.4545454545454546 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.8484848484848485].
2023-08-23 06:04:21,053 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.0003636364272727272 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:04:21,053 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.0003636364272727272 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:04:23,272 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.37373737373737376, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=True ,weight_decay=0.008788 ,use_ema=True ,ema_momentum=0.696969696969697 ,rho=0.7474747474747475 ,epsilon=0.000676767709090909 ,centered=True ,beta_1=0.6060606060606061 ,beta_2=0.595959595959596 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.030303030303030304].
2023-08-23 06:04:23,272 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.37373737373737376, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=True ,weight_decay=0.008788 ,use_ema=True ,ema_momentum=0.696969696969697 ,rho=0.7474747474747475 ,epsilon=0.000676767709090909 ,centered=True ,beta_1=0.6060606060606061 ,beta_2=0.595959595959596 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.030303030303030304].
2023-08-23 06:04:25,178 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.0003636364272727272 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:04:25,178 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.0003636364272727272 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:04:25,589 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:04:25,589 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:04:43,758 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.9292929292929294, momentum=0.32323232323232326 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00025252532727272723 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:04:43,758 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.9292929292929294, momentum=0.32323232323232326 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00025252532727272723 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:04:45,149 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:04:45,150 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:04:48,046 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:04:48,046 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:04:54,743 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.26262626262626265, momentum=0.30303030303030304 ,nesterov=True ,amsgrad=False ,weight_decay=0.008182 ,use_ema=False ,ema_momentum=0.7777777777777778 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8282828282828284 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.27272727272727276 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.6464646464646465].
2023-08-23 06:04:54,744 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.26262626262626265, momentum=0.30303030303030304 ,nesterov=True ,amsgrad=False ,weight_decay=0.008182 ,use_ema=False ,ema_momentum=0.7777777777777778 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8282828282828284 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.27272727272727276 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.6464646464646465].
2023-08-23 06:05:05,261 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:05:05,262 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:05:06,019 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5353535353535354, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0007474747727272727 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.7272727272727273 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.3434343434343435 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:05:06,019 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5353535353535354, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0007474747727272727 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.7272727272727273 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.3434343434343435 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:05:08,801 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9191919191919192, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=0.0045460000000000006 ,use_ema=True ,ema_momentum=0.25252525252525254 ,rho=0.8181818181818182 ,epsilon=0.0004242424818181818 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.787878787878788 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.5858585858585859 ,l1_regularization_strength=0.8787878787878789 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8787878787878789 ,beta=0.6565656565656566].
2023-08-23 06:05:08,801 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9191919191919192, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=0.0045460000000000006 ,use_ema=True ,ema_momentum=0.25252525252525254 ,rho=0.8181818181818182 ,epsilon=0.0004242424818181818 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.787878787878788 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.5858585858585859 ,l1_regularization_strength=0.8787878787878789 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8787878787878789 ,beta=0.6565656565656566].
2023-08-23 06:05:15,422 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.37373737373737376, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.009697 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.38383838383838387 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:05:15,422 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.37373737373737376, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.009697 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.38383838383838387 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:05:25,428 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0017180000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.7171717171717172 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.3535353535353536 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.5555555555555556].
2023-08-23 06:05:25,428 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0017180000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.7171717171717172 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.3535353535353536 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.5555555555555556].
2023-08-23 06:05:28,774 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:05:28,774 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:05:33,191 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.9696969696969697, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6767676767676768 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.8787878787878789].
2023-08-23 06:05:33,192 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.9696969696969697, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6767676767676768 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.8787878787878789].
2023-08-23 06:05:37,343 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.9797979797979799, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.22222222222222224 ,rho=0.8585858585858587 ,epsilon=0.0003636364272727272 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.6464646464646465].
2023-08-23 06:05:37,343 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.9797979797979799, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.22222222222222224 ,rho=0.8585858585858587 ,epsilon=0.0003636364272727272 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.6464646464646465].
2023-08-23 06:05:48,761 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.7272727272727273].
2023-08-23 06:05:48,761 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.7272727272727273].
2023-08-23 06:05:49,288 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:05:49,288 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:05:52,118 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:05:52,118 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:06:00,751 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=True ,weight_decay=0.0027280000000000004 ,use_ema=False ,ema_momentum=0.22222222222222224 ,rho=0.4747474747474748 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.696969696969697 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.6464646464646465].
2023-08-23 06:06:00,751 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=True ,weight_decay=0.0027280000000000004 ,use_ema=False ,ema_momentum=0.22222222222222224 ,rho=0.4747474747474748 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.696969696969697 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.6464646464646465].
2023-08-23 06:06:09,063 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.6767676767676768, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.18181818181818182 ,rho=0.6565656565656566 ,epsilon=0.0003030303727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.6464646464646465].
2023-08-23 06:06:09,064 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.6767676767676768, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.18181818181818182 ,rho=0.6565656565656566 ,epsilon=0.0003030303727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.6464646464646465].
2023-08-23 06:06:11,338 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=0.007778000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.595959595959596 ,epsilon=0.0009393939454545454 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.8787878787878788 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.6464646464646465].
2023-08-23 06:06:11,338 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=0.007778000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.595959595959596 ,epsilon=0.0009393939454545454 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.8787878787878788 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.6464646464646465].
2023-08-23 06:06:15,149 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:06:15,150 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:06:23,413 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.3535353535353536, momentum=0.25252525252525254 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.04040404040404041 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.14141414141414144 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.6464646464646464 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.6464646464646465].
2023-08-23 06:06:23,414 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.3535353535353536, momentum=0.25252525252525254 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.04040404040404041 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.14141414141414144 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.6464646464646464 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.6464646464646465].
2023-08-23 06:06:31,381 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8989898989898991, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.21212121212121213 ,beta_2=0.5454545454545455 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.6464646464646465].
2023-08-23 06:06:31,381 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8989898989898991, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.21212121212121213 ,beta_2=0.5454545454545455 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.6464646464646465].
2023-08-23 06:06:33,967 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.07070707070707072, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4646464646464647 ,rho=0.18181818181818182 ,epsilon=0.0007474747727272727 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.3737373737373737 ,initial_accumulator_value=0.26262626262626265 ,l1_regularization_strength=0.13131313131313133 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:06:33,968 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.07070707070707072, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4646464646464647 ,rho=0.18181818181818182 ,epsilon=0.0007474747727272727 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.3737373737373737 ,initial_accumulator_value=0.26262626262626265 ,l1_regularization_strength=0.13131313131313133 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:06:35,713 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:06:35,713 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:06:46,502 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.6464646464646465].
2023-08-23 06:06:46,502 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.6464646464646465].
2023-08-23 06:06:54,847 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.0003636364272727272 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:06:54,847 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.0003636364272727272 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:07:14,551 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=0.008384 ,use_ema=False ,ema_momentum=0.6767676767676768 ,rho=0.6565656565656566 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.5050505050505051 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.8585858585858587].
2023-08-23 06:07:14,552 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=0.008384 ,use_ema=False ,ema_momentum=0.6767676767676768 ,rho=0.6565656565656566 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.5050505050505051 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.8585858585858587].
2023-08-23 06:07:36,551 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5050505050505051 ,rho=0.6565656565656566 ,epsilon=0.0002020202818181818 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.6464646464646465].
2023-08-23 06:07:36,552 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5050505050505051 ,rho=0.6565656565656566 ,epsilon=0.0002020202818181818 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.6464646464646465].
2023-08-23 06:07:58,878 INFO: Applying selection operators for generation 9.
2023-08-23 06:07:58,878 INFO: Applying genetic operators for generation 9.
2023-08-23 06:07:58,883 INFO: Evaluating fitness for for generation 9.
2023-08-23 06:07:58,883 INFO: Will evaluate fitness for 44 individuals.
2023-08-23 06:07:59,445 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:07:59,446 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:07:59,473 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:07:59,473 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:07:59,479 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.8080808080808082 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.7777777777777778 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.4646464646464647].
2023-08-23 06:07:59,480 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.8080808080808082 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.7777777777777778 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.4646464646464647].
2023-08-23 06:07:59,528 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.7676767676767677, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.7676767676767677 ,rho=0.5656565656565657 ,epsilon=0.00046464651818181813 ,centered=True ,beta_1=0.888888888888889 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.303030303030303 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9797979797979799 ,beta=0.26262626262626265].
2023-08-23 06:07:59,528 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.7676767676767677, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.7676767676767677 ,rho=0.5656565656565657 ,epsilon=0.00046464651818181813 ,centered=True ,beta_1=0.888888888888889 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.303030303030303 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9797979797979799 ,beta=0.26262626262626265].
2023-08-23 06:08:19,446 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:08:19,447 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:08:19,815 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.26262626262626265, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.13131313131313133 ,rho=0.17171717171717174 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.8282828282828283 ,initial_accumulator_value=0.37373737373737376 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.7676767676767677].
2023-08-23 06:08:19,815 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.26262626262626265, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.13131313131313133 ,rho=0.17171717171717174 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.8282828282828283 ,initial_accumulator_value=0.37373737373737376 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.7676767676767677].
2023-08-23 06:08:21,733 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00018181826363636362 ,centered=False ,beta_1=1.0 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.6363636363636365].
2023-08-23 06:08:21,734 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00018181826363636362 ,centered=False ,beta_1=1.0 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.6363636363636365].
2023-08-23 06:08:29,659 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.5858585858585859, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7474747474747475 ,rho=0.797979797979798 ,epsilon=0.00010101019090909089 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.7272727272727273].
2023-08-23 06:08:29,659 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.5858585858585859, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7474747474747475 ,rho=0.797979797979798 ,epsilon=0.00010101019090909089 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.7272727272727273].
2023-08-23 06:08:40,249 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8585858585858587, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.494949494949495 ,rho=0.11111111111111112 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.6565656565656566 ,beta_2=0.19191919191919193 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8787878787878789 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.98989898989899].
2023-08-23 06:08:40,249 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8585858585858587, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.494949494949495 ,rho=0.11111111111111112 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.6565656565656566 ,beta_2=0.19191919191919193 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8787878787878789 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.98989898989899].
2023-08-23 06:08:42,128 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.0003636364272727272 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.6464646464646465].
2023-08-23 06:08:42,129 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.0003636364272727272 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.6464646464646465].
2023-08-23 06:08:44,608 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.393939393939394].
2023-08-23 06:08:44,608 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.393939393939394].
2023-08-23 06:09:01,527 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.8787878787878789, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.6767676767676768 ,beta_2=0.14141414141414144 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.29292929292929293 ,l1_regularization_strength=0.27272727272727276 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.030303030303030304 ,beta=0.6464646464646465].
2023-08-23 06:09:01,528 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.8787878787878789, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.6767676767676768 ,beta_2=0.14141414141414144 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.29292929292929293 ,l1_regularization_strength=0.27272727272727276 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.030303030303030304 ,beta=0.6464646464646465].
2023-08-23 06:09:03,288 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.6262626262626263, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0008282828454545454 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8585858585858587 ,beta=0.6464646464646465].
2023-08-23 06:09:03,288 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.6262626262626263, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0008282828454545454 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8585858585858587 ,beta=0.6464646464646465].
2023-08-23 06:09:03,362 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.0003636364272727272 ,centered=False ,beta_1=0.020202020202020204 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.4545454545454546].
2023-08-23 06:09:03,362 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.0003636364272727272 ,centered=False ,beta_1=0.020202020202020204 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.4545454545454546].
2023-08-23 06:09:07,761 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:09:07,762 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:09:24,090 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:09:24,090 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:09:25,653 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:09:25,654 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:09:27,471 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:09:27,471 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:09:28,075 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.05050505050505051, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.004647000000000001 ,use_ema=True ,ema_momentum=0.23232323232323235 ,rho=0.8282828282828284 ,epsilon=0.0005050505545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.6464646464646465].
2023-08-23 06:09:28,075 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.05050505050505051, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.004647000000000001 ,use_ema=True ,ema_momentum=0.23232323232323235 ,rho=0.8282828282828284 ,epsilon=0.0005050505545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.6464646464646465].
2023-08-23 06:09:44,590 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.6464646464646465].
2023-08-23 06:09:44,590 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.6464646464646465].
2023-08-23 06:09:46,408 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:09:46,409 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:09:47,453 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6464646464646465, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4141414141414142 ,rho=0.6565656565656566 ,epsilon=0.0005757576181818182 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.030303030303030304 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5757575757575758 ,beta=0.6464646464646465].
2023-08-23 06:09:47,454 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6464646464646465, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4141414141414142 ,rho=0.6565656565656566 ,epsilon=0.0005757576181818182 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.030303030303030304 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5757575757575758 ,beta=0.6464646464646465].
2023-08-23 06:09:59,219 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:09:59,219 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:10:05,600 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.7272727272727273].
2023-08-23 06:10:05,600 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.7272727272727273].
2023-08-23 06:10:06,939 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.6464646464646465].
2023-08-23 06:10:06,940 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.6464646464646465].
2023-08-23 06:10:10,333 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.7272727272727273].
2023-08-23 06:10:10,333 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.7272727272727273].
2023-08-23 06:10:22,770 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8686868686868687 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.98989898989899 ,learning_rate_power=-0.7474747474747474 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.6464646464646465].
2023-08-23 06:10:22,771 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8686868686868687 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.98989898989899 ,learning_rate_power=-0.7474747474747474 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.6464646464646465].
2023-08-23 06:10:28,051 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.14141414141414144 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.010101010101010102 ,beta=0.10101010101010102].
2023-08-23 06:10:28,052 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.14141414141414144 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.010101010101010102 ,beta=0.10101010101010102].
2023-08-23 06:10:28,668 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:10:28,668 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:10:31,359 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:10:31,360 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:10:41,222 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.0003636364272727272 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:10:41,223 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.0003636364272727272 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:10:48,466 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:10:48,467 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:10:51,184 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.11111111111111112, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.25252525252525254 ,epsilon=0.0005555556 ,centered=False ,beta_1=0.8989898989898991 ,beta_2=0.6060606060606061 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:10:51,185 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.11111111111111112, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.25252525252525254 ,epsilon=0.0005555556 ,centered=False ,beta_1=0.8989898989898991 ,beta_2=0.6060606060606061 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:10:51,293 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.6565656565656566 ,epsilon=0.0003737374363636363 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.9292929292929294 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.0].
2023-08-23 06:10:51,293 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.6565656565656566 ,epsilon=0.0003737374363636363 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.9292929292929294 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.0].
2023-08-23 06:11:01,459 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.7373737373737375 ,nesterov=False ,amsgrad=False ,weight_decay=0.0047480000000000005 ,use_ema=True ,ema_momentum=0.7474747474747475 ,rho=0.6565656565656566 ,epsilon=0.0007171717454545454 ,centered=True ,beta_1=0.20202020202020204 ,beta_2=0.4646464646464647 ,learning_rate_power=-0.6363636363636364 ,initial_accumulator_value=0.8181818181818182 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.6464646464646465].
2023-08-23 06:11:01,459 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.7373737373737375 ,nesterov=False ,amsgrad=False ,weight_decay=0.0047480000000000005 ,use_ema=True ,ema_momentum=0.7474747474747475 ,rho=0.6565656565656566 ,epsilon=0.0007171717454545454 ,centered=True ,beta_1=0.20202020202020204 ,beta_2=0.4646464646464647 ,learning_rate_power=-0.6363636363636364 ,initial_accumulator_value=0.8181818181818182 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.6464646464646465].
2023-08-23 06:11:09,535 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.0003636364272727272 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.6464646464646465].
2023-08-23 06:11:09,535 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.0003636364272727272 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.6464646464646465].
2023-08-23 06:11:14,432 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=True ,weight_decay=0.0067680000000000014 ,use_ema=False ,ema_momentum=0.5353535353535354 ,rho=0.09090909090909091 ,epsilon=0.0007474747727272727 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.4545454545454546 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7373737373737375 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.7272727272727273].
2023-08-23 06:11:14,432 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=True ,weight_decay=0.0067680000000000014 ,use_ema=False ,ema_momentum=0.5353535353535354 ,rho=0.09090909090909091 ,epsilon=0.0007474747727272727 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.4545454545454546 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7373737373737375 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.7272727272727273].
2023-08-23 06:11:22,066 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4747474747474748, momentum=1.0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007373737636363636 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.4242424242424242 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.4747474747474748].
2023-08-23 06:11:22,066 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4747474747474748, momentum=1.0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007373737636363636 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.4242424242424242 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.4747474747474748].
2023-08-23 06:11:25,620 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:11:25,621 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:11:30,289 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.21212121212121213, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5252525252525253 ,epsilon=0.0003636364272727272 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.6464646464646465].
2023-08-23 06:11:30,289 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.21212121212121213, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5252525252525253 ,epsilon=0.0003636364272727272 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.6464646464646465].
2023-08-23 06:11:44,502 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:11:44,503 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:11:45,387 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:11:45,387 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:11:54,130 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:11:54,130 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:12:07,236 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.6767676767676768, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.04040404040404041 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.797979797979798 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.7272727272727273].
2023-08-23 06:12:07,236 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.6767676767676768, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.04040404040404041 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.797979797979798 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.7272727272727273].
2023-08-23 06:12:29,033 INFO: Applying selection operators for generation 10.
2023-08-23 06:12:29,034 INFO: Applying genetic operators for generation 10.
2023-08-23 06:12:29,038 INFO: Evaluating fitness for for generation 10.
2023-08-23 06:12:29,038 INFO: Will evaluate fitness for 37 individuals.
2023-08-23 06:12:29,613 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.0003636364272727272 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:12:29,613 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.0003636364272727272 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:12:29,625 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.23232323232323235 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.13131313131313133 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.8282828282828284 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:12:29,626 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.23232323232323235 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.13131313131313133 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.8282828282828284 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:12:29,629 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.14141414141414144 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.010101010101010102 ,beta=0.10101010101010102].
2023-08-23 06:12:29,629 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.14141414141414144 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.010101010101010102 ,beta=0.10101010101010102].
2023-08-23 06:12:29,649 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.07070707070707072 ,rho=0.07070707070707072 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.797979797979798 ,beta_2=0.33333333333333337 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.9393939393939394 ,l1_regularization_strength=0.21212121212121213 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.4141414141414142].
2023-08-23 06:12:29,649 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.07070707070707072 ,rho=0.07070707070707072 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.797979797979798 ,beta_2=0.33333333333333337 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.9393939393939394 ,l1_regularization_strength=0.21212121212121213 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.4141414141414142].
2023-08-23 06:12:49,648 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.0003636364272727272 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:12:49,648 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.0003636364272727272 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:12:50,592 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.7272727272727273].
2023-08-23 06:12:50,592 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.7272727272727273].
2023-08-23 06:12:52,394 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.7272727272727273].
2023-08-23 06:12:52,394 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.7272727272727273].
2023-08-23 06:12:52,560 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:12:52,560 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:13:10,254 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.07070707070707072 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5353535353535354 ,epsilon=0.0003636364272727272 ,centered=False ,beta_1=0.9494949494949496 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.27272727272727276 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.12121212121212122].
2023-08-23 06:13:10,254 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.07070707070707072 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5353535353535354 ,epsilon=0.0003636364272727272 ,centered=False ,beta_1=0.9494949494949496 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.27272727272727276 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.12121212121212122].
2023-08-23 06:13:10,917 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.38383838383838387, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.2828282828282829 ,rho=0.8585858585858587 ,epsilon=0.0004747475272727272 ,centered=True ,beta_1=0.43434343434343436 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.6060606060606061 ,l1_regularization_strength=0.4646464646464647 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9696969696969697 ,beta=0.06060606060606061].
2023-08-23 06:13:10,917 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.38383838383838387, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.2828282828282829 ,rho=0.8585858585858587 ,epsilon=0.0004747475272727272 ,centered=True ,beta_1=0.43434343434343436 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.6060606060606061 ,l1_regularization_strength=0.4646464646464647 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9696969696969697 ,beta=0.06060606060606061].
2023-08-23 06:13:13,128 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:13:13,128 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:13:13,154 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.787878787878788, momentum=0.27272727272727276 ,nesterov=True ,amsgrad=False ,weight_decay=0.0034350000000000006 ,use_ema=True ,ema_momentum=0.8585858585858587 ,rho=0.31313131313131315 ,epsilon=0.00035353541818181815 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8585858585858587 ,beta=0.6464646464646465].
2023-08-23 06:13:13,154 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.787878787878788, momentum=0.27272727272727276 ,nesterov=True ,amsgrad=False ,weight_decay=0.0034350000000000006 ,use_ema=True ,ema_momentum=0.8585858585858587 ,rho=0.31313131313131315 ,epsilon=0.00035353541818181815 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8585858585858587 ,beta=0.6464646464646465].
2023-08-23 06:13:33,424 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.0003636364272727272 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.7272727272727273].
2023-08-23 06:13:33,425 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.0003636364272727272 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.7272727272727273].
2023-08-23 06:13:33,735 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.0003636364272727272 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:13:33,736 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.0003636364272727272 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:13:33,833 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.7272727272727273].
2023-08-23 06:13:33,833 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.7272727272727273].
2023-08-23 06:13:34,877 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4444444444444445, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.98989898989899 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.4646464646464647].
2023-08-23 06:13:34,877 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4444444444444445, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.98989898989899 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.4646464646464647].
2023-08-23 06:13:53,653 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.19191919191919193, momentum=0.9393939393939394 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7575757575757577 ,rho=0.7171717171717172 ,epsilon=0.0007474747727272727 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.7777777777777778 ,learning_rate_power=-0.36363636363636354 ,initial_accumulator_value=0.29292929292929293 ,l1_regularization_strength=0.4646464646464647 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.6464646464646465].
2023-08-23 06:13:53,653 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.19191919191919193, momentum=0.9393939393939394 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7575757575757577 ,rho=0.7171717171717172 ,epsilon=0.0007474747727272727 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.7777777777777778 ,learning_rate_power=-0.36363636363636354 ,initial_accumulator_value=0.29292929292929293 ,l1_regularization_strength=0.4646464646464647 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.6464646464646465].
2023-08-23 06:13:54,766 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.797979797979798 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4444444444444445 ,rho=0.09090909090909091 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.9797979797979799 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.7272727272727273].
2023-08-23 06:13:54,766 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.797979797979798 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4444444444444445 ,rho=0.09090909090909091 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.9797979797979799 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.7272727272727273].
2023-08-23 06:13:56,876 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.7272727272727273].
2023-08-23 06:13:56,877 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.7272727272727273].
2023-08-23 06:13:58,486 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.7272727272727273].
2023-08-23 06:13:58,487 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.7272727272727273].
2023-08-23 06:14:15,257 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.13131313131313133, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.787878787878788 ,rho=0.12121212121212122 ,epsilon=0.0002929293636363636 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.7272727272727273].
2023-08-23 06:14:15,257 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.13131313131313133, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.787878787878788 ,rho=0.12121212121212122 ,epsilon=0.0002929293636363636 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.7272727272727273].
2023-08-23 06:14:17,117 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7373737373737375, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00018181826363636362 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.05050505050505051 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.6464646464646465].
2023-08-23 06:14:17,117 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7373737373737375, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00018181826363636362 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.05050505050505051 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.6464646464646465].
2023-08-23 06:14:17,414 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.0003636364272727272 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:14:17,414 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.0003636364272727272 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:14:19,124 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.7272727272727273].
2023-08-23 06:14:19,124 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.7272727272727273].
2023-08-23 06:14:37,912 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.06060606060606061, momentum=0.07070707070707072 ,nesterov=False ,amsgrad=False ,weight_decay=0.0036370000000000005 ,use_ema=True ,ema_momentum=0.494949494949495 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.04040404040404041 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5252525252525253 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8585858585858587 ,beta=0.6464646464646465].
2023-08-23 06:14:37,913 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.06060606060606061, momentum=0.07070707070707072 ,nesterov=False ,amsgrad=False ,weight_decay=0.0036370000000000005 ,use_ema=True ,ema_momentum=0.494949494949495 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.04040404040404041 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5252525252525253 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8585858585858587 ,beta=0.6464646464646465].
2023-08-23 06:14:38,244 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.888888888888889 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9090909090909092 ,epsilon=1e-10 ,centered=False ,beta_1=0.9797979797979799 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.010101010101010055 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.10101010101010102].
2023-08-23 06:14:38,244 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.888888888888889 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9090909090909092 ,epsilon=1e-10 ,centered=False ,beta_1=0.9797979797979799 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.010101010101010055 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.10101010101010102].
2023-08-23 06:14:39,733 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.14141414141414144 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.010101010101010102 ,beta=0.10101010101010102].
2023-08-23 06:14:39,734 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.14141414141414144 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.010101010101010102 ,beta=0.10101010101010102].
2023-08-23 06:14:40,067 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.04040404040404041 ,epsilon=0.0003636364272727272 ,centered=False ,beta_1=0.4040404040404041 ,beta_2=0.08080808080808081 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.6464646464646465].
2023-08-23 06:14:40,067 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.04040404040404041 ,epsilon=0.0003636364272727272 ,centered=False ,beta_1=0.4040404040404041 ,beta_2=0.08080808080808081 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.6464646464646465].
2023-08-23 06:14:59,552 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.7272727272727273].
2023-08-23 06:14:59,552 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.7272727272727273].
2023-08-23 06:15:01,569 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.14141414141414144 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:15:01,569 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.14141414141414144 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:15:02,654 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.0003636364272727272 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.6464646464646465].
2023-08-23 06:15:02,655 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.0003636364272727272 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.6464646464646465].
2023-08-23 06:15:03,546 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8383838383838385 ,rho=0.09090909090909091 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.5252525252525253].
2023-08-23 06:15:03,547 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8383838383838385 ,rho=0.09090909090909091 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.5252525252525253].
2023-08-23 06:15:20,137 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.14141414141414144 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.010101010101010102 ,beta=0.10101010101010102].
2023-08-23 06:15:20,138 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.14141414141414144 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.010101010101010102 ,beta=0.10101010101010102].
2023-08-23 06:15:22,764 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.9393939393939394, momentum=0.16161616161616163 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=1.0 ,epsilon=1e-10 ,centered=False ,beta_1=0.20202020202020204 ,beta_2=0.5252525252525253 ,learning_rate_power=-0.3434343434343434 ,initial_accumulator_value=0.31313131313131315 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.6464646464646465].
2023-08-23 06:15:22,765 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.9393939393939394, momentum=0.16161616161616163 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=1.0 ,epsilon=1e-10 ,centered=False ,beta_1=0.20202020202020204 ,beta_2=0.5252525252525253 ,learning_rate_power=-0.3434343434343434 ,initial_accumulator_value=0.31313131313131315 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.6464646464646465].
2023-08-23 06:15:24,228 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.7272727272727273].
2023-08-23 06:15:24,229 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.7272727272727273].
2023-08-23 06:15:25,556 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:15:25,557 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:15:40,714 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:15:40,714 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:16:00,992 INFO: Applying selection operators for generation 11.
2023-08-23 06:16:00,992 INFO: Applying genetic operators for generation 11.
2023-08-23 06:16:00,996 INFO: Evaluating fitness for for generation 11.
2023-08-23 06:16:00,996 INFO: Will evaluate fitness for 46 individuals.
2023-08-23 06:16:01,551 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.004445000000000001 ,use_ema=True ,ema_momentum=0.2828282828282829 ,rho=0.6363636363636365 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.24242424242424243 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.24242424242424243].
2023-08-23 06:16:01,551 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.004445000000000001 ,use_ema=True ,ema_momentum=0.2828282828282829 ,rho=0.6363636363636365 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.24242424242424243 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.24242424242424243].
2023-08-23 06:16:01,572 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.005253000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.24242424242424243 ,epsilon=0.0007070707363636364 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.12121212121212122 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.4747474747474748 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.20202020202020204].
2023-08-23 06:16:01,572 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.005253000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.24242424242424243 ,epsilon=0.0007070707363636364 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.12121212121212122 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.4747474747474748 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.20202020202020204].
2023-08-23 06:16:01,587 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.5151515151515152, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.5151515151515152 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.9090909090909092 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.7272727272727273].
2023-08-23 06:16:01,587 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.5151515151515152, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.5151515151515152 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.9090909090909092 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.7272727272727273].
2023-08-23 06:16:01,596 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.3535353535353536, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0008090000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.797979797979798 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.7373737373737375 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.16161616161616155 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.21212121212121213].
2023-08-23 06:16:01,596 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.3535353535353536, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0008090000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.797979797979798 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.7373737373737375 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.16161616161616155 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.21212121212121213].
2023-08-23 06:16:24,660 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.23232323232323235, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0023240000000000005 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.4747474747474748 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.5858585858585859].
2023-08-23 06:16:24,661 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.23232323232323235, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0023240000000000005 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.4747474747474748 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.5858585858585859].
2023-08-23 06:16:24,934 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:16:24,935 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:16:25,121 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.7272727272727273].
2023-08-23 06:16:25,121 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.7272727272727273].
2023-08-23 06:16:25,220 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.14141414141414144, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=False ,weight_decay=0.005051000000000001 ,use_ema=True ,ema_momentum=0.030303030303030304 ,rho=0.3535353535353536 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.98989898989899 ,learning_rate_power=-0.7373737373737373 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.8484848484848485].
2023-08-23 06:16:25,220 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.14141414141414144, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=False ,weight_decay=0.005051000000000001 ,use_ema=True ,ema_momentum=0.030303030303030304 ,rho=0.3535353535353536 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.98989898989899 ,learning_rate_power=-0.7373737373737373 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.8484848484848485].
2023-08-23 06:16:45,231 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.14141414141414144 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:16:45,231 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.14141414141414144 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:16:45,949 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:16:45,949 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:16:48,453 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.14141414141414144 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.7272727272727273].
2023-08-23 06:16:48,453 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.14141414141414144 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.7272727272727273].
2023-08-23 06:16:49,512 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.5151515151515152, momentum=0.31313131313131315 ,nesterov=True ,amsgrad=False ,weight_decay=0.0032330000000000006 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.43434343434343436 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.05050505050505051].
2023-08-23 06:16:49,512 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.5151515151515152, momentum=0.31313131313131315 ,nesterov=True ,amsgrad=False ,weight_decay=0.0032330000000000006 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.43434343434343436 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.05050505050505051].
2023-08-23 06:17:05,832 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:17:05,832 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:17:06,415 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:17:06,416 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:17:09,603 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5353535353535354 ,epsilon=0.0003636364272727272 ,centered=False ,beta_1=0.9494949494949496 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:17:09,603 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5353535353535354 ,epsilon=0.0003636364272727272 ,centered=False ,beta_1=0.9494949494949496 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:17:13,649 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:17:13,649 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:17:26,290 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.7272727272727273].
2023-08-23 06:17:26,290 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.7272727272727273].
2023-08-23 06:17:26,980 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.6363636363636365, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4040404040404041 ,rho=0.7676767676767677 ,epsilon=0.0009494949545454545 ,centered=False ,beta_1=0.6363636363636365 ,beta_2=0.22222222222222224 ,learning_rate_power=-0.24242424242424232 ,initial_accumulator_value=0.5858585858585859 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.6060606060606061].
2023-08-23 06:17:26,980 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.6363636363636365, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4040404040404041 ,rho=0.7676767676767677 ,epsilon=0.0009494949545454545 ,centered=False ,beta_1=0.6363636363636365 ,beta_2=0.22222222222222224 ,learning_rate_power=-0.24242424242424232 ,initial_accumulator_value=0.5858585858585859 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.6060606060606061].
2023-08-23 06:17:30,128 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:17:30,128 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:17:34,232 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.14141414141414144 ,epsilon=0.00014141422727272727 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.595959595959596 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.36363636363636365 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.010101010101010102 ,beta=0.09090909090909091].
2023-08-23 06:17:34,232 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.14141414141414144 ,epsilon=0.00014141422727272727 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.595959595959596 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.36363636363636365 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.010101010101010102 ,beta=0.09090909090909091].
2023-08-23 06:17:46,575 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:17:46,575 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:17:50,190 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.07070707070707072 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.14141414141414144 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.27272727272727276 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.12121212121212122].
2023-08-23 06:17:50,190 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.07070707070707072 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.14141414141414144 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.27272727272727276 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.12121212121212122].
2023-08-23 06:17:50,751 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.7272727272727273].
2023-08-23 06:17:50,751 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.7272727272727273].
2023-08-23 06:17:58,370 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.7272727272727273].
2023-08-23 06:17:58,371 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.7272727272727273].
2023-08-23 06:18:06,880 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:18:06,880 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:18:10,872 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.31313131313131315, momentum=0.797979797979798 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.686868686868687 ,rho=0.09090909090909091 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.37373737373737376 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.7272727272727273].
2023-08-23 06:18:10,872 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.31313131313131315, momentum=0.797979797979798 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.686868686868687 ,rho=0.09090909090909091 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.37373737373737376 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.7272727272727273].
2023-08-23 06:18:14,539 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.006869000000000001 ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.6565656565656566 ,epsilon=0.0005656566090909091 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.25252525252525254 ,l1_regularization_strength=0.38383838383838387 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:18:14,539 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.006869000000000001 ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.6565656565656566 ,epsilon=0.0005656566090909091 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.25252525252525254 ,l1_regularization_strength=0.38383838383838387 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:18:18,954 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.18181818181818182 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.5858585858585859 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.7373737373737375].
2023-08-23 06:18:18,954 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.18181818181818182 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.5858585858585859 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.7373737373737375].
2023-08-23 06:18:27,916 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.7272727272727273].
2023-08-23 06:18:27,916 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.7272727272727273].
2023-08-23 06:18:31,530 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.20202020202020204, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.26262626262626265 ,rho=0.6565656565656566 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.6060606060606061 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.8888888888888888 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.6464646464646465].
2023-08-23 06:18:31,530 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.20202020202020204, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.26262626262626265 ,rho=0.6565656565656566 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.6060606060606061 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.8888888888888888 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.6464646464646465].
2023-08-23 06:18:33,146 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.030303030303030304 ,rho=0.9595959595959597 ,epsilon=0.0008585858727272726 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.7777777777777778].
2023-08-23 06:18:33,146 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.030303030303030304 ,rho=0.9595959595959597 ,epsilon=0.0008585858727272726 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.7777777777777778].
2023-08-23 06:18:41,862 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.14141414141414144 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.6464646464646465].
2023-08-23 06:18:41,863 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.14141414141414144 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.6464646464646465].
2023-08-23 06:18:48,319 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.0007474747727272727 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:18:48,319 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.0007474747727272727 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:18:54,895 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.14141414141414144 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:18:54,895 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.14141414141414144 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:18:55,495 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:18:55,496 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:19:05,783 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:19:05,783 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:19:08,574 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0015160000000000002 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00010101019090909089 ,centered=False ,beta_1=0.12121212121212122 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.6363636363636364 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.6464646464646465].
2023-08-23 06:19:08,574 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0015160000000000002 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00010101019090909089 ,centered=False ,beta_1=0.12121212121212122 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.6363636363636364 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.6464646464646465].
2023-08-23 06:19:15,841 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3434343434343435 ,rho=0.09090909090909091 ,epsilon=0.0007373737636363636 ,centered=True ,beta_1=0.33333333333333337 ,beta_2=0.38383838383838387 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.13131313131313133 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.6464646464646465].
2023-08-23 06:19:15,841 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3434343434343435 ,rho=0.09090909090909091 ,epsilon=0.0007373737636363636 ,centered=True ,beta_1=0.33333333333333337 ,beta_2=0.38383838383838387 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.13131313131313133 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.6464646464646465].
2023-08-23 06:19:16,289 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:19:16,290 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:19:26,708 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.14141414141414144 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:19:26,708 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.14141414141414144 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:19:32,913 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:19:32,913 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:19:37,712 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:19:37,712 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:19:39,025 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:19:39,025 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:19:53,236 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.0003636364272727272 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:19:53,236 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.0003636364272727272 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6464646464646465].
2023-08-23 06:19:58,605 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:19:58,605 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:19:59,512 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:19:59,512 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:20:22,643 INFO: Applying selection operators for generation 12.
2023-08-23 06:20:22,643 INFO: Applying genetic operators for generation 12.
2023-08-23 06:20:22,647 INFO: Evaluating fitness for for generation 12.
2023-08-23 06:20:22,647 INFO: Will evaluate fitness for 39 individuals.
2023-08-23 06:20:23,210 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.13131313131313133 ,rho=0.5555555555555556 ,epsilon=0.0008383838545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.36363636363636365 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.696969696969697 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:20:23,210 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.13131313131313133 ,rho=0.5555555555555556 ,epsilon=0.0008383838545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.36363636363636365 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.696969696969697 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:20:23,213 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.494949494949495 ,rho=0.8686868686868687 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.8282828282828284 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.6767676767676768].
2023-08-23 06:20:23,213 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.494949494949495 ,rho=0.8686868686868687 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.8282828282828284 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.6767676767676768].
2023-08-23 06:20:23,335 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.797979797979798 ,epsilon=0.0009898989909090908 ,centered=False ,beta_1=0.6262626262626263 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.6464646464646465].
2023-08-23 06:20:23,335 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.797979797979798 ,epsilon=0.0009898989909090908 ,centered=False ,beta_1=0.6262626262626263 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.6464646464646465].
2023-08-23 06:20:23,357 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.494949494949495, momentum=0.25252525252525254 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.0003636364272727272 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.6060606060606061 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.05050505050505051].
2023-08-23 06:20:23,358 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.494949494949495, momentum=0.25252525252525254 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.0003636364272727272 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.6060606060606061 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.05050505050505051].
2023-08-23 06:20:44,847 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.12121212121212122, momentum=0.22222222222222224 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.787878787878788 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.8585858585858587].
2023-08-23 06:20:44,847 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.12121212121212122, momentum=0.22222222222222224 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.787878787878788 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.8585858585858587].
2023-08-23 06:20:46,125 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:20:46,125 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:20:46,437 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.14141414141414144 ,epsilon=0.0007474747727272727 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.7272727272727273].
2023-08-23 06:20:46,437 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.14141414141414144 ,epsilon=0.0007474747727272727 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.7272727272727273].
2023-08-23 06:20:46,910 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:20:46,910 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:21:06,474 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:21:06,474 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:21:07,144 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:21:07,144 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:21:07,665 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.07070707070707072, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00046464651818181813 ,centered=False ,beta_1=0.15151515151515152 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.46464646464646464 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.6464646464646465].
2023-08-23 06:21:07,665 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.07070707070707072, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00046464651818181813 ,centered=False ,beta_1=0.15151515151515152 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.46464646464646464 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.6464646464646465].
2023-08-23 06:21:08,710 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.007071000000000001 ,use_ema=True ,ema_momentum=0.30303030303030304 ,rho=0.7272727272727273 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.5656565656565657 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.32323232323232326].
2023-08-23 06:21:08,710 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.007071000000000001 ,use_ema=True ,ema_momentum=0.30303030303030304 ,rho=0.7272727272727273 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.5656565656565657 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.32323232323232326].
2023-08-23 06:21:26,873 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:21:26,873 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:21:27,363 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5858585858585859 ,epsilon=0.00012121220909090907 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.6464646464646465].
2023-08-23 06:21:27,363 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5858585858585859 ,epsilon=0.00012121220909090907 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.6464646464646465].
2023-08-23 06:21:31,109 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:21:31,110 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:21:32,734 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:21:32,734 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:21:45,807 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:21:45,807 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:21:47,953 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.37373737373737376 ,rho=0.5353535353535354 ,epsilon=0.0009292929363636363 ,centered=False ,beta_1=0.37373737373737376 ,beta_2=0.9595959595959597 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.05050505050505051 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.7373737373737375].
2023-08-23 06:21:47,953 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.37373737373737376 ,rho=0.5353535353535354 ,epsilon=0.0009292929363636363 ,centered=False ,beta_1=0.37373737373737376 ,beta_2=0.9595959595959597 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.05050505050505051 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.7373737373737375].
2023-08-23 06:21:52,443 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:21:52,443 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:21:54,105 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.48484848484848486 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.29292929292929293 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.4545454545454546 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.30303030303030304 ,beta=0.6464646464646465].
2023-08-23 06:21:54,105 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.48484848484848486 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.29292929292929293 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.4545454545454546 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.30303030303030304 ,beta=0.6464646464646465].
2023-08-23 06:22:06,699 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:22:06,699 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:22:10,078 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.7272727272727273].
2023-08-23 06:22:10,079 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.7272727272727273].
2023-08-23 06:22:13,373 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:22:13,373 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:22:18,799 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:22:18,799 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:22:27,176 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.7272727272727273].
2023-08-23 06:22:27,176 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.7272727272727273].
2023-08-23 06:22:30,624 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.24242424242424243, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.0004747475272727272 ,centered=True ,beta_1=0.5555555555555556 ,beta_2=0.14141414141414144 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.9494949494949496].
2023-08-23 06:22:30,624 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.24242424242424243, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.0004747475272727272 ,centered=True ,beta_1=0.5555555555555556 ,beta_2=0.14141414141414144 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.9494949494949496].
2023-08-23 06:22:34,225 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:22:34,226 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:22:39,531 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:22:39,531 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:22:50,502 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:22:50,503 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:22:54,794 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:22:54,794 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:22:55,238 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:22:55,238 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:23:00,550 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.25252525252525254, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.38383838383838387 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.33333333333333326 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.4040404040404041 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.010101010101010102].
2023-08-23 06:23:00,550 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.25252525252525254, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.38383838383838387 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.33333333333333326 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.4040404040404041 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.010101010101010102].
2023-08-23 06:23:10,741 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:23:10,741 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:23:15,467 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.07070707070707072 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 06:23:15,467 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.07070707070707072 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-23 06:23:16,951 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6565656565656566 ,rho=0.13131313131313133 ,epsilon=0.0009494949545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:23:16,951 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6565656565656566 ,rho=0.13131313131313133 ,epsilon=0.0009494949545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:23:24,977 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.7272727272727273].
2023-08-23 06:23:24,977 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.7272727272727273].
2023-08-23 06:23:31,560 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.27272727272727276 ,rho=0.6565656565656566 ,epsilon=0.0005959596363636363 ,centered=False ,beta_1=0.3434343434343435 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.98989898989899 ,l1_regularization_strength=0.5050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.98989898989899].
2023-08-23 06:23:31,560 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.27272727272727276 ,rho=0.6565656565656566 ,epsilon=0.0005959596363636363 ,centered=False ,beta_1=0.3434343434343435 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.98989898989899 ,l1_regularization_strength=0.5050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.98989898989899].
2023-08-23 06:23:54,876 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:23:54,876 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:24:14,634 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.7272727272727273].
2023-08-23 06:24:14,635 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.7272727272727273].
2023-08-23 06:24:34,361 INFO: Applying selection operators for generation 13.
2023-08-23 06:24:34,361 INFO: Applying genetic operators for generation 13.
2023-08-23 06:24:34,365 INFO: Evaluating fitness for for generation 13.
2023-08-23 06:24:34,365 INFO: Will evaluate fitness for 39 individuals.
2023-08-23 06:24:34,949 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:24:34,950 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:24:35,078 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:24:35,079 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:24:35,111 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:24:35,112 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:24:35,123 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.06060606060606061, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4141414141414142 ,rho=0.6060606060606061 ,epsilon=0.0001313132181818182 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.6262626262626263].
2023-08-23 06:24:35,123 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.06060606060606061, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4141414141414142 ,rho=0.6060606060606061 ,epsilon=0.0001313132181818182 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.6262626262626263].
2023-08-23 06:24:55,137 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.27272727272727276 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.686868686868687 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=1.0 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:24:55,137 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.27272727272727276 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.686868686868687 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=1.0 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:24:55,511 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.7272727272727273].
2023-08-23 06:24:55,511 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.7272727272727273].
2023-08-23 06:24:55,615 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.797979797979798 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.7777777777777778 ,rho=0.6565656565656566 ,epsilon=0.0002828283545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.15151515151515152 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.38383838383838387 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.6464646464646465].
2023-08-23 06:24:55,615 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.797979797979798 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.7777777777777778 ,rho=0.6565656565656566 ,epsilon=0.0002828283545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.15151515151515152 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.38383838383838387 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.6464646464646465].
2023-08-23 06:24:58,387 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9494949494949496, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.009596 ,use_ema=True ,ema_momentum=0.8282828282828284 ,rho=0.25252525252525254 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.8080808080808082 ,beta_2=0.494949494949495 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.27272727272727276].
2023-08-23 06:24:58,387 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9494949494949496, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.009596 ,use_ema=True ,ema_momentum=0.8282828282828284 ,rho=0.25252525252525254 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.8080808080808082 ,beta_2=0.494949494949495 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.27272727272727276].
2023-08-23 06:25:16,736 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:25:16,737 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:25:18,610 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:25:18,610 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:25:19,448 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:25:19,448 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:25:23,071 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:25:23,071 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:25:37,547 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:25:37,547 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:25:38,780 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.0003636364272727272 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:25:38,781 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.0003636364272727272 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:25:40,160 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0029300000000000007 ,use_ema=True ,ema_momentum=0.8080808080808082 ,rho=0.6565656565656566 ,epsilon=0.0005959596363636363 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.29292929292929293 ,learning_rate_power=-0.2727272727272727 ,initial_accumulator_value=0.9595959595959597 ,l1_regularization_strength=0.8080808080808082 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:25:40,160 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0029300000000000007 ,use_ema=True ,ema_momentum=0.8080808080808082 ,rho=0.6565656565656566 ,epsilon=0.0005959596363636363 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.29292929292929293 ,learning_rate_power=-0.2727272727272727 ,initial_accumulator_value=0.9595959595959597 ,l1_regularization_strength=0.8080808080808082 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:25:43,653 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5353535353535354, momentum=0.04040404040404041 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5151515151515152 ,rho=0.6565656565656566 ,epsilon=0.0009696969727272727 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.5353535353535354 ,learning_rate_power=-0.09090909090909083 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.030303030303030304 ,beta=0.17171717171717174].
2023-08-23 06:25:43,653 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5353535353535354, momentum=0.04040404040404041 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5151515151515152 ,rho=0.6565656565656566 ,epsilon=0.0009696969727272727 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.5353535353535354 ,learning_rate_power=-0.09090909090909083 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.030303030303030304 ,beta=0.17171717171717174].
2023-08-23 06:25:58,111 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7777777777777778 ,rho=0.7373737373737375 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.8282828282828284 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.6464646464646465].
2023-08-23 06:25:58,111 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7777777777777778 ,rho=0.7373737373737375 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.8282828282828284 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.6464646464646465].
2023-08-23 06:25:59,584 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.494949494949495, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.006162000000000001 ,use_ema=True ,ema_momentum=0.22222222222222224 ,rho=0.22222222222222224 ,epsilon=0.001 ,centered=False ,beta_1=0.21212121212121213 ,beta_2=0.5050505050505051 ,learning_rate_power=-0.31313131313131304 ,initial_accumulator_value=0.8686868686868687 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.5151515151515152].
2023-08-23 06:25:59,584 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.494949494949495, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.006162000000000001 ,use_ema=True ,ema_momentum=0.22222222222222224 ,rho=0.22222222222222224 ,epsilon=0.001 ,centered=False ,beta_1=0.21212121212121213 ,beta_2=0.5050505050505051 ,learning_rate_power=-0.31313131313131304 ,initial_accumulator_value=0.8686868686868687 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.5151515151515152].
2023-08-23 06:26:04,480 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.0004747475272727272 ,centered=True ,beta_1=0.5555555555555556 ,beta_2=0.14141414141414144 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:26:04,481 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.0004747475272727272 ,centered=True ,beta_1=0.5555555555555556 ,beta_2=0.14141414141414144 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:26:07,118 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.36363636363636365 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.020202020202020204 ,epsilon=0.0001919192727272727 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.16161616161616163 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:26:07,119 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.36363636363636365 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.020202020202020204 ,epsilon=0.0001919192727272727 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.16161616161616163 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:26:21,969 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.686868686868687, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=1e-10 ,centered=False ,beta_1=0.3535353535353536 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.696969696969697 ,l1_regularization_strength=0.4141414141414142 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.6464646464646465].
2023-08-23 06:26:21,969 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.686868686868687, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=1e-10 ,centered=False ,beta_1=0.3535353535353536 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.696969696969697 ,l1_regularization_strength=0.4141414141414142 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.6464646464646465].
2023-08-23 06:26:23,608 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.07070707070707072, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.16161616161616163 ,rho=0.20202020202020204 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.24242424242424232 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.7272727272727273].
2023-08-23 06:26:23,608 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.07070707070707072, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.16161616161616163 ,rho=0.20202020202020204 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.24242424242424232 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.7272727272727273].
2023-08-23 06:26:28,160 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.24242424242424243, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.9494949494949496].
2023-08-23 06:26:28,160 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.24242424242424243, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.9494949494949496].
2023-08-23 06:26:31,270 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:26:31,270 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:26:45,243 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.15151515151515152 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9696969696969697 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.08080808080808081].
2023-08-23 06:26:45,243 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.15151515151515152 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9696969696969697 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.08080808080808081].
2023-08-23 06:26:47,123 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:26:47,123 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:26:49,688 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.7272727272727273].
2023-08-23 06:26:49,688 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.7272727272727273].
2023-08-23 06:26:51,939 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:26:51,939 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:27:03,764 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0027280000000000004 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.6464646464646465].
2023-08-23 06:27:03,764 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0027280000000000004 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.6464646464646465].
2023-08-23 06:27:07,933 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8484848484848485, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.9393939393939394 ,initial_accumulator_value=0.595959595959596 ,l1_regularization_strength=0.696969696969697 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.6464646464646465].
2023-08-23 06:27:07,934 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8484848484848485, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.9393939393939394 ,initial_accumulator_value=0.595959595959596 ,l1_regularization_strength=0.696969696969697 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.6464646464646465].
2023-08-23 06:27:10,644 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.7272727272727273].
2023-08-23 06:27:10,644 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.7272727272727273].
2023-08-23 06:27:12,489 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.43434343434343436, momentum=0.5656565656565657 ,nesterov=False ,amsgrad=False ,weight_decay=0.007879 ,use_ema=True ,ema_momentum=0.787878787878788 ,rho=0.5555555555555556 ,epsilon=0.0003636364272727272 ,centered=False ,beta_1=0.9494949494949496 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.24242424242424232 ,initial_accumulator_value=0.6767676767676768 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7777777777777778 ,beta=0.05050505050505051].
2023-08-23 06:27:12,489 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.43434343434343436, momentum=0.5656565656565657 ,nesterov=False ,amsgrad=False ,weight_decay=0.007879 ,use_ema=True ,ema_momentum=0.787878787878788 ,rho=0.5555555555555556 ,epsilon=0.0003636364272727272 ,centered=False ,beta_1=0.9494949494949496 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.24242424242424232 ,initial_accumulator_value=0.6767676767676768 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7777777777777778 ,beta=0.05050505050505051].
2023-08-23 06:27:27,354 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:27:27,354 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:27:28,273 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:27:28,273 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:27:31,513 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.6161616161616162, momentum=0.5757575757575758 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.33333333333333337 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8989898989898991 ,beta=0.6464646464646465].
2023-08-23 06:27:31,513 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.6161616161616162, momentum=0.5757575757575758 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.33333333333333337 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8989898989898991 ,beta=0.6464646464646465].
2023-08-23 06:27:46,282 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3434343434343435 ,rho=0.18181818181818182 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.26262626262626265 ,l1_regularization_strength=0.4141414141414142 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.7676767676767677].
2023-08-23 06:27:46,282 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3434343434343435 ,rho=0.18181818181818182 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.26262626262626265 ,l1_regularization_strength=0.4141414141414142 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.7676767676767677].
2023-08-23 06:27:48,479 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.5151515151515152, momentum=0.09090909090909091 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.15151515151515152 ,epsilon=0.00023232330909090908 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.27272727272727276].
2023-08-23 06:27:48,479 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.5151515151515152, momentum=0.09090909090909091 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.15151515151515152 ,epsilon=0.00023232330909090908 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.27272727272727276].
2023-08-23 06:28:13,084 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.494949494949495, momentum=0.25252525252525254 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.0003636364272727272 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:28:13,084 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.494949494949495, momentum=0.25252525252525254 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.0003636364272727272 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:28:33,204 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.9494949494949496 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.6060606060606061 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.05050505050505051].
2023-08-23 06:28:33,204 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.9494949494949496 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.6060606060606061 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.05050505050505051].
2023-08-23 06:28:52,611 INFO: Applying selection operators for generation 14.
2023-08-23 06:28:52,611 INFO: Applying genetic operators for generation 14.
2023-08-23 06:28:52,614 INFO: Evaluating fitness for for generation 14.
2023-08-23 06:28:52,614 INFO: Will evaluate fitness for 34 individuals.
2023-08-23 06:28:53,195 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:28:53,195 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:28:53,203 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.48484848484848486 ,rho=1.0 ,epsilon=0.0005959596363636363 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.26262626262626265].
2023-08-23 06:28:53,203 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.48484848484848486 ,rho=1.0 ,epsilon=0.0005959596363636363 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.26262626262626265].
2023-08-23 06:28:53,377 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6262626262626263 ,epsilon=0.00041414147272727267 ,centered=True ,beta_1=0.04040404040404041 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.6464646464646465].
2023-08-23 06:28:53,377 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6262626262626263 ,epsilon=0.00041414147272727267 ,centered=True ,beta_1=0.04040404040404041 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.6464646464646465].
2023-08-23 06:28:53,391 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:28:53,391 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:29:13,313 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0002222223 ,centered=True ,beta_1=0.15151515151515152 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.6868686868686869 ,initial_accumulator_value=0.22222222222222224 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.6464646464646465].
2023-08-23 06:29:13,313 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0002222223 ,centered=True ,beta_1=0.15151515151515152 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.6868686868686869 ,initial_accumulator_value=0.22222222222222224 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.6464646464646465].
2023-08-23 06:29:14,126 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.494949494949495, momentum=0.25252525252525254 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.0003636364272727272 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:29:14,127 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.494949494949495, momentum=0.25252525252525254 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.0003636364272727272 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:29:16,836 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:29:16,836 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:29:17,420 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:29:17,420 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:29:34,869 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:29:34,869 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:29:36,774 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:29:36,774 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:29:37,248 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.5656565656565657 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6363636363636365 ,rho=0.6565656565656566 ,epsilon=0.000676767709090909 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.48484848484848486 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8585858585858587 ,beta=0.6464646464646465].
2023-08-23 06:29:37,248 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.5656565656565657 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6363636363636365 ,rho=0.6565656565656566 ,epsilon=0.000676767709090909 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.48484848484848486 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8585858585858587 ,beta=0.6464646464646465].
2023-08-23 06:29:38,111 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:29:38,111 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:29:55,413 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:29:55,413 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:29:57,114 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:29:57,114 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:29:58,611 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00035353541818181815 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.38383838383838387 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.4444444444444445].
2023-08-23 06:29:58,611 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00035353541818181815 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.38383838383838387 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.4444444444444445].
2023-08-23 06:30:00,730 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:30:00,731 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:30:16,576 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.7272727272727273].
2023-08-23 06:30:16,576 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.7272727272727273].
2023-08-23 06:30:17,378 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:30:17,378 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:30:21,478 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:30:21,479 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:30:23,110 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.05050505050505051, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.0004747475272727272 ,centered=True ,beta_1=0.5555555555555556 ,beta_2=0.14141414141414144 ,learning_rate_power=-0.8181818181818181 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.6464646464646465].
2023-08-23 06:30:23,110 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.05050505050505051, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.0004747475272727272 ,centered=True ,beta_1=0.5555555555555556 ,beta_2=0.14141414141414144 ,learning_rate_power=-0.8181818181818181 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.6464646464646465].
2023-08-23 06:30:37,209 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.24242424242424243, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.9494949494949496].
2023-08-23 06:30:37,209 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.24242424242424243, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.9494949494949496].
2023-08-23 06:30:38,470 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.19191919191919193, momentum=0.8181818181818182 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.31313131313131315 ,rho=0.5252525252525253 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.9292929292929294 ,beta_2=0.23232323232323235 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.4040404040404041 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.6464646464646465].
2023-08-23 06:30:38,470 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.19191919191919193, momentum=0.8181818181818182 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.31313131313131315 ,rho=0.5252525252525253 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.9292929292929294 ,beta_2=0.23232323232323235 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.4040404040404041 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.6464646464646465].
2023-08-23 06:30:41,978 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.4545454545454546 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.09090909090909091 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.8484848484848485 ,beta_2=0.6262626262626263 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8989898989898991 ,beta=0.6464646464646465].
2023-08-23 06:30:41,978 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.4545454545454546 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.09090909090909091 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.8484848484848485 ,beta_2=0.6262626262626263 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8989898989898991 ,beta=0.6464646464646465].
2023-08-23 06:30:47,906 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:30:47,906 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:30:57,831 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.6464646464646465, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.005960000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.14141414141414144 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.8383838383838383 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.38383838383838387 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.4040404040404041].
2023-08-23 06:30:57,831 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.6464646464646465, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.005960000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.14141414141414144 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.8383838383838383 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.38383838383838387 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.4040404040404041].
2023-08-23 06:31:02,154 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.98989898989899 ,epsilon=9.09091818181818e-05 ,centered=True ,beta_1=0.37373737373737376 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.2222222222222222 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.595959595959596 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:31:02,154 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.98989898989899 ,epsilon=9.09091818181818e-05 ,centered=True ,beta_1=0.37373737373737376 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.2222222222222222 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.595959595959596 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:31:02,393 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.10101010101010102 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.36363636363636365 ,learning_rate_power=-0.8181818181818181 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.8686868686868687].
2023-08-23 06:31:02,393 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.10101010101010102 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.36363636363636365 ,learning_rate_power=-0.8181818181818181 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.8686868686868687].
2023-08-23 06:31:08,508 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:31:08,509 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:31:21,721 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7171717171717172 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.8383838383838385 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.26262626262626265 ,l1_regularization_strength=0.7474747474747475 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.7272727272727273].
2023-08-23 06:31:21,721 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7171717171717172 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.8383838383838385 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.26262626262626265 ,l1_regularization_strength=0.7474747474747475 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.7272727272727273].
2023-08-23 06:31:25,454 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.7474747474747475, momentum=0.8181818181818182 ,nesterov=False ,amsgrad=False ,weight_decay=0.0021220000000000006 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.5757575757575758].
2023-08-23 06:31:25,454 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.7474747474747475, momentum=0.8181818181818182 ,nesterov=False ,amsgrad=False ,weight_decay=0.0021220000000000006 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.5757575757575758].
2023-08-23 06:31:25,570 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:31:25,570 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:31:44,804 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:31:44,804 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:31:45,760 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:31:45,760 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:31:49,483 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0067680000000000014 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.07070707070707072 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.14141414141414144 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4444444444444445 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.8181818181818182].
2023-08-23 06:31:49,483 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0067680000000000014 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.07070707070707072 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.14141414141414144 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4444444444444445 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.8181818181818182].
2023-08-23 06:32:08,986 INFO: Applying selection operators for generation 15.
2023-08-23 06:32:08,986 INFO: Applying genetic operators for generation 15.
2023-08-23 06:32:08,989 INFO: Evaluating fitness for for generation 15.
2023-08-23 06:32:08,990 INFO: Will evaluate fitness for 40 individuals.
2023-08-23 06:32:09,557 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:32:09,557 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:32:09,559 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7474747474747475 ,rho=0.6565656565656566 ,epsilon=0.00014141422727272727 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.5353535353535352 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6666666666666667 ,beta=0.6464646464646465].
2023-08-23 06:32:09,559 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7474747474747475 ,rho=0.6565656565656566 ,epsilon=0.00014141422727272727 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.5353535353535352 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6666666666666667 ,beta=0.6464646464646465].
2023-08-23 06:32:09,582 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.24242424242424243, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6363636363636365 ,rho=0.6565656565656566 ,epsilon=0.00040404046363636356 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.3434343434343435 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.020202020202020204].
2023-08-23 06:32:09,582 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.24242424242424243, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6363636363636365 ,rho=0.6565656565656566 ,epsilon=0.00040404046363636356 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.3434343434343435 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.020202020202020204].
2023-08-23 06:32:09,611 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:32:09,612 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:32:29,997 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.36363636363636365, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.4545454545454546 ,learning_rate_power=-0.9191919191919192 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.686868686868687 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.6464646464646465].
2023-08-23 06:32:29,997 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.36363636363636365, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.4545454545454546 ,learning_rate_power=-0.9191919191919192 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.686868686868687 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.6464646464646465].
2023-08-23 06:32:30,153 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:32:30,154 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:32:32,956 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.6767676767676768, momentum=0.08080808080808081 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=3.030312727272727e-05 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.10101010101010102 ,beta=0.6464646464646465].
2023-08-23 06:32:32,957 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.6767676767676768, momentum=0.08080808080808081 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=3.030312727272727e-05 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.10101010101010102 ,beta=0.6464646464646465].
2023-08-23 06:32:33,597 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.5353535353535354, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.8383838383838385 ,epsilon=1e-10 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.6060606060606061 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.07070707070707072].
2023-08-23 06:32:33,598 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.5353535353535354, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.8383838383838385 ,epsilon=1e-10 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.6060606060606061 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.07070707070707072].
2023-08-23 06:32:50,733 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:32:50,733 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:32:51,714 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.6262626262626263, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6363636363636365 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.31313131313131304 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6565656565656566].
2023-08-23 06:32:51,715 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.6262626262626263, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6363636363636365 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.31313131313131304 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6565656565656566].
2023-08-23 06:32:52,693 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:32:52,693 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:32:57,846 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:32:57,846 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:33:12,051 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:33:12,051 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:33:13,591 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:33:13,591 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:33:15,183 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:33:15,183 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:33:18,427 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:33:18,428 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:33:32,634 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:33:32,634 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:33:33,986 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.15151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.007374000000000001 ,use_ema=False ,ema_momentum=0.393939393939394 ,rho=0.26262626262626265 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.6262626262626263 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.26262626262626254 ,initial_accumulator_value=0.19191919191919193 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.7171717171717172].
2023-08-23 06:33:33,987 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.15151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.007374000000000001 ,use_ema=False ,ema_momentum=0.393939393939394 ,rho=0.26262626262626265 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.6262626262626263 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.26262626262626254 ,initial_accumulator_value=0.19191919191919193 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.7171717171717172].
2023-08-23 06:33:35,691 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:33:35,692 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:33:38,918 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:33:38,919 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:33:53,178 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:33:53,178 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:33:56,878 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:33:56,878 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:33:57,257 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.005758000000000001 ,use_ema=True ,ema_momentum=0.9191919191919192 ,rho=0.6565656565656566 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.37373737373737376 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.36363636363636354 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.4444444444444445 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.6464646464646465].
2023-08-23 06:33:57,257 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.005758000000000001 ,use_ema=True ,ema_momentum=0.9191919191919192 ,rho=0.6565656565656566 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.37373737373737376 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.36363636363636354 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.4444444444444445 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.6464646464646465].
2023-08-23 06:34:00,052 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.8181818181818182, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.005354000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6060606060606061 ,epsilon=0.0002828283545454545 ,centered=True ,beta_1=0.08080808080808081 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:34:00,052 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.8181818181818182, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.005354000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6060606060606061 ,epsilon=0.0002828283545454545 ,centered=True ,beta_1=0.08080808080808081 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:34:13,791 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.002829000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0008787878909090909 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.16161616161616155 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.4444444444444445 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.5555555555555556].
2023-08-23 06:34:13,791 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.002829000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0008787878909090909 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.16161616161616155 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.4444444444444445 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.5555555555555556].
2023-08-23 06:34:17,388 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.009798000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.797979797979798 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.393939393939394 ,beta_2=0.98989898989899 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.5151515151515152].
2023-08-23 06:34:17,388 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.009798000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.797979797979798 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.393939393939394 ,beta_2=0.98989898989899 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.5151515151515152].
2023-08-23 06:34:21,519 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:34:21,519 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:34:33,173 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:34:33,174 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:34:37,837 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6666666666666667, momentum=0.393939393939394 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.2828282828282829 ,rho=0.10101010101010102 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.6565656565656566 ,beta_2=0.9393939393939394 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.7171717171717172 ,l1_regularization_strength=0.26262626262626265 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.5555555555555556].
2023-08-23 06:34:37,838 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6666666666666667, momentum=0.393939393939394 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.2828282828282829 ,rho=0.10101010101010102 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.6565656565656566 ,beta_2=0.9393939393939394 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.7171717171717172 ,l1_regularization_strength=0.26262626262626265 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.5555555555555556].
2023-08-23 06:34:38,875 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:34:38,876 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:34:42,419 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:34:42,419 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:34:53,749 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9090909090909092 ,epsilon=0.0006363636727272727 ,centered=False ,beta_1=0.42424242424242425 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.696969696969697 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.6464646464646465].
2023-08-23 06:34:53,749 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9090909090909092 ,epsilon=0.0006363636727272727 ,centered=False ,beta_1=0.42424242424242425 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.696969696969697 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.6464646464646465].
2023-08-23 06:34:59,586 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:34:59,586 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:35:02,065 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:35:02,065 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:35:02,732 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:35:02,732 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:35:18,092 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:35:18,092 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:35:20,249 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:35:20,249 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:35:22,530 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.9393939393939394, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0024250000000000005 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.33333333333333337 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.6262626262626263 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.10101010101010088 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.6464646464646465].
2023-08-23 06:35:22,530 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.9393939393939394, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0024250000000000005 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.33333333333333337 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.6262626262626263 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.10101010101010088 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.6464646464646465].
2023-08-23 06:35:41,340 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:35:41,340 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:36:01,576 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:36:01,576 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:36:21,131 INFO: Applying selection operators for generation 16.
2023-08-23 06:36:21,131 INFO: Applying genetic operators for generation 16.
2023-08-23 06:36:21,134 INFO: Evaluating fitness for for generation 16.
2023-08-23 06:36:21,134 INFO: Will evaluate fitness for 39 individuals.
2023-08-23 06:36:21,699 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7676767676767677, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.005556000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8383838383838385 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.5050505050505051 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.26262626262626265 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.6464646464646465].
2023-08-23 06:36:21,699 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7676767676767677, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.005556000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8383838383838385 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.5050505050505051 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.26262626262626265 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.6464646464646465].
2023-08-23 06:36:21,729 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.8181818181818182, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4040404040404041 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.27272727272727276 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.595959595959596 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.6464646464646465].
2023-08-23 06:36:21,730 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.8181818181818182, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4040404040404041 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.27272727272727276 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.595959595959596 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.6464646464646465].
2023-08-23 06:36:21,730 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:36:21,730 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:36:21,731 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.5555555555555556, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.2828282828282829 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.3737373737373737 ,initial_accumulator_value=0.696969696969697 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:36:21,731 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.5555555555555556, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.2828282828282829 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.3737373737373737 ,initial_accumulator_value=0.696969696969697 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:36:42,051 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0076770000000000015 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0005252525727272728 ,centered=False ,beta_1=0.22222222222222224 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7575757575757577 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.5858585858585859].
2023-08-23 06:36:42,052 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0076770000000000015 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0005252525727272728 ,centered=False ,beta_1=0.22222222222222224 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7575757575757577 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.5858585858585859].
2023-08-23 06:36:42,811 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4040404040404041, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.8484848484848485 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.5858585858585859 ,l1_regularization_strength=1.0 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.98989898989899].
2023-08-23 06:36:42,811 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4040404040404041, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.8484848484848485 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.5858585858585859 ,l1_regularization_strength=1.0 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.98989898989899].
2023-08-23 06:36:44,699 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.06060606060606061, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0023240000000000005 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.9494949494949496 ,learning_rate_power=-0.26262626262626254 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.6464646464646465].
2023-08-23 06:36:44,700 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.06060606060606061, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0023240000000000005 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.9494949494949496 ,learning_rate_power=-0.26262626262626254 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.6464646464646465].
2023-08-23 06:36:55,165 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:36:55,165 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:37:04,026 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.5151515151515152, momentum=0.030303030303030304 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.22222222222222224 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.4545454545454546 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.11111111111111112].
2023-08-23 06:37:04,027 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.5151515151515152, momentum=0.030303030303030304 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.22222222222222224 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.4545454545454546 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.11111111111111112].
2023-08-23 06:37:05,940 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:37:05,940 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:37:15,505 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:37:15,505 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:37:17,955 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:37:17,956 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:37:23,793 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.48484848484848486, momentum=0.010101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.38383838383838387 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.12121212121212122 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.696969696969697 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.6464646464646465].
2023-08-23 06:37:23,793 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.48484848484848486, momentum=0.010101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.38383838383838387 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.12121212121212122 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.696969696969697 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.6464646464646465].
2023-08-23 06:37:26,485 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:37:26,485 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:37:35,703 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:37:35,704 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:37:38,352 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00014141422727272727 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.17171717171717174 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8282828282828284 ,beta=0.6464646464646465].
2023-08-23 06:37:38,353 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00014141422727272727 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.17171717171717174 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8282828282828284 ,beta=0.6464646464646465].
2023-08-23 06:37:44,336 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.8181818181818182, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00024242431818181817 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.9696969696969697 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.6464646464646465].
2023-08-23 06:37:44,336 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.8181818181818182, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00024242431818181817 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.9696969696969697 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.6464646464646465].
2023-08-23 06:37:47,208 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:37:47,208 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:37:56,837 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:37:56,837 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:38:01,339 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:38:01,339 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:38:07,693 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:38:07,693 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:38:08,616 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:38:08,616 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:38:17,050 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0016170000000000002 ,use_ema=False ,ema_momentum=1.0 ,rho=0.07070707070707072 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.6565656565656566 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.4444444444444445].
2023-08-23 06:38:17,051 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0016170000000000002 ,use_ema=False ,ema_momentum=1.0 ,rho=0.07070707070707072 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.6565656565656566 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.4444444444444445].
2023-08-23 06:38:22,267 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:38:22,267 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:38:28,914 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:38:28,914 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:38:29,359 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:38:29,359 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:38:40,666 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.36363636363636365, momentum=0.8585858585858587 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.10101010101010102 ,rho=0.393939393939394 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.08080808080808081 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.7373737373737375].
2023-08-23 06:38:40,666 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.36363636363636365, momentum=0.8585858585858587 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.10101010101010102 ,rho=0.393939393939394 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.08080808080808081 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.7373737373737375].
2023-08-23 06:38:42,658 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:38:42,658 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:38:49,670 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8383838383838385 ,rho=0.36363636363636365 ,epsilon=0.0002121212909090909 ,centered=False ,beta_1=0.20202020202020204 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.10101010101010102 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:38:49,670 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8383838383838385 ,rho=0.36363636363636365 ,epsilon=0.0002121212909090909 ,centered=False ,beta_1=0.20202020202020204 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.10101010101010102 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:38:49,971 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:38:49,971 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:39:03,079 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:39:03,080 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:39:10,683 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:39:10,684 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:39:14,425 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.6464646464646465].
2023-08-23 06:39:14,426 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.6464646464646465].
2023-08-23 06:39:22,350 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:39:22,351 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:39:23,904 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:39:23,905 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:39:32,000 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:39:32,000 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:39:34,907 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9090909090909092 ,epsilon=0.0006363636727272727 ,centered=False ,beta_1=0.42424242424242425 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.696969696969697 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:39:34,908 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9090909090909092 ,epsilon=0.0006363636727272727 ,centered=False ,beta_1=0.42424242424242425 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.696969696969697 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:39:52,709 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:39:52,710 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:40:13,086 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:40:13,086 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:40:33,200 INFO: Applying selection operators for generation 17.
2023-08-23 06:40:33,200 INFO: Applying genetic operators for generation 17.
2023-08-23 06:40:33,204 INFO: Evaluating fitness for for generation 17.
2023-08-23 06:40:33,204 INFO: Will evaluate fitness for 39 individuals.
2023-08-23 06:40:33,766 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:40:33,766 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:40:33,770 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.5151515151515152, momentum=0.42424242424242425 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.12121212121212122 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.6363636363636365 ,beta_2=0.5555555555555556 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.14141414141414144].
2023-08-23 06:40:33,770 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.5151515151515152, momentum=0.42424242424242425 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.12121212121212122 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.6363636363636365 ,beta_2=0.5555555555555556 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.14141414141414144].
2023-08-23 06:40:33,882 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9090909090909092, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.494949494949495 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.15151515151515152 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.7676767676767677 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:40:33,882 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9090909090909092, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.494949494949495 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.15151515151515152 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.7676767676767677 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:40:33,902 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:40:33,902 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:40:54,164 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:40:54,164 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:40:54,629 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.888888888888889 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9292929292929294 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8989898989898991 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=0.8282828282828284].
2023-08-23 06:40:54,629 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.888888888888889 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9292929292929294 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8989898989898991 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=0.8282828282828284].
2023-08-23 06:40:57,852 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.4040404040404041 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.393939393939394 ,epsilon=0.0008484848636363636 ,centered=True ,beta_1=0.5858585858585859 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.04040404040404033 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.48484848484848486 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:40:57,852 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.4040404040404041 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.393939393939394 ,epsilon=0.0008484848636363636 ,centered=True ,beta_1=0.5858585858585859 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.04040404040404033 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.48484848484848486 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:40:58,315 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:40:58,315 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:41:14,625 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.14141414141414144 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.4747474747474748 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.98989898989899 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:41:14,625 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.14141414141414144 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.4747474747474748 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.98989898989899 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:41:18,571 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:41:18,571 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:41:19,469 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.6464646464646465].
2023-08-23 06:41:19,469 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.6464646464646465].
2023-08-23 06:41:21,792 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:41:21,792 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:41:35,467 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:41:35,468 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:41:39,221 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.37373737373737376 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.30303030303030304 ,l1_regularization_strength=0.9191919191919192 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.10101010101010102].
2023-08-23 06:41:39,222 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.37373737373737376 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.30303030303030304 ,l1_regularization_strength=0.9191919191919192 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.10101010101010102].
2023-08-23 06:41:39,973 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:41:39,973 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:41:43,237 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:41:43,237 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:41:55,899 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:41:55,900 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:42:00,895 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.11111111111111112, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.494949494949495 ,epsilon=0.0007777778 ,centered=False ,beta_1=0.25252525252525254 ,beta_2=0.030303030303030304 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.36363636363636365 ,l1_regularization_strength=0.29292929292929293 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:42:00,896 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.11111111111111112, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.494949494949495 ,epsilon=0.0007777778 ,centered=False ,beta_1=0.25252525252525254 ,beta_2=0.030303030303030304 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.36363636363636365 ,l1_regularization_strength=0.29292929292929293 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:42:02,439 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.9191919191919192 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.13131313131313133 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.8080808080808082 ,l1_regularization_strength=0.10101010101010102 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.6464646464646465].
2023-08-23 06:42:02,440 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.9191919191919192 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.13131313131313133 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.8080808080808082 ,l1_regularization_strength=0.10101010101010102 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.6464646464646465].
2023-08-23 06:42:04,104 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:42:04,104 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:42:16,248 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:42:16,248 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:42:22,010 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:42:22,010 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:42:24,811 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.9393939393939394, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0011120000000000001 ,use_ema=True ,ema_momentum=0.686868686868687 ,rho=0.37373737373737376 ,epsilon=0.00024242431818181817 ,centered=False ,beta_1=0.25252525252525254 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.6464646464646465].
2023-08-23 06:42:24,811 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.9393939393939394, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0011120000000000001 ,use_ema=True ,ema_momentum=0.686868686868687 ,rho=0.37373737373737376 ,epsilon=0.00024242431818181817 ,centered=False ,beta_1=0.25252525252525254 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.6464646464646465].
2023-08-23 06:42:25,002 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=1e-06 ,use_ema=True ,ema_momentum=0.6565656565656566 ,rho=0.7070707070707072 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.6161616161616162 ,beta_2=0.6060606060606061 ,learning_rate_power=-0.08080808080808077 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.5858585858585859].
2023-08-23 06:42:25,002 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=1e-06 ,use_ema=True ,ema_momentum=0.6565656565656566 ,rho=0.7070707070707072 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.6161616161616162 ,beta_2=0.6060606060606061 ,learning_rate_power=-0.08080808080808077 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.5858585858585859].
2023-08-23 06:42:36,569 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:42:36,569 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:42:42,901 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:42:42,901 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:42:48,781 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:42:48,782 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:42:49,512 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:42:49,512 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:42:57,503 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.595959595959596].
2023-08-23 06:42:57,503 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.595959595959596].
2023-08-23 06:43:03,244 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5050505050505051, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9292929292929294 ,epsilon=0.0006868687181818181 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.787878787878788 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.6464646464646465].
2023-08-23 06:43:03,245 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5050505050505051, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9292929292929294 ,epsilon=0.0006868687181818181 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.787878787878788 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.6464646464646465].
2023-08-23 06:43:10,202 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:43:10,203 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:43:10,644 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:43:10,645 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:43:16,263 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:43:16,263 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:43:26,955 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:43:26,956 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:43:30,873 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.23232323232323235 ,rho=0.22222222222222224 ,epsilon=0.00025252532727272723 ,centered=False ,beta_1=0.5656565656565657 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.31313131313131315 ,l1_regularization_strength=0.16161616161616163 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.6464646464646465].
2023-08-23 06:43:30,873 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.23232323232323235 ,rho=0.22222222222222224 ,epsilon=0.00025252532727272723 ,centered=False ,beta_1=0.5656565656565657 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.31313131313131315 ,l1_regularization_strength=0.16161616161616163 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.6464646464646465].
2023-08-23 06:43:31,402 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:43:31,402 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:43:36,538 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:43:36,538 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:43:57,263 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.8686868686868687, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.26262626262626265 ,rho=0.7676767676767677 ,epsilon=0.0007575757818181818 ,centered=False ,beta_1=0.07070707070707072 ,beta_2=0.29292929292929293 ,learning_rate_power=-0.2727272727272727 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.33333333333333337].
2023-08-23 06:43:57,263 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.8686868686868687, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.26262626262626265 ,rho=0.7676767676767677 ,epsilon=0.0007575757818181818 ,centered=False ,beta_1=0.07070707070707072 ,beta_2=0.29292929292929293 ,learning_rate_power=-0.2727272727272727 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.33333333333333337].
2023-08-23 06:44:19,731 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.14141414141414144 ,rho=0.6565656565656566 ,epsilon=0.00031313138181818175 ,centered=True ,beta_1=0.15151515151515152 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.2828282828282829 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.6464646464646465].
2023-08-23 06:44:19,731 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.14141414141414144 ,rho=0.6565656565656566 ,epsilon=0.00031313138181818175 ,centered=True ,beta_1=0.15151515151515152 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.2828282828282829 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.6464646464646465].
2023-08-23 06:44:42,272 INFO: Applying selection operators for generation 18.
2023-08-23 06:44:42,273 INFO: Applying genetic operators for generation 18.
2023-08-23 06:44:42,277 INFO: Evaluating fitness for for generation 18.
2023-08-23 06:44:42,277 INFO: Will evaluate fitness for 35 individuals.
2023-08-23 06:44:42,818 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6464646464646465 ,rho=0.6565656565656566 ,epsilon=7.070716363636363e-05 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:44:42,818 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6464646464646465 ,rho=0.6565656565656566 ,epsilon=7.070716363636363e-05 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:44:42,824 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:44:42,824 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:44:42,943 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:44:42,943 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:44:42,989 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.5151515151515152, momentum=0.4747474747474748 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.06060606060606061 ,rho=0.33333333333333337 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.4141414141414142 ,beta_2=0.9090909090909092 ,learning_rate_power=-0.010101010101010055 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:44:42,989 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.5151515151515152, momentum=0.4747474747474748 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.06060606060606061 ,rho=0.33333333333333337 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.4141414141414142 ,beta_2=0.9090909090909092 ,learning_rate_power=-0.010101010101010055 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:45:03,684 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=1.0, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.008283 ,use_ema=True ,ema_momentum=0.11111111111111112 ,rho=0.6565656565656566 ,epsilon=0.0005959596363636363 ,centered=False ,beta_1=0.4646464646464647 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.9696969696969697].
2023-08-23 06:45:03,684 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=1.0, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.008283 ,use_ema=True ,ema_momentum=0.11111111111111112 ,rho=0.6565656565656566 ,epsilon=0.0005959596363636363 ,centered=False ,beta_1=0.4646464646464647 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.9696969696969697].
2023-08-23 06:45:04,373 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.8484848484848485, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.004950000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.38383838383838387 ,epsilon=8.080817272727271e-05 ,centered=False ,beta_1=0.98989898989899 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.04040404040404033 ,initial_accumulator_value=0.030303030303030304 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.9696969696969697].
2023-08-23 06:45:04,374 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.8484848484848485, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.004950000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.38383838383838387 ,epsilon=8.080817272727271e-05 ,centered=False ,beta_1=0.98989898989899 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.04040404040404033 ,initial_accumulator_value=0.030303030303030304 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.9696969696969697].
2023-08-23 06:45:05,757 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:45:05,758 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:45:06,625 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.16161616161616163 ,nesterov=False ,amsgrad=False ,weight_decay=0.0017180000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.06060606060606061 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.2929292929292928 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.6464646464646465].
2023-08-23 06:45:06,625 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.16161616161616163 ,nesterov=False ,amsgrad=False ,weight_decay=0.0017180000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.06060606060606061 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.2929292929292928 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.6464646464646465].
2023-08-23 06:45:24,548 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:45:24,549 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:45:26,696 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:45:26,697 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:45:28,109 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.9595959595959597, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=2.020211818181818e-05 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.3535353535353536 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.6464646464646465].
2023-08-23 06:45:28,109 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.9595959595959597, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=2.020211818181818e-05 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.3535353535353536 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.6464646464646465].
2023-08-23 06:45:28,592 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:45:28,592 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:45:44,617 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.888888888888889, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.006465000000000001 ,use_ema=True ,ema_momentum=0.23232323232323235 ,rho=0.888888888888889 ,epsilon=0.0003333334 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9696969696969697 ,beta=0.6464646464646465].
2023-08-23 06:45:44,617 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.888888888888889, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.006465000000000001 ,use_ema=True ,ema_momentum=0.23232323232323235 ,rho=0.888888888888889 ,epsilon=0.0003333334 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9696969696969697 ,beta=0.6464646464646465].
2023-08-23 06:45:47,025 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6565656565656566, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7272727272727273 ,rho=0.09090909090909091 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.29292929292929293 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.11111111111111112 ,beta=0.6464646464646465].
2023-08-23 06:45:47,025 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6565656565656566, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7272727272727273 ,rho=0.09090909090909091 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.29292929292929293 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.11111111111111112 ,beta=0.6464646464646465].
2023-08-23 06:45:47,086 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.787878787878788 ,epsilon=0.0007676767909090908 ,centered=False ,beta_1=0.4747474747474748 ,beta_2=0.787878787878788 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.13131313131313133 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.393939393939394].
2023-08-23 06:45:47,087 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.787878787878788 ,epsilon=0.0007676767909090908 ,centered=False ,beta_1=0.4747474747474748 ,beta_2=0.787878787878788 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.13131313131313133 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.393939393939394].
2023-08-23 06:45:49,190 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.5353535353535354 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.21212121212121213 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.32323232323232326 ,learning_rate_power=-0.8585858585858586 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7676767676767677 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.9090909090909092].
2023-08-23 06:45:49,190 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.5353535353535354 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.21212121212121213 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.32323232323232326 ,learning_rate_power=-0.8585858585858586 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7676767676767677 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.9090909090909092].
2023-08-23 06:46:09,482 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:46:09,483 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:46:10,399 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:46:10,399 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:46:10,970 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:46:10,970 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:46:13,948 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.32323232323232326, momentum=0.4141414141414142 ,nesterov=False ,amsgrad=False ,weight_decay=0.000506 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.23232323232323235 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9393939393939394 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.29292929292929293].
2023-08-23 06:46:13,949 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.32323232323232326, momentum=0.4141414141414142 ,nesterov=False ,amsgrad=False ,weight_decay=0.000506 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.23232323232323235 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9393939393939394 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.29292929292929293].
2023-08-23 06:46:29,826 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0016170000000000002 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.33333333333333337 ,learning_rate_power=-0.8282828282828283 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.6464646464646465].
2023-08-23 06:46:29,826 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0016170000000000002 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.33333333333333337 ,learning_rate_power=-0.8282828282828283 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.6464646464646465].
2023-08-23 06:46:31,185 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:46:31,186 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:46:32,260 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.04040404040404041, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4747474747474748 ,rho=0.6565656565656566 ,epsilon=0.0008888889 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.12121212121212122 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.27272727272727276 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:46:32,260 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.04040404040404041, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4747474747474748 ,rho=0.6565656565656566 ,epsilon=0.0008888889 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.12121212121212122 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.27272727272727276 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:46:35,349 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:46:35,349 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:46:50,434 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.797979797979798 ,nesterov=False ,amsgrad=False ,weight_decay=0.0065660000000000015 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.21212121212121213 ,epsilon=0.00026262633636363634 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.8585858585858586 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8585858585858587 ,beta=0.6464646464646465].
2023-08-23 06:46:50,434 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.797979797979798 ,nesterov=False ,amsgrad=False ,weight_decay=0.0065660000000000015 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.21212121212121213 ,epsilon=0.00026262633636363634 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.8585858585858586 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8585858585858587 ,beta=0.6464646464646465].
2023-08-23 06:46:51,757 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:46:51,758 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:46:56,015 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.3434343434343435, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0004050000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0009595959636363636 ,centered=True ,beta_1=0.20202020202020204 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.29292929292929293].
2023-08-23 06:46:56,015 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.3434343434343435, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0004050000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0009595959636363636 ,centered=True ,beta_1=0.20202020202020204 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.29292929292929293].
2023-08-23 06:46:56,051 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:46:56,052 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:47:12,185 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:47:12,186 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:47:14,282 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.393939393939394, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.9191919191919192 ,beta_2=0.8282828282828284 ,learning_rate_power=-0.8787878787878788 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7474747474747475 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:47:14,282 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.393939393939394, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.9191919191919192 ,beta_2=0.8282828282828284 ,learning_rate_power=-0.8787878787878788 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7474747474747475 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:47:16,820 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:47:16,820 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:47:19,837 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5757575757575758 ,rho=0.6565656565656566 ,epsilon=4.040413636363636e-05 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.6464646464646465 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.6464646464646465].
2023-08-23 06:47:19,837 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5757575757575758 ,rho=0.6565656565656566 ,epsilon=4.040413636363636e-05 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.6464646464646465 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.6464646464646465].
2023-08-23 06:47:32,645 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.15151515151515152 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.9494949494949496 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.6464646464646465].
2023-08-23 06:47:32,646 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.15151515151515152 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.9494949494949496 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.6464646464646465].
2023-08-23 06:47:34,554 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:47:34,554 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:47:38,238 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5757575757575758 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.4141414141414142 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.42424242424242425 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.11111111111111112 ,beta=0.6464646464646465].
2023-08-23 06:47:38,238 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5757575757575758 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.4141414141414142 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.42424242424242425 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.11111111111111112 ,beta=0.6464646464646465].
2023-08-23 06:48:09,789 INFO: Applying selection operators for generation 19.
2023-08-23 06:48:09,790 INFO: Applying genetic operators for generation 19.
2023-08-23 06:48:09,793 INFO: Evaluating fitness for for generation 19.
2023-08-23 06:48:09,793 INFO: Will evaluate fitness for 42 individuals.
2023-08-23 06:48:10,358 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 06:48:10,358 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 06:48:10,383 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:48:10,383 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:48:10,490 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:48:10,491 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:48:10,504 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:48:10,504 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:48:30,351 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:48:30,352 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:48:30,725 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:48:30,725 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:48:30,937 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:48:30,938 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:48:31,227 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.8383838383838385, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.004243000000000001 ,use_ema=True ,ema_momentum=1.0 ,rho=0.6565656565656566 ,epsilon=0.0005656566090909091 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:48:31,227 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.8383838383838385, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.004243000000000001 ,use_ema=True ,ema_momentum=1.0 ,rho=0.6565656565656566 ,epsilon=0.0005656566090909091 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:48:50,447 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.8585858585858587 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.030303030303030304 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:48:50,447 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.8585858585858587 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.030303030303030304 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:48:51,154 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:48:51,154 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:48:52,169 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:48:52,170 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:48:56,383 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:48:56,383 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:49:10,626 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.12121212121212122 ,rho=0.9696969696969697 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.5151515151515152].
2023-08-23 06:49:10,626 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.12121212121212122 ,rho=0.9696969696969697 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.5151515151515152].
2023-08-23 06:49:11,553 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.37373737373737376, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.009798000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.42424242424242425 ,epsilon=0.0002222223 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.5555555555555556 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.22222222222222224].
2023-08-23 06:49:11,554 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.37373737373737376, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.009798000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.42424242424242425 ,epsilon=0.0002222223 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.5555555555555556 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.22222222222222224].
2023-08-23 06:49:13,183 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.787878787878788, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.13131313131313133 ,rho=0.32323232323232326 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.6262626262626263 ,beta_2=0.23232323232323235 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.6464646464646465].
2023-08-23 06:49:13,183 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.787878787878788, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.13131313131313133 ,rho=0.32323232323232326 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.6262626262626263 ,beta_2=0.23232323232323235 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.6464646464646465].
2023-08-23 06:49:17,923 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:49:17,923 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:49:34,571 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:49:34,571 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:49:35,642 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6363636363636365 ,epsilon=0.00044444449999999996 ,centered=False ,beta_1=0.7070707070707072 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.030303030303030304 ,beta=0.24242424242424243].
2023-08-23 06:49:35,642 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6363636363636365 ,epsilon=0.00044444449999999996 ,centered=False ,beta_1=0.7070707070707072 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.030303030303030304 ,beta=0.24242424242424243].
2023-08-23 06:49:38,139 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.48484848484848486, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.404040404040404 ,initial_accumulator_value=0.6161616161616162 ,l1_regularization_strength=0.4141414141414142 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.6464646464646465].
2023-08-23 06:49:38,139 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.48484848484848486, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.404040404040404 ,initial_accumulator_value=0.6161616161616162 ,l1_regularization_strength=0.4141414141414142 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.6464646464646465].
2023-08-23 06:49:38,890 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:49:38,890 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:49:54,812 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:49:54,812 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:49:59,536 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:49:59,536 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:50:01,500 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:50:01,500 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:50:09,075 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:50:09,075 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:50:15,763 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:50:15,764 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:50:20,084 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5454545454545455, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=1e-06 ,use_ema=True ,ema_momentum=0.7474747474747475 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.6161616161616162 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.6464646464646465].
2023-08-23 06:50:20,085 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5454545454545455, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=1e-06 ,use_ema=True ,ema_momentum=0.7474747474747475 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.6161616161616162 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.6464646464646465].
2023-08-23 06:50:23,146 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.48484848484848486 ,rho=0.6565656565656566 ,epsilon=0.00046464651818181813 ,centered=False ,beta_1=0.15151515151515152 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.5050505050505051].
2023-08-23 06:50:23,146 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.48484848484848486 ,rho=0.6565656565656566 ,epsilon=0.00046464651818181813 ,centered=False ,beta_1=0.15151515151515152 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.5050505050505051].
2023-08-23 06:50:29,430 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:50:29,430 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:50:36,070 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:50:36,070 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:50:42,244 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:50:42,244 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:50:43,933 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.37373737373737376 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.1717171717171716 ,initial_accumulator_value=0.22222222222222224 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:50:43,933 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.37373737373737376 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.1717171717171716 ,initial_accumulator_value=0.22222222222222224 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:50:50,465 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:50:50,465 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:50:56,203 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:50:56,204 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:51:03,016 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.8181818181818182 ,beta_2=0.15151515151515152 ,learning_rate_power=-0.3434343434343434 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.32323232323232326].
2023-08-23 06:51:03,016 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.8181818181818182 ,beta_2=0.15151515151515152 ,learning_rate_power=-0.3434343434343434 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.32323232323232326].
2023-08-23 06:51:09,696 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:51:09,696 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:51:10,955 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.9393939393939394 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.21212121212121213].
2023-08-23 06:51:10,955 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.9393939393939394 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.21212121212121213].
2023-08-23 06:51:16,303 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:51:16,303 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:51:23,660 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.42424242424242425, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.04040404040404041 ,rho=0.6565656565656566 ,epsilon=3.030312727272727e-05 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.6262626262626263 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:51:23,660 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.42424242424242425, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.04040404040404041 ,rho=0.6565656565656566 ,epsilon=3.030312727272727e-05 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.6262626262626263 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:51:37,090 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:51:37,091 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:51:47,035 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:51:47,035 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:51:56,872 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:51:56,873 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:52:07,951 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5353535353535354 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.4040404040404041 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.4444444444444445 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.6464646464646465].
2023-08-23 06:52:07,951 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5353535353535354 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.4040404040404041 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.4444444444444445 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.6464646464646465].
2023-08-23 06:52:30,433 INFO: Applying selection operators for generation 20.
2023-08-23 06:52:30,433 INFO: Applying genetic operators for generation 20.
2023-08-23 06:52:30,436 INFO: Evaluating fitness for for generation 20.
2023-08-23 06:52:30,436 INFO: Will evaluate fitness for 42 individuals.
2023-08-23 06:52:30,978 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:52:30,979 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:52:31,101 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:52:31,101 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:52:31,120 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5252525252525253 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.5555555555555556 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.20202020202020204 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.6464646464646465].
2023-08-23 06:52:31,120 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5252525252525253 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.5555555555555556 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.20202020202020204 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.6464646464646465].
2023-08-23 06:52:31,140 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:52:31,140 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:52:51,480 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9797979797979799 ,rho=0.22222222222222224 ,epsilon=0.0006868687181818181 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4747474747474748 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.6464646464646465].
2023-08-23 06:52:51,480 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9797979797979799 ,rho=0.22222222222222224 ,epsilon=0.0006868687181818181 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4747474747474748 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.6464646464646465].
2023-08-23 06:52:51,536 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:52:51,537 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:52:52,062 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 06:52:52,063 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 06:52:55,418 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:52:55,418 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:53:11,677 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.4141414141414142, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=1.0 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.5454545454545455 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8989898989898991 ,beta=0.6464646464646465].
2023-08-23 06:53:11,677 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.4141414141414142, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=1.0 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.5454545454545455 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8989898989898991 ,beta=0.6464646464646465].
2023-08-23 06:53:12,446 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:53:12,446 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:53:15,537 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.12121212121212122 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.6565656565656566 ,epsilon=0.0005252525727272728 ,centered=True ,beta_1=0.04040404040404041 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.6464646464646465].
2023-08-23 06:53:15,538 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.12121212121212122 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.6565656565656566 ,epsilon=0.0005252525727272728 ,centered=True ,beta_1=0.04040404040404041 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.6464646464646465].
2023-08-23 06:53:16,034 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.7777777777777778 ,rho=0.6565656565656566 ,epsilon=0.0006969697272727273 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.36363636363636354 ,initial_accumulator_value=0.11111111111111112 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.6464646464646465].
2023-08-23 06:53:16,035 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.7777777777777778 ,rho=0.6565656565656566 ,epsilon=0.0006969697272727273 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.36363636363636354 ,initial_accumulator_value=0.11111111111111112 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.6464646464646465].
2023-08-23 06:53:32,875 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:53:32,876 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:53:39,572 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:53:39,572 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:53:40,031 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.9292929292929294 ,epsilon=0.0002020202818181818 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.6060606060606061 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.32323232323232326].
2023-08-23 06:53:40,031 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.9292929292929294 ,epsilon=0.0002020202818181818 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.6060606060606061 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.32323232323232326].
2023-08-23 06:53:45,295 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:53:45,295 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:53:53,348 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.5151515151515152, momentum=0.3535353535353536 ,nesterov=False ,amsgrad=False ,weight_decay=0.0020210000000000002 ,use_ema=True ,ema_momentum=0.8080808080808082 ,rho=0.5353535353535354 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.6464646464646465 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.6464646464646465].
2023-08-23 06:53:53,348 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.5151515151515152, momentum=0.3535353535353536 ,nesterov=False ,amsgrad=False ,weight_decay=0.0020210000000000002 ,use_ema=True ,ema_momentum=0.8080808080808082 ,rho=0.5353535353535354 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.6464646464646465 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.6464646464646465].
2023-08-23 06:54:00,742 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:54:00,743 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:54:03,265 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.007980000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.010101010101010102].
2023-08-23 06:54:03,265 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.007980000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.010101010101010102].
2023-08-23 06:54:05,391 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:54:05,391 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:54:18,321 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.2828282828282829 ,nesterov=False ,amsgrad=True ,weight_decay=0.0035360000000000005 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6060606060606061 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.08080808080808081 ,learning_rate_power=-0.24242424242424232 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 06:54:18,321 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.2828282828282829 ,nesterov=False ,amsgrad=True ,weight_decay=0.0035360000000000005 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6060606060606061 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.08080808080808081 ,learning_rate_power=-0.24242424242424232 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 06:54:21,484 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:54:21,484 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:54:26,231 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:54:26,232 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:54:27,783 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:54:27,783 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:54:42,255 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:54:42,256 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:54:43,094 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.595959595959596 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.24242424242424243 ,learning_rate_power=-0.5353535353535352 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.010101010101010102 ,beta=0.6464646464646465].
2023-08-23 06:54:43,094 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.595959595959596 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.24242424242424243 ,learning_rate_power=-0.5353535353535352 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.010101010101010102 ,beta=0.6464646464646465].
2023-08-23 06:54:46,366 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:54:46,366 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:54:49,136 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:54:49,136 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:55:02,204 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:55:02,204 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:55:02,884 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:55:02,884 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:55:06,378 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.7777777777777778, momentum=0.43434343434343436 ,nesterov=False ,amsgrad=True ,weight_decay=0.0034350000000000006 ,use_ema=True ,ema_momentum=0.6666666666666667 ,rho=0.06060606060606061 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.12121212121212122].
2023-08-23 06:55:06,379 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.7777777777777778, momentum=0.43434343434343436 ,nesterov=False ,amsgrad=True ,weight_decay=0.0034350000000000006 ,use_ema=True ,ema_momentum=0.6666666666666667 ,rho=0.06060606060606061 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.12121212121212122].
2023-08-23 06:55:09,732 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5353535353535354 ,rho=0.5858585858585859 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5555555555555556 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.5858585858585859 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:55:09,732 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5353535353535354 ,rho=0.5858585858585859 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5555555555555556 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.5858585858585859 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:55:22,536 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:55:22,536 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:55:24,123 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:55:24,124 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:55:31,238 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:55:31,238 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:55:33,883 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:55:33,883 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:55:43,531 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:55:43,531 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:55:44,816 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:55:44,816 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:56:03,770 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:56:03,770 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:56:05,255 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 06:56:05,256 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 06:56:23,683 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:56:23,683 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:56:25,375 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7373737373737375 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.7474747474747475].
2023-08-23 06:56:25,375 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7373737373737375 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.7474747474747475].
2023-08-23 06:56:48,319 INFO: Applying selection operators for generation 21.
2023-08-23 06:56:48,320 INFO: Applying genetic operators for generation 21.
2023-08-23 06:56:48,323 INFO: Evaluating fitness for for generation 21.
2023-08-23 06:56:48,323 INFO: Will evaluate fitness for 32 individuals.
2023-08-23 06:56:48,865 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4444444444444445, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.003940000000000001 ,use_ema=True ,ema_momentum=0.30303030303030304 ,rho=0.4141414141414142 ,epsilon=0.0006161616545454546 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.5555555555555556 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.3434343434343435 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.7474747474747475].
2023-08-23 06:56:48,865 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4444444444444445, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.003940000000000001 ,use_ema=True ,ema_momentum=0.30303030303030304 ,rho=0.4141414141414142 ,epsilon=0.0006161616545454546 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.5555555555555556 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.3434343434343435 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.7474747474747475].
2023-08-23 06:56:48,874 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:56:48,874 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:56:48,927 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.3535353535353536, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.007071000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=8.080817272727271e-05 ,centered=False ,beta_1=0.5858585858585859 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.16161616161616163 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.24242424242424243].
2023-08-23 06:56:48,927 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.3535353535353536, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.007071000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=8.080817272727271e-05 ,centered=False ,beta_1=0.5858585858585859 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.16161616161616163 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.24242424242424243].
2023-08-23 06:56:48,930 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:56:48,930 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:57:09,349 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.05050505050505051, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0005959596363636363 ,centered=True ,beta_1=0.27272727272727276 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.7474747474747475].
2023-08-23 06:57:09,349 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.05050505050505051, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0005959596363636363 ,centered=True ,beta_1=0.27272727272727276 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.7474747474747475].
2023-08-23 06:57:09,382 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.7676767676767677 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.38383838383838387 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.5353535353535354 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.15151515151515152 ,beta=0.7474747474747475].
2023-08-23 06:57:09,382 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.7676767676767677 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.38383838383838387 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.5353535353535354 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.15151515151515152 ,beta=0.7474747474747475].
2023-08-23 06:57:13,238 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 06:57:13,238 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 06:57:13,720 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 06:57:13,720 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 06:57:32,774 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.12121212121212122 ,rho=0.29292929292929293 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.12121212121212122 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.6464646464646465].
2023-08-23 06:57:32,774 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.12121212121212122 ,rho=0.29292929292929293 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.12121212121212122 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.6464646464646465].
2023-08-23 06:57:33,402 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:57:33,403 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:57:33,453 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 06:57:33,453 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 06:57:34,162 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 06:57:34,162 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 06:57:53,633 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 06:57:53,634 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 06:57:54,172 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.8080808080808082 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.31313131313131315 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.9595959595959597 ,l1_regularization_strength=0.595959595959596 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.23232323232323235].
2023-08-23 06:57:54,172 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.8080808080808082 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.31313131313131315 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.9595959595959597 ,l1_regularization_strength=0.595959595959596 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.23232323232323235].
2023-08-23 06:57:54,517 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 06:57:54,517 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 06:57:56,634 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 06:57:56,634 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 06:58:13,608 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:58:13,608 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:58:14,578 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 06:58:14,579 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 06:58:15,730 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:58:15,730 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:58:17,637 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 06:58:17,638 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 06:58:33,595 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:58:33,595 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:58:34,244 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 06:58:34,244 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 06:58:36,183 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 06:58:36,183 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 06:58:38,101 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.6565656565656566 ,epsilon=0.000676767709090909 ,centered=False ,beta_1=0.32323232323232326 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.030303030303030304 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.8585858585858587].
2023-08-23 06:58:38,101 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.6565656565656566 ,epsilon=0.000676767709090909 ,centered=False ,beta_1=0.32323232323232326 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.030303030303030304 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.8585858585858587].
2023-08-23 06:58:53,553 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:58:53,554 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:58:54,593 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:58:54,594 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:58:56,644 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7676767676767677, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3434343434343435 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.7171717171717172 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.2828282828282829 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 06:58:56,644 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7676767676767677, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3434343434343435 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.7171717171717172 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.2828282828282829 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 06:59:01,873 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8181818181818182, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.7575757575757577 ,epsilon=0.00025252532727272723 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.8080808080808081 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.13131313131313133 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.38383838383838387 ,beta=0.7474747474747475].
2023-08-23 06:59:01,873 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8181818181818182, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.7575757575757577 ,epsilon=0.00025252532727272723 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.8080808080808081 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.13131313131313133 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.38383838383838387 ,beta=0.7474747474747475].
2023-08-23 06:59:14,258 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.5858585858585859, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.007172000000000001 ,use_ema=True ,ema_momentum=0.16161616161616163 ,rho=0.42424242424242425 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.6262626262626263 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.6464646464646465].
2023-08-23 06:59:14,258 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.5858585858585859, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.007172000000000001 ,use_ema=True ,ema_momentum=0.16161616161616163 ,rho=0.42424242424242425 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.6262626262626263 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.6464646464646465].
2023-08-23 06:59:15,560 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.29292929292929293 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8282828282828284 ,rho=0.36363636363636365 ,epsilon=0.00015151523636363636 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.31313131313131315 ,beta=0.7474747474747475].
2023-08-23 06:59:15,560 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.29292929292929293 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8282828282828284 ,rho=0.36363636363636365 ,epsilon=0.00015151523636363636 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.31313131313131315 ,beta=0.7474747474747475].
2023-08-23 06:59:16,378 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 06:59:16,378 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 06:59:26,074 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:59:26,075 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 06:59:46,053 INFO: Applying selection operators for generation 22.
2023-08-23 06:59:46,054 INFO: Applying genetic operators for generation 22.
2023-08-23 06:59:46,057 INFO: Evaluating fitness for for generation 22.
2023-08-23 06:59:46,058 INFO: Will evaluate fitness for 43 individuals.
2023-08-23 06:59:46,628 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 06:59:46,629 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 06:59:46,639 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 06:59:46,639 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 06:59:46,643 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.5050505050505051 ,epsilon=0.0009090909181818181 ,centered=True ,beta_1=0.27272727272727276 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.6060606060606061 ,l1_regularization_strength=0.8282828282828284 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.7474747474747475].
2023-08-23 06:59:46,643 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.5050505050505051 ,epsilon=0.0009090909181818181 ,centered=True ,beta_1=0.27272727272727276 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.6060606060606061 ,l1_regularization_strength=0.8282828282828284 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.7474747474747475].
2023-08-23 06:59:46,654 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.393939393939394 ,epsilon=0.0001919192727272727 ,centered=False ,beta_1=0.10101010101010102 ,beta_2=0.0 ,learning_rate_power=-0.8080808080808081 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.5151515151515152].
2023-08-23 06:59:46,654 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.393939393939394 ,epsilon=0.0001919192727272727 ,centered=False ,beta_1=0.10101010101010102 ,beta_2=0.0 ,learning_rate_power=-0.8080808080808081 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.5151515151515152].
2023-08-23 07:00:06,988 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:00:06,989 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:00:07,234 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:00:07,235 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:00:09,523 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.6464646464646465].
2023-08-23 07:00:09,524 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.6464646464646465].
2023-08-23 07:00:20,224 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:00:20,224 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:00:27,298 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.7474747474747475 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=4.040413636363636e-05 ,centered=False ,beta_1=0.0 ,beta_2=0.4444444444444445 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.888888888888889 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6666666666666667].
2023-08-23 07:00:27,298 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.7474747474747475 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=4.040413636363636e-05 ,centered=False ,beta_1=0.0 ,beta_2=0.4444444444444445 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.888888888888889 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6666666666666667].
2023-08-23 07:00:27,675 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 07:00:27,676 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 07:00:29,676 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0.09090909090909091 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.24242424242424243 ,epsilon=0.0005656566090909091 ,centered=True ,beta_1=0.0 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8282828282828284 ,beta=0.020202020202020204].
2023-08-23 07:00:29,676 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0.09090909090909091 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.24242424242424243 ,epsilon=0.0005656566090909091 ,centered=True ,beta_1=0.0 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8282828282828284 ,beta=0.020202020202020204].
2023-08-23 07:00:41,343 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.22222222222222224, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.11111111111111112 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.9696969696969697].
2023-08-23 07:00:41,343 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.22222222222222224, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.11111111111111112 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.9696969696969697].
2023-08-23 07:00:48,602 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:00:48,603 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:00:52,341 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.008889000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.32323232323232326 ,epsilon=0.0009797979818181818 ,centered=False ,beta_1=0.8787878787878789 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8080808080808082 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.6464646464646465].
2023-08-23 07:00:52,341 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.008889000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.32323232323232326 ,epsilon=0.0009797979818181818 ,centered=False ,beta_1=0.8787878787878789 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8080808080808082 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.6464646464646465].
2023-08-23 07:00:54,813 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.5252525252525253, momentum=0.6161616161616162 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.07070707070707072 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:00:54,814 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.5252525252525253, momentum=0.6161616161616162 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.07070707070707072 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:01:05,886 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:01:05,887 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:01:09,207 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:01:09,207 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:01:17,258 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:01:17,258 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:01:17,258 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:01:17,258 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:01:26,360 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:01:26,360 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:01:29,698 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.43434343434343436 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.3535353535353535 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.31313131313131315 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.48484848484848486].
2023-08-23 07:01:29,698 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.43434343434343436 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.3535353535353535 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.31313131313131315 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.48484848484848486].
2023-08-23 07:01:37,373 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.24242424242424243, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=False ,weight_decay=0.0006070000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8787878787878789 ,beta=0.6464646464646465].
2023-08-23 07:01:37,373 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.24242424242424243, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=False ,weight_decay=0.0006070000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8787878787878789 ,beta=0.6464646464646465].
2023-08-23 07:01:37,603 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9090909090909092, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5858585858585859 ,rho=0.23232323232323235 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.7474747474747475].
2023-08-23 07:01:37,603 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9090909090909092, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5858585858585859 ,rho=0.23232323232323235 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.7474747474747475].
2023-08-23 07:01:46,807 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 07:01:46,807 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 07:01:50,013 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9797979797979799, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0008989899090909091 ,centered=True ,beta_1=0.43434343434343436 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8282828282828284 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.7474747474747475].
2023-08-23 07:01:50,013 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9797979797979799, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0008989899090909091 ,centered=True ,beta_1=0.43434343434343436 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8282828282828284 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.7474747474747475].
2023-08-23 07:01:58,008 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:01:58,009 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:02:01,837 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.04040404040404041 ,rho=0.2828282828282829 ,epsilon=0.0009595959636363636 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.06060606060606061 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.8787878787878789].
2023-08-23 07:02:01,837 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.04040404040404041 ,rho=0.2828282828282829 ,epsilon=0.0009595959636363636 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.06060606060606061 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.8787878787878789].
2023-08-23 07:02:07,846 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:02:07,847 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:02:15,041 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 07:02:15,042 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 07:02:18,420 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.8585858585858587, momentum=0.5151515151515152 ,nesterov=True ,amsgrad=False ,weight_decay=0.004142000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5151515151515152 ,epsilon=0.0008383838545454545 ,centered=True ,beta_1=0.2828282828282829 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.13131313131313133 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.7070707070707072].
2023-08-23 07:02:18,420 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.8585858585858587, momentum=0.5151515151515152 ,nesterov=True ,amsgrad=False ,weight_decay=0.004142000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5151515151515152 ,epsilon=0.0008383838545454545 ,centered=True ,beta_1=0.2828282828282829 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.13131313131313133 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.7070707070707072].
2023-08-23 07:02:26,671 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:02:26,671 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:02:28,399 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.20202020202020204, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.006061000000000001 ,use_ema=True ,ema_momentum=0.7575757575757577 ,rho=0.6565656565656566 ,epsilon=0.0008181818363636363 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6262626262626263 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.6464646464646465].
2023-08-23 07:02:28,399 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.20202020202020204, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.006061000000000001 ,use_ema=True ,ema_momentum=0.7575757575757577 ,rho=0.6565656565656566 ,epsilon=0.0008181818363636363 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6262626262626263 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.6464646464646465].
2023-08-23 07:02:35,703 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:02:35,703 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:02:47,138 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:02:47,138 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:02:53,528 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 07:02:53,528 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 07:02:53,829 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9595959595959597 ,rho=0.8383838383838385 ,epsilon=0.0008080808272727272 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-1.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.36363636363636365].
2023-08-23 07:02:53,830 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9595959595959597 ,rho=0.8383838383838385 ,epsilon=0.0008080808272727272 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-1.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.36363636363636365].
2023-08-23 07:02:57,634 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:02:57,634 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:03:07,544 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 07:03:07,545 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 07:03:14,543 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.9090909090909092, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5252525252525253 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9393939393939394 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.21212121212121213 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.7474747474747475].
2023-08-23 07:03:14,543 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.9090909090909092, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5252525252525253 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9393939393939394 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.21212121212121213 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.7474747474747475].
2023-08-23 07:03:18,106 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:03:18,106 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:03:28,585 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.5151515151515152, momentum=0.31313131313131315 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.001 ,centered=True ,beta_1=0.18181818181818182 ,beta_2=0.30303030303030304 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 07:03:28,586 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.5151515151515152, momentum=0.31313131313131315 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.001 ,centered=True ,beta_1=0.18181818181818182 ,beta_2=0.30303030303030304 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 07:03:39,215 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:03:39,215 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:03:52,081 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.5555555555555556 ,rho=0.06060606060606061 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.7272727272727273 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.26262626262626265 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5757575757575758 ,beta=0.7474747474747475].
2023-08-23 07:03:52,081 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.5555555555555556 ,rho=0.06060606060606061 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.7272727272727273 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.26262626262626265 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5757575757575758 ,beta=0.7474747474747475].
2023-08-23 07:04:14,315 INFO: Applying selection operators for generation 23.
2023-08-23 07:04:14,316 INFO: Applying genetic operators for generation 23.
2023-08-23 07:04:14,320 INFO: Evaluating fitness for for generation 23.
2023-08-23 07:04:14,320 INFO: Will evaluate fitness for 41 individuals.
2023-08-23 07:04:14,880 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.98989898989899, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.001011 ,use_ema=True ,ema_momentum=0.6565656565656566 ,rho=0.6565656565656566 ,epsilon=8.080817272727271e-05 ,centered=True ,beta_1=0.31313131313131315 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.2929292929292928 ,initial_accumulator_value=0.08080808080808081 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.3535353535353536].
2023-08-23 07:04:14,880 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.98989898989899, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.001011 ,use_ema=True ,ema_momentum=0.6565656565656566 ,rho=0.6565656565656566 ,epsilon=8.080817272727271e-05 ,centered=True ,beta_1=0.31313131313131315 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.2929292929292928 ,initial_accumulator_value=0.08080808080808081 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.3535353535353536].
2023-08-23 07:04:14,930 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:04:14,931 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:04:14,935 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:04:14,935 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:04:14,950 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:04:14,950 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:04:35,182 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 07:04:35,182 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 07:04:35,249 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 07:04:35,249 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 07:04:35,270 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.7575757575757577 ,rho=0.7171717171717172 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.18181818181818182 ,learning_rate_power=-0.09090909090909083 ,initial_accumulator_value=0.5555555555555556 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.7474747474747475].
2023-08-23 07:04:35,270 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.7575757575757577 ,rho=0.7171717171717172 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.18181818181818182 ,learning_rate_power=-0.09090909090909083 ,initial_accumulator_value=0.5555555555555556 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.7474747474747475].
2023-08-23 07:04:39,453 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:04:39,453 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:04:55,984 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.4747474747474748 ,epsilon=0.0005252525727272728 ,centered=True ,beta_1=0.7171717171717172 ,beta_2=0.5252525252525253 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.7474747474747475].
2023-08-23 07:04:55,984 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.4747474747474748 ,epsilon=0.0005252525727272728 ,centered=True ,beta_1=0.7171717171717172 ,beta_2=0.5252525252525253 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.7474747474747475].
2023-08-23 07:04:56,502 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:04:56,503 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:04:59,717 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.33333333333333337 ,beta_2=0.7373737373737375 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.8989898989898991 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.7474747474747475].
2023-08-23 07:04:59,717 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.33333333333333337 ,beta_2=0.7373737373737375 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.8989898989898991 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.7474747474747475].
2023-08-23 07:05:08,666 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.010101010101010102 ,epsilon=0.0008686868818181818 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:05:08,666 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.010101010101010102 ,epsilon=0.0008686868818181818 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:05:17,097 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.20202020202020204, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.43434343434343436 ,epsilon=0.0005757576181818182 ,centered=True ,beta_1=0.888888888888889 ,beta_2=0.6464646464646465 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.7474747474747475].
2023-08-23 07:05:17,098 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.20202020202020204, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.43434343434343436 ,epsilon=0.0005757576181818182 ,centered=True ,beta_1=0.888888888888889 ,beta_2=0.6464646464646465 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.7474747474747475].
2023-08-23 07:05:23,019 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5656565656565657 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.6161616161616162 ,beta_2=0.0 ,learning_rate_power=-0.16161616161616155 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.9393939393939394].
2023-08-23 07:05:23,019 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5656565656565657 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.6161616161616162 ,beta_2=0.0 ,learning_rate_power=-0.16161616161616155 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.9393939393939394].
2023-08-23 07:05:29,380 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:05:29,380 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:05:33,172 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:05:33,172 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:05:41,178 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.24242424242424243 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.30303030303030304 ,epsilon=0.0009191919272727272 ,centered=True ,beta_1=0.5858585858585859 ,beta_2=0.19191919191919193 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.8686868686868687].
2023-08-23 07:05:41,178 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.24242424242424243 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.30303030303030304 ,epsilon=0.0009191919272727272 ,centered=True ,beta_1=0.5858585858585859 ,beta_2=0.19191919191919193 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.8686868686868687].
2023-08-23 07:05:47,437 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:05:47,437 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:05:50,025 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.9595959595959597 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8282828282828284 ,rho=0.6565656565656566 ,epsilon=0.00026262633636363634 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:05:50,025 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.9595959595959597 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8282828282828284 ,rho=0.6565656565656566 ,epsilon=0.00026262633636363634 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:05:53,763 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 07:05:53,763 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 07:06:05,479 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.595959595959596, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0017180000000000001 ,use_ema=True ,ema_momentum=0.8080808080808082 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.9292929292929293 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.7474747474747475].
2023-08-23 07:06:05,480 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.595959595959596, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0017180000000000001 ,use_ema=True ,ema_momentum=0.8080808080808082 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.9292929292929293 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.7474747474747475].
2023-08-23 07:06:07,696 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 07:06:07,696 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 07:06:14,240 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:06:14,241 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:06:14,257 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:06:14,257 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:06:26,975 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.10101010101010102 ,rho=0.6565656565656566 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.8282828282828284 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.6464646464646465].
2023-08-23 07:06:26,975 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.10101010101010102 ,rho=0.6565656565656566 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.8282828282828284 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.6464646464646465].
2023-08-23 07:06:27,744 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6565656565656566 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.3535353535353536 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.7474747474747475].
2023-08-23 07:06:27,745 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6565656565656566 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.3535353535353536 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.7474747474747475].
2023-08-23 07:06:34,735 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:06:34,735 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:06:35,462 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.22222222222222224, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.11111111111111112 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.9696969696969697].
2023-08-23 07:06:35,462 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.22222222222222224, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.11111111111111112 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.9696969696969697].
2023-08-23 07:06:51,136 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:06:51,136 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:06:55,938 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:06:55,939 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:06:56,004 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:06:56,004 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:07:02,679 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:07:02,679 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:07:11,564 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6464646464646465 ,rho=0.8080808080808082 ,epsilon=0.0007878788090909091 ,centered=True ,beta_1=0.08080808080808081 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.494949494949495 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.38383838383838387].
2023-08-23 07:07:11,565 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6464646464646465 ,rho=0.8080808080808082 ,epsilon=0.0007878788090909091 ,centered=True ,beta_1=0.08080808080808081 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.494949494949495 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.38383838383838387].
2023-08-23 07:07:16,482 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8989898989898991 ,rho=0.6565656565656566 ,epsilon=0.0004949495454545454 ,centered=False ,beta_1=0.9393939393939394 ,beta_2=0.32323232323232326 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.22222222222222224].
2023-08-23 07:07:16,482 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8989898989898991 ,rho=0.6565656565656566 ,epsilon=0.0004949495454545454 ,centered=False ,beta_1=0.9393939393939394 ,beta_2=0.32323232323232326 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.22222222222222224].
2023-08-23 07:07:16,530 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.007273000000000001 ,use_ema=True ,ema_momentum=0.3434343434343435 ,rho=0.6565656565656566 ,epsilon=0.0005757576181818182 ,centered=True ,beta_1=0.2828282828282829 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.4545454545454545 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.6464646464646465].
2023-08-23 07:07:16,530 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.007273000000000001 ,use_ema=True ,ema_momentum=0.3434343434343435 ,rho=0.6565656565656566 ,epsilon=0.0005757576181818182 ,centered=True ,beta_1=0.2828282828282829 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.4545454545454545 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.6464646464646465].
2023-08-23 07:07:22,852 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.24242424242424243, momentum=0.595959595959596 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.08080808080808081 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.6060606060606061 ,beta_2=0.696969696969697 ,learning_rate_power=-0.7474747474747474 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.888888888888889].
2023-08-23 07:07:22,852 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.24242424242424243, momentum=0.595959595959596 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.08080808080808081 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.6060606060606061 ,beta_2=0.696969696969697 ,learning_rate_power=-0.7474747474747474 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.888888888888889].
2023-08-23 07:07:37,585 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:07:37,585 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:07:40,495 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:07:40,496 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:07:57,912 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:07:57,912 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:08:01,288 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:08:01,289 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:08:18,096 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:08:18,097 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:08:37,621 INFO: Applying selection operators for generation 24.
2023-08-23 07:08:37,622 INFO: Applying genetic operators for generation 24.
2023-08-23 07:08:37,625 INFO: Evaluating fitness for for generation 24.
2023-08-23 07:08:37,625 INFO: Will evaluate fitness for 46 individuals.
2023-08-23 07:08:38,191 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:08:38,191 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:08:38,191 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:08:38,191 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:08:38,225 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:08:38,225 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:08:38,280 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.15151515151515152, momentum=0.8686868686868687 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00015151523636363636 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.0 ,learning_rate_power=-0.8787878787878788 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.686868686868687].
2023-08-23 07:08:38,280 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.15151515151515152, momentum=0.8686868686868687 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00015151523636363636 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.0 ,learning_rate_power=-0.8787878787878788 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.686868686868687].
2023-08-23 07:08:58,154 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:08:58,155 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:08:58,658 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:08:58,658 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:08:59,077 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.43434343434343436 ,rho=0.9191919191919192 ,epsilon=0.0008989899090909091 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.5656565656565657].
2023-08-23 07:08:59,077 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.43434343434343436 ,rho=0.9191919191919192 ,epsilon=0.0008989899090909091 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.5656565656565657].
2023-08-23 07:09:03,278 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:09:03,278 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:09:18,961 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:09:18,961 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:09:19,879 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=1.0, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.005556000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6464646464646465 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.686868686868687].
2023-08-23 07:09:19,879 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=1.0, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.005556000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6464646464646465 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.686868686868687].
2023-08-23 07:09:22,767 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4040404040404041 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.7474747474747475].
2023-08-23 07:09:22,768 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4040404040404041 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.7474747474747475].
2023-08-23 07:09:24,086 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:09:24,086 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:09:39,073 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:09:39,074 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:09:44,692 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.6464646464646465, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4141414141414142 ,rho=0.7272727272727273 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.6060606060606061 ,beta_2=0.5252525252525253 ,learning_rate_power=-0.13131313131313127 ,initial_accumulator_value=0.8787878787878789 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.7474747474747475].
2023-08-23 07:09:44,692 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.6464646464646465, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4141414141414142 ,rho=0.7272727272727273 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.6060606060606061 ,beta_2=0.5252525252525253 ,learning_rate_power=-0.13131313131313127 ,initial_accumulator_value=0.8787878787878789 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.7474747474747475].
2023-08-23 07:09:45,042 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:09:45,042 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:09:47,426 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.27272727272727276].
2023-08-23 07:09:47,427 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.27272727272727276].
2023-08-23 07:09:59,172 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 07:09:59,172 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 07:10:04,788 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.9494949494949496, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.003940000000000001 ,use_ema=False ,ema_momentum=0.7676767676767677 ,rho=0.43434343434343436 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.3434343434343435 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.8181818181818182 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.16161616161616163].
2023-08-23 07:10:04,788 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.9494949494949496, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.003940000000000001 ,use_ema=False ,ema_momentum=0.7676767676767677 ,rho=0.43434343434343436 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.3434343434343435 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.8181818181818182 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.16161616161616163].
2023-08-23 07:10:05,561 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.004344000000000001 ,use_ema=True ,ema_momentum=0.31313131313131315 ,rho=0.6565656565656566 ,epsilon=0.000454545509090909 ,centered=True ,beta_1=0.8383838383838385 ,beta_2=0.6060606060606061 ,learning_rate_power=-0.11111111111111105 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8989898989898991 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.7474747474747475].
2023-08-23 07:10:05,561 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.004344000000000001 ,use_ema=True ,ema_momentum=0.31313131313131315 ,rho=0.6565656565656566 ,epsilon=0.000454545509090909 ,centered=True ,beta_1=0.8383838383838385 ,beta_2=0.6060606060606061 ,learning_rate_power=-0.11111111111111105 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8989898989898991 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.7474747474747475].
2023-08-23 07:10:11,969 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:10:11,969 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:10:19,949 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.5454545454545455 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.07070707070707072 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4747474747474748 ,beta_2=0.494949494949495 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.7474747474747475].
2023-08-23 07:10:19,949 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.5454545454545455 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.07070707070707072 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4747474747474748 ,beta_2=0.494949494949495 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.7474747474747475].
2023-08-23 07:10:29,974 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 07:10:29,974 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 07:10:33,189 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.22222222222222224, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.19191919191919193 ,epsilon=0.000454545509090909 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.46464646464646464 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.16161616161616163 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.9696969696969697].
2023-08-23 07:10:33,189 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.22222222222222224, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.19191919191919193 ,epsilon=0.000454545509090909 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.46464646464646464 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.16161616161616163 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.9696969696969697].
2023-08-23 07:10:39,844 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.696969696969697, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.32323232323232326 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.888888888888889 ,beta_2=0.22222222222222224 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.9595959595959597 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.36363636363636365].
2023-08-23 07:10:39,844 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.696969696969697, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.32323232323232326 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.888888888888889 ,beta_2=0.22222222222222224 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.9595959595959597 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.36363636363636365].
2023-08-23 07:10:40,209 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.11111111111111112 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:10:40,209 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.11111111111111112 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:10:51,295 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:10:51,295 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:10:57,883 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 07:10:57,884 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 07:11:04,523 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9191919191919192, momentum=0.9595959595959597 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.14141414141414144 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.9595959595959597 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.7474747474747475].
2023-08-23 07:11:04,523 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9191919191919192, momentum=0.9595959595959597 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.14141414141414144 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.9595959595959597 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.7474747474747475].
2023-08-23 07:11:05,532 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:11:05,532 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:11:11,962 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:11:11,962 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:11:18,454 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:11:18,454 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:11:24,580 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:11:24,581 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:11:26,237 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0002020202818181818 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.8484848484848485 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.4646464646464647].
2023-08-23 07:11:26,238 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0002020202818181818 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.8484848484848485 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.4646464646464647].
2023-08-23 07:11:32,609 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8383838383838385, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.11111111111111112 ,rho=0.08080808080808081 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.7272727272727273 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4444444444444445 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8989898989898991 ,beta=0.11111111111111112].
2023-08-23 07:11:32,609 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8383838383838385, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.11111111111111112 ,rho=0.08080808080808081 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.7272727272727273 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4444444444444445 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8989898989898991 ,beta=0.11111111111111112].
2023-08-23 07:11:38,764 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:11:38,765 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:11:45,295 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:11:45,295 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:11:51,489 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.17171717171717174, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.686868686868687 ,rho=0.6565656565656566 ,epsilon=0.0004747475272727272 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.4040404040404041 ,l1_regularization_strength=0.010101010101010102 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.8181818181818182].
2023-08-23 07:11:51,490 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.17171717171717174, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.686868686868687 ,rho=0.6565656565656566 ,epsilon=0.0004747475272727272 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.4040404040404041 ,l1_regularization_strength=0.010101010101010102 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.8181818181818182].
2023-08-23 07:11:57,868 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:11:57,868 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:12:00,026 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.48484848484848486, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8181818181818182 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.24242424242424243 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8282828282828284 ,beta=0.9090909090909092].
2023-08-23 07:12:00,026 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.48484848484848486, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8181818181818182 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.24242424242424243 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8282828282828284 ,beta=0.9090909090909092].
2023-08-23 07:12:05,453 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:12:05,453 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:12:17,265 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:12:17,266 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:12:18,731 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:12:18,731 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:12:24,190 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:12:24,190 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:12:25,471 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:12:25,471 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:12:39,392 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 07:12:39,392 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 07:12:44,511 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:12:44,511 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:13:04,041 INFO: Applying selection operators for generation 25.
2023-08-23 07:13:04,042 INFO: Applying genetic operators for generation 25.
2023-08-23 07:13:04,045 INFO: Evaluating fitness for for generation 25.
2023-08-23 07:13:04,045 INFO: Will evaluate fitness for 38 individuals.
2023-08-23 07:13:04,640 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:13:04,641 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:13:04,649 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00015151523636363636 ,centered=True ,beta_1=0.7373737373737375 ,beta_2=0.9191919191919192 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.48484848484848486 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.7474747474747475].
2023-08-23 07:13:04,649 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00015151523636363636 ,centered=True ,beta_1=0.7373737373737375 ,beta_2=0.9191919191919192 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.48484848484848486 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.7474747474747475].
2023-08-23 07:13:04,659 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0030310000000000007 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.3535353535353535 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.7474747474747475].
2023-08-23 07:13:04,660 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0030310000000000007 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.3535353535353535 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.7474747474747475].
2023-08-23 07:13:04,771 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4545454545454546, momentum=0.5858585858585859 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.696969696969697 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.48484848484848486].
2023-08-23 07:13:04,771 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4545454545454546, momentum=0.5858585858585859 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.696969696969697 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.48484848484848486].
2023-08-23 07:13:25,285 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:13:25,286 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:13:25,303 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:13:25,303 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:13:29,152 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:13:29,152 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:13:40,893 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:13:40,894 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:13:45,286 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0016170000000000002 ,use_ema=True ,ema_momentum=0.020202020202020204 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.38383838383838387 ,beta=0.595959595959596].
2023-08-23 07:13:45,286 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0016170000000000002 ,use_ema=True ,ema_momentum=0.020202020202020204 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.38383838383838387 ,beta=0.595959595959596].
2023-08-23 07:13:46,475 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:13:46,476 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:13:49,450 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.004243000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.22222222222222224 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:13:49,451 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.004243000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.22222222222222224 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:14:01,525 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:14:01,526 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:14:05,926 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:14:05,926 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:14:07,002 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9292929292929294 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=1.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.6666666666666667 ,l1_regularization_strength=0.21212121212121213 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.7474747474747475].
2023-08-23 07:14:07,904 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9292929292929294 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=1.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.6666666666666667 ,l1_regularization_strength=0.21212121212121213 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.7474747474747475].
2023-08-23 07:14:10,420 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 07:14:10,420 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 07:14:22,174 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:14:22,174 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:14:26,673 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.04040404040404041 ,rho=0.12121212121212122 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4141414141414142 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.33333333333333337 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.6363636363636365].
2023-08-23 07:14:26,674 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.04040404040404041 ,rho=0.12121212121212122 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4141414141414142 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.33333333333333337 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.6363636363636365].
2023-08-23 07:14:31,603 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:14:31,603 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:14:31,826 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:14:31,826 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:14:43,708 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.5151515151515152, momentum=0.7171717171717172 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0006363636727272727 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.9393939393939394 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:14:43,709 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.5151515151515152, momentum=0.7171717171717172 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0006363636727272727 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.9393939393939394 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:14:51,991 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.20202020202020204, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.595959595959596 ,rho=0.18181818181818182 ,epsilon=0.0005757576181818182 ,centered=True ,beta_1=0.9292929292929294 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.7474747474747475].
2023-08-23 07:14:51,991 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.20202020202020204, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.595959595959596 ,rho=0.18181818181818182 ,epsilon=0.0005757576181818182 ,centered=True ,beta_1=0.9292929292929294 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.7474747474747475].
2023-08-23 07:14:52,076 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:14:52,077 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:14:53,230 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 07:14:53,230 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 07:15:12,871 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.14141414141414144, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.494949494949495 ,rho=0.6565656565656566 ,epsilon=0.00023232330909090908 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.33333333333333337 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.5353535353535354].
2023-08-23 07:15:12,871 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.14141414141414144, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.494949494949495 ,rho=0.6565656565656566 ,epsilon=0.00023232330909090908 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.33333333333333337 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.5353535353535354].
2023-08-23 07:15:14,303 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.005051000000000001 ,use_ema=False ,ema_momentum=0.6767676767676768 ,rho=0.14141414141414144 ,epsilon=0.0003030303727272727 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:15:14,303 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.005051000000000001 ,use_ema=False ,ema_momentum=0.6767676767676768 ,rho=0.14141414141414144 ,epsilon=0.0003030303727272727 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:15:15,775 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:15:15,775 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:15:18,879 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.19191919191919193 ,epsilon=0.000454545509090909 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.46464646464646464 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.16161616161616163 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:15:18,880 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.19191919191919193 ,epsilon=0.000454545509090909 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.46464646464646464 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.16161616161616163 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:15:35,979 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 07:15:35,979 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6464646464646465].
2023-08-23 07:15:38,956 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6464646464646465, momentum=0.4545454545454546 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6161616161616162 ,rho=0.11111111111111112 ,epsilon=0.00018181826363636362 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.7474747474747475].
2023-08-23 07:15:38,956 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6464646464646465, momentum=0.4545454545454546 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6161616161616162 ,rho=0.11111111111111112 ,epsilon=0.00018181826363636362 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.7474747474747475].
2023-08-23 07:15:43,728 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.20202020202020204, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.43434343434343436 ,epsilon=0.0005757576181818182 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.7474747474747475].
2023-08-23 07:15:43,729 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.20202020202020204, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.43434343434343436 ,epsilon=0.0005757576181818182 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.7474747474747475].
2023-08-23 07:15:48,818 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:15:48,819 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:15:56,949 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.888888888888889 ,beta_2=0.6464646464646465 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:15:56,949 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.888888888888889 ,beta_2=0.6464646464646465 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:16:04,050 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:16:04,050 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:16:09,388 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:16:09,389 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:16:09,480 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:16:09,480 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:16:17,213 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.98989898989899, momentum=0.4545454545454546 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.5252525252525253 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.29292929292929293 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8787878787878789 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.3535353535353536].
2023-08-23 07:16:17,213 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.98989898989899, momentum=0.4545454545454546 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.5252525252525253 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.29292929292929293 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8787878787878789 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.3535353535353536].
2023-08-23 07:16:30,218 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.5151515151515152, momentum=0.7272727272727273 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.06060606060606061 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.20202020202020204 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9797979797979799 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.696969696969697].
2023-08-23 07:16:30,218 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.5151515151515152, momentum=0.7272727272727273 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.06060606060606061 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.20202020202020204 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9797979797979799 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.696969696969697].
2023-08-23 07:16:36,663 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9090909090909092, momentum=0.08080808080808081 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6262626262626263 ,rho=0.6565656565656566 ,epsilon=3.030312727272727e-05 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.30303030303030304].
2023-08-23 07:16:36,664 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9090909090909092, momentum=0.08080808080808081 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6262626262626263 ,rho=0.6565656565656566 ,epsilon=3.030312727272727e-05 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.30303030303030304].
2023-08-23 07:17:03,314 INFO: Applying selection operators for generation 26.
2023-08-23 07:17:03,315 INFO: Applying genetic operators for generation 26.
2023-08-23 07:17:03,318 INFO: Evaluating fitness for for generation 26.
2023-08-23 07:17:03,318 INFO: Will evaluate fitness for 32 individuals.
2023-08-23 07:17:03,879 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:17:03,879 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:17:03,906 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:17:03,907 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:17:04,062 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.006465000000000001 ,use_ema=True ,ema_momentum=0.30303030303030304 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.09090909090909091 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.4747474747474748].
2023-08-23 07:17:04,062 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.006465000000000001 ,use_ema=True ,ema_momentum=0.30303030303030304 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.09090909090909091 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.4747474747474748].
2023-08-23 07:17:04,110 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6464646464646465 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:17:04,110 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6464646464646465 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:17:24,210 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:17:24,211 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:17:24,628 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:17:24,629 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:17:24,932 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.888888888888889 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:17:24,933 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.888888888888889 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:17:26,212 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:17:26,212 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:17:44,744 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:17:44,745 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:17:45,343 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:17:45,344 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:17:45,615 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:17:45,615 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:17:47,030 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:17:47,031 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:18:04,742 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.7474747474747475, momentum=0.5454545454545455 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.696969696969697 ,epsilon=7.070716363636363e-05 ,centered=False ,beta_1=0.15151515151515152 ,beta_2=0.010101010101010102 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.7474747474747475].
2023-08-23 07:18:04,742 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.7474747474747475, momentum=0.5454545454545455 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.696969696969697 ,epsilon=7.070716363636363e-05 ,centered=False ,beta_1=0.15151515151515152 ,beta_2=0.010101010101010102 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.7474747474747475].
2023-08-23 07:18:05,802 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5757575757575758, momentum=0.4545454545454546 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.7070707070707072 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.7777777777777778 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7070707070707072].
2023-08-23 07:18:05,802 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5757575757575758, momentum=0.4545454545454546 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.7070707070707072 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.7777777777777778 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7070707070707072].
2023-08-23 07:18:06,708 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:18:06,708 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:18:07,770 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.19191919191919193 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.686868686868687].
2023-08-23 07:18:07,770 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.19191919191919193 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.686868686868687].
2023-08-23 07:18:27,952 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:18:27,952 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:18:28,404 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.43434343434343436 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00017171725454545453 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.33333333333333337 ,l1_regularization_strength=0.21212121212121213 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.7474747474747475].
2023-08-23 07:18:28,404 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.43434343434343436 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00017171725454545453 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.33333333333333337 ,l1_regularization_strength=0.21212121212121213 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.7474747474747475].
2023-08-23 07:18:28,520 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:18:28,520 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:18:29,607 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8787878787878789 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.6060606060606061 ,beta_2=0.0 ,learning_rate_power=-0.3434343434343434 ,initial_accumulator_value=0.8787878787878789 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:18:29,608 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8787878787878789 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.6060606060606061 ,beta_2=0.0 ,learning_rate_power=-0.3434343434343434 ,initial_accumulator_value=0.8787878787878789 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:18:48,687 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:18:48,688 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:18:49,975 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:18:49,975 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:18:53,110 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.005152000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.11111111111111112 ,beta=0.4141414141414142].
2023-08-23 07:18:53,110 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.005152000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.11111111111111112 ,beta=0.4141414141414142].
2023-08-23 07:18:54,451 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.008182 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.22222222222222224 ,epsilon=4.040413636363636e-05 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.8585858585858586 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7575757575757577].
2023-08-23 07:18:54,452 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.008182 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.22222222222222224 ,epsilon=4.040413636363636e-05 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.8585858585858586 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7575757575757577].
2023-08-23 07:19:08,789 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:19:08,790 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:19:10,933 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:19:10,934 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:19:13,765 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:19:13,765 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:19:20,265 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.7575757575757577, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.43434343434343436 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.9191919191919192 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.10101010101010102 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.98989898989899].
2023-08-23 07:19:20,265 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.7575757575757577, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.43434343434343436 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.9191919191919192 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.10101010101010102 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.98989898989899].
2023-08-23 07:19:28,727 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:19:28,727 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:19:31,766 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.33333333333333337, momentum=0.11111111111111112 ,nesterov=True ,amsgrad=False ,weight_decay=0.0011120000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5858585858585859 ,beta_2=0.31313131313131315 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.020202020202020204].
2023-08-23 07:19:31,766 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.33333333333333337, momentum=0.11111111111111112 ,nesterov=True ,amsgrad=False ,weight_decay=0.0011120000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5858585858585859 ,beta_2=0.31313131313131315 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.020202020202020204].
2023-08-23 07:19:35,233 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:19:35,233 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:19:39,051 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6363636363636365 ,rho=0.6565656565656566 ,epsilon=0.0006363636727272727 ,centered=True ,beta_1=0.6060606060606061 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.8484848484848485 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.6262626262626263].
2023-08-23 07:19:39,051 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6363636363636365 ,rho=0.6565656565656566 ,epsilon=0.0006363636727272727 ,centered=True ,beta_1=0.6060606060606061 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.8484848484848485 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.6262626262626263].
2023-08-23 07:20:02,819 INFO: Applying selection operators for generation 27.
2023-08-23 07:20:02,819 INFO: Applying genetic operators for generation 27.
2023-08-23 07:20:02,823 INFO: Evaluating fitness for for generation 27.
2023-08-23 07:20:02,823 INFO: Will evaluate fitness for 38 individuals.
2023-08-23 07:20:03,390 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:20:03,390 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:20:03,577 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.14141414141414144, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.4747474747474748 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.6565656565656566 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:20:03,578 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.14141414141414144, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.4747474747474748 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.6565656565656566 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:20:03,581 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6262626262626263 ,rho=0.6565656565656566 ,epsilon=0.0006565656909090909 ,centered=False ,beta_1=0.686868686868687 ,beta_2=0.18181818181818182 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.4444444444444445].
2023-08-23 07:20:03,582 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6262626262626263 ,rho=0.6565656565656566 ,epsilon=0.0006565656909090909 ,centered=False ,beta_1=0.686868686868687 ,beta_2=0.18181818181818182 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.4444444444444445].
2023-08-23 07:20:03,596 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:20:03,596 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:20:23,508 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.8686868686868687, momentum=0.8181818181818182 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8686868686868687 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.8181818181818182 ,learning_rate_power=-0.9292929292929293 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:20:23,509 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.8686868686868687, momentum=0.8181818181818182 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8686868686868687 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.8181818181818182 ,learning_rate_power=-0.9292929292929293 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:20:23,870 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.18181818181818182, momentum=0.17171717171717174 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.5454545454545455 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.12121212121212122 ,beta_2=0.0 ,learning_rate_power=-0.23232323232323226 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4646464646464647 ,beta=0.27272727272727276].
2023-08-23 07:20:23,870 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.18181818181818182, momentum=0.17171717171717174 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.5454545454545455 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.12121212121212122 ,beta_2=0.0 ,learning_rate_power=-0.23232323232323226 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4646464646464647 ,beta=0.27272727272727276].
2023-08-23 07:20:24,838 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:20:24,838 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:20:26,365 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:20:26,366 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:20:45,622 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:20:45,622 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:20:46,142 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.20202020202020204 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.5858585858585859 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.04040404040404041 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.36363636363636365].
2023-08-23 07:20:46,142 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.20202020202020204 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.5858585858585859 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.04040404040404041 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.36363636363636365].
2023-08-23 07:20:47,007 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.05050505050505051 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5050505050505051 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.8282828282828284 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.19191919191919193 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.7474747474747475].
2023-08-23 07:20:47,008 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.05050505050505051 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5050505050505051 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.8282828282828284 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.19191919191919193 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.7474747474747475].
2023-08-23 07:20:48,631 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6666666666666667 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.6464646464646465 ,beta_2=0.0 ,learning_rate_power=-0.303030303030303 ,initial_accumulator_value=0.37373737373737376 ,l1_regularization_strength=0.37373737373737376 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.08080808080808081].
2023-08-23 07:20:48,631 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6666666666666667 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.6464646464646465 ,beta_2=0.0 ,learning_rate_power=-0.303030303030303 ,initial_accumulator_value=0.37373737373737376 ,l1_regularization_strength=0.37373737373737376 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.08080808080808081].
2023-08-23 07:21:05,450 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:21:05,450 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:21:06,243 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.42424242424242425 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:21:06,243 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.42424242424242425 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:21:08,482 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:21:08,482 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:21:09,240 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.30303030303030304 ,rho=0.6565656565656566 ,epsilon=0.0004848485363636363 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.2727272727272727 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.7373737373737375].
2023-08-23 07:21:09,240 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.30303030303030304 ,rho=0.6565656565656566 ,epsilon=0.0004848485363636363 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.2727272727272727 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.7373737373737375].
2023-08-23 07:21:26,202 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.5151515151515152, momentum=0.7777777777777778 ,nesterov=True ,amsgrad=False ,weight_decay=0.0026270000000000004 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.27272727272727276 ,beta_2=0.0 ,learning_rate_power=-0.13131313131313127 ,initial_accumulator_value=0.8686868686868687 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.38383838383838387 ,beta=0.05050505050505051].
2023-08-23 07:21:26,202 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.5151515151515152, momentum=0.7777777777777778 ,nesterov=True ,amsgrad=False ,weight_decay=0.0026270000000000004 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.27272727272727276 ,beta_2=0.0 ,learning_rate_power=-0.13131313131313127 ,initial_accumulator_value=0.8686868686868687 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.38383838383838387 ,beta=0.05050505050505051].
2023-08-23 07:21:26,713 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:21:26,713 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:21:29,272 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.15151515151515152 ,rho=0.7272727272727273 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.5757575757575758 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7373737373737375 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:21:29,272 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.15151515151515152 ,rho=0.7272727272727273 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.5757575757575758 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7373737373737375 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:21:34,140 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:21:34,141 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:21:46,298 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.8282828282828284, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8989898989898991 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.20202020202020204 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.7474747474747475].
2023-08-23 07:21:46,298 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.8282828282828284, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8989898989898991 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.20202020202020204 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.7474747474747475].
2023-08-23 07:21:48,131 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:21:48,131 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:21:54,020 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.006061000000000001 ,use_ema=False ,ema_momentum=0.23232323232323235 ,rho=0.4444444444444445 ,epsilon=0.00017171725454545453 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.595959595959596].
2023-08-23 07:21:54,020 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.006061000000000001 ,use_ema=False ,ema_momentum=0.23232323232323235 ,rho=0.4444444444444445 ,epsilon=0.00017171725454545453 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.595959595959596].
2023-08-23 07:21:55,367 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:21:55,367 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:22:09,084 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.888888888888889 ,rho=0.6565656565656566 ,epsilon=0.0005858586272727272 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.7474747474747475].
2023-08-23 07:22:09,084 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.888888888888889 ,rho=0.6565656565656566 ,epsilon=0.0005858586272727272 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.7474747474747475].
2023-08-23 07:22:09,659 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.003738000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0006161616545454546 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=1.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.6767676767676768 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.10101010101010102].
2023-08-23 07:22:09,659 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.003738000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0006161616545454546 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=1.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.6767676767676768 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.10101010101010102].
2023-08-23 07:22:12,619 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.6565656565656566 ,epsilon=8.080817272727271e-05 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.36363636363636365 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6161616161616162].
2023-08-23 07:22:12,619 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.6565656565656566 ,epsilon=8.080817272727271e-05 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.36363636363636365 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6161616161616162].
2023-08-23 07:22:15,908 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:22:15,909 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:22:33,696 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.5151515151515152, momentum=0.6161616161616162 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0005757576181818182 ,centered=False ,beta_1=0.31313131313131315 ,beta_2=0.0 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8686868686868687 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.7474747474747475].
2023-08-23 07:22:33,696 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.5151515151515152, momentum=0.6161616161616162 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0005757576181818182 ,centered=False ,beta_1=0.31313131313131315 ,beta_2=0.0 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8686868686868687 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.7474747474747475].
2023-08-23 07:22:35,034 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:22:35,035 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:22:36,232 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:22:36,232 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:22:38,214 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:22:38,215 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:22:56,086 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:22:56,086 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:22:56,482 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:22:56,483 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:22:59,228 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.7575757575757577, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=1.0 ,rho=0.6565656565656566 ,epsilon=0.0006161616545454546 ,centered=True ,beta_1=0.3535353535353536 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.6161616161616162].
2023-08-23 07:22:59,229 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.7575757575757577, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=1.0 ,rho=0.6565656565656566 ,epsilon=0.0006161616545454546 ,centered=True ,beta_1=0.3535353535353536 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.6161616161616162].
2023-08-23 07:22:59,524 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:22:59,524 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:23:16,449 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.09090909090909091, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5050505050505051 ,rho=0.787878787878788 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.595959595959596 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.30303030303030304 ,beta=0.7474747474747475].
2023-08-23 07:23:16,449 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.09090909090909091, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5050505050505051 ,rho=0.787878787878788 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.595959595959596 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.30303030303030304 ,beta=0.7474747474747475].
2023-08-23 07:23:40,356 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:23:40,356 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:23:59,439 INFO: Applying selection operators for generation 28.
2023-08-23 07:23:59,439 INFO: Applying genetic operators for generation 28.
2023-08-23 07:23:59,442 INFO: Evaluating fitness for for generation 28.
2023-08-23 07:23:59,443 INFO: Will evaluate fitness for 38 individuals.
2023-08-23 07:24:00,001 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6666666666666667 ,rho=0.5151515151515152 ,epsilon=0.0007878788090909091 ,centered=False ,beta_1=0.43434343434343436 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.7474747474747475].
2023-08-23 07:24:00,001 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6666666666666667 ,rho=0.5151515151515152 ,epsilon=0.0007878788090909091 ,centered=False ,beta_1=0.43434343434343436 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.7474747474747475].
2023-08-23 07:24:00,193 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.008586 ,use_ema=False ,ema_momentum=0.25252525252525254 ,rho=0.6565656565656566 ,epsilon=0.0007979798181818182 ,centered=True ,beta_1=0.48484848484848486 ,beta_2=0.6262626262626263 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.21212121212121213 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7272727272727273 ,beta=0.9494949494949496].
2023-08-23 07:24:00,193 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.008586 ,use_ema=False ,ema_momentum=0.25252525252525254 ,rho=0.6565656565656566 ,epsilon=0.0007979798181818182 ,centered=True ,beta_1=0.48484848484848486 ,beta_2=0.6262626262626263 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.21212121212121213 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7272727272727273 ,beta=0.9494949494949496].
2023-08-23 07:24:00,231 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:24:00,231 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:24:00,239 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:24:00,240 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:24:19,039 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:24:19,039 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:24:20,693 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.9393939393939394, momentum=0.8282828282828284 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.17171717171717174 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.9393939393939394 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.1717171717171716 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6262626262626263 ,beta=0.7474747474747475].
2023-08-23 07:24:20,693 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.9393939393939394, momentum=0.8282828282828284 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.17171717171717174 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.9393939393939394 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.1717171717171716 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6262626262626263 ,beta=0.7474747474747475].
2023-08-23 07:24:20,853 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:24:20,853 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:24:24,645 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:24:24,646 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:24:39,269 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9494949494949496 ,epsilon=0.0003737374363636363 ,centered=True ,beta_1=0.15151515151515152 ,beta_2=0.0 ,learning_rate_power=-0.7272727272727273 ,initial_accumulator_value=0.7474747474747475 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.7474747474747475].
2023-08-23 07:24:39,270 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9494949494949496 ,epsilon=0.0003737374363636363 ,centered=True ,beta_1=0.15151515151515152 ,beta_2=0.0 ,learning_rate_power=-0.7272727272727273 ,initial_accumulator_value=0.7474747474747475 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.7474747474747475].
2023-08-23 07:24:42,128 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:24:42,128 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:24:45,025 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:24:45,026 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:24:46,060 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:24:46,060 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:25:02,796 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:25:02,796 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:25:04,396 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:25:04,397 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:25:05,303 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:25:05,303 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:25:06,529 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:25:06,529 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:25:23,217 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:25:23,218 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:25:24,461 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:25:24,461 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:25:26,184 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:25:26,184 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:25:27,723 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.12121212121212122, momentum=0.030303030303030304 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.08080808080808081 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.9797979797979799 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.7474747474747475].
2023-08-23 07:25:27,723 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.12121212121212122, momentum=0.030303030303030304 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.08080808080808081 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.9797979797979799 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.7474747474747475].
2023-08-23 07:25:43,560 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:25:43,561 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:25:45,382 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.6767676767676768, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.38383838383838387 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7171717171717172 ,beta_2=0.595959595959596 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.9696969696969697 ,l1_regularization_strength=0.43434343434343436 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.7474747474747475].
2023-08-23 07:25:45,382 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.6767676767676768, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.38383838383838387 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7171717171717172 ,beta_2=0.595959595959596 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.9696969696969697 ,l1_regularization_strength=0.43434343434343436 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.7474747474747475].
2023-08-23 07:25:46,618 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.8282828282828284, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5555555555555556 ,rho=0.6767676767676768 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.32323232323232326 ,beta_2=0.23232323232323235 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.6060606060606061 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.16161616161616163].
2023-08-23 07:25:46,618 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.8282828282828284, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5555555555555556 ,rho=0.6767676767676768 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.32323232323232326 ,beta_2=0.23232323232323235 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.6060606060606061 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.16161616161616163].
2023-08-23 07:25:52,306 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.008485000000000001 ,use_ema=True ,ema_momentum=0.3434343434343435 ,rho=0.6565656565656566 ,epsilon=0.0005555556 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.2222222222222222 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6262626262626263 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.7474747474747475].
2023-08-23 07:25:52,306 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.008485000000000001 ,use_ema=True ,ema_momentum=0.3434343434343435 ,rho=0.6565656565656566 ,epsilon=0.0005555556 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.2222222222222222 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6262626262626263 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.7474747474747475].
2023-08-23 07:26:04,685 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.5151515151515152, momentum=0.8484848484848485 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.20202020202020204 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:26:04,685 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.5151515151515152, momentum=0.8484848484848485 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.20202020202020204 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:26:10,938 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.04040404040404041, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.006465000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.30303030303030304 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.21212121212121213 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.2828282828282829].
2023-08-23 07:26:10,939 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.04040404040404041, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.006465000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.30303030303030304 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.21212121212121213 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.2828282828282829].
2023-08-23 07:26:17,505 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:26:17,505 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:26:20,926 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.19191919191919193 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.8484848484848485 ,beta_2=0.0 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.4040404040404041 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.19191919191919193].
2023-08-23 07:26:20,927 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.19191919191919193 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.8484848484848485 ,beta_2=0.0 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.4040404040404041 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.19191919191919193].
2023-08-23 07:26:23,954 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:26:23,955 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:26:31,967 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.5151515151515152, momentum=0.29292929292929293 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.7575757575757577 ,epsilon=0.0007676767909090908 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.20202020202020204 ,learning_rate_power=-0.5555555555555556 ,initial_accumulator_value=0.3434343434343435 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.7474747474747475].
2023-08-23 07:26:31,967 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.5151515151515152, momentum=0.29292929292929293 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.7575757575757577 ,epsilon=0.0007676767909090908 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.20202020202020204 ,learning_rate_power=-0.5555555555555556 ,initial_accumulator_value=0.3434343434343435 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.7474747474747475].
2023-08-23 07:26:38,758 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.24242424242424243, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8585858585858587 ,epsilon=0.0004242424818181818 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.6464646464646464 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.23232323232323235 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.7474747474747475].
2023-08-23 07:26:38,758 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.24242424242424243, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8585858585858587 ,epsilon=0.0004242424818181818 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.6464646464646464 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.23232323232323235 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.7474747474747475].
2023-08-23 07:26:44,237 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:26:44,238 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:26:44,426 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:26:44,426 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:26:57,601 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:26:57,601 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:27:02,972 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:27:02,972 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:27:04,248 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:27:04,249 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:27:04,799 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:27:04,799 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:27:25,761 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.14141414141414144, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.42424242424242425 ,epsilon=0.0002121212909090909 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7676767676767677 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:27:25,762 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.14141414141414144, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.42424242424242425 ,epsilon=0.0002121212909090909 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7676767676767677 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:27:43,810 INFO: Applying selection operators for generation 29.
2023-08-23 07:27:43,810 INFO: Applying genetic operators for generation 29.
2023-08-23 07:27:43,814 INFO: Evaluating fitness for for generation 29.
2023-08-23 07:27:43,814 INFO: Will evaluate fitness for 39 individuals.
2023-08-23 07:27:44,365 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:27:44,365 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:27:44,435 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.5151515151515152, momentum=0.6464646464646465 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8989898989898991 ,rho=0.18181818181818182 ,epsilon=0.0005151515636363636 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.19191919191919193 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.9393939393939394].
2023-08-23 07:27:44,435 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.5151515151515152, momentum=0.6464646464646465 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8989898989898991 ,rho=0.18181818181818182 ,epsilon=0.0005151515636363636 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.19191919191919193 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.9393939393939394].
2023-08-23 07:27:44,448 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:27:44,448 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:27:44,451 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:27:44,451 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:28:04,303 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.7373737373737375, momentum=0.4545454545454546 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6565656565656566 ,rho=0.6565656565656566 ,epsilon=0.000454545509090909 ,centered=True ,beta_1=0.8686868686868687 ,beta_2=0.0 ,learning_rate_power=0.0 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.6767676767676768].
2023-08-23 07:28:04,304 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.7373737373737375, momentum=0.4545454545454546 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6565656565656566 ,rho=0.6565656565656566 ,epsilon=0.000454545509090909 ,centered=True ,beta_1=0.8686868686868687 ,beta_2=0.0 ,learning_rate_power=0.0 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.6767676767676768].
2023-08-23 07:28:04,735 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:28:04,735 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:28:04,927 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:28:04,928 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:28:08,269 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:28:08,269 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:28:25,920 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:28:25,920 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:28:26,144 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:28:26,144 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:28:27,986 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.98989898989899, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0076770000000000015 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.4747474747474748 ,epsilon=0.0008383838545454545 ,centered=False ,beta_1=0.6060606060606061 ,beta_2=0.0 ,learning_rate_power=-0.43434343434343425 ,initial_accumulator_value=0.6060606060606061 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.3535353535353536].
2023-08-23 07:28:27,986 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.98989898989899, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0076770000000000015 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.4747474747474748 ,epsilon=0.0008383838545454545 ,centered=False ,beta_1=0.6060606060606061 ,beta_2=0.0 ,learning_rate_power=-0.43434343434343425 ,initial_accumulator_value=0.6060606060606061 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.3535353535353536].
2023-08-23 07:28:28,585 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:28:28,585 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:28:46,428 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.36363636363636365, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.38383838383838387 ,rho=0.696969696969697 ,epsilon=0.0007777778 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.7474747474747475].
2023-08-23 07:28:46,429 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.36363636363636365, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.38383838383838387 ,rho=0.696969696969697 ,epsilon=0.0007777778 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.7474747474747475].
2023-08-23 07:28:46,524 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:28:46,524 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:28:49,764 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:28:49,764 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:28:52,370 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:28:52,370 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:29:06,929 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:29:06,930 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:29:10,356 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:29:10,357 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:29:11,059 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:29:11,059 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:29:13,159 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.24242424242424243 ,rho=0.030303030303030304 ,epsilon=1.010110909090909e-05 ,centered=True ,beta_1=0.686868686868687 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.3535353535353536 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.4747474747474748].
2023-08-23 07:29:13,160 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.24242424242424243 ,rho=0.030303030303030304 ,epsilon=1.010110909090909e-05 ,centered=True ,beta_1=0.686868686868687 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.3535353535353536 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.4747474747474748].
2023-08-23 07:29:28,093 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:29:28,093 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:29:30,847 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:29:30,847 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:29:31,500 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:29:31,500 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:29:37,252 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.020202020202020204, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.030303030303030304 ,learning_rate_power=-0.31313131313131304 ,initial_accumulator_value=0.4747474747474748 ,l1_regularization_strength=0.6060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.8585858585858587].
2023-08-23 07:29:37,252 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.020202020202020204, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.030303030303030304 ,learning_rate_power=-0.31313131313131304 ,initial_accumulator_value=0.4747474747474748 ,l1_regularization_strength=0.6060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.8585858585858587].
2023-08-23 07:29:48,626 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.9797979797979799, momentum=0.787878787878788 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.797979797979798 ,epsilon=0.0004848485363636363 ,centered=False ,beta_1=0.8181818181818182 ,beta_2=0.0 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.5050505050505051].
2023-08-23 07:29:48,626 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.9797979797979799, momentum=0.787878787878788 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.797979797979798 ,epsilon=0.0004848485363636363 ,centered=False ,beta_1=0.8181818181818182 ,beta_2=0.0 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.5050505050505051].
2023-08-23 07:29:51,207 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:29:51,207 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:29:52,633 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:29:52,634 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:29:57,337 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:29:57,337 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:30:12,324 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:30:12,325 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:30:12,914 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.5151515151515152, momentum=0.7070707070707072 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8787878787878789 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.33333333333333337 ,beta_2=0.04040404040404041 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.696969696969697 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.7474747474747475].
2023-08-23 07:30:12,914 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.5151515151515152, momentum=0.7070707070707072 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8787878787878789 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.33333333333333337 ,beta_2=0.04040404040404041 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.696969696969697 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.7474747474747475].
2023-08-23 07:30:13,139 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:30:13,139 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:30:17,428 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:30:17,428 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:30:32,511 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:30:32,511 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:30:32,737 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8181818181818182 ,rho=0.24242424242424243 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.19191919191919193 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.7474747474747475].
2023-08-23 07:30:32,737 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8181818181818182 ,rho=0.24242424242424243 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.19191919191919193 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.7474747474747475].
2023-08-23 07:30:33,473 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:30:33,473 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:30:38,197 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:30:38,197 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:30:52,993 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:30:52,993 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:31:13,056 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.797979797979798 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5353535353535354 ,beta_2=0.787878787878788 ,learning_rate_power=-0.696969696969697 ,initial_accumulator_value=0.6161616161616162 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.0].
2023-08-23 07:31:13,056 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.797979797979798 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5353535353535354 ,beta_2=0.787878787878788 ,learning_rate_power=-0.696969696969697 ,initial_accumulator_value=0.6161616161616162 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.0].
2023-08-23 07:31:32,149 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0009100000000000001 ,use_ema=True ,ema_momentum=0.4040404040404041 ,rho=0.6565656565656566 ,epsilon=0.00014141422727272727 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.7474747474747475].
2023-08-23 07:31:32,150 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0009100000000000001 ,use_ema=True ,ema_momentum=0.4040404040404041 ,rho=0.6565656565656566 ,epsilon=0.00014141422727272727 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.7474747474747475].
2023-08-23 07:31:56,200 INFO: Applying selection operators for generation 30.
2023-08-23 07:31:56,201 INFO: Applying genetic operators for generation 30.
2023-08-23 07:31:56,203 INFO: Evaluating fitness for for generation 30.
2023-08-23 07:31:56,203 INFO: Will evaluate fitness for 40 individuals.
2023-08-23 07:31:56,761 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:31:56,761 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:31:56,773 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.5555555555555556, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0029300000000000007 ,use_ema=True ,ema_momentum=0.8787878787878789 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.3434343434343435 ,beta_2=0.888888888888889 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.8181818181818182 ,l1_regularization_strength=0.5252525252525253 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.9393939393939394].
2023-08-23 07:31:56,774 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.5555555555555556, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0029300000000000007 ,use_ema=True ,ema_momentum=0.8787878787878789 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.3434343434343435 ,beta_2=0.888888888888889 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.8181818181818182 ,l1_regularization_strength=0.5252525252525253 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.9393939393939394].
2023-08-23 07:31:56,776 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:31:56,776 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:31:56,777 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:31:56,777 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:32:17,090 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:32:17,090 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:32:17,145 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:32:17,146 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:32:17,984 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:32:17,984 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:32:32,678 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:32:32,678 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:32:37,368 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0006969697272727273 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9292929292929294 ,learning_rate_power=-0.3535353535353535 ,initial_accumulator_value=0.9393939393939394 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.6565656565656566].
2023-08-23 07:32:37,368 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0006969697272727273 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9292929292929294 ,learning_rate_power=-0.3535353535353535 ,initial_accumulator_value=0.9393939393939394 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.6565656565656566].
2023-08-23 07:32:37,837 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:32:37,837 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:32:38,464 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:32:38,464 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:32:53,458 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:32:53,459 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:32:58,509 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:32:58,510 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:32:58,994 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:32:58,994 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:33:01,169 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:33:01,169 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:33:13,555 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:33:13,555 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:33:19,085 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.020202020202020204 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6464646464646465 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:33:19,085 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.020202020202020204 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6464646464646465 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:33:19,397 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:33:19,398 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:33:22,292 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:33:22,292 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:33:33,567 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:33:33,567 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:33:40,489 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:33:40,489 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:33:42,709 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7171717171717172, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0036370000000000005 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.38383838383838387 ,epsilon=0.0005050505545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.38383838383838387 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.030303030303030304].
2023-08-23 07:33:42,709 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7171717171717172, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0036370000000000005 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.38383838383838387 ,epsilon=0.0005050505545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.38383838383838387 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.030303030303030304].
2023-08-23 07:33:43,970 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.0 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.6464646464646465 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.20202020202020204 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.9090909090909092].
2023-08-23 07:33:43,971 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.0 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.6464646464646465 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.20202020202020204 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.9090909090909092].
2023-08-23 07:33:54,269 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:33:54,270 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:34:00,889 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:34:00,889 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:34:04,950 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:34:04,950 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:34:07,431 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:34:07,431 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:34:14,409 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.0 ,learning_rate_power=-0.6363636363636364 ,initial_accumulator_value=0.9797979797979799 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:34:14,409 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.0 ,learning_rate_power=-0.6363636363636364 ,initial_accumulator_value=0.9797979797979799 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:34:21,281 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:34:21,282 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:34:25,492 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9191919191919192 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.5757575757575758].
2023-08-23 07:34:25,492 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9191919191919192 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.5757575757575758].
2023-08-23 07:34:27,773 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.005051000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.787878787878788 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.494949494949495 ,l1_regularization_strength=0.6060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.7474747474747475].
2023-08-23 07:34:27,774 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.005051000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.787878787878788 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.494949494949495 ,l1_regularization_strength=0.6060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.7474747474747475].
2023-08-23 07:34:38,614 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:34:38,614 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:34:42,110 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:34:42,110 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:34:48,466 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.43434343434343436 ,epsilon=0.0007171717454545454 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.36363636363636365 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.2828282828282829].
2023-08-23 07:34:48,467 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.43434343434343436 ,epsilon=0.0007171717454545454 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.36363636363636365 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.2828282828282829].
2023-08-23 07:34:50,728 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:34:50,728 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:34:58,564 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.9393939393939394 ,beta_2=0.04040404040404041 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:34:58,564 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.9393939393939394 ,beta_2=0.04040404040404041 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:35:02,761 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.009192 ,use_ema=True ,ema_momentum=0.8989898989898991 ,rho=0.6565656565656566 ,epsilon=0.001 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.010101010101010055 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7676767676767677].
2023-08-23 07:35:02,762 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.009192 ,use_ema=True ,ema_momentum=0.8989898989898991 ,rho=0.6565656565656566 ,epsilon=0.001 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.010101010101010055 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7676767676767677].
2023-08-23 07:35:11,110 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:35:11,110 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:35:27,884 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.5050505050505051, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6363636363636365 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5757575757575758 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.05050505050505051].
2023-08-23 07:35:27,884 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.5050505050505051, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6363636363636365 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5757575757575758 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.05050505050505051].
2023-08-23 07:36:03,237 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:36:03,238 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:36:22,804 INFO: Applying selection operators for generation 31.
2023-08-23 07:36:22,805 INFO: Applying genetic operators for generation 31.
2023-08-23 07:36:22,808 INFO: Evaluating fitness for for generation 31.
2023-08-23 07:36:22,808 INFO: Will evaluate fitness for 38 individuals.
2023-08-23 07:36:23,361 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.27272727272727276 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.8181818181818182 ,beta_2=0.0 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:36:23,362 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.27272727272727276 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.8181818181818182 ,beta_2=0.0 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:36:23,381 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7676767676767677 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:36:23,381 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7676767676767677 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:36:23,387 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00014141422727272727 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.08080808080808077 ,initial_accumulator_value=0.3434343434343435 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.7474747474747475].
2023-08-23 07:36:23,387 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00014141422727272727 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.08080808080808077 ,initial_accumulator_value=0.3434343434343435 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.7474747474747475].
2023-08-23 07:36:23,402 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:36:23,402 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:36:43,760 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:36:43,761 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:36:43,862 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.7474747474747475].
2023-08-23 07:36:43,862 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.7474747474747475].
2023-08-23 07:36:48,103 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:36:48,103 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:36:48,394 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:36:48,394 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:37:04,183 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.14141414141414144, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.0002121212909090909 ,centered=True ,beta_1=0.15151515151515152 ,beta_2=0.0 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.17171717171717174].
2023-08-23 07:37:04,184 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.14141414141414144, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.0002121212909090909 ,centered=True ,beta_1=0.15151515151515152 ,beta_2=0.0 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.17171717171717174].
2023-08-23 07:37:04,207 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:37:04,207 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:37:08,118 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.797979797979798, momentum=0.8080808080808082 ,nesterov=True ,amsgrad=False ,weight_decay=0.0009100000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.010101010101010102 ,epsilon=0.0003939394545454545 ,centered=True ,beta_1=0.7171717171717172 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.4545454545454545 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9797979797979799 ,beta=0.8686868686868687].
2023-08-23 07:37:08,118 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.797979797979798, momentum=0.8080808080808082 ,nesterov=True ,amsgrad=False ,weight_decay=0.0009100000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.010101010101010102 ,epsilon=0.0003939394545454545 ,centered=True ,beta_1=0.7171717171717172 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.4545454545454545 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9797979797979799 ,beta=0.8686868686868687].
2023-08-23 07:37:08,662 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.4141414141414142, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.42424242424242425 ,rho=0.18181818181818182 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.7474747474747475].
2023-08-23 07:37:08,662 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.4141414141414142, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.42424242424242425 ,rho=0.18181818181818182 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.7474747474747475].
2023-08-23 07:37:25,535 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:37:25,536 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:37:29,174 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:37:29,174 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:37:32,362 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:37:32,362 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:37:32,805 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.5151515151515152, momentum=0.7070707070707072 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.09090909090909091 ,beta_2=0.0 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.33333333333333337 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.22222222222222224].
2023-08-23 07:37:32,805 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.5151515151515152, momentum=0.7070707070707072 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.09090909090909091 ,beta_2=0.0 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.33333333333333337 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.22222222222222224].
2023-08-23 07:37:46,122 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0032330000000000006 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=1.0 ,learning_rate_power=-0.08080808080808077 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:37:46,122 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0032330000000000006 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=1.0 ,learning_rate_power=-0.08080808080808077 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:37:50,255 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6767676767676768 ,rho=0.21212121212121213 ,epsilon=0.0002727273454545454 ,centered=True ,beta_1=0.7272727272727273 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.36363636363636365 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.7474747474747475].
2023-08-23 07:37:50,256 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6767676767676768 ,rho=0.21212121212121213 ,epsilon=0.0002727273454545454 ,centered=True ,beta_1=0.7272727272727273 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.36363636363636365 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.7474747474747475].
2023-08-23 07:37:52,707 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:37:52,707 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:38:04,625 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:38:04,625 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:38:08,649 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:38:08,649 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:38:13,016 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:38:13,016 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:38:14,822 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.7575757575757577, momentum=0.4040404040404041 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.42424242424242425 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.4646464646464647 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.7474747474747475].
2023-08-23 07:38:14,823 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.7575757575757577, momentum=0.4040404040404041 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.42424242424242425 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.4646464646464647 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.7474747474747475].
2023-08-23 07:38:24,944 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:38:24,945 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:38:28,654 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.9292929292929294, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.6060606060606061 ,beta_2=0.0 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.09090909090909091].
2023-08-23 07:38:28,654 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.9292929292929294, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.6060606060606061 ,beta_2=0.0 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.09090909090909091].
2023-08-23 07:38:33,954 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:38:33,954 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:38:33,973 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:38:33,974 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:38:45,295 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:38:45,295 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:38:48,620 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:38:48,620 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:38:54,364 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.9393939393939394 ,beta_2=0.04040404040404041 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:38:54,364 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.9393939393939394 ,beta_2=0.04040404040404041 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:38:54,378 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.007778000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.696969696969697 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.33333333333333337 ,beta_2=0.0 ,learning_rate_power=-0.8787878787878788 ,initial_accumulator_value=0.4040404040404041 ,l1_regularization_strength=0.4545454545454546 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.4747474747474748].
2023-08-23 07:38:54,378 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.007778000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.696969696969697 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.33333333333333337 ,beta_2=0.0 ,learning_rate_power=-0.8787878787878788 ,initial_accumulator_value=0.4040404040404041 ,l1_regularization_strength=0.4545454545454546 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.4747474747474748].
2023-08-23 07:39:06,633 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:39:06,633 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:39:09,285 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6262626262626263, momentum=0.888888888888889 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.13131313131313133 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.7474747474747475].
2023-08-23 07:39:09,285 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6262626262626263, momentum=0.888888888888889 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.13131313131313133 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.7474747474747475].
2023-08-23 07:39:14,721 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:39:14,721 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:39:20,013 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:39:20,013 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:39:27,078 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:39:27,078 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:39:33,875 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.004647000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5252525252525253 ,epsilon=0.0009292929363636363 ,centered=True ,beta_1=0.18181818181818182 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.8888888888888888 ,initial_accumulator_value=0.4141414141414142 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:39:33,875 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.004647000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5252525252525253 ,epsilon=0.0009292929363636363 ,centered=True ,beta_1=0.18181818181818182 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.8888888888888888 ,initial_accumulator_value=0.4141414141414142 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:39:47,395 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:39:47,395 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:40:06,885 INFO: Applying selection operators for generation 32.
2023-08-23 07:40:06,886 INFO: Applying genetic operators for generation 32.
2023-08-23 07:40:06,889 INFO: Evaluating fitness for for generation 32.
2023-08-23 07:40:06,889 INFO: Will evaluate fitness for 37 individuals.
2023-08-23 07:40:07,458 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:40:07,458 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:40:07,461 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9595959595959597, momentum=0.37373737373737376 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9090909090909092 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8585858585858587 ,beta=0.7474747474747475].
2023-08-23 07:40:07,461 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9595959595959597, momentum=0.37373737373737376 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9090909090909092 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8585858585858587 ,beta=0.7474747474747475].
2023-08-23 07:40:07,486 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:40:07,486 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:40:07,489 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.12121212121212122, momentum=0.7676767676767677 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0005959596363636363 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.0 ,learning_rate_power=-0.9393939393939394 ,initial_accumulator_value=0.9797979797979799 ,l1_regularization_strength=0.8585858585858587 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.7474747474747475].
2023-08-23 07:40:07,489 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.12121212121212122, momentum=0.7676767676767677 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0005959596363636363 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.0 ,learning_rate_power=-0.9393939393939394 ,initial_accumulator_value=0.9797979797979799 ,l1_regularization_strength=0.8585858585858587 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.7474747474747475].
2023-08-23 07:40:27,363 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:40:27,363 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:40:28,651 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:40:28,652 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:40:32,253 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:40:32,254 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:40:33,193 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.09090909090909091, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9090909090909092 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.18181818181818182 ,beta_2=0.04040404040404041 ,learning_rate_power=-0.43434343434343425 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.494949494949495].
2023-08-23 07:40:33,193 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.09090909090909091, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9090909090909092 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.18181818181818182 ,beta_2=0.04040404040404041 ,learning_rate_power=-0.43434343434343425 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.494949494949495].
2023-08-23 07:40:48,093 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:40:48,093 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:40:49,219 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:40:49,220 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:40:52,677 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:40:52,677 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:40:53,799 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:40:53,799 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:41:08,100 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0022230000000000006 ,use_ema=True ,ema_momentum=0.98989898989899 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.3434343434343435 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.030303030303030304 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8282828282828284 ,beta=0.7474747474747475].
2023-08-23 07:41:08,100 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0022230000000000006 ,use_ema=True ,ema_momentum=0.98989898989899 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.3434343434343435 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.030303030303030304 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8282828282828284 ,beta=0.7474747474747475].
2023-08-23 07:41:09,815 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.006869000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.07070707070707072 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5555555555555556 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.23232323232323235].
2023-08-23 07:41:09,815 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.006869000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.07070707070707072 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5555555555555556 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.23232323232323235].
2023-08-23 07:41:14,026 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.7676767676767677 ,rho=0.2828282828282829 ,epsilon=0.0006868687181818181 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.30303030303030304 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.020202020202020204 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.7474747474747475].
2023-08-23 07:41:14,027 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.7676767676767677 ,rho=0.2828282828282829 ,epsilon=0.0006868687181818181 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.30303030303030304 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.020202020202020204 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.7474747474747475].
2023-08-23 07:41:14,074 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:41:14,074 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:41:28,704 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.8181818181818182 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.12121212121212122 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6464646464646465 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.6363636363636365].
2023-08-23 07:41:28,705 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.8181818181818182 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.12121212121212122 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6464646464646465 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.6363636363636365].
2023-08-23 07:41:34,491 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:41:34,491 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:41:34,887 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9292929292929294 ,rho=0.6565656565656566 ,epsilon=0.0004242424818181818 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.22222222222222224].
2023-08-23 07:41:34,887 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9292929292929294 ,rho=0.6565656565656566 ,epsilon=0.0004242424818181818 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.22222222222222224].
2023-08-23 07:41:38,583 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.7272727272727273 ,epsilon=0.0009191919272727272 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.30303030303030304 ,beta=0.7474747474747475].
2023-08-23 07:41:38,584 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.7272727272727273 ,epsilon=0.0009191919272727272 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.30303030303030304 ,beta=0.7474747474747475].
2023-08-23 07:41:53,210 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.9393939393939394 ,beta_2=0.04040404040404041 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:41:53,210 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.9393939393939394 ,beta_2=0.04040404040404041 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:41:55,775 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.7676767676767677, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0006969697272727273 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.8585858585858587].
2023-08-23 07:41:55,776 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.7676767676767677, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0006969697272727273 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.8585858585858587].
2023-08-23 07:41:56,805 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:41:56,805 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:41:59,982 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:41:59,982 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:42:13,944 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.9393939393939394 ,beta_2=0.04040404040404041 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:42:13,944 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.9393939393939394 ,beta_2=0.04040404040404041 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:42:17,314 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.19191919191919193 ,beta_2=0.5252525252525253 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.21212121212121213 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.020202020202020204].
2023-08-23 07:42:17,315 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.19191919191919193 ,beta_2=0.5252525252525253 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.21212121212121213 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.020202020202020204].
2023-08-23 07:42:20,125 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.42424242424242425 ,epsilon=0.0002121212909090909 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:42:20,126 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.42424242424242425 ,epsilon=0.0002121212909090909 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:42:20,429 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4545454545454546, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00046464651818181813 ,centered=False ,beta_1=0.9393939393939394 ,beta_2=0.04040404040404041 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8080808080808082 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.7474747474747475].
2023-08-23 07:42:20,429 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4545454545454546, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00046464651818181813 ,centered=False ,beta_1=0.9393939393939394 ,beta_2=0.04040404040404041 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8080808080808082 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.7474747474747475].
2023-08-23 07:42:34,049 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:42:34,049 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:42:42,882 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:42:42,883 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:42:45,201 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.14141414141414144, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.020202020202020204 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.04040404040404041 ,l1_regularization_strength=0.7676767676767677 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.030303030303030304].
2023-08-23 07:42:45,201 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.14141414141414144, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.020202020202020204 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.04040404040404041 ,l1_regularization_strength=0.7676767676767677 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.030303030303030304].
2023-08-23 07:42:45,510 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:42:45,511 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:42:54,103 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:42:54,104 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:43:03,595 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:43:03,595 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:43:06,708 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:43:06,708 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:43:11,005 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:43:11,005 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:43:14,058 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.3535353535353536 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7373737373737375 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.33333333333333326 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6464646464646465 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:43:14,058 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.3535353535353536 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7373737373737375 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.33333333333333326 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6464646464646465 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:43:33,299 INFO: Applying selection operators for generation 33.
2023-08-23 07:43:33,300 INFO: Applying genetic operators for generation 33.
2023-08-23 07:43:33,303 INFO: Evaluating fitness for for generation 33.
2023-08-23 07:43:33,303 INFO: Will evaluate fitness for 38 individuals.
2023-08-23 07:43:33,851 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:43:33,851 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.5858585858585859 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8383838383838385 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.7474747474747475].
2023-08-23 07:43:33,852 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:43:33,852 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.5858585858585859 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8383838383838385 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.7474747474747475].
2023-08-23 07:43:33,989 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:43:33,989 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:43:33,997 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:43:33,997 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:43:53,824 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4747474747474748 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9797979797979799 ,beta=0.09090909090909091].
2023-08-23 07:43:53,824 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4747474747474748 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9797979797979799 ,beta=0.09090909090909091].
2023-08-23 07:43:54,348 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:43:54,348 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:43:54,418 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:43:54,419 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:43:58,604 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.33333333333333337, momentum=0.5151515151515152 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.12121212121212122 ,rho=0.6565656565656566 ,epsilon=0.0009191919272727272 ,centered=True ,beta_1=0.37373737373737376 ,beta_2=0.0 ,learning_rate_power=-0.3434343434343434 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9696969696969697 ,beta=0.696969696969697].
2023-08-23 07:43:58,605 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.33333333333333337, momentum=0.5151515151515152 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.12121212121212122 ,rho=0.6565656565656566 ,epsilon=0.0009191919272727272 ,centered=True ,beta_1=0.37373737373737376 ,beta_2=0.0 ,learning_rate_power=-0.3434343434343434 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9696969696969697 ,beta=0.696969696969697].
2023-08-23 07:44:14,858 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:44:14,858 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:44:15,541 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:44:15,542 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:44:24,405 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.5454545454545455, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0031320000000000007 ,use_ema=True ,ema_momentum=0.6565656565656566 ,rho=0.31313131313131315 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.5050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:44:24,405 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.5454545454545455, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0031320000000000007 ,use_ema=True ,ema_momentum=0.6565656565656566 ,rho=0.31313131313131315 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.5050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:44:30,216 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.5454545454545455 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007979798181818182 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.020202020202020204 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.31313131313131315 ,beta=0.7474747474747475].
2023-08-23 07:44:30,216 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.5454545454545455 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007979798181818182 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.020202020202020204 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.31313131313131315 ,beta=0.7474747474747475].
2023-08-23 07:44:35,231 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6565656565656566, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.17171717171717174 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.36363636363636365 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:44:35,236 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6565656565656566, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.17171717171717174 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.36363636363636365 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:44:36,245 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:44:36,245 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:44:51,565 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:44:51,565 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:44:55,830 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:44:55,831 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:44:56,854 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:44:56,854 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:45:01,070 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.20202020202020204, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6262626262626263 ,rho=0.6565656565656566 ,epsilon=0.0009090909181818181 ,centered=True ,beta_1=0.08080808080808081 ,beta_2=0.0 ,learning_rate_power=-0.7777777777777778 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.04040404040404041].
2023-08-23 07:45:01,070 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.20202020202020204, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6262626262626263 ,rho=0.6565656565656566 ,epsilon=0.0009090909181818181 ,centered=True ,beta_1=0.08080808080808081 ,beta_2=0.0 ,learning_rate_power=-0.7777777777777778 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.04040404040404041].
2023-08-23 07:45:11,845 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.9494949494949496, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.007172000000000001 ,use_ema=True ,ema_momentum=0.31313131313131315 ,rho=0.595959595959596 ,epsilon=0.0006363636727272727 ,centered=True ,beta_1=0.20202020202020204 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.7474747474747475].
2023-08-23 07:45:11,846 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.9494949494949496, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.007172000000000001 ,use_ema=True ,ema_momentum=0.31313131313131315 ,rho=0.595959595959596 ,epsilon=0.0006363636727272727 ,centered=True ,beta_1=0.20202020202020204 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.7474747474747475].
2023-08-23 07:45:15,914 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:45:15,914 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:45:17,395 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:45:17,395 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:45:26,223 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:45:26,223 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:45:35,911 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=1.0, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4040404040404041 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.5555555555555556].
2023-08-23 07:45:35,911 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=1.0, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4040404040404041 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.5555555555555556].
2023-08-23 07:45:38,293 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.24242424242424243 ,beta_2=0.4646464646464647 ,learning_rate_power=-0.5555555555555556 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.13131313131313133 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.7474747474747475].
2023-08-23 07:45:38,294 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.24242424242424243 ,beta_2=0.4646464646464647 ,learning_rate_power=-0.5555555555555556 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.13131313131313133 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.7474747474747475].
2023-08-23 07:45:38,495 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:45:38,495 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:45:46,758 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.7070707070707072, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.17171717171717174 ,epsilon=0.0008181818363636363 ,centered=True ,beta_1=0.4141414141414142 ,beta_2=0.0 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.020202020202020204 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.7474747474747475].
2023-08-23 07:45:46,758 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.7070707070707072, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.17171717171717174 ,epsilon=0.0008181818363636363 ,centered=True ,beta_1=0.4141414141414142 ,beta_2=0.0 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.020202020202020204 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.7474747474747475].
2023-08-23 07:45:55,132 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9595959595959597, momentum=0.21212121212121213 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.8080808080808082 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.7474747474747475].
2023-08-23 07:45:55,132 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9595959595959597, momentum=0.21212121212121213 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.8080808080808082 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.7474747474747475].
2023-08-23 07:45:58,405 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:45:58,405 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:45:59,114 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:45:59,114 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:46:19,470 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:46:19,471 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:46:19,731 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:46:19,731 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:46:20,195 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:46:20,195 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:46:22,239 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.36363636363636365, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.595959595959596 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.31313131313131315 ,beta_2=0.7373737373737375 ,learning_rate_power=-0.3434343434343434 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.08080808080808081 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.9191919191919192].
2023-08-23 07:46:22,239 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.36363636363636365, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.595959595959596 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.31313131313131315 ,beta_2=0.7373737373737375 ,learning_rate_power=-0.3434343434343434 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.08080808080808081 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.9191919191919192].
2023-08-23 07:46:39,959 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:46:39,959 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:46:40,298 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:46:40,298 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:46:40,376 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:46:40,376 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:46:48,841 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:46:48,842 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:47:01,624 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:47:01,625 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:47:21,330 INFO: Applying selection operators for generation 34.
2023-08-23 07:47:21,330 INFO: Applying genetic operators for generation 34.
2023-08-23 07:47:21,333 INFO: Evaluating fitness for for generation 34.
2023-08-23 07:47:21,333 INFO: Will evaluate fitness for 34 individuals.
2023-08-23 07:47:21,904 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:47:21,905 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:47:21,918 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:47:21,918 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:47:21,934 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0007080000000000002 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0006868687181818181 ,centered=True ,beta_1=0.7070707070707072 ,beta_2=0.0 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.8080808080808082 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.7474747474747475].
2023-08-23 07:47:21,934 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0007080000000000002 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0006868687181818181 ,centered=True ,beta_1=0.7070707070707072 ,beta_2=0.0 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.8080808080808082 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.7474747474747475].
2023-08-23 07:47:22,082 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:47:22,082 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:47:40,304 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:47:40,304 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:47:41,781 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.4545454545454546 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.7171717171717172 ,beta_2=0.10101010101010102 ,learning_rate_power=-0.9393939393939394 ,initial_accumulator_value=0.020202020202020204 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.6060606060606061].
2023-08-23 07:47:41,781 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.4545454545454546 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.7171717171717172 ,beta_2=0.10101010101010102 ,learning_rate_power=-0.9393939393939394 ,initial_accumulator_value=0.020202020202020204 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.6060606060606061].
2023-08-23 07:47:42,535 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:47:42,535 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:47:42,567 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:47:42,567 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:48:00,676 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.686868686868687, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.009899000000000002 ,use_ema=True ,ema_momentum=0.08080808080808081 ,rho=0.6565656565656566 ,epsilon=0.0005959596363636363 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.26262626262626265].
2023-08-23 07:48:00,676 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.686868686868687, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.009899000000000002 ,use_ema=True ,ema_momentum=0.08080808080808081 ,rho=0.6565656565656566 ,epsilon=0.0005959596363636363 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.26262626262626265].
2023-08-23 07:48:02,934 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.29292929292929293 ,rho=0.5656565656565657 ,epsilon=0.0007373737636363636 ,centered=True ,beta_1=0.36363636363636365 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.21212121212121213 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:48:02,934 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.29292929292929293 ,rho=0.5656565656565657 ,epsilon=0.0007373737636363636 ,centered=True ,beta_1=0.36363636363636365 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.21212121212121213 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:48:03,411 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:48:03,411 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:48:07,166 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.10101010101010102, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.7575757575757577 ,epsilon=0.001 ,centered=True ,beta_1=0.22222222222222224 ,beta_2=0.0 ,learning_rate_power=-0.6464646464646464 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.888888888888889].
2023-08-23 07:48:07,166 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.10101010101010102, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.7575757575757577 ,epsilon=0.001 ,centered=True ,beta_1=0.22222222222222224 ,beta_2=0.0 ,learning_rate_power=-0.6464646464646464 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.888888888888889].
2023-08-23 07:48:24,123 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.7171717171717172, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00017171725454545453 ,centered=True ,beta_1=0.36363636363636365 ,beta_2=0.09090909090909091 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.25252525252525254 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.7474747474747475].
2023-08-23 07:48:24,123 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.7171717171717172, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00017171725454545453 ,centered=True ,beta_1=0.36363636363636365 ,beta_2=0.09090909090909091 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.25252525252525254 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.7474747474747475].
2023-08-23 07:48:26,388 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9292929292929294, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4747474747474748 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.14141414141414144 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.11111111111111112 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.7474747474747475].
2023-08-23 07:48:26,388 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9292929292929294, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4747474747474748 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.14141414141414144 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.11111111111111112 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.7474747474747475].
2023-08-23 07:48:28,307 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.08080808080808081, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0004747475272727272 ,centered=True ,beta_1=0.8484848484848485 ,beta_2=0.31313131313131315 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.3434343434343435 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.7474747474747475].
2023-08-23 07:48:28,307 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.08080808080808081, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0004747475272727272 ,centered=True ,beta_1=0.8484848484848485 ,beta_2=0.31313131313131315 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.3434343434343435 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.7474747474747475].
2023-08-23 07:48:32,529 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.07070707070707072 ,rho=0.4747474747474748 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.8383838383838385 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:48:32,529 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.07070707070707072 ,rho=0.4747474747474748 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.8383838383838385 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:48:47,151 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:48:47,151 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:48:49,121 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.005152000000000001 ,use_ema=True ,ema_momentum=0.21212121212121213 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.6666666666666667 ,beta_2=0.888888888888889 ,learning_rate_power=-0.4242424242424242 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6666666666666667 ,beta=0.7474747474747475].
2023-08-23 07:48:49,122 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.005152000000000001 ,use_ema=True ,ema_momentum=0.21212121212121213 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.6666666666666667 ,beta_2=0.888888888888889 ,learning_rate_power=-0.4242424242424242 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6666666666666667 ,beta=0.7474747474747475].
2023-08-23 07:48:53,881 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:48:53,881 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:48:57,602 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:48:57,602 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:49:07,837 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.08080808080808081, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.2525252525252525 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4646464646464647 ,beta=0.7474747474747475].
2023-08-23 07:49:07,838 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.08080808080808081, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.2525252525252525 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4646464646464647 ,beta=0.7474747474747475].
2023-08-23 07:49:09,210 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:49:09,210 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:49:15,041 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:49:15,042 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:49:17,486 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:49:17,487 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:49:30,554 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:49:30,554 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:49:33,066 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:49:33,067 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:49:35,564 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:49:35,564 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:49:38,171 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.006263000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.393939393939394 ,beta_2=0.18181818181818182 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.31313131313131315].
2023-08-23 07:49:38,171 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.006263000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.393939393939394 ,beta_2=0.18181818181818182 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.31313131313131315].
2023-08-23 07:49:51,099 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:49:51,099 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:49:54,323 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:49:54,323 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:49:55,951 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:49:55,951 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:50:11,476 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:50:11,476 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:50:14,757 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:50:14,757 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:50:16,061 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:50:16,061 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:50:36,026 INFO: Applying selection operators for generation 35.
2023-08-23 07:50:36,027 INFO: Applying genetic operators for generation 35.
2023-08-23 07:50:36,031 INFO: Evaluating fitness for for generation 35.
2023-08-23 07:50:36,031 INFO: Will evaluate fitness for 43 individuals.
2023-08-23 07:50:36,591 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.9393939393939394, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0003030303727272727 ,centered=True ,beta_1=0.5050505050505051 ,beta_2=0.5454545454545455 ,learning_rate_power=-0.13131313131313127 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.31313131313131315].
2023-08-23 07:50:36,591 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.9393939393939394, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0003030303727272727 ,centered=True ,beta_1=0.5050505050505051 ,beta_2=0.5454545454545455 ,learning_rate_power=-0.13131313131313127 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.31313131313131315].
2023-08-23 07:50:36,617 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:50:36,617 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:50:36,656 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:50:36,656 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:50:36,669 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:50:36,669 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:50:56,687 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.8282828282828284 ,nesterov=True ,amsgrad=False ,weight_decay=0.0034350000000000006 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.888888888888889 ,epsilon=0.0009292929363636363 ,centered=True ,beta_1=0.393939393939394 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.0].
2023-08-23 07:50:56,687 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.8282828282828284 ,nesterov=True ,amsgrad=False ,weight_decay=0.0034350000000000006 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.888888888888889 ,epsilon=0.0009292929363636363 ,centered=True ,beta_1=0.393939393939394 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.0].
2023-08-23 07:50:56,791 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:50:56,791 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:50:57,104 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:50:57,105 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:51:00,834 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:51:00,834 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:51:17,413 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:51:17,414 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:51:17,928 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:51:17,928 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:51:21,908 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:51:21,908 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:51:21,954 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.494949494949495, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0033340000000000006 ,use_ema=False ,ema_momentum=0.7474747474747475 ,rho=0.11111111111111112 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.303030303030303 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.010101010101010102 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.5151515151515152].
2023-08-23 07:51:21,954 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.494949494949495, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0033340000000000006 ,use_ema=False ,ema_momentum=0.7474747474747475 ,rho=0.11111111111111112 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.303030303030303 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.010101010101010102 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.5151515151515152].
2023-08-23 07:51:37,690 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:51:37,690 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:51:38,432 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.8484848484848485, momentum=0.14141414141414144 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.8080808080808082 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.09090909090909083 ,initial_accumulator_value=0.25252525252525254 ,l1_regularization_strength=0.19191919191919193 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.24242424242424243].
2023-08-23 07:51:38,433 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.8484848484848485, momentum=0.14141414141414144 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.8080808080808082 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.09090909090909083 ,initial_accumulator_value=0.25252525252525254 ,l1_regularization_strength=0.19191919191919193 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.24242424242424243].
2023-08-23 07:51:42,318 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:51:42,318 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:51:42,422 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:51:42,422 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:51:57,949 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:51:57,950 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:51:58,138 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.7474747474747475, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=0.006364000000000001 ,use_ema=True ,ema_momentum=0.48484848484848486 ,rho=0.787878787878788 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.6262626262626263 ,beta_2=0.7777777777777778 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.7474747474747475].
2023-08-23 07:51:58,138 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.7474747474747475, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=0.006364000000000001 ,use_ema=True ,ema_momentum=0.48484848484848486 ,rho=0.787878787878788 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.6262626262626263 ,beta_2=0.7777777777777778 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.7474747474747475].
2023-08-23 07:52:02,513 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:52:02,513 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:52:02,695 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:52:02,695 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:52:18,937 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.04040404040404041, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.00010200000000000001 ,use_ema=True ,ema_momentum=1.0 ,rho=0.13131313131313133 ,epsilon=0.0006262626636363636 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.17171717171717174 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8787878787878789 ,beta=0.36363636363636365].
2023-08-23 07:52:18,937 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.04040404040404041, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.00010200000000000001 ,use_ema=True ,ema_momentum=1.0 ,rho=0.13131313131313133 ,epsilon=0.0006262626636363636 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.17171717171717174 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8787878787878789 ,beta=0.36363636363636365].
2023-08-23 07:52:22,452 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.21212121212121213 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5353535353535354 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.11111111111111112 ,beta=0.9393939393939394].
2023-08-23 07:52:22,452 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.21212121212121213 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5353535353535354 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.11111111111111112 ,beta=0.9393939393939394].
2023-08-23 07:52:23,424 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5757575757575758, momentum=0.08080808080808081 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8282828282828284 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.030303030303030304 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8989898989898991 ,beta=0.7474747474747475].
2023-08-23 07:52:23,425 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5757575757575758, momentum=0.08080808080808081 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8282828282828284 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.030303030303030304 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8989898989898991 ,beta=0.7474747474747475].
2023-08-23 07:52:36,094 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5858585858585859, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6363636363636365 ,rho=0.6565656565656566 ,epsilon=0.00015151523636363636 ,centered=True ,beta_1=0.22222222222222224 ,beta_2=0.8282828282828284 ,learning_rate_power=-0.10101010101010088 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.010101010101010102].
2023-08-23 07:52:36,095 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5858585858585859, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6363636363636365 ,rho=0.6565656565656566 ,epsilon=0.00015151523636363636 ,centered=True ,beta_1=0.22222222222222224 ,beta_2=0.8282828282828284 ,learning_rate_power=-0.10101010101010088 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.010101010101010102].
2023-08-23 07:52:42,366 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:52:42,366 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:52:44,077 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:52:44,077 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:52:44,422 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:52:44,422 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:53:01,353 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:53:01,353 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:53:02,999 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:53:02,999 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:53:04,450 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6464646464646465 ,rho=0.4040404040404041 ,epsilon=0.0006565656909090909 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.494949494949495 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.5858585858585859].
2023-08-23 07:53:04,450 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6464646464646465 ,rho=0.4040404040404041 ,epsilon=0.0006565656909090909 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.494949494949495 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.5858585858585859].
2023-08-23 07:53:04,603 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7575757575757577, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0022230000000000006 ,use_ema=False ,ema_momentum=0.8181818181818182 ,rho=0.6565656565656566 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.5252525252525253].
2023-08-23 07:53:04,603 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7575757575757577, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0022230000000000006 ,use_ema=False ,ema_momentum=0.8181818181818182 ,rho=0.6565656565656566 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.5252525252525253].
2023-08-23 07:53:21,794 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:53:21,794 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:53:23,042 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=1.0, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.17171717171717174 ,epsilon=0.0002222223 ,centered=False ,beta_1=0.6767676767676768 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.030303030303030304 ,l1_regularization_strength=0.4545454545454546 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.7474747474747475].
2023-08-23 07:53:23,042 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=1.0, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.17171717171717174 ,epsilon=0.0002222223 ,centered=False ,beta_1=0.6767676767676768 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.030303030303030304 ,l1_regularization_strength=0.4545454545454546 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.7474747474747475].
2023-08-23 07:53:24,526 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:53:24,526 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:53:29,116 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:53:29,117 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:53:42,226 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:53:42,227 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:53:45,595 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:53:45,595 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:53:47,952 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.5151515151515152, momentum=0.6363636363636365 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00024242431818181817 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.43434343434343436 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.5858585858585859 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.7373737373737375].
2023-08-23 07:53:47,952 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.5151515151515152, momentum=0.6363636363636365 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00024242431818181817 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.43434343434343436 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.5858585858585859 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.7373737373737375].
2023-08-23 07:53:50,329 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:53:50,330 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:54:06,009 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6464646464646465, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.686868686868687 ,epsilon=0.0008787878909090909 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.8585858585858586 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.10101010101010102 ,beta=0.11111111111111112].
2023-08-23 07:54:06,009 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6464646464646465, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.686868686868687 ,epsilon=0.0008787878909090909 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.8585858585858586 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.10101010101010102 ,beta=0.11111111111111112].
2023-08-23 07:54:13,227 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.888888888888889 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.19191919191919193 ,rho=0.696969696969697 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9292929292929294 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:54:13,227 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.888888888888889 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.19191919191919193 ,rho=0.696969696969697 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9292929292929294 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:54:30,701 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0065660000000000015 ,use_ema=False ,ema_momentum=0.393939393939394 ,rho=0.5252525252525253 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.04040404040404041 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.4141414141414142 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.15151515151515152 ,beta=0.7474747474747475].
2023-08-23 07:54:30,701 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0065660000000000015 ,use_ema=False ,ema_momentum=0.393939393939394 ,rho=0.5252525252525253 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.04040404040404041 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.4141414141414142 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.15151515151515152 ,beta=0.7474747474747475].
2023-08-23 07:54:38,168 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.06060606060606061 ,epsilon=0.0004848485363636363 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.9393939393939394 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.7474747474747475].
2023-08-23 07:54:38,168 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.06060606060606061 ,epsilon=0.0004848485363636363 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.9393939393939394 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.7474747474747475].
2023-08-23 07:55:01,682 INFO: Applying selection operators for generation 36.
2023-08-23 07:55:01,683 INFO: Applying genetic operators for generation 36.
2023-08-23 07:55:01,686 INFO: Evaluating fitness for for generation 36.
2023-08-23 07:55:01,686 INFO: Will evaluate fitness for 35 individuals.
2023-08-23 07:55:02,254 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:55:02,254 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:55:02,269 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:55:02,269 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:55:02,272 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.5151515151515152, momentum=0.6161616161616162 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.4545454545454546 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.09090909090909091 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.7474747474747475].
2023-08-23 07:55:02,272 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.5151515151515152, momentum=0.6161616161616162 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.4545454545454546 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.09090909090909091 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.7474747474747475].
2023-08-23 07:55:02,355 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:55:02,356 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:55:22,254 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:55:22,254 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:55:22,579 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6161616161616162, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.0 ,epsilon=0.0009090909181818181 ,centered=True ,beta_1=0.7373737373737375 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4040404040404041 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:55:22,579 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6161616161616162, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.0 ,epsilon=0.0009090909181818181 ,centered=True ,beta_1=0.7373737373737375 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4040404040404041 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:55:22,732 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6161616161616162, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.08080808080808081 ,rho=0.6565656565656566 ,epsilon=7.070716363636363e-05 ,centered=True ,beta_1=0.16161616161616163 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.6666666666666667 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.16161616161616163].
2023-08-23 07:55:22,732 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6161616161616162, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.08080808080808081 ,rho=0.6565656565656566 ,epsilon=7.070716363636363e-05 ,centered=True ,beta_1=0.16161616161616163 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.6666666666666667 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.16161616161616163].
2023-08-23 07:55:27,035 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.21212121212121213 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.11111111111111112 ,beta=0.9393939393939394].
2023-08-23 07:55:27,035 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.21212121212121213 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.11111111111111112 ,beta=0.9393939393939394].
2023-08-23 07:55:42,195 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8585858585858587 ,rho=0.43434343434343436 ,epsilon=0.001 ,centered=True ,beta_1=0.8686868686868687 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.5353535353535354 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:55:42,195 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8585858585858587 ,rho=0.43434343434343436 ,epsilon=0.001 ,centered=True ,beta_1=0.8686868686868687 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.5353535353535354 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:55:46,789 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:55:46,789 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:55:47,537 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5353535353535354 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:55:47,538 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5353535353535354 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:55:47,752 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:55:47,752 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:56:06,840 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.7676767676767677 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.23232323232323235 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.5252525252525253].
2023-08-23 07:56:06,840 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.7676767676767677 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.23232323232323235 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.5252525252525253].
2023-08-23 07:56:07,694 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6161616161616162 ,nesterov=True ,amsgrad=False ,weight_decay=0.007273000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0008383838545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.303030303030303 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.7474747474747475].
2023-08-23 07:56:07,694 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6161616161616162 ,nesterov=True ,amsgrad=False ,weight_decay=0.007273000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0008383838545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.303030303030303 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.7474747474747475].
2023-08-23 07:56:07,708 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:56:07,708 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:56:07,846 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6767676767676768 ,rho=0.6565656565656566 ,epsilon=0.0004848485363636363 ,centered=False ,beta_1=0.24242424242424243 ,beta_2=0.4646464646464647 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=0.393939393939394].
2023-08-23 07:56:07,846 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6767676767676768 ,rho=0.6565656565656566 ,epsilon=0.0004848485363636363 ,centered=False ,beta_1=0.24242424242424243 ,beta_2=0.4646464646464647 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=0.393939393939394].
2023-08-23 07:56:27,650 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.21212121212121213 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5353535353535354 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.11111111111111112 ,beta=0.9393939393939394].
2023-08-23 07:56:27,650 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.21212121212121213 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5353535353535354 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.11111111111111112 ,beta=0.9393939393939394].
2023-08-23 07:56:32,976 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8282828282828284, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.29292929292929293 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7676767676767677 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6262626262626263 ,beta=0.7474747474747475].
2023-08-23 07:56:32,976 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8282828282828284, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.29292929292929293 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7676767676767677 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6262626262626263 ,beta=0.7474747474747475].
2023-08-23 07:56:33,322 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:56:33,322 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:56:33,953 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.5353535353535354 ,rho=0.5050505050505051 ,epsilon=0.0009393939454545454 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9191919191919192 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.08080808080808081 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.6464646464646465].
2023-08-23 07:56:33,953 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.5353535353535354 ,rho=0.5050505050505051 ,epsilon=0.0009393939454545454 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9191919191919192 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.08080808080808081 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.6464646464646465].
2023-08-23 07:56:47,557 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:56:47,558 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:56:54,543 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.27272727272727276 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5252525252525253 ,beta_2=0.6060606060606061 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.7474747474747475].
2023-08-23 07:56:54,543 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.27272727272727276 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5252525252525253 ,beta_2=0.6060606060606061 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.7474747474747475].
2023-08-23 07:56:57,736 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:56:57,736 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:56:58,206 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:56:58,206 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:57:08,291 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:57:08,291 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:57:14,922 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00041414147272727267 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.10101010101010102 ,learning_rate_power=-0.2929292929292928 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.05050505050505051].
2023-08-23 07:57:14,923 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00041414147272727267 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.10101010101010102 ,learning_rate_power=-0.2929292929292928 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.05050505050505051].
2023-08-23 07:57:18,132 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8787878787878789, momentum=0.16161616161616163 ,nesterov=True ,amsgrad=True ,weight_decay=0.0067680000000000014 ,use_ema=True ,ema_momentum=0.4141414141414142 ,rho=0.07070707070707072 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.4545454545454546 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7777777777777778 ,beta=0.7474747474747475].
2023-08-23 07:57:18,132 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8787878787878789, momentum=0.16161616161616163 ,nesterov=True ,amsgrad=True ,weight_decay=0.0067680000000000014 ,use_ema=True ,ema_momentum=0.4141414141414142 ,rho=0.07070707070707072 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.4545454545454546 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7777777777777778 ,beta=0.7474747474747475].
2023-08-23 07:57:18,482 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.98989898989899, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.48484848484848486 ,epsilon=0.0008585858727272726 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.8484848484848485 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.17171717171717174 ,l1_regularization_strength=0.3434343434343435 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7777777777777778 ,beta=0.7474747474747475].
2023-08-23 07:57:18,483 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.98989898989899, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.48484848484848486 ,epsilon=0.0008585858727272726 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.8484848484848485 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.17171717171717174 ,l1_regularization_strength=0.3434343434343435 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7777777777777778 ,beta=0.7474747474747475].
2023-08-23 07:57:28,247 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:57:28,247 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:57:41,246 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:57:41,246 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:57:42,894 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:57:42,895 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:57:43,945 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:57:43,945 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:57:48,283 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:57:48,283 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:58:02,342 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:58:02,342 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:58:04,851 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:58:04,851 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:58:24,445 INFO: Applying selection operators for generation 37.
2023-08-23 07:58:24,446 INFO: Applying genetic operators for generation 37.
2023-08-23 07:58:24,449 INFO: Evaluating fitness for for generation 37.
2023-08-23 07:58:24,449 INFO: Will evaluate fitness for 38 individuals.
2023-08-23 07:58:25,050 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:58:25,050 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:58:25,051 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:58:25,051 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8282828282828284, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.007576000000000001 ,use_ema=True ,ema_momentum=0.26262626262626265 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.8282828282828284].
2023-08-23 07:58:25,051 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:58:25,051 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8282828282828284, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.007576000000000001 ,use_ema=True ,ema_momentum=0.26262626262626265 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.8282828282828284].
2023-08-23 07:58:25,053 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:58:25,053 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:58:45,253 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:58:45,254 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:58:45,513 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6666666666666667 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.09090909090909091 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.4747474747474748].
2023-08-23 07:58:45,513 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6666666666666667 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.09090909090909091 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.4747474747474748].
2023-08-23 07:58:45,791 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.005253000000000001 ,use_ema=True ,ema_momentum=0.5252525252525253 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4444444444444445 ,l1_regularization_strength=0.48484848484848486 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.5151515151515152].
2023-08-23 07:58:45,792 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.005253000000000001 ,use_ema=True ,ema_momentum=0.5252525252525253 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4444444444444445 ,l1_regularization_strength=0.48484848484848486 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.5151515151515152].
2023-08-23 07:58:50,922 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:58:50,923 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:59:05,572 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.32323232323232326, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.98989898989899 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.0 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.9494949494949496 ,l1_regularization_strength=0.696969696969697 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.7474747474747475].
2023-08-23 07:59:05,572 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.32323232323232326, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.98989898989899 ,rho=0.6262626262626263 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.0 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.9494949494949496 ,l1_regularization_strength=0.696969696969697 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.7474747474747475].
2023-08-23 07:59:10,046 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:59:10,046 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:59:11,256 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.8282828282828284, momentum=0.393939393939394 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.33333333333333337 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.020202020202020204 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.7474747474747475].
2023-08-23 07:59:11,256 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.8282828282828284, momentum=0.393939393939394 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.33333333333333337 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.020202020202020204 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.7474747474747475].
2023-08-23 07:59:12,304 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:59:12,304 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:59:25,969 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:59:25,969 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:59:30,354 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.13131313131313127 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7373737373737375 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.07070707070707072].
2023-08-23 07:59:30,354 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.13131313131313127 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7373737373737375 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.07070707070707072].
2023-08-23 07:59:32,352 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:59:32,353 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:59:37,107 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:59:37,107 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:59:46,598 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.24242424242424243, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3434343434343435 ,rho=0.6565656565656566 ,epsilon=0.00046464651818181813 ,centered=True ,beta_1=0.6262626262626263 ,beta_2=0.7272727272727273 ,learning_rate_power=-0.4545454545454545 ,initial_accumulator_value=0.7272727272727273 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.8787878787878789].
2023-08-23 07:59:46,598 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.24242424242424243, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3434343434343435 ,rho=0.6565656565656566 ,epsilon=0.00046464651818181813 ,centered=True ,beta_1=0.6262626262626263 ,beta_2=0.7272727272727273 ,learning_rate_power=-0.4545454545454545 ,initial_accumulator_value=0.7272727272727273 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.8787878787878789].
2023-08-23 07:59:51,366 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.15151515151515152, momentum=0.32323232323232326 ,nesterov=True ,amsgrad=False ,weight_decay=0.008889000000000001 ,use_ema=True ,ema_momentum=0.26262626262626265 ,rho=0.6565656565656566 ,epsilon=0.00035353541818181815 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.7474747474747475].
2023-08-23 07:59:51,366 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.15151515151515152, momentum=0.32323232323232326 ,nesterov=True ,amsgrad=False ,weight_decay=0.008889000000000001 ,use_ema=True ,ema_momentum=0.26262626262626265 ,rho=0.6565656565656566 ,epsilon=0.00035353541818181815 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.7474747474747475].
2023-08-23 07:59:52,440 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.7070707070707072 ,epsilon=3.030312727272727e-05 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.020202020202020204 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.7474747474747475].
2023-08-23 07:59:52,440 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.7070707070707072 ,epsilon=3.030312727272727e-05 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.020202020202020204 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.7474747474747475].
2023-08-23 07:59:57,730 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 07:59:57,730 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:00:06,491 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:00:06,492 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:00:11,605 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:00:11,605 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:00:17,042 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5050505050505051, momentum=0.5858585858585859 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.33333333333333337 ,rho=0.6565656565656566 ,epsilon=0.0009797979818181818 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.9292929292929293 ,initial_accumulator_value=0.25252525252525254 ,l1_regularization_strength=0.42424242424242425 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.27272727272727276].
2023-08-23 08:00:17,042 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5050505050505051, momentum=0.5858585858585859 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.33333333333333337 ,rho=0.6565656565656566 ,epsilon=0.0009797979818181818 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.9292929292929293 ,initial_accumulator_value=0.25252525252525254 ,l1_regularization_strength=0.42424242424242425 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.27272727272727276].
2023-08-23 08:00:18,075 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:00:18,075 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:00:26,953 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.8686868686868687, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.001819 ,use_ema=True ,ema_momentum=0.4545454545454546 ,rho=0.12121212121212122 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.0 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.15151515151515152 ,beta=0.7474747474747475].
2023-08-23 08:00:26,954 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.8686868686868687, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.001819 ,use_ema=True ,ema_momentum=0.4545454545454546 ,rho=0.12121212121212122 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.0 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.15151515151515152 ,beta=0.7474747474747475].
2023-08-23 08:00:31,975 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3434343434343435 ,rho=0.26262626262626265 ,epsilon=4.040413636363636e-05 ,centered=False ,beta_1=0.0 ,beta_2=0.8484848484848485 ,learning_rate_power=-0.303030303030303 ,initial_accumulator_value=0.6161616161616162 ,l1_regularization_strength=0.43434343434343436 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.6262626262626263].
2023-08-23 08:00:31,975 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3434343434343435 ,rho=0.26262626262626265 ,epsilon=4.040413636363636e-05 ,centered=False ,beta_1=0.0 ,beta_2=0.8484848484848485 ,learning_rate_power=-0.303030303030303 ,initial_accumulator_value=0.6161616161616162 ,l1_regularization_strength=0.43434343434343436 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.6262626262626263].
2023-08-23 08:00:37,315 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:00:37,316 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:00:38,379 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:00:38,380 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:00:52,879 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.31313131313131315, momentum=0.17171717171717174 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.25252525252525254 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.9090909090909092 ,l1_regularization_strength=0.08080808080808081 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.5050505050505051].
2023-08-23 08:00:52,879 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.31313131313131315, momentum=0.17171717171717174 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.25252525252525254 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.9090909090909092 ,l1_regularization_strength=0.08080808080808081 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.5050505050505051].
2023-08-23 08:00:57,551 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:00:57,552 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:00:57,593 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:00:57,593 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:00:59,503 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6262626262626263 ,rho=0.6565656565656566 ,epsilon=0.0005656566090909091 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.11111111111111105 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.9595959595959597].
2023-08-23 08:00:59,504 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6262626262626263 ,rho=0.6565656565656566 ,epsilon=0.0005656566090909091 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.11111111111111105 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.9595959595959597].
2023-08-23 08:01:17,494 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:01:17,494 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:01:18,530 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:01:18,531 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:01:24,992 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:01:24,992 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:01:30,185 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:01:30,185 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:01:38,309 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:01:38,309 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:01:58,295 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:01:58,295 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:02:17,189 INFO: Applying selection operators for generation 38.
2023-08-23 08:02:17,190 INFO: Applying genetic operators for generation 38.
2023-08-23 08:02:17,193 INFO: Evaluating fitness for for generation 38.
2023-08-23 08:02:17,193 INFO: Will evaluate fitness for 36 individuals.
2023-08-23 08:02:17,746 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7373737373737375 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.5252525252525253].
2023-08-23 08:02:17,746 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.7373737373737375 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.5252525252525253].
2023-08-23 08:02:17,776 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:02:17,776 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:02:17,800 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.30303030303030304 ,epsilon=0.0004242424818181818 ,centered=True ,beta_1=0.5151515151515152 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:02:17,800 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.30303030303030304 ,epsilon=0.0004242424818181818 ,centered=True ,beta_1=0.5151515151515152 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:02:17,804 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:02:17,805 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:02:37,931 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.5151515151515152, momentum=0.7171717171717172 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.37373737373737376 ,learning_rate_power=-0.2929292929292928 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:02:37,931 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.5151515151515152, momentum=0.7171717171717172 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.37373737373737376 ,learning_rate_power=-0.2929292929292928 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:02:38,020 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:02:38,020 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:02:41,697 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:02:41,697 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:02:54,629 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:02:54,629 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:02:58,300 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.5151515151515152, momentum=0.18181818181818182 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.15151515151515152 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.27272727272727276 ,beta_2=0.8484848484848485 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.33333333333333337 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8282828282828284 ,beta=0.9090909090909092].
2023-08-23 08:02:58,300 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.5151515151515152, momentum=0.18181818181818182 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.15151515151515152 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.27272727272727276 ,beta_2=0.8484848484848485 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.33333333333333337 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8282828282828284 ,beta=0.9090909090909092].
2023-08-23 08:03:02,632 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:03:02,633 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:03:02,760 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:03:02,760 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:03:16,280 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:03:16,281 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:03:23,135 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.005859000000000001 ,use_ema=True ,ema_momentum=0.8282828282828284 ,rho=0.6161616161616162 ,epsilon=0.0007171717454545454 ,centered=True ,beta_1=0.22222222222222224 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.8787878787878789 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.7474747474747475].
2023-08-23 08:03:23,135 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.005859000000000001 ,use_ema=True ,ema_momentum=0.8282828282828284 ,rho=0.6161616161616162 ,epsilon=0.0007171717454545454 ,centered=True ,beta_1=0.22222222222222224 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.8787878787878789 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.7474747474747475].
2023-08-23 08:03:23,201 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.8585858585858587, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.30303030303030304 ,rho=0.6363636363636365 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.43434343434343425 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.07070707070707072].
2023-08-23 08:03:23,202 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.8585858585858587, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.30303030303030304 ,rho=0.6363636363636365 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.43434343434343425 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.07070707070707072].
2023-08-23 08:03:24,543 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:03:24,544 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:03:36,345 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.686868686868687 ,rho=0.6565656565656566 ,epsilon=0.0008080808272727272 ,centered=True ,beta_1=0.6666666666666667 ,beta_2=0.19191919191919193 ,learning_rate_power=-0.6464646464646464 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.7474747474747475].
2023-08-23 08:03:36,345 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.686868686868687 ,rho=0.6565656565656566 ,epsilon=0.0008080808272727272 ,centered=True ,beta_1=0.6666666666666667 ,beta_2=0.19191919191919193 ,learning_rate_power=-0.6464646464646464 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.7474747474747475].
2023-08-23 08:03:44,903 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00015151523636363636 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.9696969696969697].
2023-08-23 08:03:44,904 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00015151523636363636 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.9696969696969697].
2023-08-23 08:03:49,318 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0006070000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9494949494949496 ,epsilon=0.00044444449999999996 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.98989898989899 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.020202020202020204 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.8787878787878789].
2023-08-23 08:03:49,319 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0006070000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9494949494949496 ,epsilon=0.00044444449999999996 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.98989898989899 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.020202020202020204 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.8787878787878789].
2023-08-23 08:03:50,024 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0002121212909090909 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.5757575757575758 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.27272727272727276].
2023-08-23 08:03:50,024 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0002121212909090909 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.5757575757575758 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.27272727272727276].
2023-08-23 08:04:01,606 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:04:01,606 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:04:09,403 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.5353535353535354, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0067680000000000014 ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.6565656565656566 ,epsilon=0.0005555556 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.12121212121212122 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.696969696969697 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.98989898989899].
2023-08-23 08:04:09,404 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.5353535353535354, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0067680000000000014 ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.6565656565656566 ,epsilon=0.0005555556 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.12121212121212122 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.696969696969697 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.98989898989899].
2023-08-23 08:04:10,208 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:04:10,208 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:04:22,656 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:04:22,656 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:04:26,884 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6161616161616162 ,rho=0.04040404040404041 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:04:26,885 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6161616161616162 ,rho=0.04040404040404041 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:04:31,367 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6161616161616162, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.004344000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0006565656909090909 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9595959595959597 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.7474747474747475].
2023-08-23 08:04:31,367 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6161616161616162, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.004344000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0006565656909090909 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9595959595959597 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.7474747474747475].
2023-08-23 08:04:43,638 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:04:43,638 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:04:47,129 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:04:47,130 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:04:53,361 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:04:53,362 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:04:57,708 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.11111111111111112 ,epsilon=0.0007070707363636364 ,centered=True ,beta_1=0.36363636363636365 ,beta_2=0.5656565656565657 ,learning_rate_power=-0.1717171717171716 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.888888888888889].
2023-08-23 08:04:57,708 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.11111111111111112 ,epsilon=0.0007070707363636364 ,centered=True ,beta_1=0.36363636363636365 ,beta_2=0.5656565656565657 ,learning_rate_power=-0.1717171717171716 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.888888888888889].
2023-08-23 08:05:04,027 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.6464646464646465 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.7171717171717172].
2023-08-23 08:05:04,027 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.6464646464646465 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.7171717171717172].
2023-08-23 08:05:07,642 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:05:07,642 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:05:13,682 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.3535353535353536, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.030303030303030304 ,epsilon=0.0008383838545454545 ,centered=True ,beta_1=0.8181818181818182 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.30303030303030304 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.9292929292929294].
2023-08-23 08:05:13,683 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.3535353535353536, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.030303030303030304 ,epsilon=0.0008383838545454545 ,centered=True ,beta_1=0.8181818181818182 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.30303030303030304 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.9292929292929294].
2023-08-23 08:05:23,180 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:05:23,181 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:05:27,900 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=1.0, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.13131313131313133 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.393939393939394 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.9393939393939394 ,l1_regularization_strength=0.33333333333333337 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.7474747474747475].
2023-08-23 08:05:27,900 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=1.0, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.13131313131313133 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.393939393939394 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.9393939393939394 ,l1_regularization_strength=0.33333333333333337 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.7474747474747475].
2023-08-23 08:05:29,134 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:05:29,134 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:05:38,533 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4040404040404041 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.22222222222222224 ,beta_2=0.98989898989899 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9797979797979799 ,beta=0.020202020202020204].
2023-08-23 08:05:38,533 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4040404040404041 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.22222222222222224 ,beta_2=0.98989898989899 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9797979797979799 ,beta=0.020202020202020204].
2023-08-23 08:05:58,024 INFO: Applying selection operators for generation 39.
2023-08-23 08:05:58,025 INFO: Applying genetic operators for generation 39.
2023-08-23 08:05:58,029 INFO: Evaluating fitness for for generation 39.
2023-08-23 08:05:58,029 INFO: Will evaluate fitness for 43 individuals.
2023-08-23 08:05:58,586 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6565656565656566 ,rho=0.6565656565656566 ,epsilon=0.0005353535818181818 ,centered=False ,beta_1=0.27272727272727276 ,beta_2=0.5757575757575758 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.05050505050505051 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.32323232323232326].
2023-08-23 08:05:58,587 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6565656565656566 ,rho=0.6565656565656566 ,epsilon=0.0005353535818181818 ,centered=False ,beta_1=0.27272727272727276 ,beta_2=0.5757575757575758 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.05050505050505051 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.32323232323232326].
2023-08-23 08:05:58,610 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:05:58,610 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:05:58,622 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:05:58,622 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:05:58,625 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.31313131313131315, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0007080000000000002 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.31313131313131315 ,beta_2=0.0 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.38383838383838387 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.7474747474747475].
2023-08-23 08:05:58,625 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.31313131313131315, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0007080000000000002 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.31313131313131315 ,beta_2=0.0 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.38383838383838387 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.7474747474747475].
2023-08-23 08:06:19,460 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.10101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.006364000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5252525252525253 ,beta_2=0.0 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.6161616161616162 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.5151515151515152].
2023-08-23 08:06:19,460 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.10101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.006364000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5252525252525253 ,beta_2=0.0 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.6161616161616162 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.5151515151515152].
2023-08-23 08:06:19,694 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:06:19,694 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:06:23,768 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:06:23,769 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:06:25,015 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5656565656565657, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.30303030303030304 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.7474747474747475].
2023-08-23 08:06:25,015 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5656565656565657, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.30303030303030304 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.7474747474747475].
2023-08-23 08:06:39,764 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.17171717171717174 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=1.0 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.7474747474747475].
2023-08-23 08:06:39,764 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.17171717171717174 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=1.0 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.7474747474747475].
2023-08-23 08:06:44,169 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.8181818181818182 ,beta_2=0.13131313131313133 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.6161616161616162 ,l1_regularization_strength=0.9797979797979799 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.7474747474747475].
2023-08-23 08:06:44,170 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.8181818181818182 ,beta_2=0.13131313131313133 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.6161616161616162 ,l1_regularization_strength=0.9797979797979799 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.7474747474747475].
2023-08-23 08:06:45,363 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.27272727272727276 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.8585858585858587 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:06:45,363 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.27272727272727276 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.8585858585858587 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:06:46,361 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.5555555555555556, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.6565656565656566 ,epsilon=0.000454545509090909 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.24242424242424232 ,initial_accumulator_value=0.6464646464646465 ,l1_regularization_strength=0.7474747474747475 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.7474747474747475].
2023-08-23 08:06:46,362 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.5555555555555556, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.6565656565656566 ,epsilon=0.000454545509090909 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.24242424242424232 ,initial_accumulator_value=0.6464646464646465 ,l1_regularization_strength=0.7474747474747475 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.7474747474747475].
2023-08-23 08:06:59,893 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.000506 ,use_ema=True ,ema_momentum=0.22222222222222224 ,rho=0.48484848484848486 ,epsilon=0.0007575757818181818 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.6464646464646464 ,initial_accumulator_value=0.12121212121212122 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=0.7474747474747475].
2023-08-23 08:06:59,893 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.000506 ,use_ema=True ,ema_momentum=0.22222222222222224 ,rho=0.48484848484848486 ,epsilon=0.0007575757818181818 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.6464646464646464 ,initial_accumulator_value=0.12121212121212122 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=0.7474747474747475].
2023-08-23 08:07:03,606 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:07:03,607 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:07:04,825 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0.08080808080808081 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:07:04,825 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0.08080808080808081 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:07:10,819 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:07:10,819 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:07:23,799 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:07:23,800 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:07:25,663 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:07:25,663 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:07:29,691 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:07:29,691 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:07:31,011 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:07:31,011 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:07:44,673 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:07:44,674 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:07:46,329 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:07:46,329 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:07:50,555 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.5151515151515152, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.36363636363636365 ,epsilon=0.0005959596363636363 ,centered=True ,beta_1=0.3535353535353536 ,beta_2=0.9393939393939394 ,learning_rate_power=-0.3232323232323232 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.30303030303030304 ,beta=0.7474747474747475].
2023-08-23 08:07:50,556 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.5151515151515152, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.36363636363636365 ,epsilon=0.0005959596363636363 ,centered=True ,beta_1=0.3535353535353536 ,beta_2=0.9393939393939394 ,learning_rate_power=-0.3232323232323232 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.30303030303030304 ,beta=0.7474747474747475].
2023-08-23 08:07:52,062 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:07:52,062 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:08:04,946 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.26262626262626265, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0021220000000000006 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6060606060606061 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.24242424242424232 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.7474747474747475].
2023-08-23 08:08:04,946 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.26262626262626265, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0021220000000000006 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6060606060606061 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.24242424242424232 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.7474747474747475].
2023-08-23 08:08:06,588 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.26262626262626265, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.010101010101010102 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.13131313131313133 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.6363636363636365].
2023-08-23 08:08:06,589 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.26262626262626265, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.010101010101010102 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.13131313131313133 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.6363636363636365].
2023-08-23 08:08:12,515 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:08:12,515 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:08:15,635 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:08:15,635 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:08:30,682 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:08:30,682 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:08:32,083 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.787878787878788, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.787878787878788 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.7474747474747475].
2023-08-23 08:08:32,083 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.787878787878788, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.787878787878788 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.7474747474747475].
2023-08-23 08:08:32,773 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:08:32,773 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:08:35,858 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.36363636363636365 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5858585858585859 ,beta_2=0.0 ,learning_rate_power=-0.3232323232323232 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:08:35,858 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.36363636363636365 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5858585858585859 ,beta_2=0.0 ,learning_rate_power=-0.3232323232323232 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:08:50,822 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:08:50,822 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:08:52,103 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:08:52,104 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:08:52,940 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:08:52,940 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:09:01,286 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:09:01,286 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:09:11,752 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:09:11,752 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:09:12,933 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:09:12,933 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:09:13,564 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:09:13,565 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:09:32,077 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.5151515151515151 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.5656565656565657].
2023-08-23 08:09:32,077 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.5151515151515151 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.5656565656565657].
2023-08-23 08:09:33,054 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.05050505050505051 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.7474747474747475].
2023-08-23 08:09:33,055 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.05050505050505051 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.7474747474747475].
2023-08-23 08:09:52,022 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7575757575757577, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5353535353535354 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.8787878787878789].
2023-08-23 08:09:52,022 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7575757575757577, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5353535353535354 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.8787878787878789].
2023-08-23 08:09:57,696 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.22222222222222224, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5353535353535354 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.20202020202020204 ,beta_2=0.20202020202020204 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:09:57,696 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.22222222222222224, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5353535353535354 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.20202020202020204 ,beta_2=0.20202020202020204 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:10:22,051 INFO: Applying selection operators for generation 40.
2023-08-23 08:10:22,052 INFO: Applying genetic operators for generation 40.
2023-08-23 08:10:22,056 INFO: Evaluating fitness for for generation 40.
2023-08-23 08:10:22,056 INFO: Will evaluate fitness for 45 individuals.
2023-08-23 08:10:22,631 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.030303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0035360000000000005 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0008282828454545454 ,centered=True ,beta_1=0.27272727272727276 ,beta_2=0.0 ,learning_rate_power=-0.33333333333333326 ,initial_accumulator_value=0.4444444444444445 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:10:22,631 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.030303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0035360000000000005 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0008282828454545454 ,centered=True ,beta_1=0.27272727272727276 ,beta_2=0.0 ,learning_rate_power=-0.33333333333333326 ,initial_accumulator_value=0.4444444444444445 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:10:22,635 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.12121212121212122, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=1e-06 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0006060606454545455 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.5353535353535354].
2023-08-23 08:10:22,635 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.12121212121212122, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=1e-06 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0006060606454545455 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.5353535353535354].
2023-08-23 08:10:22,640 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.5151515151515152, momentum=0.4747474747474748 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0009292929363636363 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.8282828282828284 ,learning_rate_power=-0.13131313131313127 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.5656565656565657].
2023-08-23 08:10:22,641 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.5151515151515152, momentum=0.4747474747474748 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0009292929363636363 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.8282828282828284 ,learning_rate_power=-0.13131313131313127 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.5656565656565657].
2023-08-23 08:10:22,645 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:10:22,645 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:10:43,596 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:10:43,596 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:10:46,786 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:10:46,786 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:10:47,643 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:10:47,643 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:10:48,560 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.7171717171717172 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.7474747474747475].
2023-08-23 08:10:48,560 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.7171717171717172 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.7474747474747475].
2023-08-23 08:11:03,966 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:11:03,966 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:11:07,559 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:11:07,560 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:11:07,736 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:11:07,737 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:11:08,283 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0024250000000000005 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0004848485363636363 ,centered=False ,beta_1=0.5858585858585859 ,beta_2=0.7777777777777778 ,learning_rate_power=-0.10101010101010088 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.12121212121212122 ,beta=0.32323232323232326].
2023-08-23 08:11:08,283 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0024250000000000005 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0004848485363636363 ,centered=False ,beta_1=0.5858585858585859 ,beta_2=0.7777777777777778 ,learning_rate_power=-0.10101010101010088 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.12121212121212122 ,beta=0.32323232323232326].
2023-08-23 08:11:24,280 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9797979797979799 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:11:24,280 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9797979797979799 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:11:27,569 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:11:27,570 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:11:27,806 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:11:27,806 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:11:33,583 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.5858585858585859, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.20202020202020204 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.08080808080808081 ,beta_2=0.0 ,learning_rate_power=-0.050505050505050386 ,initial_accumulator_value=0.9494949494949496 ,l1_regularization_strength=0.9191919191919192 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.5252525252525253].
2023-08-23 08:11:33,583 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.5858585858585859, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.20202020202020204 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.08080808080808081 ,beta_2=0.0 ,learning_rate_power=-0.050505050505050386 ,initial_accumulator_value=0.9494949494949496 ,l1_regularization_strength=0.9191919191919192 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.5252525252525253].
2023-08-23 08:11:47,521 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:11:47,522 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:11:48,719 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:11:48,719 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:11:49,855 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:11:49,856 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:11:59,090 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:11:59,091 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:12:07,523 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:12:07,523 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:12:08,911 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.494949494949495, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.26262626262626265 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.14141414141414144 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9191919191919192 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.494949494949495].
2023-08-23 08:12:08,912 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.494949494949495, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.26262626262626265 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.14141414141414144 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9191919191919192 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.494949494949495].
2023-08-23 08:12:10,833 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:12:10,834 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:12:19,550 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.32323232323232326 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.25252525252525254 ,rho=0.7070707070707072 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.06060606060606061].
2023-08-23 08:12:19,550 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.32323232323232326 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.25252525252525254 ,rho=0.7070707070707072 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.06060606060606061].
2023-08-23 08:12:28,090 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.37373737373737376, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7777777777777778 ,rho=0.6565656565656566 ,epsilon=0.0005858586272727272 ,centered=True ,beta_1=0.8989898989898991 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.6161616161616162 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.30303030303030304 ,beta=0.7474747474747475].
2023-08-23 08:12:28,091 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.37373737373737376, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7777777777777778 ,rho=0.6565656565656566 ,epsilon=0.0005858586272727272 ,centered=True ,beta_1=0.8989898989898991 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.6161616161616162 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.30303030303030304 ,beta=0.7474747474747475].
2023-08-23 08:12:28,967 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:12:28,967 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:12:31,264 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:12:31,264 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:12:44,283 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:12:44,283 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:12:49,812 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:12:49,812 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:12:51,743 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6262626262626263, momentum=0.18181818181818182 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.0 ,rho=0.5050505050505051 ,epsilon=1.010110909090909e-05 ,centered=True ,beta_1=0.5858585858585859 ,beta_2=0.3434343434343435 ,learning_rate_power=-0.3232323232323232 ,initial_accumulator_value=0.25252525252525254 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.32323232323232326].
2023-08-23 08:12:51,744 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6262626262626263, momentum=0.18181818181818182 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.0 ,rho=0.5050505050505051 ,epsilon=1.010110909090909e-05 ,centered=True ,beta_1=0.5858585858585859 ,beta_2=0.3434343434343435 ,learning_rate_power=-0.3232323232323232 ,initial_accumulator_value=0.25252525252525254 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.32323232323232326].
2023-08-23 08:12:53,819 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.08080808080808081 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:12:53,820 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.08080808080808081 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:13:04,454 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:13:04,454 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:13:10,027 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5353535353535354, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.5858585858585859 ,epsilon=0.0007171717454545454 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.494949494949495 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:13:10,027 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5353535353535354, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.5858585858585859 ,epsilon=0.0007171717454545454 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.494949494949495 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:13:13,916 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:13:13,916 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:13:16,538 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.36363636363636365 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:13:16,539 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.36363636363636365 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:13:25,683 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8585858585858587 ,rho=0.6565656565656566 ,epsilon=0.0009191919272727272 ,centered=False ,beta_1=0.5656565656565657 ,beta_2=0.0 ,learning_rate_power=-0.8383838383838383 ,initial_accumulator_value=0.7474747474747475 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.8787878787878789].
2023-08-23 08:13:25,683 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8585858585858587 ,rho=0.6565656565656566 ,epsilon=0.0009191919272727272 ,centered=False ,beta_1=0.5656565656565657 ,beta_2=0.0 ,learning_rate_power=-0.8383838383838383 ,initial_accumulator_value=0.7474747474747475 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.8787878787878789].
2023-08-23 08:13:35,468 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.27272727272727276 ,rho=0.4141414141414142 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.6464646464646465 ,beta_2=0.15151515151515152 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.8787878787878789].
2023-08-23 08:13:35,468 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.27272727272727276 ,rho=0.4141414141414142 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.6464646464646465 ,beta_2=0.15151515151515152 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.8787878787878789].
2023-08-23 08:13:39,054 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9797979797979799 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4141414141414142 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8585858585858587 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.31313131313131315].
2023-08-23 08:13:39,054 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9797979797979799 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4141414141414142 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8585858585858587 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.31313131313131315].
2023-08-23 08:13:42,153 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:13:42,153 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:13:58,501 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:13:58,501 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:14:00,495 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.19191919191919193 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.05050505050505051 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.7474747474747475].
2023-08-23 08:14:00,495 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.19191919191919193 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.05050505050505051 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.7474747474747475].
2023-08-23 08:14:03,260 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.26262626262626265 ,epsilon=0.000454545509090909 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.4141414141414142].
2023-08-23 08:14:03,260 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.26262626262626265 ,epsilon=0.000454545509090909 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.4141414141414142].
2023-08-23 08:14:18,530 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:14:18,530 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:14:25,291 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.00030400000000000007 ,use_ema=True ,ema_momentum=0.25252525252525254 ,rho=0.32323232323232326 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.010101010101010102 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.7474747474747475].
2023-08-23 08:14:25,291 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.00030400000000000007 ,use_ema=True ,ema_momentum=0.25252525252525254 ,rho=0.32323232323232326 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.010101010101010102 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.7474747474747475].
2023-08-23 08:14:28,772 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:14:28,773 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:14:51,185 INFO: Applying selection operators for generation 41.
2023-08-23 08:14:51,185 INFO: Applying genetic operators for generation 41.
2023-08-23 08:14:51,189 INFO: Evaluating fitness for for generation 41.
2023-08-23 08:14:51,189 INFO: Will evaluate fitness for 45 individuals.
2023-08-23 08:14:51,742 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:14:51,742 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:14:51,750 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7777777777777778, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.05050505050505051 ,rho=0.8181818181818182 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.12121212121212122 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4040404040404041 ,l1_regularization_strength=0.33333333333333337 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.7474747474747475].
2023-08-23 08:14:51,751 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7777777777777778, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.05050505050505051 ,rho=0.8181818181818182 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.12121212121212122 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4040404040404041 ,l1_regularization_strength=0.33333333333333337 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.7474747474747475].
2023-08-23 08:14:51,752 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.98989898989899 ,epsilon=0.0003333334 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.9292929292929294 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5252525252525253 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.7474747474747475].
2023-08-23 08:14:51,752 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.98989898989899 ,epsilon=0.0003333334 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.9292929292929294 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5252525252525253 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.7474747474747475].
2023-08-23 08:14:51,861 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:14:51,861 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:15:11,598 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.7474747474747475].
2023-08-23 08:15:11,598 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.7474747474747475].
2023-08-23 08:15:12,228 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:15:12,228 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:15:17,390 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9797979797979799 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:15:17,391 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9797979797979799 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:15:17,459 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:15:17,459 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:15:32,313 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8383838383838385 ,rho=0.7676767676767677 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.06060606060606055 ,initial_accumulator_value=0.5555555555555556 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.686868686868687].
2023-08-23 08:15:32,313 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8383838383838385 ,rho=0.7676767676767677 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.06060606060606055 ,initial_accumulator_value=0.5555555555555556 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.686868686868687].
2023-08-23 08:15:33,444 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9797979797979799 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:15:33,444 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9797979797979799 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:15:37,563 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:15:37,563 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:15:43,797 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:15:43,797 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:15:57,708 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8383838383838385, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.7272727272727273].
2023-08-23 08:15:57,709 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8383838383838385, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.7272727272727273].
2023-08-23 08:15:57,789 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:15:57,790 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:15:59,615 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:15:59,615 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:16:04,399 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.5151515151515152, momentum=0.20202020202020204 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.05050505050505051 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.24242424242424243 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.696969696969697 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.7575757575757577].
2023-08-23 08:16:04,399 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.5151515151515152, momentum=0.20202020202020204 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.05050505050505051 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.24242424242424243 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.696969696969697 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.7575757575757577].
2023-08-23 08:16:17,782 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.8585858585858587, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.7272727272727273 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.24242424242424243 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.030303030303030304 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.595959595959596].
2023-08-23 08:16:17,783 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.8585858585858587, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.7272727272727273 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.24242424242424243 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.030303030303030304 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.595959595959596].
2023-08-23 08:16:18,512 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:16:18,512 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:16:20,005 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5858585858585859 ,epsilon=0.0006868687181818181 ,centered=False ,beta_1=0.8282828282828284 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.5757575757575758 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.7474747474747475].
2023-08-23 08:16:20,005 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5858585858585859 ,epsilon=0.0006868687181818181 ,centered=False ,beta_1=0.8282828282828284 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.5757575757575758 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.7474747474747475].
2023-08-23 08:16:29,818 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:16:29,819 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:16:38,619 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:16:38,619 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:16:42,760 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.494949494949495, momentum=0.24242424242424243 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.696969696969697 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.14141414141414144 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.6565656565656566 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.31313131313131315 ,beta=0.8383838383838385].
2023-08-23 08:16:42,760 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.494949494949495, momentum=0.24242424242424243 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.696969696969697 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.14141414141414144 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.6565656565656566 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.31313131313131315 ,beta=0.8383838383838385].
2023-08-23 08:16:55,771 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:16:55,771 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:16:57,831 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9797979797979799 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:16:57,831 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9797979797979799 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:16:58,822 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:16:58,822 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:17:02,140 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.5151515151515152, momentum=0.21212121212121213 ,nesterov=True ,amsgrad=False ,weight_decay=0.005051000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.4545454545454546 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5353535353535354 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=1.0].
2023-08-23 08:17:02,140 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.5151515151515152, momentum=0.21212121212121213 ,nesterov=True ,amsgrad=False ,weight_decay=0.005051000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.4545454545454546 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5353535353535354 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=1.0].
2023-08-23 08:17:16,493 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9797979797979799 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:17:16,494 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9797979797979799 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:17:18,829 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:17:18,829 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:17:18,938 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:17:18,938 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:17:22,057 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.12121212121212122, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=1e-06 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.5353535353535354].
2023-08-23 08:17:22,057 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.12121212121212122, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=1e-06 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.5353535353535354].
2023-08-23 08:17:36,934 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.888888888888889 ,beta_2=0.0 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:17:36,934 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.030303030303030304 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.888888888888889 ,beta_2=0.0 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:17:39,198 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:17:39,198 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:17:39,545 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:17:39,546 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:17:42,867 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0006060606454545455 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:17:42,867 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0006060606454545455 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:17:59,791 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.5151515151515152 ,rho=0.6565656565656566 ,epsilon=0.0005050505545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.11111111111111105 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.686868686868687].
2023-08-23 08:17:59,791 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.5151515151515152 ,rho=0.6565656565656566 ,epsilon=0.0005050505545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.11111111111111105 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.686868686868687].
2023-08-23 08:18:02,735 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0.6464646464646465 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.6565656565656566 ,epsilon=0.00032323239090909086 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.3535353535353535 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.14141414141414144 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.10101010101010102].
2023-08-23 08:18:02,736 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0.6464646464646465 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.6565656565656566 ,epsilon=0.00032323239090909086 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.3535353535353535 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.14141414141414144 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.10101010101010102].
2023-08-23 08:18:04,243 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.006061000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0004242424818181818 ,centered=False ,beta_1=0.6565656565656566 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.686868686868687].
2023-08-23 08:18:04,243 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.006061000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0004242424818181818 ,centered=False ,beta_1=0.6565656565656566 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.686868686868687].
2023-08-23 08:18:08,686 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.29292929292929293, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.4747474747474748 ,epsilon=0.0007777778 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.5252525252525253 ,learning_rate_power=-0.3232323232323232 ,initial_accumulator_value=0.27272727272727276 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.6565656565656566].
2023-08-23 08:18:08,686 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.29292929292929293, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.4747474747474748 ,epsilon=0.0007777778 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.5252525252525253 ,learning_rate_power=-0.3232323232323232 ,initial_accumulator_value=0.27272727272727276 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.6565656565656566].
2023-08-23 08:18:23,554 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:18:23,554 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:18:23,894 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7070707070707072, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.686868686868687 ,rho=0.17171717171717174 ,epsilon=0.00026262633636363634 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.5757575757575758 ,learning_rate_power=-0.7777777777777778 ,initial_accumulator_value=0.9696969696969697 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.7474747474747475].
2023-08-23 08:18:23,894 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7070707070707072, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.686868686868687 ,rho=0.17171717171717174 ,epsilon=0.00026262633636363634 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.5757575757575758 ,learning_rate_power=-0.7777777777777778 ,initial_accumulator_value=0.9696969696969697 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.7474747474747475].
2023-08-23 08:18:44,583 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9797979797979799 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:18:44,584 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9797979797979799 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:18:47,463 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:18:47,463 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:18:48,654 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:18:48,654 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:19:04,810 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:19:04,810 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:19:08,285 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.6565656565656566, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8282828282828284 ,rho=0.6565656565656566 ,epsilon=0.0005353535818181818 ,centered=False ,beta_1=0.7777777777777778 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.7474747474747475].
2023-08-23 08:19:08,285 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.6565656565656566, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8282828282828284 ,rho=0.6565656565656566 ,epsilon=0.0005353535818181818 ,centered=False ,beta_1=0.7777777777777778 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.7474747474747475].
2023-08-23 08:19:45,330 INFO: Applying selection operators for generation 42.
2023-08-23 08:19:45,331 INFO: Applying genetic operators for generation 42.
2023-08-23 08:19:45,334 INFO: Evaluating fitness for for generation 42.
2023-08-23 08:19:45,334 INFO: Will evaluate fitness for 41 individuals.
2023-08-23 08:19:45,884 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9797979797979799 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:19:45,885 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9797979797979799 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:19:45,890 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9797979797979799 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.5757575757575758 ,learning_rate_power=-0.7777777777777778 ,initial_accumulator_value=0.9696969696969697 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.7474747474747475].
2023-08-23 08:19:45,891 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9797979797979799 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.5757575757575758 ,learning_rate_power=-0.7777777777777778 ,initial_accumulator_value=0.9696969696969697 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.7474747474747475].
2023-08-23 08:19:46,026 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.686868686868687 ,rho=0.17171717171717174 ,epsilon=0.00026262633636363634 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.5757575757575758 ,learning_rate_power=-0.7777777777777778 ,initial_accumulator_value=0.9696969696969697 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:19:46,027 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.686868686868687 ,rho=0.17171717171717174 ,epsilon=0.00026262633636363634 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.5757575757575758 ,learning_rate_power=-0.7777777777777778 ,initial_accumulator_value=0.9696969696969697 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:19:46,041 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:19:46,042 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:20:06,552 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.0, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9191919191919192 ,rho=0.8686868686868687 ,epsilon=0.0003939394545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.3434343434343435 ,l1_regularization_strength=0.8585858585858587 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.23232323232323235].
2023-08-23 08:20:06,552 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.0, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9191919191919192 ,rho=0.8686868686868687 ,epsilon=0.0003939394545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.3434343434343435 ,l1_regularization_strength=0.8585858585858587 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.23232323232323235].
2023-08-23 08:20:10,839 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7070707070707072, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.7474747474747475].
2023-08-23 08:20:10,839 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7070707070707072, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.7474747474747475].
2023-08-23 08:20:11,440 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.19191919191919193 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.6666666666666667].
2023-08-23 08:20:11,440 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.19191919191919193 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.6666666666666667].
2023-08-23 08:20:11,627 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:20:11,627 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:20:31,751 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:20:31,751 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:20:31,907 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7070707070707072, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.686868686868687 ,rho=0.17171717171717174 ,epsilon=0.00026262633636363634 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:20:31,907 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7070707070707072, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.686868686868687 ,rho=0.17171717171717174 ,epsilon=0.00026262633636363634 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:20:32,277 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0006060606454545455 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:20:32,278 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0006060606454545455 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:20:38,632 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:20:38,633 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:20:52,852 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.888888888888889, momentum=0.09090909090909091 ,nesterov=True ,amsgrad=False ,weight_decay=0.0076770000000000015 ,use_ema=True ,ema_momentum=0.3434343434343435 ,rho=0.6565656565656566 ,epsilon=0.0005050505545454545 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.9494949494949496 ,learning_rate_power=-0.9696969696969697 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.030303030303030304 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.686868686868687].
2023-08-23 08:20:52,853 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.888888888888889, momentum=0.09090909090909091 ,nesterov=True ,amsgrad=False ,weight_decay=0.0076770000000000015 ,use_ema=True ,ema_momentum=0.3434343434343435 ,rho=0.6565656565656566 ,epsilon=0.0005050505545454545 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.9494949494949496 ,learning_rate_power=-0.9696969696969697 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.030303030303030304 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.686868686868687].
2023-08-23 08:20:56,864 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.0 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.26262626262626265 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:20:56,864 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.0 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.797979797979798 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.26262626262626265 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:20:57,050 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:20:57,050 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:21:03,886 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:21:03,886 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:21:17,472 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.25252525252525254 ,rho=0.29292929292929293 ,epsilon=2.020211818181818e-05 ,centered=True ,beta_1=0.7373737373737375 ,beta_2=0.0 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.686868686868687].
2023-08-23 08:21:17,472 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.25252525252525254 ,rho=0.29292929292929293 ,epsilon=2.020211818181818e-05 ,centered=True ,beta_1=0.7373737373737375 ,beta_2=0.0 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.686868686868687].
2023-08-23 08:21:19,140 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.26262626262626265, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.6565656565656566 ,epsilon=0.00032323239090909086 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.14141414141414144 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.10101010101010102].
2023-08-23 08:21:19,141 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.26262626262626265, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.6565656565656566 ,epsilon=0.00032323239090909086 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.14141414141414144 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.10101010101010102].
2023-08-23 08:21:22,540 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0006060606454545455 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:21:22,540 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0006060606454545455 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:21:23,841 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.787878787878788, momentum=0.17171717171717174 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.4747474747474748 ,epsilon=0.0006060606454545455 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.0 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.3434343434343435 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.8787878787878789].
2023-08-23 08:21:23,841 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.787878787878788, momentum=0.17171717171717174 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.4747474747474748 ,epsilon=0.0006060606454545455 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.0 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.3434343434343435 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.8787878787878789].
2023-08-23 08:21:43,638 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007171717454545454 ,centered=True ,beta_1=0.6767676767676768 ,beta_2=0.7676767676767677 ,learning_rate_power=0.0 ,initial_accumulator_value=0.5757575757575758 ,l1_regularization_strength=0.8585858585858587 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.8181818181818182].
2023-08-23 08:21:43,638 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007171717454545454 ,centered=True ,beta_1=0.6767676767676768 ,beta_2=0.7676767676767677 ,learning_rate_power=0.0 ,initial_accumulator_value=0.5757575757575758 ,l1_regularization_strength=0.8585858585858587 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.8181818181818182].
2023-08-23 08:21:44,157 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:21:44,157 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:21:48,381 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0006060606454545455 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:21:48,381 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0006060606454545455 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:21:48,801 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0006060606454545455 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:21:48,801 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0006060606454545455 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:22:05,270 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0006060606454545455 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:22:05,270 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0006060606454545455 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:22:08,714 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.37373737373737376 ,rho=0.6565656565656566 ,epsilon=0.0007171717454545454 ,centered=True ,beta_1=0.4747474747474748 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.7474747474747474 ,initial_accumulator_value=0.696969696969697 ,l1_regularization_strength=0.14141414141414144 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.10101010101010102].
2023-08-23 08:22:08,714 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.37373737373737376 ,rho=0.6565656565656566 ,epsilon=0.0007171717454545454 ,centered=True ,beta_1=0.4747474747474748 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.7474747474747474 ,initial_accumulator_value=0.696969696969697 ,l1_regularization_strength=0.14141414141414144 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.10101010101010102].
2023-08-23 08:22:08,769 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:22:08,770 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:22:09,300 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:22:09,301 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:22:26,039 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.8181818181818182, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.007576000000000001 ,use_ema=True ,ema_momentum=0.21212121212121213 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.2828282828282829 ,beta_2=0.7373737373737375 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.686868686868687 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.7474747474747475].
2023-08-23 08:22:26,039 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.8181818181818182, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.007576000000000001 ,use_ema=True ,ema_momentum=0.21212121212121213 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.2828282828282829 ,beta_2=0.7373737373737375 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.686868686868687 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.7474747474747475].
2023-08-23 08:22:27,126 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6262626262626263, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.005556000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0006060606454545455 ,centered=False ,beta_1=0.38383838383838387 ,beta_2=0.0 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:22:27,127 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6262626262626263, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.005556000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0006060606454545455 ,centered=False ,beta_1=0.38383838383838387 ,beta_2=0.0 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:22:29,089 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0.6464646464646465 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.6565656565656566 ,epsilon=0.00032323239090909086 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.3535353535353535 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.14141414141414144 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.7474747474747475].
2023-08-23 08:22:29,089 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0.6464646464646465 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.6565656565656566 ,epsilon=0.00032323239090909086 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.3535353535353535 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.14141414141414144 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.7474747474747475].
2023-08-23 08:22:29,397 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.5454545454545455, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8787878787878789 ,epsilon=0.0008181818363636363 ,centered=False ,beta_1=0.29292929292929293 ,beta_2=0.4040404040404041 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.7474747474747475].
2023-08-23 08:22:29,397 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.5454545454545455, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8787878787878789 ,epsilon=0.0008181818363636363 ,centered=False ,beta_1=0.29292929292929293 ,beta_2=0.4040404040404041 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.7474747474747475].
2023-08-23 08:22:46,941 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5656565656565657 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.8585858585858587 ,beta_2=0.18181818181818182 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.686868686868687].
2023-08-23 08:22:46,942 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5656565656565657 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.8585858585858587 ,beta_2=0.18181818181818182 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.686868686868687].
2023-08-23 08:22:49,539 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.10101010101010102].
2023-08-23 08:22:49,539 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.10101010101010102].
2023-08-23 08:22:51,797 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9090909090909092, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.686868686868687 ,rho=0.9797979797979799 ,epsilon=0.0009393939454545454 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.48484848484848486 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7373737373737375 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.12121212121212122].
2023-08-23 08:22:51,798 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9090909090909092, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.686868686868687 ,rho=0.9797979797979799 ,epsilon=0.0009393939454545454 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.48484848484848486 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7373737373737375 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.12121212121212122].
2023-08-23 08:22:54,856 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.6565656565656566 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:22:54,857 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.6565656565656566 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-23 08:23:10,724 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0.6464646464646465 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9797979797979799 ,epsilon=0.00032323239090909086 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.3535353535353535 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.14141414141414144 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.10101010101010102].
2023-08-23 08:23:10,724 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0.6464646464646465 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9797979797979799 ,epsilon=0.00032323239090909086 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.3535353535353535 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.14141414141414144 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.10101010101010102].
2023-08-23 08:23:17,843 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:23:17,843 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:23:31,268 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.8787878787878789 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.14141414141414144 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.7474747474747475].
2023-08-23 08:23:31,268 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.8787878787878789 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.14141414141414144 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.7474747474747475].
2023-08-23 08:23:38,875 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:23:38,875 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:23:57,263 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0.6464646464646465 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.6565656565656566 ,epsilon=0.00032323239090909086 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.10101010101010102].
2023-08-23 08:23:57,263 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0.6464646464646465 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.6565656565656566 ,epsilon=0.00032323239090909086 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.10101010101010102].
2023-08-23 08:24:20,922 INFO: Applying selection operators for generation 43.
2023-08-23 08:24:20,923 INFO: Applying genetic operators for generation 43.
2023-08-23 08:24:20,925 INFO: Evaluating fitness for for generation 43.
2023-08-23 08:24:20,925 INFO: Will evaluate fitness for 40 individuals.
2023-08-23 08:24:21,475 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:24:21,475 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:24:21,488 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:24:21,488 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:24:21,502 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:24:21,502 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:24:21,603 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.6565656565656566 ,epsilon=0.00032323239090909086 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.3535353535353535 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:24:21,603 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.6565656565656566 ,epsilon=0.00032323239090909086 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.3535353535353535 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:24:41,241 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:24:41,241 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:24:41,487 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:24:41,487 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:24:42,694 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:24:42,694 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:24:46,637 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:24:46,638 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:25:01,666 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:25:01,666 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:25:03,131 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.010101010101010102, momentum=0.4545454545454546 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5555555555555556 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=False ,beta_1=0.8484848484848485 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.11111111111111112].
2023-08-23 08:25:03,132 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.010101010101010102, momentum=0.4545454545454546 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5555555555555556 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=False ,beta_1=0.8484848484848485 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.11111111111111112].
2023-08-23 08:25:06,887 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0.6464646464646465 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.14141414141414144 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.7474747474747475].
2023-08-23 08:25:06,887 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0.6464646464646465 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.14141414141414144 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.7474747474747475].
2023-08-23 08:25:06,917 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:25:06,918 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:25:22,574 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.13131313131313133, momentum=0.7676767676767677 ,nesterov=True ,amsgrad=True ,weight_decay=0.0045460000000000006 ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.6565656565656566 ,epsilon=0.00032323239090909086 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.5757575757575758 ,learning_rate_power=-0.4545454545454545 ,initial_accumulator_value=0.9696969696969697 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.7474747474747475].
2023-08-23 08:25:22,575 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.13131313131313133, momentum=0.7676767676767677 ,nesterov=True ,amsgrad=True ,weight_decay=0.0045460000000000006 ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.6565656565656566 ,epsilon=0.00032323239090909086 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.5757575757575758 ,learning_rate_power=-0.4545454545454545 ,initial_accumulator_value=0.9696969696969697 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.7474747474747475].
2023-08-23 08:25:23,456 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.4545454545454546 ,rho=0.696969696969697 ,epsilon=0.00032323239090909086 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.3535353535353535 ,initial_accumulator_value=0.8686868686868687 ,l1_regularization_strength=0.14141414141414144 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.10101010101010102].
2023-08-23 08:25:23,456 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.4545454545454546 ,rho=0.696969696969697 ,epsilon=0.00032323239090909086 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.3535353535353535 ,initial_accumulator_value=0.8686868686868687 ,l1_regularization_strength=0.14141414141414144 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.10101010101010102].
2023-08-23 08:25:26,882 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.5151515151515152, momentum=0.8585858585858587 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0006060606454545455 ,centered=True ,beta_1=0.10101010101010102 ,beta_2=0.0 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.21212121212121213 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.21212121212121213].
2023-08-23 08:25:26,883 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.5151515151515152, momentum=0.8585858585858587 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0006060606454545455 ,centered=True ,beta_1=0.10101010101010102 ,beta_2=0.0 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.21212121212121213 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.21212121212121213].
2023-08-23 08:25:27,916 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.020202020202020204, momentum=0.3434343434343435 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.686868686868687 ,rho=0.020202020202020204 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.6565656565656566 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.21212121212121213].
2023-08-23 08:25:27,916 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.020202020202020204, momentum=0.3434343434343435 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.686868686868687 ,rho=0.020202020202020204 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.6565656565656566 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.21212121212121213].
2023-08-23 08:25:41,257 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:25:41,257 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:25:49,211 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0.6464646464646465 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9797979797979799 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.3535353535353535 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.14141414141414144 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.7474747474747475].
2023-08-23 08:25:49,212 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0.6464646464646465 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9797979797979799 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.3535353535353535 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.14141414141414144 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.7474747474747475].
2023-08-23 08:25:51,482 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0009393939454545454 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.48484848484848486 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7373737373737375 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.12121212121212122].
2023-08-23 08:25:51,482 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0009393939454545454 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.48484848484848486 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7373737373737375 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.12121212121212122].
2023-08-23 08:25:53,459 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:25:53,459 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:26:01,569 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:26:01,570 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:26:13,400 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0035360000000000005 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9090909090909092 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.696969696969697 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=1.0].
2023-08-23 08:26:13,400 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0035360000000000005 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9090909090909092 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.696969696969697 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=1.0].
2023-08-23 08:26:14,263 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6565656565656566, momentum=0.6464646464646465 ,nesterov=True ,amsgrad=False ,weight_decay=0.005354000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6464646464646465 ,epsilon=0.0007171717454545454 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8080808080808082 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.7474747474747475].
2023-08-23 08:26:14,263 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6565656565656566, momentum=0.6464646464646465 ,nesterov=True ,amsgrad=False ,weight_decay=0.005354000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6464646464646465 ,epsilon=0.0007171717454545454 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8080808080808082 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.7474747474747475].
2023-08-23 08:26:16,651 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:26:16,651 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:26:27,665 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:26:27,665 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:26:36,965 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:26:36,965 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:26:40,006 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:26:40,006 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:26:40,622 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:26:40,622 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:26:48,076 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:26:48,076 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:26:57,242 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:26:57,242 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:27:00,139 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:27:00,140 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:27:01,635 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:27:01,636 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:27:08,488 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:27:08,488 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:27:18,233 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:27:18,233 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:27:20,088 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:27:20,088 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:27:21,951 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.004950000000000001 ,use_ema=False ,ema_momentum=0.9292929292929294 ,rho=0.696969696969697 ,epsilon=0.0005656566090909091 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.8383838383838383 ,initial_accumulator_value=0.9090909090909092 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.4141414141414142].
2023-08-23 08:27:21,952 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.004950000000000001 ,use_ema=False ,ema_momentum=0.9292929292929294 ,rho=0.696969696969697 ,epsilon=0.0005656566090909091 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.8383838383838383 ,initial_accumulator_value=0.9090909090909092 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.4141414141414142].
2023-08-23 08:27:28,882 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:27:28,882 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:27:38,617 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:27:38,618 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:27:50,095 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:27:50,095 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:28:10,165 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:28:10,165 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:28:29,560 INFO: Applying selection operators for generation 44.
2023-08-23 08:28:29,560 INFO: Applying genetic operators for generation 44.
2023-08-23 08:28:29,564 INFO: Evaluating fitness for for generation 44.
2023-08-23 08:28:29,564 INFO: Will evaluate fitness for 42 individuals.
2023-08-23 08:28:30,159 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.2828282828282829, momentum=0.17171717171717174 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0009494949545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.02020202020202011 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6767676767676768 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.15151515151515152 ,beta=0.686868686868687].
2023-08-23 08:28:30,160 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.2828282828282829, momentum=0.17171717171717174 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0009494949545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.02020202020202011 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6767676767676768 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.15151515151515152 ,beta=0.686868686868687].
2023-08-23 08:28:30,183 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:28:30,183 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:28:30,277 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:28:30,278 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:28:30,312 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:28:30,312 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:28:50,226 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:28:50,227 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:28:50,968 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:28:50,968 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:28:55,437 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:28:55,438 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:28:55,926 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:28:55,926 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:29:11,176 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:29:11,176 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:29:11,608 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:29:11,608 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:29:15,984 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.26262626262626265, momentum=0.888888888888889 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4747474747474748 ,rho=0.7575757575757577 ,epsilon=0.0009595959636363636 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.5252525252525252 ,initial_accumulator_value=0.030303030303030304 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.98989898989899].
2023-08-23 08:29:15,984 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.26262626262626265, momentum=0.888888888888889 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4747474747474748 ,rho=0.7575757575757577 ,epsilon=0.0009595959636363636 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.5252525252525252 ,initial_accumulator_value=0.030303030303030304 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.98989898989899].
2023-08-23 08:29:21,485 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:29:21,485 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:29:31,382 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:29:31,382 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:29:31,943 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:29:31,943 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:29:41,176 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:29:41,176 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:29:42,124 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0.32323232323232326 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.14141414141414144 ,rho=0.686868686868687 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.030303030303030304 ,learning_rate_power=-0.08080808080808077 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:29:42,125 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0.32323232323232326 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.14141414141414144 ,rho=0.686868686868687 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.030303030303030304 ,learning_rate_power=-0.08080808080808077 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:29:51,654 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:29:51,654 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:29:57,562 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.2828282828282829, momentum=0.8383838383838385 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.15151515151515152 ,epsilon=0.00031313138181818175 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.08080808080808077 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.686868686868687].
2023-08-23 08:29:57,562 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.2828282828282829, momentum=0.8383838383838385 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.15151515151515152 ,epsilon=0.00031313138181818175 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.08080808080808077 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.686868686868687].
2023-08-23 08:30:01,123 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=1.0, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00024242431818181817 ,centered=True ,beta_1=0.5757575757575758 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.3434343434343435].
2023-08-23 08:30:01,124 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=1.0, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00024242431818181817 ,centered=True ,beta_1=0.5757575757575758 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.3434343434343435].
2023-08-23 08:30:07,245 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.21212121212121213, momentum=0.4444444444444445 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=1.0 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.393939393939394 ,beta_2=0.29292929292929293 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6161616161616162 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.888888888888889].
2023-08-23 08:30:07,245 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.21212121212121213, momentum=0.4444444444444445 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=1.0 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.393939393939394 ,beta_2=0.29292929292929293 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6161616161616162 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.888888888888889].
2023-08-23 08:30:11,834 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:30:11,834 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:30:22,831 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.494949494949495 ,epsilon=7.070716363636363e-05 ,centered=False ,beta_1=0.8282828282828284 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.5656565656565657 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:30:22,831 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.494949494949495 ,epsilon=7.070716363636363e-05 ,centered=False ,beta_1=0.8282828282828284 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.5656565656565657 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:30:27,058 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:30:27,058 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:30:32,158 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:30:32,159 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:30:37,660 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0.4747474747474748 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0006868687181818181 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.888888888888889 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:30:37,660 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0.4747474747474748 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0006868687181818181 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.888888888888889 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:30:47,300 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:30:47,300 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:30:48,254 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:30:48,254 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:30:53,193 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:30:53,193 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:31:02,266 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:31:02,266 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:31:07,296 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.9090909090909092, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0076770000000000015 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.8181818181818182 ,epsilon=4.040413636363636e-05 ,centered=True ,beta_1=0.9696969696969697 ,beta_2=0.5656565656565657 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:31:07,296 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.9090909090909092, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0076770000000000015 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.8181818181818182 ,epsilon=4.040413636363636e-05 ,centered=True ,beta_1=0.9696969696969697 ,beta_2=0.5656565656565657 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:31:08,843 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:31:08,843 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:31:13,624 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:31:13,624 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:31:22,548 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.8080808080808082, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.06060606060606061 ,epsilon=0.0003737374363636363 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.696969696969697 ,initial_accumulator_value=0.22222222222222224 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.686868686868687].
2023-08-23 08:31:22,549 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.8080808080808082, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.06060606060606061 ,epsilon=0.0003737374363636363 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.696969696969697 ,initial_accumulator_value=0.22222222222222224 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.686868686868687].
2023-08-23 08:31:29,347 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.6666666666666667, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.06060606060606061 ,epsilon=0.0006464646818181818 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.4545454545454545 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5151515151515152 ,beta=0.98989898989899].
2023-08-23 08:31:29,347 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.6666666666666667, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.06060606060606061 ,epsilon=0.0006464646818181818 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.4545454545454545 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5151515151515152 ,beta=0.98989898989899].
2023-08-23 08:31:32,225 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:31:32,225 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:31:33,916 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:31:33,917 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:31:47,893 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:31:47,893 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:31:53,047 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:31:53,047 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:32:08,724 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0.5555555555555556 ,nesterov=False ,amsgrad=False ,weight_decay=0.007879 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.030303030303030304 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.17171717171717174 ,l1_regularization_strength=0.6060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.19191919191919193].
2023-08-23 08:32:08,724 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0.5555555555555556 ,nesterov=False ,amsgrad=False ,weight_decay=0.007879 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.030303030303030304 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.17171717171717174 ,l1_regularization_strength=0.6060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.19191919191919193].
2023-08-23 08:32:12,795 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:32:12,795 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:32:29,281 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:32:29,281 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:32:32,599 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.696969696969697, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0009797979818181818 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:32:32,599 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.696969696969697, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0009797979818181818 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:32:58,556 INFO: Applying selection operators for generation 45.
2023-08-23 08:32:58,556 INFO: Applying genetic operators for generation 45.
2023-08-23 08:32:58,560 INFO: Evaluating fitness for for generation 45.
2023-08-23 08:32:58,560 INFO: Will evaluate fitness for 41 individuals.
2023-08-23 08:32:59,116 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:32:59,116 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:32:59,161 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:32:59,161 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:32:59,166 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:32:59,167 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:32:59,264 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0.5555555555555556 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.19191919191919193].
2023-08-23 08:32:59,264 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0.5555555555555556 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.19191919191919193].
2023-08-23 08:33:19,263 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:33:19,263 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:33:20,118 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:33:20,119 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:33:24,934 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:33:24,934 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:33:25,801 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0008090000000000001 ,use_ema=False ,ema_momentum=0.5656565656565657 ,rho=0.6565656565656566 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.5858585858585859 ,beta_2=0.20202020202020204 ,learning_rate_power=-0.6868686868686869 ,initial_accumulator_value=0.9393939393939394 ,l1_regularization_strength=0.7373737373737375 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.27272727272727276].
2023-08-23 08:33:25,801 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0008090000000000001 ,use_ema=False ,ema_momentum=0.5656565656565657 ,rho=0.6565656565656566 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.5858585858585859 ,beta_2=0.20202020202020204 ,learning_rate_power=-0.6868686868686869 ,initial_accumulator_value=0.9393939393939394 ,l1_regularization_strength=0.7373737373737375 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.27272727272727276].
2023-08-23 08:33:40,453 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:33:40,453 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:33:40,471 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:33:40,471 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:33:45,077 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4646464646464647 ,rho=0.6464646464646465 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.5656565656565657 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.686868686868687].
2023-08-23 08:33:45,077 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4646464646464647 ,rho=0.6464646464646465 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.5656565656565657 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.686868686868687].
2023-08-23 08:33:51,046 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.007879 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.030303030303030304 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.17171717171717174 ,l1_regularization_strength=0.6060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:33:51,047 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.007879 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.030303030303030304 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.17171717171717174 ,l1_regularization_strength=0.6060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:34:00,736 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:34:00,736 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:34:00,893 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:34:00,893 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:34:10,630 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:34:10,630 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:34:12,112 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:34:12,112 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:34:20,912 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:34:20,913 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:34:21,044 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:34:21,044 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:34:30,646 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:34:30,646 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:34:32,559 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:34:32,560 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:34:41,113 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.9696969696969697, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.33333333333333337 ,rho=0.797979797979798 ,epsilon=0.00018181826363636362 ,centered=False ,beta_1=0.020202020202020204 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.25252525252525254].
2023-08-23 08:34:41,114 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.9696969696969697, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.33333333333333337 ,rho=0.797979797979798 ,epsilon=0.00018181826363636362 ,centered=False ,beta_1=0.020202020202020204 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.25252525252525254].
2023-08-23 08:34:41,882 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:34:41,883 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:34:53,969 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.010101010101010102, momentum=0.33333333333333337 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8181818181818182 ,rho=0.9292929292929294 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.07070707070707072 ,beta_2=0.686868686868687 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.07070707070707072].
2023-08-23 08:34:53,969 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.010101010101010102, momentum=0.33333333333333337 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8181818181818182 ,rho=0.9292929292929294 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.07070707070707072 ,beta_2=0.686868686868687 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.07070707070707072].
2023-08-23 08:34:55,871 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8686868686868687 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.17171717171717174 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.30303030303030304].
2023-08-23 08:34:55,872 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8686868686868687 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.17171717171717174 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.30303030303030304].
2023-08-23 08:35:02,250 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0011120000000000001 ,use_ema=True ,ema_momentum=0.21212121212121213 ,rho=0.6565656565656566 ,epsilon=0.00017171725454545453 ,centered=True ,beta_1=0.12121212121212122 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.686868686868687 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4646464646464647 ,beta=0.26262626262626265].
2023-08-23 08:35:02,251 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0011120000000000001 ,use_ema=True ,ema_momentum=0.21212121212121213 ,rho=0.6565656565656566 ,epsilon=0.00017171725454545453 ,centered=True ,beta_1=0.12121212121212122 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.686868686868687 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4646464646464647 ,beta=0.26262626262626265].
2023-08-23 08:35:05,817 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0.5555555555555556 ,nesterov=False ,amsgrad=False ,weight_decay=0.007879 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.030303030303030304 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:35:05,817 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0.5555555555555556 ,nesterov=False ,amsgrad=False ,weight_decay=0.007879 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.030303030303030304 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:35:16,732 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.17171717171717174 ,l1_regularization_strength=0.6060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.19191919191919193].
2023-08-23 08:35:16,732 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.17171717171717174 ,l1_regularization_strength=0.6060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.19191919191919193].
2023-08-23 08:35:17,859 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.5757575757575758, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.12121212121212122 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.686868686868687].
2023-08-23 08:35:17,859 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.5757575757575758, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.12121212121212122 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.686868686868687].
2023-08-23 08:35:27,634 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.17171717171717174 ,l1_regularization_strength=0.6060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.19191919191919193].
2023-08-23 08:35:27,635 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.17171717171717174 ,l1_regularization_strength=0.6060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.19191919191919193].
2023-08-23 08:35:28,213 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:35:28,213 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:35:36,818 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:35:36,818 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:35:37,586 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.26262626262626265, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.19191919191919193 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.030303030303030304 ,learning_rate_power=-0.13131313131313127 ,initial_accumulator_value=0.797979797979798 ,l1_regularization_strength=0.010101010101010102 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.07070707070707072].
2023-08-23 08:35:37,586 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.26262626262626265, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.19191919191919193 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.030303030303030304 ,learning_rate_power=-0.13131313131313127 ,initial_accumulator_value=0.797979797979798 ,l1_regularization_strength=0.010101010101010102 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.07070707070707072].
2023-08-23 08:35:47,832 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0.5555555555555556 ,nesterov=False ,amsgrad=False ,weight_decay=0.007879 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.030303030303030304 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:35:47,832 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0.5555555555555556 ,nesterov=False ,amsgrad=False ,weight_decay=0.007879 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.030303030303030304 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:35:48,355 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.5353535353535354 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.9090909090909092].
2023-08-23 08:35:48,355 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.5353535353535354 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.9090909090909092].
2023-08-23 08:35:56,700 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:35:56,701 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:36:02,352 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.007374000000000001 ,use_ema=True ,ema_momentum=0.6363636363636365 ,rho=0.6060606060606061 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.9797979797979799 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.11111111111111105 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.21212121212121213].
2023-08-23 08:36:02,352 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.007374000000000001 ,use_ema=True ,ema_momentum=0.6363636363636365 ,rho=0.6060606060606061 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.9797979797979799 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.11111111111111105 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.21212121212121213].
2023-08-23 08:36:08,632 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9191919191919192 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:36:08,633 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9191919191919192 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:36:14,939 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.030303030303030304 ,beta=0.07070707070707072].
2023-08-23 08:36:14,939 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.030303030303030304 ,beta=0.07070707070707072].
2023-08-23 08:36:26,998 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:36:26,998 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:36:34,434 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.4444444444444445, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4545454545454546 ,rho=0.29292929292929293 ,epsilon=0.0002121212909090909 ,centered=True ,beta_1=0.09090909090909091 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4141414141414142 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.20202020202020204].
2023-08-23 08:36:34,434 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.4444444444444445, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4545454545454546 ,rho=0.29292929292929293 ,epsilon=0.0002121212909090909 ,centered=True ,beta_1=0.09090909090909091 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4141414141414142 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.20202020202020204].
2023-08-23 08:36:47,461 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.010101010101010102, momentum=0.31313131313131315 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.23232323232323235 ,rho=0.393939393939394 ,epsilon=0.0005858586272727272 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:36:47,461 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.010101010101010102, momentum=0.31313131313131315 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.23232323232323235 ,rho=0.393939393939394 ,epsilon=0.0005858586272727272 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:37:11,224 INFO: Applying selection operators for generation 46.
2023-08-23 08:37:11,224 INFO: Applying genetic operators for generation 46.
2023-08-23 08:37:11,228 INFO: Evaluating fitness for for generation 46.
2023-08-23 08:37:11,228 INFO: Will evaluate fitness for 37 individuals.
2023-08-23 08:37:11,818 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.19191919191919193, momentum=0.05050505050505051 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.4444444444444445 ,epsilon=0.0008181818363636363 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.07070707070707072].
2023-08-23 08:37:11,818 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.19191919191919193, momentum=0.05050505050505051 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.4444444444444445 ,epsilon=0.0008181818363636363 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.07070707070707072].
2023-08-23 08:37:11,821 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:37:11,822 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:37:11,825 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.16161616161616163 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.31313131313131315].
2023-08-23 08:37:11,825 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.16161616161616163 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.31313131313131315].
2023-08-23 08:37:11,832 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:37:11,832 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:37:31,983 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:37:31,983 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:37:33,025 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.686868686868687, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.2828282828282829 ,l1_regularization_strength=0.31313131313131315 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:37:33,025 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.686868686868687, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.2828282828282829 ,l1_regularization_strength=0.31313131313131315 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:37:36,684 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:37:36,684 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:37:36,831 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.6464646464646465, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.003839000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.030303030303030304 ,epsilon=0.0008787878909090909 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.9393939393939394].
2023-08-23 08:37:36,831 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.6464646464646465, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.003839000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.030303030303030304 ,epsilon=0.0008787878909090909 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.9393939393939394].
2023-08-23 08:37:52,002 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.696969696969697, momentum=0.4444444444444445 ,nesterov=False ,amsgrad=True ,weight_decay=0.009394000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.09090909090909091 ,beta_2=0.15151515151515152 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.7373737373737375].
2023-08-23 08:37:52,002 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.696969696969697, momentum=0.4444444444444445 ,nesterov=False ,amsgrad=True ,weight_decay=0.009394000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.09090909090909091 ,beta_2=0.15151515151515152 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.7373737373737375].
2023-08-23 08:37:53,324 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:37:53,325 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:37:57,605 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:37:57,605 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:38:01,945 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.37373737373737376, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.24242424242424232 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.07070707070707072].
2023-08-23 08:38:01,945 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.37373737373737376, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.24242424242424232 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.07070707070707072].
2023-08-23 08:38:13,545 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:38:13,545 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:38:17,952 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.17171717171717174 ,l1_regularization_strength=0.6060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.07070707070707072].
2023-08-23 08:38:17,953 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.17171717171717174 ,l1_regularization_strength=0.6060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.07070707070707072].
2023-08-23 08:38:18,678 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:38:18,678 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:38:33,928 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.19191919191919193].
2023-08-23 08:38:33,929 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.19191919191919193].
2023-08-23 08:38:38,225 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.19191919191919193].
2023-08-23 08:38:38,225 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.19191919191919193].
2023-08-23 08:38:39,032 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8686868686868687 ,epsilon=0.00035353541818181815 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.9090909090909092 ,learning_rate_power=-0.8181818181818181 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.8484848484848485].
2023-08-23 08:38:39,032 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8686868686868687 ,epsilon=0.00035353541818181815 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.9090909090909092 ,learning_rate_power=-0.8181818181818181 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.8484848484848485].
2023-08-23 08:38:41,380 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:38:41,380 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:38:55,141 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.17171717171717174 ,l1_regularization_strength=0.6060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:38:55,141 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.17171717171717174 ,l1_regularization_strength=0.6060606060606061 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:38:58,397 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:38:58,398 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:39:01,410 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:39:01,410 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:39:04,528 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0.7272727272727273 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.30303030303030304 ,epsilon=9.09091818181818e-05 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.787878787878788 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.7373737373737375 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.24242424242424243].
2023-08-23 08:39:04,528 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0.7272727272727273 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.30303030303030304 ,epsilon=9.09091818181818e-05 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.787878787878788 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.7373737373737375 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.24242424242424243].
2023-08-23 08:39:15,549 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:39:15,549 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:39:19,241 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:39:19,241 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:39:22,169 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:39:22,169 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:39:30,689 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.5050505050505051, momentum=0.7171717171717172 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9797979797979799 ,rho=0.686868686868687 ,epsilon=0.000454545509090909 ,centered=True ,beta_1=0.7171717171717172 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.4040404040404041].
2023-08-23 08:39:30,689 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.5050505050505051, momentum=0.7171717171717172 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9797979797979799 ,rho=0.686868686868687 ,epsilon=0.000454545509090909 ,centered=True ,beta_1=0.7171717171717172 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.4040404040404041].
2023-08-23 08:39:35,986 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:39:35,986 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:39:39,495 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=1.0, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.43434343434343436 ,rho=0.6565656565656566 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.42424242424242425 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.8686868686868687 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.07070707070707072].
2023-08-23 08:39:39,495 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=1.0, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.43434343434343436 ,rho=0.6565656565656566 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.42424242424242425 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.8686868686868687 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.07070707070707072].
2023-08-23 08:39:42,317 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8585858585858587 ,epsilon=0.0004242424818181818 ,centered=True ,beta_1=0.8787878787878789 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.3535353535353535 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.030303030303030304 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:39:42,318 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8585858585858587 ,epsilon=0.0004242424818181818 ,centered=True ,beta_1=0.8787878787878789 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.3535353535353535 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.030303030303030304 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:39:55,174 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.10101010101010102 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.23232323232323235 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.686868686868687].
2023-08-23 08:39:55,174 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.10101010101010102 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.23232323232323235 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.686868686868687].
2023-08-23 08:39:56,415 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:39:56,415 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:40:04,915 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.42424242424242425, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.01 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.38383838383838387 ,epsilon=0.00031313138181818175 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.10101010101010102 ,beta=0.9696969696969697].
2023-08-23 08:40:04,915 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.42424242424242425, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.01 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.38383838383838387 ,epsilon=0.00031313138181818175 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.10101010101010102 ,beta=0.9696969696969697].
2023-08-23 08:40:07,727 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.010101010101010102, momentum=0.8686868686868687 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5757575757575758 ,rho=0.6161616161616162 ,epsilon=0.0006969697272727273 ,centered=False ,beta_1=0.24242424242424243 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.07070707070707072].
2023-08-23 08:40:07,728 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.010101010101010102, momentum=0.8686868686868687 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5757575757575758 ,rho=0.6161616161616162 ,epsilon=0.0006969697272727273 ,centered=False ,beta_1=0.24242424242424243 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.07070707070707072].
2023-08-23 08:40:16,059 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.23232323232323235 ,rho=0.6565656565656566 ,epsilon=0.0009393939454545454 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.7373737373737375].
2023-08-23 08:40:16,060 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.23232323232323235 ,rho=0.6565656565656566 ,epsilon=0.0009393939454545454 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.7373737373737375].
2023-08-23 08:40:17,426 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:40:17,426 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:40:33,155 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8282828282828284 ,rho=0.37373737373737376 ,epsilon=0.0006464646818181818 ,centered=True ,beta_1=0.98989898989899 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.3434343434343435 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.010101010101010102].
2023-08-23 08:40:33,155 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8282828282828284 ,rho=0.37373737373737376 ,epsilon=0.0006464646818181818 ,centered=True ,beta_1=0.98989898989899 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.3434343434343435 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.010101010101010102].
2023-08-23 08:41:11,436 INFO: Applying selection operators for generation 47.
2023-08-23 08:41:11,436 INFO: Applying genetic operators for generation 47.
2023-08-23 08:41:11,440 INFO: Evaluating fitness for for generation 47.
2023-08-23 08:41:11,440 INFO: Will evaluate fitness for 45 individuals.
2023-08-23 08:41:12,026 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:41:12,027 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:41:12,071 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:41:12,071 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:41:12,171 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:41:12,171 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:41:12,183 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.7070707070707072, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.00010200000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.16161616161616163 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.404040404040404 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.16161616161616163].
2023-08-23 08:41:12,183 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.7070707070707072, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.00010200000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.16161616161616163 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.404040404040404 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.16161616161616163].
2023-08-23 08:41:32,102 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.16161616161616163 ,rho=0.8282828282828284 ,epsilon=6.060615454545454e-05 ,centered=False ,beta_1=0.10101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.07070707070707072].
2023-08-23 08:41:32,102 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.16161616161616163 ,rho=0.8282828282828284 ,epsilon=6.060615454545454e-05 ,centered=False ,beta_1=0.10101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.07070707070707072].
2023-08-23 08:41:32,433 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.11111111111111112, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.12121212121212122 ,rho=0.23232323232323235 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.33333333333333337 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.12121212121212122 ,beta=0.8787878787878789].
2023-08-23 08:41:32,434 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.11111111111111112, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.12121212121212122 ,rho=0.23232323232323235 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.33333333333333337 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.12121212121212122 ,beta=0.8787878787878789].
2023-08-23 08:41:33,127 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:41:33,127 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:41:36,997 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:41:36,997 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:41:51,376 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:41:51,377 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:41:54,585 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:41:54,585 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:41:56,886 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:41:56,886 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:41:56,978 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:41:56,978 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:42:11,472 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.13131313131313133, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.4545454545454546 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.48484848484848486].
2023-08-23 08:42:11,473 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.13131313131313133, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.4545454545454546 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.48484848484848486].
2023-08-23 08:42:14,802 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.393939393939394, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.14141414141414144 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.07070707070707072].
2023-08-23 08:42:14,803 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.393939393939394, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.14141414141414144 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.07070707070707072].
2023-08-23 08:42:16,707 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.05050505050505051 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.12121212121212122 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.4040404040404041 ,l1_regularization_strength=0.14141414141414144 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.07070707070707072].
2023-08-23 08:42:16,707 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.05050505050505051 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.12121212121212122 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.4040404040404041 ,l1_regularization_strength=0.14141414141414144 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.07070707070707072].
2023-08-23 08:42:17,738 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:42:17,738 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:42:32,381 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:42:32,381 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:42:37,953 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:42:37,953 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:42:41,691 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:42:41,691 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:42:43,611 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.686868686868687, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.4949494949494949 ,initial_accumulator_value=0.6060606060606061 ,l1_regularization_strength=0.686868686868687 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.7575757575757577].
2023-08-23 08:42:43,611 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.686868686868687, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.4949494949494949 ,initial_accumulator_value=0.6060606060606061 ,l1_regularization_strength=0.686868686868687 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.7575757575757577].
2023-08-23 08:42:52,659 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:42:52,659 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:42:58,114 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:42:58,114 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:43:03,020 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8585858585858587 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.797979797979798 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.7676767676767676 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.9595959595959597].
2023-08-23 08:43:03,020 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8585858585858587 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.797979797979798 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.7676767676767676 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.9595959595959597].
2023-08-23 08:43:07,270 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.19191919191919193 ,rho=0.8686868686868687 ,epsilon=0.0007676767909090908 ,centered=True ,beta_1=0.30303030303030304 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.36363636363636365 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.07070707070707072].
2023-08-23 08:43:07,271 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.19191919191919193 ,rho=0.8686868686868687 ,epsilon=0.0007676767909090908 ,centered=True ,beta_1=0.30303030303030304 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.36363636363636365 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.07070707070707072].
2023-08-23 08:43:13,024 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:43:13,024 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-23 08:43:18,175 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:43:18,175 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:43:29,059 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:43:29,059 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:43:32,702 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.14141414141414144, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.8585858585858587 ,epsilon=0.0004747475272727272 ,centered=True ,beta_1=0.9292929292929294 ,beta_2=0.19191919191919193 ,learning_rate_power=-0.8686868686868687 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.595959595959596].
2023-08-23 08:43:32,702 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.14141414141414144, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.8585858585858587 ,epsilon=0.0004747475272727272 ,centered=True ,beta_1=0.9292929292929294 ,beta_2=0.19191919191919193 ,learning_rate_power=-0.8686868686868687 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.595959595959596].
2023-08-23 08:43:33,310 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:43:33,310 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:43:39,041 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:43:39,041 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:43:49,333 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.11111111111111112, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.4747474747474748 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.3535353535353536 ,beta_2=0.09090909090909091 ,learning_rate_power=-0.43434343434343425 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.38383838383838387].
2023-08-23 08:43:49,334 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.11111111111111112, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.4747474747474748 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.3535353535353536 ,beta_2=0.09090909090909091 ,learning_rate_power=-0.43434343434343425 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.38383838383838387].
2023-08-23 08:43:54,308 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5656565656565657 ,epsilon=0.00012121220909090907 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.25252525252525254 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.07070707070707072].
2023-08-23 08:43:54,308 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5656565656565657 ,epsilon=0.00012121220909090907 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.25252525252525254 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.07070707070707072].
2023-08-23 08:43:57,770 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.6666666666666667, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9191919191919192 ,rho=0.5555555555555556 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.30303030303030304 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.595959595959596 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.07070707070707072].
2023-08-23 08:43:57,770 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.6666666666666667, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9191919191919192 ,rho=0.5555555555555556 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.30303030303030304 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.595959595959596 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.07070707070707072].
2023-08-23 08:43:59,186 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.5656565656565657, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.00010200000000000001 ,use_ema=True ,ema_momentum=0.08080808080808081 ,rho=0.23232323232323235 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.8989898989898991 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.21212121212121213 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.9494949494949496].
2023-08-23 08:43:59,187 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.5656565656565657, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.00010200000000000001 ,use_ema=True ,ema_momentum=0.08080808080808081 ,rho=0.23232323232323235 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.8989898989898991 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.21212121212121213 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.9494949494949496].
2023-08-23 08:44:13,025 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:44:13,026 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:44:18,057 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:44:18,057 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:44:23,572 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0.09090909090909091 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0006565656909090909 ,centered=True ,beta_1=0.30303030303030304 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.9090909090909092 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.030303030303030304 ,beta=0.8282828282828284].
2023-08-23 08:44:23,573 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0.09090909090909091 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0006565656909090909 ,centered=True ,beta_1=0.30303030303030304 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.9090909090909092 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.030303030303030304 ,beta=0.8282828282828284].
2023-08-23 08:44:29,184 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:44:29,184 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:44:33,311 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0.30303030303030304 ,nesterov=False ,amsgrad=False ,weight_decay=0.0047480000000000005 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0009191919272727272 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.7575757575757577].
2023-08-23 08:44:33,311 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0.30303030303030304 ,nesterov=False ,amsgrad=False ,weight_decay=0.0047480000000000005 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0009191919272727272 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.7575757575757577].
2023-08-23 08:44:38,122 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=1.0, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0014150000000000002 ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.42424242424242425 ,epsilon=0.00041414147272727267 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.8989898989898991 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.686868686868687].
2023-08-23 08:44:38,122 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=1.0, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0014150000000000002 ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.42424242424242425 ,epsilon=0.00041414147272727267 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.8989898989898991 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.686868686868687].
2023-08-23 08:44:49,077 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:44:49,077 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:44:59,394 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:44:59,394 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:45:04,652 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:45:04,652 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:45:08,978 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:45:08,978 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:45:28,681 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:45:28,681 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:45:48,166 INFO: Applying selection operators for generation 48.
2023-08-23 08:45:48,167 INFO: Applying genetic operators for generation 48.
2023-08-23 08:45:48,171 INFO: Evaluating fitness for for generation 48.
2023-08-23 08:45:48,171 INFO: Will evaluate fitness for 42 individuals.
2023-08-23 08:45:48,733 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.8282828282828284 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8080808080808082 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.07070707070707072].
2023-08-23 08:45:48,734 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.8282828282828284 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8080808080808082 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.07070707070707072].
2023-08-23 08:45:48,759 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0.30303030303030304 ,nesterov=False ,amsgrad=False ,weight_decay=0.0047480000000000005 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.7575757575757577].
2023-08-23 08:45:48,760 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0.30303030303030304 ,nesterov=False ,amsgrad=False ,weight_decay=0.0047480000000000005 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.7575757575757577].
2023-08-23 08:45:48,765 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.21212121212121213 ,rho=0.494949494949495 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.17171717171717174 ,learning_rate_power=-0.06060606060606055 ,initial_accumulator_value=0.30303030303030304 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.31313131313131315].
2023-08-23 08:45:48,765 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.21212121212121213 ,rho=0.494949494949495 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.17171717171717174 ,learning_rate_power=-0.06060606060606055 ,initial_accumulator_value=0.30303030303030304 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.31313131313131315].
2023-08-23 08:45:48,782 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:45:48,783 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:46:09,069 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:46:09,070 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:46:09,901 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.24242424242424243, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.7070707070707072 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4040404040404041 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.07070707070707072].
2023-08-23 08:46:09,901 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.24242424242424243, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.7070707070707072 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4040404040404041 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.07070707070707072].
2023-08-23 08:46:14,064 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:46:14,064 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:46:14,129 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0.30303030303030304 ,nesterov=False ,amsgrad=False ,weight_decay=0.001213 ,use_ema=True ,ema_momentum=0.05050505050505051 ,rho=0.9292929292929294 ,epsilon=0.0009191919272727272 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.36363636363636365 ,learning_rate_power=-0.8383838383838383 ,initial_accumulator_value=0.8585858585858587 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.696969696969697].
2023-08-23 08:46:14,129 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0.30303030303030304 ,nesterov=False ,amsgrad=False ,weight_decay=0.001213 ,use_ema=True ,ema_momentum=0.05050505050505051 ,rho=0.9292929292929294 ,epsilon=0.0009191919272727272 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.36363636363636365 ,learning_rate_power=-0.8383838383838383 ,initial_accumulator_value=0.8585858585858587 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.696969696969697].
2023-08-23 08:46:29,334 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.16161616161616163 ,epsilon=0.0009191919272727272 ,centered=True ,beta_1=0.48484848484848486 ,beta_2=0.5454545454545455 ,learning_rate_power=-0.2929292929292928 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.888888888888889 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7272727272727273 ,beta=0.07070707070707072].
2023-08-23 08:46:29,334 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.16161616161616163 ,epsilon=0.0009191919272727272 ,centered=True ,beta_1=0.48484848484848486 ,beta_2=0.5454545454545455 ,learning_rate_power=-0.2929292929292928 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.888888888888889 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7272727272727273 ,beta=0.07070707070707072].
2023-08-23 08:46:34,137 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0.393939393939394 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.19191919191919193 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.8282828282828284].
2023-08-23 08:46:34,138 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0.393939393939394 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.19191919191919193 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.8282828282828284].
2023-08-23 08:46:35,075 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.010101010101010102, momentum=0.6161616161616162 ,nesterov=False ,amsgrad=False ,weight_decay=0.007879 ,use_ema=False ,ema_momentum=0.393939393939394 ,rho=0.4444444444444445 ,epsilon=0.00012121220909090907 ,centered=False ,beta_1=0.686868686868687 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.16161616161616155 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:46:35,076 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.010101010101010102, momentum=0.6161616161616162 ,nesterov=False ,amsgrad=False ,weight_decay=0.007879 ,use_ema=False ,ema_momentum=0.393939393939394 ,rho=0.4444444444444445 ,epsilon=0.00012121220909090907 ,centered=False ,beta_1=0.686868686868687 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.16161616161616155 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:46:39,907 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:46:39,907 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:46:54,890 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.009192 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8181818181818182 ,epsilon=0.00024242431818181817 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.9393939393939394 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.888888888888889].
2023-08-23 08:46:54,890 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.009192 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8181818181818182 ,epsilon=0.00024242431818181817 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.9393939393939394 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.888888888888889].
2023-08-23 08:46:59,607 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:46:59,607 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:46:59,860 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.5757575757575758 ,epsilon=0.00046464651818181813 ,centered=True ,beta_1=0.6161616161616162 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.4545454545454546 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.07070707070707072].
2023-08-23 08:46:59,861 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.5757575757575758 ,epsilon=0.00046464651818181813 ,centered=True ,beta_1=0.6161616161616162 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.4545454545454546 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.07070707070707072].
2023-08-23 08:47:00,987 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:47:00,987 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:47:20,585 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:47:20,585 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:47:21,243 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.11111111111111112, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.12121212121212122].
2023-08-23 08:47:21,243 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.11111111111111112, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.12121212121212122].
2023-08-23 08:47:21,726 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:47:21,727 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:47:25,370 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:47:25,370 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:47:40,784 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:47:40,785 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:47:42,110 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:47:42,110 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:47:45,547 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.6060606060606061, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.31313131313131315 ,beta_2=0.23232323232323235 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.7171717171717172 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.010101010101010102].
2023-08-23 08:47:45,547 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.6060606060606061, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.31313131313131315 ,beta_2=0.23232323232323235 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.7171717171717172 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.010101010101010102].
2023-08-23 08:47:47,675 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.5050505050505051, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0004747475272727272 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.7373737373737375 ,learning_rate_power=-0.8181818181818181 ,initial_accumulator_value=0.5757575757575758 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.27272727272727276].
2023-08-23 08:47:47,675 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.5050505050505051, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0004747475272727272 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.7373737373737375 ,learning_rate_power=-0.8181818181818181 ,initial_accumulator_value=0.5757575757575758 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.27272727272727276].
2023-08-23 08:48:00,945 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:48:00,945 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:48:02,219 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:48:02,219 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:48:10,772 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.9797979797979799, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0005959596363636363 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.696969696969697 ,learning_rate_power=-0.9696969696969697 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.31313131313131315 ,beta=0.9292929292929294].
2023-08-23 08:48:10,772 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.9797979797979799, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0005959596363636363 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.696969696969697 ,learning_rate_power=-0.9696969696969697 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.31313131313131315 ,beta=0.9292929292929294].
2023-08-23 08:48:14,081 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.4040404040404041 ,learning_rate_power=-0.3939393939393939 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.4141414141414142].
2023-08-23 08:48:14,081 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.4040404040404041 ,learning_rate_power=-0.3939393939393939 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.4141414141414142].
2023-08-23 08:48:21,027 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:48:21,027 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:48:22,421 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:48:22,422 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:48:36,243 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:48:36,243 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:48:39,924 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0.888888888888889 ,nesterov=False ,amsgrad=False ,weight_decay=0.003738000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.9292929292929294 ,epsilon=1.010110909090909e-05 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.43434343434343436 ,learning_rate_power=-0.24242424242424232 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.07070707070707072].
2023-08-23 08:48:39,924 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0.888888888888889 ,nesterov=False ,amsgrad=False ,weight_decay=0.003738000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.9292929292929294 ,epsilon=1.010110909090909e-05 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.43434343434343436 ,learning_rate_power=-0.24242424242424232 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.07070707070707072].
2023-08-23 08:48:41,937 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:48:41,937 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:48:43,300 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:48:43,300 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:48:56,011 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:48:56,011 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:49:02,174 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:49:02,174 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:49:03,532 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0.7474747474747475 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.5151515151515152 ,rho=0.5757575757575758 ,epsilon=0.00012121220909090907 ,centered=False ,beta_1=0.7373737373737375 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.16161616161616155 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.2828282828282829 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.42424242424242425].
2023-08-23 08:49:03,532 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0.7474747474747475 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.5151515151515152 ,rho=0.5757575757575758 ,epsilon=0.00012121220909090907 ,centered=False ,beta_1=0.7373737373737375 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.16161616161616155 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.2828282828282829 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.42424242424242425].
2023-08-23 08:49:05,239 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.6565656565656566 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.23232323232323226 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.4646464646464647 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5151515151515152 ,beta=0.98989898989899].
2023-08-23 08:49:05,239 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.6565656565656566 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.23232323232323226 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.4646464646464647 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5151515151515152 ,beta=0.98989898989899].
2023-08-23 08:49:22,280 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:49:22,280 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:49:28,366 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:49:28,367 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:49:42,206 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.686868686868687 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.696969696969697].
2023-08-23 08:49:42,206 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.686868686868687 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.696969696969697].
2023-08-23 08:49:48,314 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:49:48,314 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:50:08,212 INFO: Applying selection operators for generation 49.
2023-08-23 08:50:08,213 INFO: Applying genetic operators for generation 49.
2023-08-23 08:50:08,216 INFO: Evaluating fitness for for generation 49.
2023-08-23 08:50:08,216 INFO: Will evaluate fitness for 33 individuals.
2023-08-23 08:50:08,752 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:50:08,752 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:50:08,790 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:50:08,790 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:50:08,797 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.6262626262626263, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.26262626262626265 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-1.0 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.4545454545454546].
2023-08-23 08:50:08,797 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.6262626262626263, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.26262626262626265 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-1.0 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.4545454545454546].
2023-08-23 08:50:08,828 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:50:08,828 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:50:28,511 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:50:28,511 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:50:28,813 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:50:28,814 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:50:29,069 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:50:29,069 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:50:29,556 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:50:29,556 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:50:48,308 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.25252525252525254, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6464646464646465 ,rho=0.23232323232323235 ,epsilon=0.0002727273454545454 ,centered=True ,beta_1=0.393939393939394 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.6666666666666667 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.07070707070707072].
2023-08-23 08:50:48,308 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.25252525252525254, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6464646464646465 ,rho=0.23232323232323235 ,epsilon=0.0002727273454545454 ,centered=True ,beta_1=0.393939393939394 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.6666666666666667 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.07070707070707072].
2023-08-23 08:50:48,737 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8585858585858587 ,rho=0.6565656565656566 ,epsilon=0.0002121212909090909 ,centered=True ,beta_1=0.8383838383838385 ,beta_2=0.10101010101010102 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.5656565656565657 ,l1_regularization_strength=0.8080808080808082 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.8181818181818182].
2023-08-23 08:50:48,737 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8585858585858587 ,rho=0.6565656565656566 ,epsilon=0.0002121212909090909 ,centered=True ,beta_1=0.8383838383838385 ,beta_2=0.10101010101010102 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.5656565656565657 ,l1_regularization_strength=0.8080808080808082 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.8181818181818182].
2023-08-23 08:50:49,211 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:50:49,211 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:50:49,621 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0.7777777777777778 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.43434343434343436 ,beta_2=0.7171717171717172 ,learning_rate_power=-0.31313131313131304 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.07070707070707072].
2023-08-23 08:50:49,621 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0.7777777777777778 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.43434343434343436 ,beta_2=0.7171717171717172 ,learning_rate_power=-0.31313131313131304 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.07070707070707072].
2023-08-23 08:51:06,332 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:51:06,332 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:51:09,399 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.2828282828282829 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.030303030303030304 ,l1_regularization_strength=0.787878787878788 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8989898989898991 ,beta=0.07070707070707072].
2023-08-23 08:51:09,399 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.2828282828282829 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.030303030303030304 ,l1_regularization_strength=0.787878787878788 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8989898989898991 ,beta=0.07070707070707072].
2023-08-23 08:51:14,230 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:51:14,231 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:51:15,419 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:51:15,419 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:51:27,105 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6161616161616162 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.5353535353535354 ,beta_2=0.29292929292929293 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.8181818181818182 ,l1_regularization_strength=0.43434343434343436 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.5757575757575758].
2023-08-23 08:51:27,105 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6161616161616162 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.5353535353535354 ,beta_2=0.29292929292929293 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.8181818181818182 ,l1_regularization_strength=0.43434343434343436 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.5757575757575758].
2023-08-23 08:51:30,415 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:51:30,416 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:51:35,118 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:51:35,118 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:51:35,665 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.18181818181818182, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.7575757575757577 ,epsilon=0.0005757576181818182 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.5656565656565657 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.33333333333333337].
2023-08-23 08:51:35,665 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.18181818181818182, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.7575757575757577 ,epsilon=0.0005757576181818182 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.5656565656565657 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.33333333333333337].
2023-08-23 08:51:51,025 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:51:51,025 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:51:52,756 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.8585858585858587 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.12121212121212122].
2023-08-23 08:51:52,756 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.8585858585858587 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.12121212121212122].
2023-08-23 08:51:55,361 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:51:55,361 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:52:01,582 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:52:01,582 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:52:11,280 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:52:11,280 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:52:15,604 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:52:15,604 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:52:18,350 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.25252525252525254, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.004344000000000001 ,use_ema=True ,ema_momentum=0.6464646464646465 ,rho=0.30303030303030304 ,epsilon=0.0008989899090909091 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.2828282828282829].
2023-08-23 08:52:18,351 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.25252525252525254, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.004344000000000001 ,use_ema=True ,ema_momentum=0.6464646464646465 ,rho=0.30303030303030304 ,epsilon=0.0008989899090909091 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.2828282828282829].
2023-08-23 08:52:31,479 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.4444444444444445, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.16161616161616163 ,rho=0.4545454545454546 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.8080808080808082 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.12121212121212122 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.07070707070707072].
2023-08-23 08:52:31,479 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.4444444444444445, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.16161616161616163 ,rho=0.4545454545454546 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.8080808080808082 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.12121212121212122 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.07070707070707072].
2023-08-23 08:52:35,610 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:52:35,610 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:52:36,875 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.06060606060606061, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6565656565656566 ,rho=0.8989898989898991 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.7676767676767677 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.8787878787878788 ,initial_accumulator_value=0.6161616161616162 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.07070707070707072].
2023-08-23 08:52:36,875 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.06060606060606061, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6565656565656566 ,rho=0.8989898989898991 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.7676767676767677 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.8787878787878788 ,initial_accumulator_value=0.6161616161616162 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.07070707070707072].
2023-08-23 08:52:56,264 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:52:56,264 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:52:56,507 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:52:56,507 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:53:01,202 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.010101010101010102, momentum=0.04040404040404041 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.8181818181818182 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.494949494949495].
2023-08-23 08:53:01,202 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.010101010101010102, momentum=0.04040404040404041 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.8181818181818182 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.494949494949495].
2023-08-23 08:53:26,240 INFO: Applying selection operators for generation 50.
2023-08-23 08:53:26,241 INFO: Applying genetic operators for generation 50.
2023-08-23 08:53:26,245 INFO: Evaluating fitness for for generation 50.
2023-08-23 08:53:26,245 INFO: Will evaluate fitness for 40 individuals.
2023-08-23 08:53:26,831 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:53:26,833 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:53:26,833 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:53:26,833 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:53:26,836 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:53:26,836 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:53:26,842 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:53:26,842 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:53:46,533 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:53:46,533 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:53:46,701 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.004344000000000001 ,use_ema=True ,ema_momentum=0.5151515151515152 ,rho=0.38383838383838387 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.17171717171717174 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6262626262626263 ,beta=0.07070707070707072].
2023-08-23 08:53:46,701 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.004344000000000001 ,use_ema=True ,ema_momentum=0.5151515151515152 ,rho=0.38383838383838387 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.17171717171717174 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6262626262626263 ,beta=0.07070707070707072].
2023-08-23 08:53:46,822 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.4747474747474748, momentum=0.7070707070707072 ,nesterov=False ,amsgrad=False ,weight_decay=0.006667000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8383838383838385 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.8484848484848485 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.07070707070707072].
2023-08-23 08:53:46,823 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.4747474747474748, momentum=0.7070707070707072 ,nesterov=False ,amsgrad=False ,weight_decay=0.006667000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8383838383838385 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.8484848484848485 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.07070707070707072].
2023-08-23 08:53:46,959 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.48484848484848486 ,epsilon=0.00023232330909090908 ,centered=True ,beta_1=0.14141414141414144 ,beta_2=0.19191919191919193 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.07070707070707072].
2023-08-23 08:53:46,959 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.48484848484848486 ,epsilon=0.00023232330909090908 ,centered=True ,beta_1=0.14141414141414144 ,beta_2=0.19191919191919193 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.07070707070707072].
2023-08-23 08:54:06,349 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:54:06,350 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:54:07,206 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:54:07,206 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:54:13,038 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:54:13,038 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:54:13,813 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:54:13,813 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:54:26,283 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.7777777777777778, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.13131313131313133 ,rho=0.26262626262626265 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.19191919191919193 ,learning_rate_power=-0.5454545454545454 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.9393939393939394].
2023-08-23 08:54:26,283 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.7777777777777778, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.13131313131313133 ,rho=0.26262626262626265 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.19191919191919193 ,learning_rate_power=-0.5454545454545454 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.9393939393939394].
2023-08-23 08:54:28,396 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.7070707070707072, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0036370000000000005 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.11111111111111112 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.9292929292929294 ,beta_2=0.7070707070707072 ,learning_rate_power=-0.36363636363636354 ,initial_accumulator_value=0.8989898989898991 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.10101010101010102 ,beta=0.07070707070707072].
2023-08-23 08:54:28,396 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.7070707070707072, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0036370000000000005 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.11111111111111112 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.9292929292929294 ,beta_2=0.7070707070707072 ,learning_rate_power=-0.36363636363636354 ,initial_accumulator_value=0.8989898989898991 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.10101010101010102 ,beta=0.07070707070707072].
2023-08-23 08:54:33,994 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:54:33,994 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:54:34,111 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9393939393939394 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.07070707070707072 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.24242424242424243].
2023-08-23 08:54:34,111 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9393939393939394 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.07070707070707072 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.24242424242424243].
2023-08-23 08:54:48,612 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.010101010101010102, momentum=0.6666666666666667 ,nesterov=False ,amsgrad=False ,weight_decay=0.005152000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.36363636363636365 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.11111111111111112 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.12121212121212122 ,beta=0.4646464646464647].
2023-08-23 08:54:48,612 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.010101010101010102, momentum=0.6666666666666667 ,nesterov=False ,amsgrad=False ,weight_decay=0.005152000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.36363636363636365 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.11111111111111112 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.12121212121212122 ,beta=0.4646464646464647].
2023-08-23 08:54:52,356 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8282828282828284 ,rho=0.36363636363636365 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.20202020202020204 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.8484848484848485 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.30303030303030304 ,beta=0.11111111111111112].
2023-08-23 08:54:52,357 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8282828282828284 ,rho=0.36363636363636365 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.20202020202020204 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.8484848484848485 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.30303030303030304 ,beta=0.11111111111111112].
2023-08-23 08:54:54,239 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:54:54,239 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:55:00,625 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:55:00,627 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:55:14,422 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:55:14,422 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:55:18,015 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.494949494949495, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0045460000000000006 ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9494949494949496 ,epsilon=0.0003030303727272727 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.5454545454545455 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.6161616161616162 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.07070707070707072].
2023-08-23 08:55:18,015 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.494949494949495, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0045460000000000006 ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9494949494949496 ,epsilon=0.0003030303727272727 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.5454545454545455 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.6161616161616162 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.07070707070707072].
2023-08-23 08:55:21,221 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.020202020202020204, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.004647000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9696969696969697 ,epsilon=0.0005555556 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.4646464646464647 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.07070707070707072].
2023-08-23 08:55:21,221 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.020202020202020204, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.004647000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9696969696969697 ,epsilon=0.0005555556 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.4646464646464647 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.07070707070707072].
2023-08-23 08:55:29,208 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:55:29,208 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:55:34,538 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.8585858585858587, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.4646464646464647 ,learning_rate_power=-0.3939393939393939 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.030303030303030304 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.030303030303030304 ,beta=0.07070707070707072].
2023-08-23 08:55:34,538 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.8585858585858587, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.4646464646464647 ,learning_rate_power=-0.3939393939393939 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.030303030303030304 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.030303030303030304 ,beta=0.07070707070707072].
2023-08-23 08:55:44,317 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:55:44,317 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:55:48,306 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.10101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0009292929363636363 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.07070707070707072].
2023-08-23 08:55:48,307 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.10101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0009292929363636363 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.07070707070707072].
2023-08-23 08:55:49,147 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.32323232323232326, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.696969696969697 ,rho=0.5757575757575758 ,epsilon=0.00012121220909090907 ,centered=False ,beta_1=0.37373737373737376 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.08080808080808081 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.07070707070707072].
2023-08-23 08:55:49,148 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.32323232323232326, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.696969696969697 ,rho=0.5757575757575758 ,epsilon=0.00012121220909090907 ,centered=False ,beta_1=0.37373737373737376 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.08080808080808081 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.07070707070707072].
2023-08-23 08:55:59,444 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:55:59,444 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:56:04,169 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.32323232323232326, momentum=0.6161616161616162 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.20202020202020204 ,epsilon=0.00031313138181818175 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.07070707070707072].
2023-08-23 08:56:04,170 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.32323232323232326, momentum=0.6161616161616162 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.20202020202020204 ,epsilon=0.00031313138181818175 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.07070707070707072].
2023-08-23 08:56:14,209 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:56:14,209 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:56:15,405 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.6767676767676768, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5656565656565657 ,rho=0.7272727272727273 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.07070707070707072].
2023-08-23 08:56:15,406 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.6767676767676768, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5656565656565657 ,rho=0.7272727272727273 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.07070707070707072].
2023-08-23 08:56:20,324 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:56:20,324 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:56:29,622 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.010101010101010102, momentum=0.6666666666666667 ,nesterov=False ,amsgrad=False ,weight_decay=0.005253000000000001 ,use_ema=True ,ema_momentum=0.5858585858585859 ,rho=0.6565656565656566 ,epsilon=0.00014141422727272727 ,centered=True ,beta_1=0.4141414141414142 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.8080808080808081 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.04040404040404041].
2023-08-23 08:56:29,622 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.010101010101010102, momentum=0.6666666666666667 ,nesterov=False ,amsgrad=False ,weight_decay=0.005253000000000001 ,use_ema=True ,ema_momentum=0.5858585858585859 ,rho=0.6565656565656566 ,epsilon=0.00014141422727272727 ,centered=True ,beta_1=0.4141414141414142 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.8080808080808081 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.04040404040404041].
2023-08-23 08:56:35,262 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:56:35,290 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:56:35,626 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:56:35,627 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:56:40,568 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.13131313131313133 ,rho=0.7575757575757577 ,epsilon=0.0007474747727272727 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.9090909090909092 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.4141414141414142 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.07070707070707072].
2023-08-23 08:56:40,569 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.13131313131313133 ,rho=0.7575757575757577 ,epsilon=0.0007474747727272727 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.9090909090909092 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.4141414141414142 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.07070707070707072].
2023-08-23 08:56:55,632 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:56:55,632 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:57:05,571 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.05050505050505051, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.17171717171717174 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.393939393939394 ,beta_2=0.23232323232323235 ,learning_rate_power=-0.31313131313131304 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.25252525252525254].
2023-08-23 08:57:05,572 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.05050505050505051, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.17171717171717174 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.393939393939394 ,beta_2=0.23232323232323235 ,learning_rate_power=-0.31313131313131304 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.25252525252525254].
2023-08-23 08:57:30,969 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:57:30,969 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:57:50,981 INFO: Applying selection operators for generation 51.
2023-08-23 08:57:50,982 INFO: Applying genetic operators for generation 51.
2023-08-23 08:57:50,984 INFO: Evaluating fitness for for generation 51.
2023-08-23 08:57:50,984 INFO: Will evaluate fitness for 45 individuals.
2023-08-23 08:57:51,575 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.8080808080808082 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.09090909090909091 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.050505050505050386 ,initial_accumulator_value=0.9393939393939394 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.010101010101010102].
2023-08-23 08:57:51,575 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.8080808080808082 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.09090909090909091 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.050505050505050386 ,initial_accumulator_value=0.9393939393939394 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.010101010101010102].
2023-08-23 08:57:51,578 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.8181818181818182, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.020202020202020204 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.8787878787878789 ,l1_regularization_strength=0.9393939393939394 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.9393939393939394].
2023-08-23 08:57:51,578 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.8181818181818182, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.020202020202020204 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.8787878787878789 ,l1_regularization_strength=0.9393939393939394 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.9393939393939394].
2023-08-23 08:57:51,585 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:57:51,585 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:57:51,590 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:57:51,590 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:58:11,711 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:58:11,711 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:58:11,721 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.98989898989899 ,rho=0.6767676767676768 ,epsilon=0.0009595959636363636 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.6363636363636364 ,initial_accumulator_value=0.9494949494949496 ,l1_regularization_strength=0.9393939393939394 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:58:11,721 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.98989898989899 ,rho=0.6767676767676768 ,epsilon=0.0009595959636363636 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.6363636363636364 ,initial_accumulator_value=0.9494949494949496 ,l1_regularization_strength=0.9393939393939394 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:58:17,216 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:58:17,217 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:58:17,265 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:58:17,265 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:58:32,841 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.696969696969697 ,rho=0.12121212121212122 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.12121212121212122 ,learning_rate_power=-0.46464646464646464 ,initial_accumulator_value=0.494949494949495 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.595959595959596].
2023-08-23 08:58:32,841 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.696969696969697 ,rho=0.12121212121212122 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.12121212121212122 ,learning_rate_power=-0.46464646464646464 ,initial_accumulator_value=0.494949494949495 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.595959595959596].
2023-08-23 08:58:37,155 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:58:37,156 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:58:37,303 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:58:37,304 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:58:38,326 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:58:38,327 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:58:56,875 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:58:56,875 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:58:57,338 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
2023-08-23 08:58:57,338 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.07070707070707072].
